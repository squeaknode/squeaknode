"""Initialize all

Revision ID: c9c2ff1d5fcd
Revises:
Create Date: 2021-02-21 15:02:13.744742

"""
import sqlalchemy as sa
from alembic import op

import squeaknode.db.models


# revision identifiers, used by Alembic.
revision = 'c9c2ff1d5fcd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('peer',
                    sa.Column('peer_id', sa.Integer(), nullable=False),
                    sa.Column('created', squeaknode.db.models.TZDateTime(
                    ), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
                    sa.Column('peer_name', sa.String(), nullable=False),
                    sa.Column('host', sa.String(), nullable=False),
                    sa.Column('port', sa.Integer(), nullable=False),
                    sa.Column('uploading', sa.Boolean(), nullable=False),
                    sa.Column('downloading', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('peer_id'),
                    sa.UniqueConstraint(
                        'host', 'port', name='uq_peer_host_port'),
                    sqlite_autoincrement=True
                    )
    op.create_table('profile',
                    sa.Column('profile_id', sa.Integer(), nullable=False),
                    sa.Column('created', squeaknode.db.models.TZDateTime(
                    ), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
                    sa.Column('profile_name', sa.String(), nullable=False),
                    sa.Column('private_key', sa.Binary(), nullable=True),
                    sa.Column('address', sa.String(length=35), nullable=False),
                    sa.Column('sharing', sa.Boolean(), nullable=False),
                    sa.Column('following', sa.Boolean(), nullable=False),
                    sa.Column('profile_image', sa.Binary(), nullable=True),
                    sa.PrimaryKeyConstraint('profile_id'),
                    sa.UniqueConstraint('address'),
                    sa.UniqueConstraint('profile_name'),
                    sqlite_autoincrement=True
                    )
    op.create_table('received_offer',
                    sa.Column(
                        'received_offer_id', squeaknode.db.models.SLBigInteger(), nullable=False),
                    sa.Column('created', squeaknode.db.models.TZDateTime(
                    ), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
                    sa.Column('squeak_hash', sa.String(
                        length=64), nullable=False),
                    sa.Column('payment_hash', sa.String(
                        length=64), nullable=False),
                    sa.Column('nonce', sa.String(length=64), nullable=False),
                    sa.Column('payment_point', sa.String(
                        length=66), nullable=False),
                    sa.Column('invoice_timestamp',
                              sa.Integer(), nullable=False),
                    sa.Column('invoice_expiry', sa.Integer(), nullable=False),
                    sa.Column('price_msat', sa.Integer(), nullable=False),
                    sa.Column('payment_request', sa.String(), nullable=False),
                    sa.Column('destination', sa.String(
                        length=66), nullable=False),
                    sa.Column('node_host', sa.String(), nullable=False),
                    sa.Column('node_port', sa.Integer(), nullable=False),
                    sa.Column('peer_host', sa.String(), nullable=False),
                    sa.Column('peer_port', sa.Integer(), nullable=False),
                    sa.Column('paid', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('received_offer_id'),
                    sa.UniqueConstraint('payment_hash'),
                    sqlite_autoincrement=True
                    )
    op.create_table('received_payment',
                    sa.Column('received_payment_id',
                              squeaknode.db.models.SLBigInteger(), nullable=False),
                    sa.Column('created', squeaknode.db.models.TZDateTime(
                    ), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
                    sa.Column('squeak_hash', sa.String(
                        length=64), nullable=False),
                    sa.Column('payment_hash', sa.String(
                        length=64), nullable=False),
                    sa.Column('price_msat', sa.Integer(), nullable=False),
                    sa.Column('settle_index',
                              squeaknode.db.models.SLBigInteger(), nullable=False),
                    sa.Column('client_addr', sa.String(
                        length=64), nullable=False),
                    sa.PrimaryKeyConstraint('received_payment_id'),
                    sa.UniqueConstraint('payment_hash'),
                    sqlite_autoincrement=True
                    )
    op.create_table('sent_offer',
                    sa.Column(
                        'sent_offer_id', squeaknode.db.models.SLBigInteger(), nullable=False),
                    sa.Column('created', squeaknode.db.models.TZDateTime(
                    ), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
                    sa.Column('squeak_hash', sa.String(
                        length=64), nullable=False),
                    sa.Column('payment_hash', sa.String(
                        length=64), nullable=False),
                    sa.Column('secret_key', sa.String(
                        length=64), nullable=False),
                    sa.Column('nonce', sa.String(length=64), nullable=False),
                    sa.Column('price_msat', sa.Integer(), nullable=False),
                    sa.Column('payment_request', sa.String(), nullable=False),
                    sa.Column('invoice_timestamp',
                              sa.Integer(), nullable=False),
                    sa.Column('invoice_expiry', sa.Integer(), nullable=False),
                    sa.Column('client_addr', sa.String(
                        length=64), nullable=False),
                    sa.Column('paid', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('sent_offer_id'),
                    sa.UniqueConstraint('payment_hash'),
                    sqlite_autoincrement=True
                    )
    op.create_table('sent_payment',
                    sa.Column(
                        'sent_payment_id', squeaknode.db.models.SLBigInteger(), nullable=False),
                    sa.Column('created', squeaknode.db.models.TZDateTime(
                    ), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
                    sa.Column('peer_host', sa.String(), nullable=False),
                    sa.Column('peer_port', sa.Integer(), nullable=False),
                    sa.Column('squeak_hash', sa.String(
                        length=64), nullable=False),
                    sa.Column('payment_hash', sa.String(
                        length=64), nullable=False),
                    sa.Column('secret_key', sa.String(
                        length=64), nullable=False),
                    sa.Column('price_msat', sa.Integer(), nullable=False),
                    sa.Column('node_pubkey', sa.String(
                        length=66), nullable=False),
                    sa.Column('valid', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('sent_payment_id'),
                    sa.UniqueConstraint('payment_hash'),
                    sqlite_autoincrement=True
                    )
    op.create_table('squeak',
                    sa.Column('hash', sa.String(length=64), nullable=False),
                    sa.Column('created', squeaknode.db.models.TZDateTime(
                    ), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
                    sa.Column('squeak', sa.Binary(), nullable=False),
                    sa.Column('hash_reply_sqk', sa.String(
                        length=64), nullable=False),
                    sa.Column('hash_block', sa.String(
                        length=64), nullable=False),
                    sa.Column('n_block_height', sa.Integer(), nullable=False),
                    sa.Column('n_time', sa.Integer(), nullable=False),
                    sa.Column('author_address', sa.String(
                        length=35), nullable=False),
                    sa.Column('secret_key', sa.String(
                        length=64), nullable=True),
                    sa.Column('block_header', sa.Binary(), nullable=False),
                    sa.PrimaryKeyConstraint('hash')
                    )
    with op.batch_alter_table('squeak', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_squeak_author_address'), [
                              'author_address'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('squeak', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_squeak_author_address'))

    op.drop_table('squeak')
    op.drop_table('sent_payment')
    op.drop_table('sent_offer')
    op.drop_table('received_payment')
    op.drop_table('received_offer')
    op.drop_table('profile')
    op.drop_table('peer')
    # ### end Alembic commands ###
