{"version":3,"sources":["components/Peer/index.js"],"names":["withRouter","props","useContext","StoreContext","state","actions","useState","editName","setName","deleteModalOpen","setDeleteModalOpen","savePeerModalOpen","setSavePeerModalOpen","setSaved","styleBody","setStyleBody","peer","peerConnection","list","useEffect","window","scrollTo","getPeer","network","match","params","host","port","getPeerConnection","isInitialMount","useRef","current","document","getElementsByTagName","style","cssText","toggleDeleteModal","setTimeout","toggleSavePeerModal","param","type","handleModalClick","e","stopPropagation","className","onClick","history","back","getPeerName","disconnectPeer","connectPeer","getAutoconnect","id","setPeerNotAutoconnect","setIsNotAutoconnect","getPeerId","setPeerAutoconnect","setIsAutoconnect","moment","getConnectTimeS","fromNow","getNumberBytesReceived","getNumberMessagesReceived","getLastMessageReceivedTimeS","getNumberBytesSent","getNumberMessagesSent","display","values","peerId","deletePeer","savePeer","name","onChange","target","value"],"mappings":"6PAkReA,uBAvQF,SAACC,GAAW,IAAD,EAEGC,qBAAWC,KAA9BC,EAFgB,EAEhBA,MAAOC,EAFS,EAETA,QAFS,EAGUC,oBAAS,GAHnB,gCAKIA,mBAAS,KALb,mBAKjBC,EALiB,KAKPC,EALO,OAMkBF,mBAAS,IAN3B,gCAOsBA,oBAAS,IAP/B,mBAOjBG,EAPiB,KAOAC,EAPA,OAQ0BJ,oBAAS,GARnC,mBAQjBK,EARiB,KAQEC,EARF,OASIN,mBAAS,IATb,gCAUEA,oBAAS,IAVX,mBAUVO,GAVU,aAWFP,mBAAS,WAXP,gCAYkBA,oBAAS,IAZ3B,gCAaUA,oBAAS,IAbnB,mBAajBQ,EAbiB,KAaNC,EAbM,KAcjBC,EAA8BZ,EAA9BY,KAAMC,EAAwBb,EAAxBa,eAAwBb,EAARc,KAE7BC,qBAAU,WACNC,OAAOC,SAAS,EAAG,GAEnBhB,EAAQiB,QAAQ,CACdC,QAAStB,EAAMuB,MAAMC,OAAOF,QAC5BG,KAAMzB,EAAMuB,MAAMC,OAAOC,KACzBC,KAAM1B,EAAMuB,MAAMC,OAAOE,OAE3BtB,EAAQuB,kBAAkB,CACxBL,QAAStB,EAAMuB,MAAMC,OAAOF,QAC5BG,KAAMzB,EAAMuB,MAAMC,OAAOC,KACzBC,KAAM1B,EAAMuB,MAAMC,OAAOE,SAE5B,IAEH,IAAME,EAAiBC,kBAAO,GAC9BX,qBAAU,WACFU,EAAeE,QAAUF,EAAeE,SAAU,EAElDC,SAASC,qBAAqB,QAAQ,GAAGC,MAAMC,QAAUrB,GAAa,2CAE3E,CAACA,IAEJK,qBAAW,kBAAM,kBAAMa,SAASC,qBAAqB,QAAQ,GAAGC,MAAMC,QAAU,MAAI,IAGpF,IAkDMC,EAAoB,WACtBrB,GAAcD,GACdD,GAAS,GACTwB,YAAW,WAAM3B,GAAoBD,KAAmB,KAGtD6B,EAAsB,SAACC,EAAOC,GAChCzB,GAAcD,GACduB,YAAW,WAAMzB,GAAsBD,KAAqB,KAG1D8B,EAAmB,SAACC,GACtBA,EAAEC,mBAIN,OACI,6BAEE,yBAAKC,UAAU,qBACb,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,uBACX,yBAAKC,QAAS,kBAAIzB,OAAO0B,QAAQC,QAAQH,UAAU,uBAC/C,kBAAC,IAAD,QAGR,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,yBACV5B,GAAQA,EAAKgC,eAElB,yBAAKJ,UAAU,4BACV3C,EAAMuB,MAAMC,OAAOC,KADxB,IAC+BzB,EAAMuB,MAAMC,OAAOE,QAI1D,yBAAKiB,UAAU,sBACX,yBAAKA,UAAU,yBAAyB5B,GAAQA,EAAKgC,eACrD,yBAAKJ,UAAU,mBACX,6BAAM3C,EAAMuB,MAAMC,OAAOC,KAAzB,IAAgCzB,EAAMuB,MAAMC,OAAOE,OAGvD,yBAAKiB,UAAU,mBACd5B,GACC,yBAAK6B,QAAS,SAACH,GAAD,OAAKN,KAClBQ,UAAU,uBACP,0CAGJ5B,GACA,yBAAK6B,QAAS,SAACH,GAAD,OAAKJ,EAAoB,SACtCM,UAAU,0BACP,kDAMN,yBAAKA,UAAU,mBACf,yBAAKC,QAAS,SAACH,GAAD,OACTzB,OA5FfZ,EAAQ4C,eAAe,CACrBvB,KAAMzB,EAAMuB,MAAMC,OAAOC,KACzBC,KAAM1B,EAAMuB,MAAMC,OAAOE,KACzBJ,QAAStB,EAAMuB,MAAMC,OAAOF,eAV5BlB,EAAQ6C,YAAY,CAClBxB,KAAMzB,EAAMuB,MAAMC,OAAOC,KACzBC,KAAM1B,EAAMuB,MAAMC,OAAOE,KACzBJ,QAAStB,EAAMuB,MAAMC,OAAOF,WAoGlBqB,UAAW3B,EAAiB,iCAAmC,uBAC5D,8BAAM,8BAAQA,EAAiB,YAAc,cAIpD,yBAAK2B,UAAU,mBACd5B,GACC,yBAAK6B,QAAS,SAACH,GAAD,OACZ1B,EAAKmC,iBA5EO,SAACT,EAAEU,GAC3BV,EAAEC,kBACFtC,EAAQgD,sBAAsBD,GA2ElBE,CAAoBZ,EAAE1B,EAAKuC,aAlFlB,SAACb,EAAEU,GACxBV,EAAEC,kBACFtC,EAAQmD,mBAAmBJ,GAiFfK,CAAiBf,EAAE1B,EAAKuC,cAEzBX,UAAW5B,EAAKmC,iBAAmB,yCAA2C,uBAC3E,8BAAM,8BAAQnC,EAAKmC,iBAAmB,iBAAmB,0BAOnE,yBAAKP,UAAU,gBACV3B,GACC,yBAAK2B,UAAU,sBACX,yBAAKA,UAAU,mBACX,gDACA,6BAAMc,IAA0C,IAAnCzC,EAAe0C,mBAA0BC,SAAQ,KAElE,yBAAKhB,UAAU,mBACX,+CACA,6BAAM3B,EAAe4C,2BAEzB,yBAAKjB,UAAU,mBACX,kDACA,6BAAM3B,EAAe6C,8BAEzB,yBAAKlB,UAAU,mBACX,2DACA,6BAAMc,IAAsD,IAA/CzC,EAAe8C,+BAAsCH,SAAQ,KAE9E,yBAAKhB,UAAU,mBACX,2CACA,6BAAM3B,EAAe+C,uBAEzB,yBAAKpB,UAAU,mBACX,8CACA,6BAAM3B,EAAegD,6BAUvC,yBAAKpB,QAAS,kBAAIT,KAAqBF,MAAO,CAACgC,QAASzD,EAAkB,QAAU,QAASmC,UAAU,cACnG,yBAAKC,QAAS,SAACH,GAAD,OAAKD,EAAiBC,IAAIE,UAAU,iBAC9C,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,mBACX,yBAAKC,QAAS,kBAAIT,KAAqBQ,UAAU,wBAC7C,kBAAC,IAAD,QAGR,uBAAGA,UAAU,eAAb,iBACA,yBAAKA,UAAU,sBACX,yBAAKC,QA3JN,WACf,IAAIsB,EAAS,CACTC,OAAQpD,EAAKuC,aAEjBlD,EAAQgE,WAAWF,GACnB/B,KAsJ0CQ,UAAU,kBAApC,cAShB,yBAAKC,QAAS,kBAAIP,KAAuBJ,MAAO,CAACgC,QAASvD,EAAoB,QAAU,QAASiC,UAAU,cACvG,yBAAKC,QAAS,SAACH,GAAD,OAAKD,EAAiBC,IAAIE,UAAU,iBAC9C,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,mBACX,yBAAKC,QAAS,kBAAIP,KAAuBM,UAAU,wBAC/C,kBAAC,IAAD,QAGR,uBAAGA,UAAU,eAAb,aAEA,yBAAKA,UAAU,sBACX,yBAAKC,QAvKR,WACbxC,EAAQiE,SAAS,CACfC,KAAMhE,EACNmB,KAAMzB,EAAMuB,MAAMC,OAAOC,KACzBC,KAAM1B,EAAMuB,MAAMC,OAAOE,KACzBJ,QAAStB,EAAMuB,MAAMC,OAAOF,UAC9Be,KAiKwCM,UAAU,kBAAlC,YAKR,yBAAKA,UAAU,cACX,0BAAMA,UAAU,aAChB,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,sBACX,uCACA,2BAAO4B,SAAU,SAAC9B,GAAD,OAAKlC,EAAQkC,EAAE+B,OAAOC,QAAQlC,KAAK,OAAO+B,KAAK,OAAO3B,UAAU","file":"static/js/4.fd5df940.chunk.js","sourcesContent":["import React , { useEffect, useState, useContext, useRef } from 'react'\r\nimport './style.scss'\r\nimport moment from 'moment'\r\nimport {  withRouter, Link } from 'react-router-dom'\r\nimport { StoreContext } from '../../store/store'\r\nimport Loader from '../Loader'\r\nimport SqueakCard from '../SqueakCard'\r\nimport {API_URL} from '../../config'\r\nimport axios from 'axios'\r\nimport {ICON_ARROWBACK, ICON_UPLOAD, ICON_CLOSE,ICON_SEARCH } from '../../Icons'\r\n\r\nconst Peer = (props) => {\r\n\r\nconst { state, actions } = useContext(StoreContext)\r\nconst [modalOpen, setModalOpen] = useState(false)\r\n\r\nconst [editName, setName] = useState('')\r\nconst [editDescription, setDescription] = useState('')\r\nconst [deleteModalOpen, setDeleteModalOpen] = useState(false)\r\nconst [savePeerModalOpen, setSavePeerModalOpen] = useState(false)\r\nconst [banner, setBanner] = useState('')\r\nconst [saved, setSaved] = useState(false)\r\nconst [tab, setTab] = useState('Members')\r\nconst [bannerLoading, setBannerLoading] = useState(false)\r\nconst [styleBody, setStyleBody] = useState(false)\r\nconst {peer, peerConnection, list} = state\r\n\r\nuseEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    // actions.getList(props.match.params.id)\r\n    actions.getPeer({\r\n      network: props.match.params.network,\r\n      host: props.match.params.host,\r\n      port: props.match.params.port,\r\n    });\r\n    actions.getPeerConnection({\r\n      network: props.match.params.network,\r\n      host: props.match.params.host,\r\n      port: props.match.params.port,\r\n    });\r\n}, [])\r\n\r\nconst isInitialMount = useRef(true);\r\nuseEffect(() => {\r\n    if (isInitialMount.current){ isInitialMount.current = false }\r\n    else {\r\n        document.getElementsByTagName(\"body\")[0].style.cssText = styleBody && \"overflow-y: hidden; margin-right: 17px\"\r\n    }\r\n}, [styleBody])\r\n\r\nuseEffect( () => () => document.getElementsByTagName(\"body\")[0].style.cssText = \"\", [] )\r\n\r\n\r\nconst deleteList = () => {\r\n    actions.deleteList(props.match.params.id)\r\n    props.history.push('/app/lists')\r\n}\r\n\r\nconst goToUser = (id) => {\r\n    props.history.push(`/app/profile/${id}`)\r\n}\r\n\r\nconst connectPeer = (e) => {\r\n    actions.connectPeer({\r\n      host: props.match.params.host,\r\n      port: props.match.params.port,\r\n      network: props.match.params.network});\r\n}\r\n\r\nconst disconnectPeer = (e) => {\r\n  actions.disconnectPeer({\r\n    host: props.match.params.host,\r\n    port: props.match.params.port,\r\n    network: props.match.params.network});\r\n}\r\n\r\nconst deletePeer = () => {\r\n    let values = {\r\n        peerId: peer.getPeerId(),\r\n    }\r\n    actions.deletePeer(values);\r\n    toggleDeleteModal();\r\n}\r\n\r\nconst savePeer = () => {\r\n    actions.savePeer({\r\n      name: editName,\r\n      host: props.match.params.host,\r\n      port: props.match.params.port,\r\n      network: props.match.params.network});\r\n    toggleSavePeerModal();\r\n}\r\n\r\nconst setIsAutoconnect = (e,id) => {\r\n    e.stopPropagation()\r\n    actions.setPeerAutoconnect(id)\r\n}\r\n\r\nconst setIsNotAutoconnect = (e,id) => {\r\n    e.stopPropagation()\r\n    actions.setPeerNotAutoconnect(id)\r\n}\r\n\r\nconst toggleDeleteModal = () => {\r\n    setStyleBody(!styleBody)\r\n    setSaved(false)\r\n    setTimeout(()=>{ setDeleteModalOpen(!deleteModalOpen) },20)\r\n}\r\n\r\nconst toggleSavePeerModal = (param, type) => {\r\n    setStyleBody(!styleBody)\r\n    setTimeout(()=>{ setSavePeerModalOpen(!savePeerModalOpen) },20)\r\n}\r\n\r\nconst handleModalClick = (e) => {\r\n    e.stopPropagation()\r\n}\r\n\r\n\r\nreturn(\r\n    <div>\r\n\r\n      <div className=\"bookmarks-wrapper\">\r\n        <div className=\"bookmarks-header-wrapper\">\r\n            <div className=\"profile-header-back\">\r\n                <div onClick={()=>window.history.back()} className=\"header-back-wrapper\">\r\n                    <ICON_ARROWBACK/>\r\n                </div>\r\n            </div>\r\n            <div className=\"bookmarks-header-content\">\r\n                <div className=\"bookmarks-header-name\">\r\n                    {peer && peer.getPeerName()}\r\n                </div>\r\n                <div className=\"bookmarks-header-squeaks\">\r\n                    {props.match.params.host}:{props.match.params.port}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"listp-details-wrap\">\r\n            <div className=\"bookmarks-header-name\">{peer && peer.getPeerName()}</div>\r\n            <div className=\"list-owner-wrap\">\r\n                <div>{props.match.params.host}:{props.match.params.port}</div>\r\n            </div>\r\n\r\n            <div className=\"profile-options\">\r\n            {peer &&\r\n              <div onClick={(e)=>toggleDeleteModal()}\r\n               className='peer-connect-button'>\r\n                  <span>Delete</span>\r\n              </div>\r\n            }\r\n            {!peer &&\r\n              <div onClick={(e)=>toggleSavePeerModal('edit')}\r\n               className='profiles-create-button'>\r\n                  <span>Add Saved Peer</span>\r\n              </div>\r\n            }\r\n            </div>\r\n\r\n\r\n            <div className=\"profile-options\">\r\n            <div onClick={(e)=>\r\n                 peerConnection ?\r\n                 disconnectPeer(e) :\r\n                 connectPeer(e)\r\n              }\r\n                className={peerConnection ? 'disconnect peer-connect-button' : 'peer-connect-button'}>\r\n                   <span><span>{ peerConnection ? 'Connected' : 'Connect'}</span></span>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"profile-options\">\r\n            {peer &&\r\n              <div onClick={(e)=>\r\n                peer.getAutoconnect() ?\r\n                setIsNotAutoconnect(e,peer.getPeerId()) :\r\n                setIsAutoconnect(e,peer.getPeerId())\r\n              }\r\n               className={peer.getAutoconnect() ? 'remove-autoconnect peer-connect-button' : 'peer-connect-button'}>\r\n                  <span><span>{ peer.getAutoconnect() ? 'Autoconnecting' : 'Not Autoconnecting'}</span></span>\r\n              </div>\r\n            }\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"feed-wrapper\">\r\n            {peerConnection &&\r\n              <div className=\"feed-trending-card\">\r\n                  <div className=\"feed-card-trend\">\r\n                      <div>Connection Time</div>\r\n                      <div>{moment(peerConnection.getConnectTimeS() * 1000).fromNow(true)}</div>\r\n                  </div>\r\n                  <div className=\"feed-card-trend\">\r\n                      <div>Bytes received</div>\r\n                      <div>{peerConnection.getNumberBytesReceived()}</div>\r\n                  </div>\r\n                  <div className=\"feed-card-trend\">\r\n                      <div>Messages received</div>\r\n                      <div>{peerConnection.getNumberMessagesReceived()}</div>\r\n                  </div>\r\n                  <div className=\"feed-card-trend\">\r\n                      <div>Last Message Received Time</div>\r\n                      <div>{moment(peerConnection.getLastMessageReceivedTimeS() * 1000).fromNow(true)}</div>\r\n                  </div>\r\n                  <div className=\"feed-card-trend\">\r\n                      <div>Bytes sent</div>\r\n                      <div>{peerConnection.getNumberBytesSent()}</div>\r\n                  </div>\r\n                  <div className=\"feed-card-trend\">\r\n                      <div>Messages sent</div>\r\n                      <div>{peerConnection.getNumberMessagesSent()}</div>\r\n                  </div>\r\n              </div>\r\n            }\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n    {/* Modal for delete profile */}\r\n    <div onClick={()=>toggleDeleteModal()} style={{display: deleteModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n        <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <div className=\"modal-closeIcon\">\r\n                    <div onClick={()=>toggleDeleteModal()} className=\"modal-closeIcon-wrap\">\r\n                        <ICON_CLOSE />\r\n                    </div>\r\n                </div>\r\n                <p className=\"modal-title\">'Delete Peer'</p>\r\n                <div className=\"save-modal-wrapper\">\r\n                    <div onClick={deletePeer} className=\"save-modal-btn\">\r\n                        Delete\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    {/* Modal for create save peer */}\r\n    <div onClick={()=>toggleSavePeerModal()} style={{display: savePeerModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n        <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <div className=\"modal-closeIcon\">\r\n                    <div onClick={()=>toggleSavePeerModal()} className=\"modal-closeIcon-wrap\">\r\n                        <ICON_CLOSE />\r\n                    </div>\r\n                </div>\r\n                <p className=\"modal-title\">Save Peer</p>\r\n\r\n                <div className=\"save-modal-wrapper\">\r\n                    <div onClick={savePeer} className=\"save-modal-btn\">\r\n                        Submit\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <form className=\"edit-form\">\r\n                <div className=\"edit-input-wrap\">\r\n                    <div className=\"edit-input-content\">\r\n                        <label>Name</label>\r\n                        <input onChange={(e)=>setName(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Peer)\r\n"],"sourceRoot":""}