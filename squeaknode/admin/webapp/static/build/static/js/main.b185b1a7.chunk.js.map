{"version":3,"sources":["proto/squeak_admin_pb.js","images/google.svg","proto/squeak_admin_grpc_web_pb.js","pages/error/logo.svg","pages/login/logo.svg","proto/lnd_pb.js","themes/default.js","themes/index.js","components/Layout/styles.js","components/Header/styles.js","components/Wrappers/Wrappers.js","components/Notification/styles.js","components/Notification/Notification.js","context/LayoutContext.js","squeakclient/requests.js","navigation/navigation.js","components/Header/Header.js","components/Sidebar/styles.js","components/Sidebar/components/SidebarLink/styles.js","components/Sidebar/components/Dot.js","components/Sidebar/components/SidebarLink/SidebarLink.js","components/Sidebar/Sidebar.js","pages/timeline/styles.js","components/MakeSqueakDialog/styles.js","components/SqueakThreadItem/styles.js","components/DeleteSqueakDialog/styles.js","components/DeleteSqueakDialog/DeleteSqueakDialog.js","components/SqueakDetailsDialog/styles.js","components/Widget/styles.js","components/Widget/Widget.js","components/SqueakDetailsDialog/SqueakDetailsDialog.js","components/SqueakActionBar/SqueakActionBar.js","bitcoin/blockexplorer.js","components/SqueakThreadItem/SqueakThreadItem.js","components/MakeSqueakDialog/MakeSqueakDialog.js","components/SqueakList/styles.js","components/SqueakUserAvatar/styles.js","squeakimages/images.js","components/SqueakUserAvatar/SqueakUserAvatar.js","components/SqueakList/SqueakList.js","pages/timeline/Timeline.js","pages/dashboard/styles.js","pages/dashboard/mock.js","components/PageTitle/styles.js","components/PageTitle/PageTitle.js","pages/dashboard/components/Table/Table.js","pages/dashboard/components/BigStat/styles.js","pages/dashboard/components/BigStat/BigStat.js","pages/dashboard/Dashboard.js","components/CreateContactProfileDialog/styles.js","components/CreateContactProfileDialog/CreateContactProfileDialog.js","pages/squeakaddress/styles.js","pages/squeakaddress/SqueakAddress.js","pages/squeak/styles.js","components/SqueakDetailItem/styles.js","components/BuySqueakDialog/styles.js","components/BuyOfferDetailItem/BuyOfferDetailItem.js","components/BuySqueakDialog/BuySqueakDialog.js","components/SqueakDetailItem/SqueakDetailItem.js","components/SqueakThread/styles.js","components/SqueakThread/SqueakThread.js","components/SqueakReplies/styles.js","components/SqueakReplies/SqueakReplies.js","pages/squeak/Squeak.js","components/SqueakProfileDetailItem/styles.js","components/DeleteProfileDialog/styles.js","components/DeleteProfileDialog/DeleteProfileDialog.js","components/RenameProfileDialog/styles.js","components/RenameProfileDialog/RenameProfileDialog.js","components/ExportPrivateKeyDialog/styles.js","components/ExportPrivateKeyDialog/ExportPrivateKeyDialog.js","components/ConfigureProfileDialog/styles.js","components/ConfigureProfileDialog/ConfigureProfileDialog.js","components/UpdateProfileImageDialog/styles.js","components/UpdateProfileImageDialog/UpdateProfileImageDialog.js","components/ClearProfileImageDialog/styles.js","components/ClearProfileImageDialog/ClearProfileImageDialog.js","components/SqueakProfileFollowingIndicator/SqueakProfileFollowingIndicator.js","components/SqueakProfileDetailItem/SqueakProfileDetailItem.js","pages/profile/Profile.js","pages/wallet/styles.js","components/ReceiveBitcoinDialog/styles.js","components/ReceiveBitcoinDialog/ReceiveBitcoinDialog.js","components/SendBitcoinDialog/styles.js","components/SendBitcoinDialog/SendBitcoinDialog.js","components/TransactionItem/TransactionItem.js","components/LightningPeerListItem/LightningPeerListItem.js","components/ChannelItem/ChannelBalanceBar.js","components/ChannelItem/ChannelItem.js","components/PendingOpenChannelItem/PendingOpenChannelItem.js","pages/wallet/Wallet.js","pages/lightningnode/styles.js","components/OpenChannelDialog/styles.js","components/OpenChannelDialog/OpenChannelDialog.js","pages/lightningnode/LightningNode.js","pages/channel/styles.js","components/CloseChannelDialog/styles.js","components/CloseChannelDialog/CloseChannelDialog.js","pages/channel/Channel.js","pages/notifications/styles.js","pages/notifications/Notifications.js","pages/maps/styles.js","pages/maps/Maps.js","pages/profiles/styles.js","components/CreateSigningProfileDialog/styles.js","components/CreateSigningProfileDialog/CreateSigningProfileDialog.js","components/ImportSigningProfileDialog/styles.js","components/ImportSigningProfileDialog/ImportSigningProfileDialog.js","components/ProfileListItem/ProfileListItem.js","pages/profiles/Profiles.js","pages/payments/Payments.js","components/SentPayment/SentPayment.js","pages/sentpayments/styles.js","pages/sentpayments/SentPayments.js","components/ReceivedPayment/ReceivedPayment.js","pages/receivedpayments/ReceivedPayments.js","pages/liked/styles.js","pages/liked/Liked.js","pages/icons/styles.js","pages/icons/Icons.js","pages/charts/components/ApexLineChart.js","pages/charts/components/ApexHeatmap.js","pages/charts/Charts.js","components/CreatePeerDialog/CreatePeerDialog.js","components/ConnectPeerDialog/ConnectPeerDialog.js","components/PeerListItem/PeerListItem.js","components/SavedPeerListItem/SavedPeerListItem.js","pages/peers/Peers.js","pages/peer/styles.js","components/DeletePeerDialog/styles.js","components/DeletePeerDialog/DeletePeerDialog.js","pages/peer/Peer.js","pages/peeraddress/styles.js","pages/peeraddress/PeerAddress.js","components/Layout/Layout.js","pages/error/styles.js","pages/error/Error.js","pages/login/styles.js","context/UserContext.js","pages/login/Login.js","components/App.js","serviceWorker.js","index.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","squeaknode","CreateSigningProfileRequest","opt_data","Message","initialize","this","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","profileName","getFieldWithDefault","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setProfileName","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","getProfileName","length","writeString","setField","CreateSigningProfileReply","profileId","readInt32","setProfileId","getProfileId","writeInt32","ImportSigningProfileRequest","privateKey","setPrivateKey","undefined","getPrivateKey","ImportSigningProfileReply","CreateContactProfileRequest","address","setAddress","getAddress","CreateContactProfileReply","GetProfilesRequest","GetProfilesReply","repeatedFields_","squeakProfilesList","toObjectList","getSqueakProfilesList","SqueakProfile","readMessage","addSqueakProfiles","writeRepeatedMessage","getRepeatedWrapperField","setSqueakProfilesList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearSqueakProfilesList","GetSigningProfilesRequest","GetSigningProfilesReply","GetContactProfilesRequest","GetContactProfilesReply","GetSqueakProfileRequest","GetSqueakProfileReply","squeakProfile","getSqueakProfile","setSqueakProfile","writeMessage","getWrapperField","setWrapperField","clearSqueakProfile","hasSqueakProfile","getField","GetSqueakProfileByAddressRequest","GetSqueakProfileByAddressReply","GetSqueakProfileByNameRequest","name","setName","getName","GetSqueakProfileByNameReply","SetSqueakProfileFollowingRequest","following","readBool","setFollowing","getFollowing","writeBool","SetSqueakProfileFollowingReply","SetSqueakProfileUseCustomPriceRequest","useCustomPrice","setUseCustomPrice","getUseCustomPrice","SetSqueakProfileUseCustomPriceReply","SetSqueakProfileCustomPriceRequest","customPriceMsat","readInt64","setCustomPriceMsat","getCustomPriceMsat","writeInt64","SetSqueakProfileCustomPriceReply","RenameSqueakProfileRequest","RenameSqueakProfileReply","GetSqueakProfilePrivateKeyRequest","GetSqueakProfilePrivateKeyReply","DeleteSqueakProfileRequest","DeleteSqueakProfileReply","SetSqueakProfileImageRequest","profileImage","setProfileImage","getProfileImage","SetSqueakProfileImageReply","ClearSqueakProfileImageRequest","ClearSqueakProfileImageReply","hasPrivateKey","hasCustomProfileImage","setHasPrivateKey","setHasCustomProfileImage","getHasPrivateKey","getHasCustomProfileImage","MakeSqueakRequest","content","replyto","setContent","setReplyto","getContent","getReplyto","MakeSqueakReply","squeakHash","setSqueakHash","getSqueakHash","GetSqueakDisplayRequest","GetSqueakDisplayReply","squeakDisplayEntry","getSqueakDisplayEntry","SqueakDisplayEntry","setSqueakDisplayEntry","clearSqueakDisplayEntry","hasSqueakDisplayEntry","isUnlocked","contentStr","isReply","replyTo","blockHeight","blockHash","blockTime","squeakTime","authorAddress","isAuthorKnown","author","getAuthor","likedTimeMs","setIsUnlocked","setContentStr","setIsReply","setReplyTo","setBlockHeight","setBlockHash","setBlockTime","setSqueakTime","setAuthorAddress","setIsAuthorKnown","setAuthor","setLikedTimeMs","getIsUnlocked","getContentStr","getIsReply","getReplyTo","getBlockHeight","getBlockHash","getBlockTime","getSqueakTime","getAuthorAddress","getIsAuthorKnown","getLikedTimeMs","clearAuthor","hasAuthor","GetTimelineSqueakDisplaysRequest","limit","lastEntry","getLastEntry","setLimit","setLastEntry","getLimit","clearLastEntry","hasLastEntry","GetTimelineSqueakDisplaysReply","squeakDisplayEntriesList","getSqueakDisplayEntriesList","addSqueakDisplayEntries","setSqueakDisplayEntriesList","clearSqueakDisplayEntriesList","GetAddressSqueakDisplaysRequest","GetAddressSqueakDisplaysReply","GetAncestorSqueakDisplaysRequest","GetAncestorSqueakDisplaysReply","GetReplySqueakDisplaysRequest","GetReplySqueakDisplaysReply","DeleteSqueakRequest","DeleteSqueakReply","CreatePeerRequest","peerName","peerAddress","getPeerAddress","PeerAddress","setPeerName","setPeerAddress","getPeerName","clearPeerAddress","hasPeerAddress","CreatePeerReply","peerId","setPeerId","getPeerId","GetPeerRequest","GetPeerReply","squeakPeer","getSqueakPeer","SqueakPeer","setSqueakPeer","clearSqueakPeer","hasSqueakPeer","GetPeersRequest","GetPeersReply","squeakPeersList","getSqueakPeersList","addSqueakPeers","setSqueakPeersList","clearSqueakPeersList","autoconnect","setAutoconnect","getAutoconnect","SetPeerAutoconnectRequest","SetPeerAutoconnectReply","RenamePeerRequest","RenamePeerReply","DeletePeerRequest","DeletePeerReply","LoadBuyOffersRequest","LoadBuyOffersReply","GetBuyOffersRequest","GetBuyOffersReply","offersList","getOffersList","OfferDisplayEntry","addOffers","setOffersList","clearOffersList","GetBuyOfferRequest","offerId","setOfferId","getOfferId","GetBuyOfferReply","offer","getOffer","setOffer","clearOffer","hasOffer","priceMsat","nodePubkey","nodeHost","nodePort","invoiceTimestamp","invoiceExpiry","setPriceMsat","setNodePubkey","setNodeHost","setNodePort","setInvoiceTimestamp","setInvoiceExpiry","getPriceMsat","getNodePubkey","getNodeHost","getNodePort","getInvoiceTimestamp","getInvoiceExpiry","DownloadSqueaksRequest","addresesList","getRepeatedField","minBlockHeight","maxBlockHeight","replytoSqueakHash","addAddreses","setMinBlockHeight","setMaxBlockHeight","setReplytoSqueakHash","getAddresesList","writeRepeatedString","getMinBlockHeight","getMaxBlockHeight","getReplytoSqueakHash","setAddresesList","addToRepeatedField","clearAddresesList","DownloadSqueaksReply","PayOfferRequest","PayOfferReply","sentPaymentId","setSentPaymentId","getSentPaymentId","GetSentPaymentsRequest","lastSentPayment","getLastSentPayment","SentPayment","setLastSentPayment","clearLastSentPayment","hasLastSentPayment","GetSentPaymentsReply","sentPaymentsList","getSentPaymentsList","addSentPayments","setSentPaymentsList","clearSentPaymentsList","GetSentPaymentRequest","GetSentPaymentReply","sentPayment","getSentPayment","setSentPayment","clearSentPayment","hasSentPayment","paymentHash","valid","timeMs","setPaymentHash","setValid","setTimeMs","getPaymentHash","getValid","getTimeMs","DownloadSqueakRequest","DownloadSqueakReply","DownloadOffersRequest","DownloadOffersReply","DownloadRepliesRequest","DownloadRepliesReply","DownloadAddressSqueaksRequest","DownloadAddressSqueaksReply","GetSqueakDetailsRequest","GetSqueakDetailsReply","squeakDetailEntry","getSqueakDetailEntry","SqueakDetailEntry","setSqueakDetailEntry","clearSqueakDetailEntry","hasSqueakDetailEntry","serializedSqueakHex","setSerializedSqueakHex","getSerializedSqueakHex","GetSentOffersRequest","GetSentOffersReply","sentOffersList","getSentOffersList","SentOffer","addSentOffers","setSentOffersList","clearSentOffersList","sentOfferId","setSentOfferId","getSentOfferId","GetReceivedPaymentsRequest","GetReceivedPaymentsReply","receivedPaymentsList","getReceivedPaymentsList","ReceivedPayment","addReceivedPayments","setReceivedPaymentsList","clearReceivedPaymentsList","receivedPaymentId","setReceivedPaymentId","getReceivedPaymentId","SubscribeReceivedPaymentsRequest","paymentIndex","setPaymentIndex","getPaymentIndex","GetNetworkRequest","GetNetworkReply","network","setNetwork","getNetwork","GetPaymentSummaryRequest","GetPaymentSummaryReply","paymentSummary","getPaymentSummary","PaymentSummary","setPaymentSummary","clearPaymentSummary","hasPaymentSummary","numReceivedPayments","numSentPayments","amountEarnedMsat","amountSpentMsat","setNumReceivedPayments","setNumSentPayments","setAmountEarnedMsat","setAmountSpentMsat","getNumReceivedPayments","getNumSentPayments","getAmountEarnedMsat","getAmountSpentMsat","ReprocessReceivedPaymentsRequest","ReprocessReceivedPaymentsReply","LikeSqueakRequest","LikeSqueakReply","UnlikeSqueakRequest","UnlikeSqueakReply","GetLikedSqueakDisplaysRequest","GetLikedSqueakDisplaysReply","ConnectPeerRequest","ConnectPeerReply","ConnectedPeer","connectTimeS","lastMessageReceivedTimeS","numberMessagesReceived","numberBytesReceived","numberMessagesSent","numberBytesSent","setConnectTimeS","setLastMessageReceivedTimeS","setNumberMessagesReceived","setNumberBytesReceived","setNumberMessagesSent","setNumberBytesSent","getConnectTimeS","getLastMessageReceivedTimeS","getNumberMessagesReceived","getNumberBytesReceived","getNumberMessagesSent","getNumberBytesSent","GetConnectedPeersRequest","GetConnectedPeersReply","connectedPeersList","getConnectedPeersList","addConnectedPeers","setConnectedPeersList","clearConnectedPeersList","GetConnectedPeerRequest","GetConnectedPeerReply","connectedPeer","getConnectedPeer","setConnectedPeer","clearConnectedPeer","hasConnectedPeer","DisconnectPeerRequest","DisconnectPeerReply","SubscribeConnectedPeersRequest","SubscribeConnectedPeerRequest","host","port","setHost","setPort","getHost","getPort","SubscribeBuyOffersRequest","SubscribeSqueakDisplayRequest","SubscribeReplySqueakDisplaysRequest","SubscribeAddressSqueakDisplaysRequest","SubscribeAncestorSqueakDisplaysRequest","SubscribeSqueakDisplaysRequest","SubscribeTimelineSqueakDisplaysRequest","object","extend","exports","module","grpc","web","proto_lnd_pb","SqueakAdminClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","SqueakAdminPromiseClient","methodDescriptor_SqueakAdmin_LndGetInfo","MethodDescriptor","MethodType","UNARY","GetInfoRequest","GetInfoResponse","request","AbstractClientBase","MethodInfo","lndGetInfo","metadata","callback","rpcCall","unaryCall","methodDescriptor_SqueakAdmin_LndWalletBalance","WalletBalanceRequest","WalletBalanceResponse","lndWalletBalance","methodDescriptor_SqueakAdmin_LndNewAddress","NewAddressRequest","NewAddressResponse","lndNewAddress","methodDescriptor_SqueakAdmin_LndListChannels","ListChannelsRequest","ListChannelsResponse","lndListChannels","methodDescriptor_SqueakAdmin_LndPendingChannels","PendingChannelsRequest","PendingChannelsResponse","lndPendingChannels","methodDescriptor_SqueakAdmin_LndGetTransactions","GetTransactionsRequest","TransactionDetails","lndGetTransactions","methodDescriptor_SqueakAdmin_LndListPeers","ListPeersRequest","ListPeersResponse","lndListPeers","methodDescriptor_SqueakAdmin_LndConnectPeer","ConnectPeerResponse","lndConnectPeer","methodDescriptor_SqueakAdmin_LndDisconnectPeer","DisconnectPeerResponse","lndDisconnectPeer","methodDescriptor_SqueakAdmin_LndOpenChannelSync","OpenChannelRequest","ChannelPoint","lndOpenChannelSync","methodDescriptor_SqueakAdmin_LndCloseChannel","SERVER_STREAMING","CloseChannelRequest","CloseStatusUpdate","lndCloseChannel","serverStreaming","methodDescriptor_SqueakAdmin_LndSubscribeChannelEvents","ChannelEventSubscription","ChannelEventUpdate","lndSubscribeChannelEvents","methodDescriptor_SqueakAdmin_LndSendCoins","SendCoinsRequest","SendCoinsResponse","lndSendCoins","methodDescriptor_SqueakAdmin_CreateSigningProfile","createSigningProfile","methodDescriptor_SqueakAdmin_CreateContactProfile","createContactProfile","methodDescriptor_SqueakAdmin_ImportSigningProfile","importSigningProfile","methodDescriptor_SqueakAdmin_GetProfiles","getProfiles","methodDescriptor_SqueakAdmin_GetSigningProfiles","getSigningProfiles","methodDescriptor_SqueakAdmin_GetContactProfiles","getContactProfiles","methodDescriptor_SqueakAdmin_GetSqueakProfile","methodDescriptor_SqueakAdmin_GetSqueakProfileByAddress","getSqueakProfileByAddress","methodDescriptor_SqueakAdmin_GetSqueakProfileByName","getSqueakProfileByName","methodDescriptor_SqueakAdmin_SetSqueakProfileFollowing","setSqueakProfileFollowing","methodDescriptor_SqueakAdmin_SetSqueakProfileUseCustomPrice","setSqueakProfileUseCustomPrice","methodDescriptor_SqueakAdmin_SetSqueakProfileCustomPrice","setSqueakProfileCustomPrice","methodDescriptor_SqueakAdmin_RenameSqueakProfile","renameSqueakProfile","methodDescriptor_SqueakAdmin_GetSqueakProfilePrivateKey","getSqueakProfilePrivateKey","methodDescriptor_SqueakAdmin_DeleteSqueakProfile","deleteSqueakProfile","methodDescriptor_SqueakAdmin_SetSqueakProfileImage","setSqueakProfileImage","methodDescriptor_SqueakAdmin_ClearSqueakProfileImage","clearSqueakProfileImage","methodDescriptor_SqueakAdmin_MakeSqueak","makeSqueak","methodDescriptor_SqueakAdmin_GetSqueakDisplay","getSqueakDisplay","methodDescriptor_SqueakAdmin_GetTimelineSqueakDisplays","getTimelineSqueakDisplays","methodDescriptor_SqueakAdmin_GetAddressSqueakDisplays","getAddressSqueakDisplays","methodDescriptor_SqueakAdmin_GetAncestorSqueakDisplays","getAncestorSqueakDisplays","methodDescriptor_SqueakAdmin_GetReplySqueakDisplays","getReplySqueakDisplays","methodDescriptor_SqueakAdmin_DeleteSqueak","deleteSqueak","methodDescriptor_SqueakAdmin_CreatePeer","createPeer","methodDescriptor_SqueakAdmin_GetPeer","getPeer","methodDescriptor_SqueakAdmin_GetPeers","getPeers","methodDescriptor_SqueakAdmin_SetPeerAutoconnect","setPeerAutoconnect","methodDescriptor_SqueakAdmin_RenamePeer","renamePeer","methodDescriptor_SqueakAdmin_DeletePeer","deletePeer","methodDescriptor_SqueakAdmin_GetBuyOffers","getBuyOffers","methodDescriptor_SqueakAdmin_GetBuyOffer","getBuyOffer","methodDescriptor_SqueakAdmin_DownloadSqueaks","downloadSqueaks","methodDescriptor_SqueakAdmin_DownloadSqueak","downloadSqueak","methodDescriptor_SqueakAdmin_DownloadOffers","downloadOffers","methodDescriptor_SqueakAdmin_DownloadReplies","downloadReplies","methodDescriptor_SqueakAdmin_DownloadAddressSqueaks","downloadAddressSqueaks","methodDescriptor_SqueakAdmin_PayOffer","payOffer","methodDescriptor_SqueakAdmin_GetSentPayments","getSentPayments","methodDescriptor_SqueakAdmin_GetSentPayment","methodDescriptor_SqueakAdmin_GetSqueakDetails","getSqueakDetails","methodDescriptor_SqueakAdmin_GetSentOffers","getSentOffers","methodDescriptor_SqueakAdmin_GetReceivedPayments","getReceivedPayments","methodDescriptor_SqueakAdmin_SubscribeReceivedPayments","subscribeReceivedPayments","methodDescriptor_SqueakAdmin_GetNetwork","methodDescriptor_SqueakAdmin_GetPaymentSummary","methodDescriptor_SqueakAdmin_ReprocessReceivedPayments","reprocessReceivedPayments","methodDescriptor_SqueakAdmin_LikeSqueak","likeSqueak","methodDescriptor_SqueakAdmin_UnlikeSqueak","unlikeSqueak","methodDescriptor_SqueakAdmin_GetLikedSqueakDisplays","getLikedSqueakDisplays","methodDescriptor_SqueakAdmin_ConnectPeer","connectPeer","methodDescriptor_SqueakAdmin_GetConnectedPeers","getConnectedPeers","methodDescriptor_SqueakAdmin_GetConnectedPeer","methodDescriptor_SqueakAdmin_DisconnectPeer","disconnectPeer","methodDescriptor_SqueakAdmin_SubscribeConnectedPeers","subscribeConnectedPeers","methodDescriptor_SqueakAdmin_SubscribeConnectedPeer","subscribeConnectedPeer","methodDescriptor_SqueakAdmin_SubscribeBuyOffers","subscribeBuyOffers","methodDescriptor_SqueakAdmin_SubscribeSqueakDisplay","subscribeSqueakDisplay","methodDescriptor_SqueakAdmin_SubscribeReplySqueakDisplays","subscribeReplySqueakDisplays","methodDescriptor_SqueakAdmin_SubscribeAddressSqueakDisplays","subscribeAddressSqueakDisplays","methodDescriptor_SqueakAdmin_SubscribeAncestorSqueakDisplays","subscribeAncestorSqueakDisplays","methodDescriptor_SqueakAdmin_SubscribeSqueakDisplays","subscribeSqueakDisplays","methodDescriptor_SqueakAdmin_SubscribeTimelineSqueakDisplays","subscribeTimelineSqueakDisplays","lnrpc","Utxo","addressType","amountSat","pkScript","outpoint","getOutpoint","OutPoint","confirmations","readEnum","setAddressType","setAmountSat","setPkScript","setOutpoint","setConfirmations","getAddressType","writeEnum","getAmountSat","getPkScript","getConfirmations","clearOutpoint","hasOutpoint","Transaction","txHash","amount","numConfirmations","timeStamp","totalFees","destAddressesList","rawTxHex","label","setTxHash","setAmount","setNumConfirmations","setTimeStamp","setTotalFees","addDestAddresses","setRawTxHex","setLabel","getTxHash","getAmount","getNumConfirmations","getTimeStamp","getTotalFees","getDestAddressesList","getRawTxHex","getLabel","setDestAddressesList","clearDestAddressesList","startHeight","endHeight","setStartHeight","setEndHeight","getStartHeight","getEndHeight","transactionsList","getTransactionsList","addTransactions","setTransactionsList","clearTransactionsList","FeeLimit","oneofGroups_","LimitCase","LIMIT_NOT_SET","FIXED","FIXED_MSAT","PERCENT","getLimitCase","computeOneofCase","fixed","fixedMsat","percent","setFixed","setFixedMsat","setPercent","getFixed","setOneofField","clearFixed","hasFixed","getFixedMsat","clearFixedMsat","hasFixedMsat","getPercent","clearPercent","hasPercent","SendRequest","dest","getDest_asB64","destString","amt","amtMsat","getPaymentHash_asB64","paymentHashString","paymentRequest","finalCltvDelta","feeLimit","getFeeLimit","outgoingChanId","lastHopPubkey","getLastHopPubkey_asB64","cltvLimit","destCustomRecordsMap","getDestCustomRecordsMap","allowSelfPayment","destFeaturesList","readBytes","setDest","setDestString","setAmt","setAmtMsat","setPaymentHashString","setPaymentRequest","setFinalCltvDelta","setFeeLimit","readUint64String","setOutgoingChanId","setLastHopPubkey","readUint32","setCltvLimit","Map","readUint64","setAllowSelfPayment","readPackedEnum","setDestFeaturesList","getDest_asU8","writeBytes","getDestString","getAmt","getAmtMsat","getPaymentHash_asU8","getPaymentHashString","getPaymentRequest","getFinalCltvDelta","getOutgoingChanId","parseInt","writeUint64String","getLastHopPubkey_asU8","getCltvLimit","writeUint32","getLength","writeUint64","getAllowSelfPayment","getDestFeaturesList","writePackedEnum","getDest","bytesAsB64","bytesAsU8","clearFeeLimit","hasFeeLimit","getLastHopPubkey","opt_noLazyCreate","getMapField","clearDestCustomRecordsMap","clear","addDestFeatures","clearDestFeaturesList","SendResponse","paymentError","paymentPreimage","getPaymentPreimage_asB64","paymentRoute","getPaymentRoute","Route","setPaymentError","setPaymentPreimage","setPaymentRoute","getPaymentError","getPaymentPreimage_asU8","getPaymentPreimage","clearPaymentRoute","hasPaymentRoute","SendToRouteRequest","route","getRoute","setRoute","clearRoute","hasRoute","ChannelAcceptRequest","getNodePubkey_asB64","chainHash","getChainHash_asB64","pendingChanId","getPendingChanId_asB64","fundingAmt","pushAmt","dustLimit","maxValueInFlight","channelReserve","minHtlc","feePerKw","csvDelay","maxAcceptedHtlcs","channelFlags","setChainHash","setPendingChanId","setFundingAmt","setPushAmt","setDustLimit","setMaxValueInFlight","setChannelReserve","setMinHtlc","setFeePerKw","setCsvDelay","setMaxAcceptedHtlcs","setChannelFlags","getNodePubkey_asU8","getChainHash_asU8","getPendingChanId_asU8","getFundingAmt","getPushAmt","getDustLimit","getMaxValueInFlight","getChannelReserve","getMinHtlc","getFeePerKw","getCsvDelay","getMaxAcceptedHtlcs","getChannelFlags","getChainHash","getPendingChanId","ChannelAcceptResponse","accept","setAccept","getAccept","FundingTxidCase","FUNDING_TXID_NOT_SET","FUNDING_TXID_BYTES","FUNDING_TXID_STR","getFundingTxidCase","fundingTxidBytes","getFundingTxidBytes_asB64","fundingTxidStr","outputIndex","setFundingTxidBytes","setFundingTxidStr","setOutputIndex","getOutputIndex","getFundingTxidBytes","getFundingTxidBytes_asU8","clearFundingTxidBytes","hasFundingTxidBytes","getFundingTxidStr","clearFundingTxidStr","hasFundingTxidStr","txidBytes","getTxidBytes_asB64","txidStr","setTxidBytes","setTxidStr","getTxidBytes_asU8","getTxidStr","getTxidBytes","LightningAddress","pubkey","setPubkey","getPubkey","EstimateFeeRequest","addrtoamountMap","getAddrtoamountMap","targetConf","setTargetConf","getTargetConf","clearAddrtoamountMap","EstimateFeeResponse","feeSat","feerateSatPerByte","setFeeSat","setFeerateSatPerByte","getFeeSat","getFeerateSatPerByte","SendManyRequest","satPerByte","setSatPerByte","getSatPerByte","SendManyResponse","txid","setTxid","getTxid","addr","sendAll","setAddr","setSendAll","getAddr","getSendAll","ListUnspentRequest","minConfs","maxConfs","setMinConfs","setMaxConfs","getMinConfs","getMaxConfs","ListUnspentResponse","utxosList","getUtxosList","addUtxos","setUtxosList","clearUtxosList","type","setType","getType","SignMessageRequest","getMsg_asB64","setMsg","getMsg_asU8","getMsg","SignMessageResponse","signature","setSignature","getSignature","VerifyMessageRequest","VerifyMessageResponse","perm","setPerm","getPerm","clearAddr","hasAddr","pubKey","setPubKey","getPubKey","HTLC","incoming","hashLock","getHashLock_asB64","expirationHeight","setIncoming","setHashLock","setExpirationHeight","getIncoming","getHashLock_asU8","getExpirationHeight","getHashLock","ChannelConstraints","chanReserveSat","dustLimitSat","maxPendingAmtMsat","minHtlcMsat","setChanReserveSat","setDustLimitSat","setMaxPendingAmtMsat","setMinHtlcMsat","getChanReserveSat","getDustLimitSat","getMaxPendingAmtMsat","getMinHtlcMsat","Channel","active","remotePubkey","channelPoint","chanId","capacity","localBalance","remoteBalance","commitFee","commitWeight","unsettledBalance","totalSatoshisSent","totalSatoshisReceived","numUpdates","pendingHtlcsList","getPendingHtlcsList","pb_private","initiator","chanStatusFlags","localChanReserveSat","remoteChanReserveSat","staticRemoteKey","commitmentType","lifetime","uptime","closeAddress","pushAmountSat","thawHeight","localConstraints","getLocalConstraints","remoteConstraints","getRemoteConstraints","setActive","setRemotePubkey","setChannelPoint","setChanId","setCapacity","setLocalBalance","setRemoteBalance","setCommitFee","setCommitWeight","setUnsettledBalance","setTotalSatoshisSent","setTotalSatoshisReceived","setNumUpdates","addPendingHtlcs","setPrivate","setInitiator","setChanStatusFlags","setLocalChanReserveSat","setRemoteChanReserveSat","setStaticRemoteKey","setCommitmentType","setLifetime","setUptime","setCloseAddress","setPushAmountSat","setThawHeight","setLocalConstraints","setRemoteConstraints","getActive","getRemotePubkey","getChannelPoint","getChanId","getCapacity","getLocalBalance","getRemoteBalance","getCommitFee","getCommitWeight","getUnsettledBalance","getTotalSatoshisSent","getTotalSatoshisReceived","getNumUpdates","getPrivate","getInitiator","getChanStatusFlags","getLocalChanReserveSat","getRemoteChanReserveSat","getStaticRemoteKey","getCommitmentType","getLifetime","getUptime","getCloseAddress","getPushAmountSat","getThawHeight","setPendingHtlcsList","clearPendingHtlcsList","clearLocalConstraints","hasLocalConstraints","clearRemoteConstraints","hasRemoteConstraints","activeOnly","inactiveOnly","publicOnly","privateOnly","peer","getPeer_asB64","setActiveOnly","setInactiveOnly","setPublicOnly","setPrivateOnly","setPeer","getActiveOnly","getInactiveOnly","getPublicOnly","getPrivateOnly","getPeer_asU8","channelsList","getChannelsList","addChannels","setChannelsList","clearChannelsList","ChannelCloseSummary","closingTxHash","closeHeight","settledBalance","timeLockedBalance","closeType","openInitiator","closeInitiator","resolutionsList","getResolutionsList","Resolution","setClosingTxHash","setCloseHeight","setSettledBalance","setTimeLockedBalance","setCloseType","setOpenInitiator","setCloseInitiator","addResolutions","getClosingTxHash","getCloseHeight","getSettledBalance","getTimeLockedBalance","getCloseType","getOpenInitiator","getCloseInitiator","ClosureType","COOPERATIVE_CLOSE","LOCAL_FORCE_CLOSE","REMOTE_FORCE_CLOSE","BREACH_CLOSE","FUNDING_CANCELED","ABANDONED","setResolutionsList","clearResolutionsList","resolutionType","outcome","sweepTxid","setResolutionType","setOutcome","setSweepTxid","getResolutionType","getOutcome","getSweepTxid","ClosedChannelsRequest","cooperative","localForce","remoteForce","breach","fundingCanceled","abandoned","setCooperative","setLocalForce","setRemoteForce","setBreach","setFundingCanceled","setAbandoned","getCooperative","getLocalForce","getRemoteForce","getBreach","getFundingCanceled","getAbandoned","ClosedChannelsResponse","Peer","bytesSent","bytesRecv","satSent","satRecv","inbound","pingTime","syncType","featuresMap","getFeaturesMap","Feature","errorsList","getErrorsList","TimestampedError","setBytesSent","setBytesRecv","setSatSent","setSatRecv","setInbound","setPingTime","setSyncType","addErrors","getBytesSent","getBytesRecv","getSatSent","getSatRecv","getInbound","getPingTime","getSyncType","SyncType","UNKNOWN_SYNC","ACTIVE_SYNC","PASSIVE_SYNC","clearFeaturesMap","setErrorsList","clearErrorsList","timestamp","error","setTimestamp","setError","getTimestamp","getError","latestError","setLatestError","getLatestError","peersList","getPeersList","addPeers","setPeersList","clearPeersList","PeerEventSubscription","PeerEvent","EventType","PEER_ONLINE","PEER_OFFLINE","version","commitHash","identityPubkey","alias","color","numPendingChannels","numActiveChannels","numInactiveChannels","numPeers","bestHeaderTimestamp","syncedToChain","syncedToGraph","testnet","chainsList","getChainsList","Chain","urisList","setVersion","setCommitHash","setIdentityPubkey","setAlias","setColor","setNumPendingChannels","setNumActiveChannels","setNumInactiveChannels","setNumPeers","setBestHeaderTimestamp","setSyncedToChain","setSyncedToGraph","setTestnet","addChains","addUris","getVersion","getCommitHash","getIdentityPubkey","getAlias","getColor","getNumPendingChannels","getNumActiveChannels","getNumInactiveChannels","getNumPeers","getBestHeaderTimestamp","getSyncedToChain","getSyncedToGraph","getTestnet","getUrisList","setChainsList","clearChainsList","setUrisList","clearUrisList","GetRecoveryInfoRequest","GetRecoveryInfoResponse","recoveryMode","recoveryFinished","progress","setRecoveryMode","setRecoveryFinished","readDouble","setProgress","getRecoveryMode","getRecoveryFinished","getProgress","writeDouble","chain","setChain","getChain","ConfirmationUpdate","blockSha","getBlockSha_asB64","numConfsLeft","setBlockSha","setNumConfsLeft","getBlockSha_asU8","getNumConfsLeft","getBlockSha","ChannelOpenUpdate","clearChannelPoint","hasChannelPoint","ChannelCloseUpdate","closingTxid","getClosingTxid_asB64","success","setClosingTxid","setSuccess","getClosingTxid_asU8","getSuccess","getClosingTxid","force","deliveryAddress","setForce","setDeliveryAddress","getForce","getDeliveryAddress","UpdateCase","UPDATE_NOT_SET","CLOSE_PENDING","CHAN_CLOSE","getUpdateCase","closePending","getClosePending","PendingUpdate","chanClose","getChanClose","setClosePending","setChanClose","setOneofWrapperField","clearClosePending","hasClosePending","clearChanClose","hasChanClose","getTxid_asB64","getTxid_asU8","ReadyForPsbtFunding","fundingAddress","fundingAmount","psbt","getPsbt_asB64","setFundingAddress","setFundingAmount","setPsbt","getFundingAddress","getFundingAmount","getPsbt_asU8","getPsbt","nodePubkeyString","localFundingAmount","pushSat","remoteCsvDelay","spendUnconfirmed","fundingShim","getFundingShim","FundingShim","remoteMaxValueInFlightMsat","setNodePubkeyString","setLocalFundingAmount","setPushSat","setRemoteCsvDelay","setSpendUnconfirmed","setFundingShim","setRemoteMaxValueInFlightMsat","getNodePubkeyString","getLocalFundingAmount","getPushSat","getRemoteCsvDelay","getSpendUnconfirmed","getRemoteMaxValueInFlightMsat","clearFundingShim","hasFundingShim","OpenStatusUpdate","CHAN_PENDING","CHAN_OPEN","PSBT_FUND","chanPending","getChanPending","chanOpen","getChanOpen","psbtFund","getPsbtFund","setChanPending","setChanOpen","setPsbtFund","clearChanPending","hasChanPending","clearChanOpen","hasChanOpen","clearPsbtFund","hasPsbtFund","KeyLocator","keyFamily","keyIndex","setKeyFamily","setKeyIndex","getKeyFamily","getKeyIndex","KeyDescriptor","rawKeyBytes","getRawKeyBytes_asB64","keyLoc","getKeyLoc","setRawKeyBytes","setKeyLoc","getRawKeyBytes_asU8","getRawKeyBytes","clearKeyLoc","hasKeyLoc","ChanPointShim","chanPoint","getChanPoint","localKey","getLocalKey","remoteKey","getRemoteKey_asB64","setChanPoint","setLocalKey","setRemoteKey","getRemoteKey_asU8","clearChanPoint","hasChanPoint","clearLocalKey","hasLocalKey","getRemoteKey","PsbtShim","basePsbt","getBasePsbt_asB64","noPublish","setBasePsbt","setNoPublish","getBasePsbt_asU8","getNoPublish","getBasePsbt","ShimCase","SHIM_NOT_SET","CHAN_POINT_SHIM","PSBT_SHIM","getShimCase","chanPointShim","getChanPointShim","psbtShim","getPsbtShim","setChanPointShim","setPsbtShim","clearChanPointShim","hasChanPointShim","clearPsbtShim","hasPsbtShim","FundingShimCancel","FundingPsbtVerify","fundedPsbt","getFundedPsbt_asB64","setFundedPsbt","getFundedPsbt_asU8","getFundedPsbt","FundingPsbtFinalize","signedPsbt","getSignedPsbt_asB64","setSignedPsbt","getSignedPsbt_asU8","getSignedPsbt","FundingTransitionMsg","TriggerCase","TRIGGER_NOT_SET","SHIM_REGISTER","SHIM_CANCEL","PSBT_VERIFY","PSBT_FINALIZE","getTriggerCase","shimRegister","getShimRegister","shimCancel","getShimCancel","psbtVerify","getPsbtVerify","psbtFinalize","getPsbtFinalize","setShimRegister","setShimCancel","setPsbtVerify","setPsbtFinalize","clearShimRegister","hasShimRegister","clearShimCancel","hasShimCancel","clearPsbtVerify","hasPsbtVerify","clearPsbtFinalize","hasPsbtFinalize","FundingStateStepResp","PendingHTLC","maturityHeight","blocksTilMaturity","stage","setMaturityHeight","setBlocksTilMaturity","setStage","getMaturityHeight","getBlocksTilMaturity","getStage","totalLimboBalance","pendingOpenChannelsList","getPendingOpenChannelsList","PendingOpenChannel","pendingClosingChannelsList","getPendingClosingChannelsList","ClosedChannel","pendingForceClosingChannelsList","getPendingForceClosingChannelsList","ForceClosedChannel","waitingCloseChannelsList","getWaitingCloseChannelsList","WaitingCloseChannel","setTotalLimboBalance","addPendingOpenChannels","addPendingClosingChannels","addPendingForceClosingChannels","addWaitingCloseChannels","getTotalLimboBalance","PendingChannel","remoteNodePub","setRemoteNodePub","getRemoteNodePub","channel","getChannel","confirmationHeight","setChannel","setConfirmationHeight","getConfirmationHeight","clearChannel","hasChannel","limboBalance","commitments","getCommitments","Commitments","setLimboBalance","setCommitments","getLimboBalance","clearCommitments","hasCommitments","localTxid","remoteTxid","remotePendingTxid","localCommitFeeSat","remoteCommitFeeSat","remotePendingCommitFeeSat","setLocalTxid","setRemoteTxid","setRemotePendingTxid","setLocalCommitFeeSat","setRemoteCommitFeeSat","setRemotePendingCommitFeeSat","getLocalTxid","getRemoteTxid","getRemotePendingTxid","getLocalCommitFeeSat","getRemoteCommitFeeSat","getRemotePendingCommitFeeSat","recoveredBalance","anchor","setRecoveredBalance","setAnchor","getRecoveredBalance","getAnchor","AnchorState","LIMBO","RECOVERED","LOST","setPendingOpenChannelsList","clearPendingOpenChannelsList","setPendingClosingChannelsList","clearPendingClosingChannelsList","setPendingForceClosingChannelsList","clearPendingForceClosingChannelsList","setWaitingCloseChannelsList","clearWaitingCloseChannelsList","ChannelCase","CHANNEL_NOT_SET","OPEN_CHANNEL","CLOSED_CHANNEL","ACTIVE_CHANNEL","INACTIVE_CHANNEL","PENDING_OPEN_CHANNEL","getChannelCase","openChannel","getOpenChannel","closedChannel","getClosedChannel","activeChannel","getActiveChannel","inactiveChannel","getInactiveChannel","pendingOpenChannel","getPendingOpenChannel","setOpenChannel","setClosedChannel","setActiveChannel","setInactiveChannel","setPendingOpenChannel","UpdateType","clearOpenChannel","hasOpenChannel","clearClosedChannel","hasClosedChannel","clearActiveChannel","hasActiveChannel","clearInactiveChannel","hasInactiveChannel","clearPendingOpenChannel","hasPendingOpenChannel","totalBalance","confirmedBalance","unconfirmedBalance","setTotalBalance","setConfirmedBalance","setUnconfirmedBalance","getTotalBalance","getConfirmedBalance","getUnconfirmedBalance","ChannelBalanceRequest","ChannelBalanceResponse","balance","pendingOpenBalance","setBalance","setPendingOpenBalance","getBalance","getPendingOpenBalance","QueryRoutesRequest","ignoredNodesList","getIgnoredNodesList_asB64","ignoredEdgesList","getIgnoredEdgesList","EdgeLocator","sourcePubKey","useMissionControl","ignoredPairsList","getIgnoredPairsList","NodePair","routeHintsList","getRouteHintsList","RouteHint","addIgnoredNodes","addIgnoredEdges","setSourcePubKey","setUseMissionControl","addIgnoredPairs","addRouteHints","getIgnoredNodesList_asU8","writeRepeatedBytes","getSourcePubKey","getUseMissionControl","getIgnoredNodesList","bytesListAsB64","bytesListAsU8","setIgnoredNodesList","clearIgnoredNodesList","setIgnoredEdgesList","clearIgnoredEdgesList","setIgnoredPairsList","clearIgnoredPairsList","setRouteHintsList","clearRouteHintsList","from","getFrom_asB64","to","getTo_asB64","setFrom","setTo","getFrom_asU8","getTo_asU8","getFrom","getTo","channelId","directionReverse","setChannelId","setDirectionReverse","getChannelId","getDirectionReverse","QueryRoutesResponse","routesList","getRoutesList","successProb","addRoutes","setSuccessProb","getSuccessProb","setRoutesList","clearRoutesList","Hop","chanCapacity","amtToForward","fee","expiry","amtToForwardMsat","feeMsat","tlvPayload","mppRecord","getMppRecord","MPPRecord","customRecordsMap","getCustomRecordsMap","setChanCapacity","setAmtToForward","setFee","setExpiry","setAmtToForwardMsat","setFeeMsat","setTlvPayload","setMppRecord","getChanCapacity","getAmtToForward","getFee","getExpiry","getAmtToForwardMsat","getFeeMsat","getTlvPayload","clearMppRecord","hasMppRecord","clearCustomRecordsMap","paymentAddr","getPaymentAddr_asB64","totalAmtMsat","setPaymentAddr","setTotalAmtMsat","getPaymentAddr_asU8","getTotalAmtMsat","getPaymentAddr","totalTimeLock","totalAmt","hopsList","getHopsList","totalFeesMsat","setTotalTimeLock","setTotalAmt","addHops","setTotalFeesMsat","getTotalTimeLock","getTotalAmt","getTotalFeesMsat","setHopsList","clearHopsList","NodeInfoRequest","includeChannels","setIncludeChannels","getIncludeChannels","NodeInfo","node","getNode","LightningNode","numChannels","totalCapacity","ChannelEdge","setNode","setNumChannels","setTotalCapacity","getNumChannels","getTotalCapacity","clearNode","hasNode","lastUpdate","addressesList","getAddressesList","NodeAddress","setLastUpdate","addAddresses","getLastUpdate","setAddressesList","clearAddressesList","RoutingPolicy","timeLockDelta","feeBaseMsat","feeRateMilliMsat","disabled","maxHtlcMsat","setTimeLockDelta","setFeeBaseMsat","setFeeRateMilliMsat","setDisabled","setMaxHtlcMsat","getTimeLockDelta","getFeeBaseMsat","getFeeRateMilliMsat","getDisabled","getMaxHtlcMsat","node1Pub","node2Pub","node1Policy","getNode1Policy","node2Policy","getNode2Policy","setNode1Pub","setNode2Pub","setNode1Policy","setNode2Policy","getNode1Pub","getNode2Pub","clearNode1Policy","hasNode1Policy","clearNode2Policy","hasNode2Policy","ChannelGraphRequest","includeUnannounced","setIncludeUnannounced","getIncludeUnannounced","ChannelGraph","nodesList","getNodesList","edgesList","getEdgesList","addNodes","addEdges","setNodesList","clearNodesList","setEdgesList","clearEdgesList","NodeMetricsRequest","typesList","setTypesList","getTypesList","addTypes","clearTypesList","NodeMetricsResponse","betweennessCentralityMap","getBetweennessCentralityMap","FloatMetric","clearBetweennessCentralityMap","normalizedValue","setValue","setNormalizedValue","getValue","getNormalizedValue","ChanInfoRequest","NetworkInfoRequest","NetworkInfo","graphDiameter","avgOutDegree","maxOutDegree","numNodes","totalNetworkCapacity","avgChannelSize","minChannelSize","maxChannelSize","medianChannelSizeSat","numZombieChans","setGraphDiameter","setAvgOutDegree","setMaxOutDegree","setNumNodes","setTotalNetworkCapacity","setAvgChannelSize","setMinChannelSize","setMaxChannelSize","setMedianChannelSizeSat","setNumZombieChans","getGraphDiameter","getAvgOutDegree","getMaxOutDegree","getNumNodes","getTotalNetworkCapacity","getAvgChannelSize","getMinChannelSize","getMaxChannelSize","getMedianChannelSizeSat","getNumZombieChans","StopRequest","StopResponse","GraphTopologySubscription","GraphTopologyUpdate","nodeUpdatesList","getNodeUpdatesList","NodeUpdate","channelUpdatesList","getChannelUpdatesList","ChannelEdgeUpdate","closedChansList","getClosedChansList","ClosedChannelUpdate","addNodeUpdates","addChannelUpdates","addClosedChans","setNodeUpdatesList","clearNodeUpdatesList","setChannelUpdatesList","clearChannelUpdatesList","setClosedChansList","clearClosedChansList","identityKey","globalFeatures","getGlobalFeatures_asB64","setIdentityKey","setGlobalFeatures","getIdentityKey","getGlobalFeatures_asU8","getGlobalFeatures","routingPolicy","getRoutingPolicy","advertisingNode","connectingNode","setRoutingPolicy","setAdvertisingNode","setConnectingNode","getAdvertisingNode","getConnectingNode","clearRoutingPolicy","hasRoutingPolicy","closedHeight","setClosedHeight","getClosedHeight","HopHint","nodeId","feeProportionalMillionths","cltvExpiryDelta","setNodeId","setFeeProportionalMillionths","setCltvExpiryDelta","getNodeId","getFeeProportionalMillionths","getCltvExpiryDelta","hopHintsList","getHopHintsList","addHopHints","setHopHintsList","clearHopHintsList","Invoice","memo","rPreimage","getRPreimage_asB64","rHash","getRHash_asB64","valueMsat","settled","creationDate","settleDate","descriptionHash","getDescriptionHash_asB64","fallbackAddr","cltvExpiry","addIndex","settleIndex","amtPaid","amtPaidSat","amtPaidMsat","state","htlcsList","getHtlcsList","InvoiceHTLC","isKeysend","setMemo","setRPreimage","setRHash","setValueMsat","setSettled","setCreationDate","setSettleDate","setDescriptionHash","setFallbackAddr","setCltvExpiry","setAddIndex","setSettleIndex","setAmtPaid","setAmtPaidSat","setAmtPaidMsat","setState","addHtlcs","setIsKeysend","getMemo","getRPreimage_asU8","getRHash_asU8","getValueMsat","getSettled","getCreationDate","getSettleDate","getDescriptionHash_asU8","getFallbackAddr","getCltvExpiry","getAddIndex","getSettleIndex","getAmtPaid","getAmtPaidSat","getAmtPaidMsat","getState","getIsKeysend","InvoiceState","OPEN","SETTLED","CANCELED","ACCEPTED","getRPreimage","getRHash","getDescriptionHash","setHtlcsList","clearHtlcsList","htlcIndex","acceptHeight","acceptTime","resolveTime","expiryHeight","mppTotalAmtMsat","setHtlcIndex","setAcceptHeight","setAcceptTime","setResolveTime","setExpiryHeight","setMppTotalAmtMsat","getHtlcIndex","getAcceptHeight","getAcceptTime","getResolveTime","getExpiryHeight","getMppTotalAmtMsat","AddInvoiceResponse","PaymentHash","rHashStr","setRHashStr","getRHashStr","ListInvoiceRequest","pendingOnly","indexOffset","numMaxInvoices","reversed","setPendingOnly","setIndexOffset","setNumMaxInvoices","setReversed","getPendingOnly","getIndexOffset","getNumMaxInvoices","getReversed","ListInvoiceResponse","invoicesList","getInvoicesList","lastIndexOffset","firstIndexOffset","addInvoices","setLastIndexOffset","setFirstIndexOffset","getLastIndexOffset","getFirstIndexOffset","setInvoicesList","clearInvoicesList","InvoiceSubscription","Payment","valueSat","status","creationTimeNs","HTLCAttempt","failureReason","setValueSat","setStatus","setCreationTimeNs","setFailureReason","getValueSat","getStatus","getCreationTimeNs","getFailureReason","PaymentStatus","UNKNOWN","IN_FLIGHT","SUCCEEDED","FAILED","attemptTimeNs","resolveTimeNs","failure","getFailure","Failure","preimage","getPreimage_asB64","setAttemptTimeNs","setResolveTimeNs","setFailure","setPreimage","getAttemptTimeNs","getResolveTimeNs","getPreimage_asU8","HTLCStatus","clearFailure","hasFailure","getPreimage","ListPaymentsRequest","includeIncomplete","maxPayments","setIncludeIncomplete","setMaxPayments","getIncludeIncomplete","getMaxPayments","ListPaymentsResponse","paymentsList","getPaymentsList","addPayments","setPaymentsList","clearPaymentsList","DeleteAllPaymentsRequest","DeleteAllPaymentsResponse","AbandonChannelRequest","AbandonChannelResponse","DebugLevelRequest","show","levelSpec","setShow","setLevelSpec","getShow","getLevelSpec","DebugLevelResponse","subSystems","setSubSystems","getSubSystems","PayReqString","payReq","setPayReq","getPayReq","PayReq","destination","numSatoshis","description","numMsat","setDestination","setNumSatoshis","setDescription","setNumMsat","getDestination","getNumSatoshis","getDescription","getNumMsat","isRequired","isKnown","setIsRequired","setIsKnown","getIsRequired","getIsKnown","FeeReportRequest","ChannelFeeReport","baseFeeMsat","feePerMil","feeRate","setBaseFeeMsat","setFeePerMil","setFeeRate","getBaseFeeMsat","getFeePerMil","getFeeRate","FeeReportResponse","channelFeesList","getChannelFeesList","dayFeeSum","weekFeeSum","monthFeeSum","addChannelFees","setDayFeeSum","setWeekFeeSum","setMonthFeeSum","getDayFeeSum","getWeekFeeSum","getMonthFeeSum","setChannelFeesList","clearChannelFeesList","PolicyUpdateRequest","ScopeCase","SCOPE_NOT_SET","GLOBAL","CHAN_POINT","getScopeCase","minHtlcMsatSpecified","setGlobal","setMinHtlcMsatSpecified","getMinHtlcMsatSpecified","getGlobal","clearGlobal","hasGlobal","PolicyUpdateResponse","ForwardingHistoryRequest","startTime","endTime","numMaxEvents","setStartTime","setEndTime","setNumMaxEvents","getStartTime","getEndTime","getNumMaxEvents","ForwardingEvent","chanIdIn","chanIdOut","amtIn","amtOut","amtInMsat","amtOutMsat","setChanIdIn","setChanIdOut","setAmtIn","setAmtOut","setAmtInMsat","setAmtOutMsat","getChanIdIn","getChanIdOut","getAmtIn","getAmtOut","getAmtInMsat","getAmtOutMsat","ForwardingHistoryResponse","forwardingEventsList","getForwardingEventsList","lastOffsetIndex","addForwardingEvents","setLastOffsetIndex","getLastOffsetIndex","setForwardingEventsList","clearForwardingEventsList","ExportChannelBackupRequest","ChannelBackup","chanBackup","getChanBackup_asB64","setChanBackup","getChanBackup_asU8","getChanBackup","MultiChanBackup","chanPointsList","getChanPointsList","multiChanBackup","getMultiChanBackup_asB64","addChanPoints","setMultiChanBackup","getMultiChanBackup_asU8","setChanPointsList","clearChanPointsList","getMultiChanBackup","ChanBackupExportRequest","ChanBackupSnapshot","singleChanBackups","getSingleChanBackups","ChannelBackups","setSingleChanBackups","clearSingleChanBackups","hasSingleChanBackups","clearMultiChanBackup","hasMultiChanBackup","chanBackupsList","getChanBackupsList","addChanBackups","setChanBackupsList","clearChanBackupsList","RestoreChanBackupRequest","BackupCase","BACKUP_NOT_SET","CHAN_BACKUPS","MULTI_CHAN_BACKUP","getBackupCase","chanBackups","getChanBackups","setChanBackups","clearChanBackups","hasChanBackups","RestoreBackupResponse","ChannelBackupSubscription","VerifyChanBackupResponse","MacaroonPermission","entity","action","setEntity","setAction","getEntity","getAction","BakeMacaroonRequest","permissionsList","getPermissionsList","addPermissions","setPermissionsList","clearPermissionsList","BakeMacaroonResponse","macaroon","setMacaroon","getMacaroon","code","channelUpdate","getChannelUpdate","ChannelUpdate","htlcMsat","onionSha256","getOnionSha256_asB64","flags","failureSourceIndex","height","setCode","setChannelUpdate","setHtlcMsat","setOnionSha256","setFlags","setFailureSourceIndex","setHeight","getCode","getHtlcMsat","getOnionSha256_asU8","getFlags","getFailureSourceIndex","getHeight","FailureCode","RESERVED","INCORRECT_OR_UNKNOWN_PAYMENT_DETAILS","INCORRECT_PAYMENT_AMOUNT","FINAL_INCORRECT_CLTV_EXPIRY","FINAL_INCORRECT_HTLC_AMOUNT","FINAL_EXPIRY_TOO_SOON","INVALID_REALM","EXPIRY_TOO_SOON","INVALID_ONION_VERSION","INVALID_ONION_HMAC","INVALID_ONION_KEY","AMOUNT_BELOW_MINIMUM","FEE_INSUFFICIENT","INCORRECT_CLTV_EXPIRY","CHANNEL_DISABLED","TEMPORARY_CHANNEL_FAILURE","REQUIRED_NODE_FEATURE_MISSING","REQUIRED_CHANNEL_FEATURE_MISSING","UNKNOWN_NEXT_PEER","TEMPORARY_NODE_FAILURE","PERMANENT_NODE_FAILURE","PERMANENT_CHANNEL_FAILURE","EXPIRY_TOO_FAR","MPP_TIMEOUT","INTERNAL_FAILURE","UNKNOWN_FAILURE","UNREADABLE_FAILURE","clearChannelUpdate","hasChannelUpdate","getOnionSha256","getSignature_asB64","messageFlags","htlcMinimumMsat","baseFee","htlcMaximumMsat","extraOpaqueData","getExtraOpaqueData_asB64","setMessageFlags","setHtlcMinimumMsat","setBaseFee","setHtlcMaximumMsat","setExtraOpaqueData","getSignature_asU8","getMessageFlags","getHtlcMinimumMsat","getBaseFee","getHtlcMaximumMsat","getExtraOpaqueData_asU8","getExtraOpaqueData","AddressType","WITNESS_PUBKEY_HASH","NESTED_PUBKEY_HASH","UNUSED_WITNESS_PUBKEY_HASH","UNUSED_NESTED_PUBKEY_HASH","CommitmentType","LEGACY","STATIC_REMOTE_KEY","ANCHORS","UNKNOWN_COMMITMENT_TYPE","Initiator","INITIATOR_UNKNOWN","INITIATOR_LOCAL","INITIATOR_REMOTE","INITIATOR_BOTH","ResolutionType","TYPE_UNKNOWN","ANCHOR","INCOMING_HTLC","OUTGOING_HTLC","COMMIT","ResolutionOutcome","OUTCOME_UNKNOWN","CLAIMED","UNCLAIMED","FIRST_STAGE","TIMEOUT","NodeMetricType","BETWEENNESS_CENTRALITY","InvoiceHTLCState","PaymentFailureReason","FAILURE_REASON_NONE","FAILURE_REASON_TIMEOUT","FAILURE_REASON_NO_ROUTE","FAILURE_REASON_ERROR","FAILURE_REASON_INCORRECT_PAYMENT_DETAILS","FAILURE_REASON_INSUFFICIENT_BALANCE","FeatureBit","DATALOSS_PROTECT_REQ","DATALOSS_PROTECT_OPT","INITIAL_ROUING_SYNC","UPFRONT_SHUTDOWN_SCRIPT_REQ","UPFRONT_SHUTDOWN_SCRIPT_OPT","GOSSIP_QUERIES_REQ","GOSSIP_QUERIES_OPT","TLV_ONION_REQ","TLV_ONION_OPT","EXT_GOSSIP_QUERIES_REQ","EXT_GOSSIP_QUERIES_OPT","STATIC_REMOTE_KEY_REQ","STATIC_REMOTE_KEY_OPT","PAYMENT_ADDR_REQ","PAYMENT_ADDR_OPT","MPP_REQ","MPP_OPT","palette","primary","main","light","tinycolor","lighten","toHexString","dark","darken","secondary","contrastText","warning","info","text","hint","background","default","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","root","backgroundColor","MuiMenu","paper","boxShadow","MuiSelect","icon","MuiListItem","button","MuiTouchRipple","child","MuiTableRow","MuiTableCell","borderBottom","head","fontSize","body","createMuiTheme","defaultTheme","typography","h1","h2","h3","h4","h5","h6","makeStyles","theme","display","maxWidth","overflowX","flexGrow","padding","spacing","width","minHeight","contentShift","transition","transitions","create","easing","sharp","duration","enteringScreen","fakeToolbar","mixins","toolbar","logotype","marginLeft","marginRight","fontWeight","whiteSpace","breakpoints","down","appBar","zIndex","drawer","leavingScreen","paddingLeft","paddingRight","hide","grow","search","position","borderRadius","fade","common","black","cursor","searchFocused","up","searchIcon","right","alignItems","justifyContent","searchIconOpened","inputRoot","inputInput","messageContent","flexDirection","headerMenu","marginTop","headerMenuList","headerMenuItem","headerMenuButton","headerMenuButtonCollapse","headerIcon","headerIconCollapse","profileMenu","minWidth","profileMenuUser","profileMenuItem","profileMenuIcon","profileMenuLink","textDecoration","messageNotification","messageNotificationSide","messageNotificationBodySide","sendMessageButton","margin","marginBottom","textTransform","sendButtonIcon","useStyles","badge","Badge","children","colorBrightness","props","classes","Styled","createStyled","useTheme","styledProps","classnames","Typography","weight","size","style","getFontWeight","getFontSize","variant","Button","className","contained","outlined","borderColor","select","brigtness","multiplier","defaultSize","styles","withStyles","notificationContainer","notificationContained","notificationContainedShadowless","notificationIconContainer","notificationIconContainerContained","notificationIconContainerRounded","containedTypography","messageContainer","extraButton","typesIcons","ShoppingCart","notification","ThumbUp","feedback","customer","shipped","delivered","defence","report","Report","upload","disc","Notification","getIconByType","iconWithStyles","React","cloneElement","notificationIcon","shadowless","setAlpha","toRgbString","typographyVariant","extraButtonClick","onClick","disableRipple","LayoutStateContext","createContext","LayoutDispatchContext","layoutReducer","isSidebarOpened","Error","LayoutProvider","useReducer","dispatch","Provider","useLayoutState","context","useContext","useLayoutDispatch","toggleSidebar","console","log","Boolean","process","REACT_APP_DEV_MODE_ENABLED","DEV_MODE_ENABLED","clientUrl","window","location","client","REACT_APP_SERVER_PORT","SERVER_PORT","web_host_port","protocol","lndListPeersRequest","handleResponse","err","response","lndListChannelsRequest","lndPendingChannelsRequest","getSqueakDisplayRequest","hash","getNetworkRequest","connectSqueakPeerRequest","ConnectSqueakPeerRequest","reloadRoute","history","go","goToPeerPage","push","goToPeerAddressPage","goToLightningNodePage","goToSqueakPage","goToSqueakAddressPage","squeakAddress","goToChannelPage","txId","goToProfilePage","notifications","Header","useHistory","layoutState","layoutDispatch","useState","notificationsMenu","setNotificationsMenu","isNotificationsUnread","setIsNotificationsUnread","setProfileMenu","isSearchOpen","setSearchOpen","username","setUsername","getUser","fetch","method","then","data","useEffect","AppBar","Toolbar","IconButton","classNames","ArrowBack","Search","InputBase","placeholder","input","aria-haspopup","aria-controls","e","currentTarget","badgeContent","Menu","id","open","anchorEl","onClose","disableAutoFocusItem","map","MenuItem","key","arrayBuffer","menuButton","flexShrink","drawerOpen","drawerClose","mobileBackButton","only","link","linkActive","linkNested","linkIcon","linkIconActive","linkText","linkTextActive","linkTextHidden","opacity","nestedList","sectionTitle","divider","dotBase","dotSmall","dotLarge","Dot","SidebarLink","nested","isOpen","setIsOpen","isLinkActive","pathname","indexOf","Divider","ListItem","component","Link","preventDefault","ListItemIcon","Inbox","ListItemText","Collapse","in","timeout","unmountOnExit","List","disablePadding","childrenLink","linkRoot","structure","Home","History","withRouter","isPermanent","setPermanent","addEventListener","handleWindowWidthChange","removeEventListener","Drawer","sidebarList","isSmallScreen","innerWidth","values","md","dashedBorder","border","paddingTop","paddingBottom","fab","bottom","refreshFab","top","wrapper","buttonSuccess","green","fabProgress","left","buttonProgress","widgetWrapper","widgetHeader","widgetRoot","widgetBody","noPadding","overflow","moreButton","secondaryTail","DeleteSqueakDialog","handleClose","squeakToDelete","deleteSqueakRequest","cancel","event","stopPropagation","Dialog","onBackdropClick","aria-labelledby","DialogTitle","onSubmit","noValidate","autoComplete","DialogContent","DialogActions","Widget","title","noBodyPadding","bodyClass","disableWidgetMenu","header","moreButtonRef","setMoreButtonRef","isMoreMenuOpen","setMoreMenuOpen","Paper","elevation","square","aria-owns","buttonRef","SqueakDetailsDialog","squeak","squeakDetails","setSqueakDetails","getSqueakDetailsRequest","onRendered","Grid","container","item","xs","legendItemContainer","TextField","fullWidth","multiline","SqueakActionBar","reloadSqueak","replyDialogOpen","setReplyDialogOpen","deleteDialogOpen","setDeleteDialogOpen","viewDetailsDialogOpen","setViewDetailsDialogOpen","handleCloseReplyDialog","handleCloseDeleteDialog","handleCloseViewDetailsDialog","handleLikeSqueak","likeSqueakRequest","handleUnlikeSqueak","unlikeSqueakRequest","onReplyClick","onResqueakClick","onLikeClick","onUnlikeClick","onDeleteClick","onZoomInClick","direction","justify","sm","aria-label","MakeSqueakDialog","replytoSqueak","getBlockDetailUrl","SqueakThreadItem","showActionBar","p","m","Box","href","textOverflow","moment","fromNow","target","rel","signingProfiles","setSigningProfiles","handleChange","handleChangeContent","createSqueak","handleErr","makeSqueakRequest","loadSigningProfiles","getSigningProfilesRequest","onEnter","alert","FormControl","formControl","required","InputLabel","Select","labelId","onChange","autoFocus","rows","inputProps","maxLength","oppositeContent","flex","large","getProfileImageSrcString","SqueakUserAvatar","Avatar","src","SqueakList","squeaks","setSqueaksFn","handleReloadSqueakItem","itemHash","newSqueak","newSqueaks","reloadSqueakItem","Timeline","align","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineContent","TimelinePage","setSqueaks","setNewSqueaks","setOpen","waitingForTimeline","setWaitingForTimeline","getSqueaks","useCallback","getTimelineSqueakDisplaysRequest","handleLoadedTimeline","alertFailedRequest","subscribeNewSqueaks","stream","on","end","subscribeTimelineSqueakDisplaysRequest","handleLoadedNewSqueak","handleClickOpen","handleClickRefresh","loadedSqueaks","prevSqueaks","concat","prevNewSqueaks","Card","CardHeader","subheader","latestSqueak","slice","pop","CircularProgress","Fab","card","visitsNumberContainer","progressSection","progressTitle","pieChartLegendWrapper","fullHeightBody","tableWidget","progressBar","performanceLegendWrapper","legendElement","legendElementText","serverOverviewElement","serverOverviewElementText","serverOverviewElementChartWrapper","mainChartBody","mainChartHeader","flexWrap","mainChartHeaderLabels","order","mainChartHeaderLabel","mainChartSelectRoot","mainChartSelect","mainChartLegentElement","tasks","time","bigStat","product","total","monthly","weekly","daily","profit","registrations","bounce","table","email","price","date","city","pageTitleContainer","typo","PageTitle","states","sent","pending","declined","TableComponent","keys","Object","i","toUpperCase","shift","Table","TableHead","TableRow","TableCell","TableBody","toLowerCase","bottomStatsContainer","statCell","totalValueContainer","totalValue","profitArrow","transform","fill","profitArrowDanger","selectInput","BigStat","Input","disableUnderline","upperTitle","Array","Math","floor","random","dataKey","radius","barSize","borderRight","ArrowForward","mainChartData","resultArray","tablet","getRandomData","desktop","mobile","getMainChartData","PieChartData","Dashboard","mainChartState","setMainChartState","lg","stroke","strokeWidth","dot","progressSectionTitle","LinearProgress","barColorPrimary","fillOpacity","innerRadius","outerRadius","entry","index","OutlinedInput","labelWidth","notchedOutline","autoWidth","ticks","tick","tickLine","tickFormatter","activeDot","mock","stat","min","max","lastValue","maxDiff","array","randomValue","CreateContactProfileDialog","initialAddress","handleChangeProfileName","handleChangeAddress","createContactProfileRequest","SqueakAddressPage","useParams","createContactProfileDialogOpen","setCreateContactProfileDialogOpen","waitingForSqueaks","setWaitingForSqueaks","getSqueakProfileByAddressRequest","getAddressSqueakDisplaysRequest","handleLoadedAddressSqueaks","subscribeSqueaks","subscribeAddressSqueakDisplaysRequest","resp","loadedAddressSqueaks","handleCloseCreateContactProfileDialog","onDownloadSqueaksClick","downloadAddressSqueaksRequest","NoProfileContent","GridContent","BuyOfferDetailItem","onPeerClick","onLightningNodeClick","peerAddressText","PeerInfoContent","lightningAddress","lightningPubkey","LightningPeerInfoContent","expireTime","ExpiresInfoContent","BuySqueakDialog","handlePaymentComplete","selectedOfferId","setSelectedOfferId","offers","setOffers","loading","setLoading","loadOffers","getBuyOffersRequest","subscribeOffers","subscribeBuyOffersRequest","prevOffers","downloadOffersRequest","handlePayResponse","handlePayErr","pay","payOfferRequest","onDownloadClick","getPeerAddressText","selectedOffer","getSelectedOffer","SelectedOfferContentInput","Alert","SqueakDetailItem","buyDialogOpen","setBuyDialogOpen","unlockedSnackbarOpen","setUnlockedSnackbarOpen","handleCloseBuyDialog","onUnlockClick","downloadSqueakRequest","handleCloseUnlockedSnackbar","reason","Snackbar","autoHideDuration","severity","SqueakThread","oldestKnownAncestor","unknownAncestorHash","TimelineConnector","UnkownReplyToContent","SqueakReplies","SqueakPage","ancestorSqueaks","setAncestorSqueaks","replySqueaks","setReplySqueaks","waitingForSqueak","setWaitingForSqueak","waitingForReplySqueaks","setWaitingForReplySqueaks","getAncestorSqueaks","getAncestorSqueakDisplaysRequest","handleLoadedAncestorSqueaks","subscribeAncestorSqueaks","subscribeAncestorSqueakDisplaysRequest","getReplySqueaks","getReplySqueakDisplaysRequest","handleLoadedReplySqueaks","subscribeReplySqueaks","subscribeReplySqueakDisplaysRequest","prevReplySqueaks","getCurrentSqueak","loadedAncestorSqueaks","loadedReplySqueaks","onDownloadRepliesClick","downloadRepliesRequest","currentSqueak","useMemo","calculateCurrentSqueak","SqueakContent","media","DeleteProfileDialog","profile","reloadProfile","deleteProfile","deleteProfileRequest","RenameProfileDialog","renameSqueakProfileRequest","ExportPrivateKeyDialog","readOnly","ConfigureProfileDialog","setSqueakProfileFollowingRequest","setSqueakProfileUseCustomPriceRequest","setSqueakProfileCustomPriceRequest","handleSettingsFollowingChange","checked","handleSettingsUseCustomPriceChange","handleSettingsCustomPriceMsatChange","newPriceMsat","FormLabel","FormGroup","FormControlLabel","control","Switch","defaultValue","UpdateProfileImageDialog","selectedFile","setSelectedFile","imageBase64","setImageBase64","updateProfileImage","imageStr","setSqueakProfileImageRequest","handleChangeSelectedImage","files","file","getFileAsBase64","FileReader","result","readAsDataURL","imageBase64Stripped","split","hidden","alt","DisplaySelectedImageFile","fileName","DisplaySelectedImageFileName","ClearProfileImageDialog","clearProfileImage","clearSqueakProfileImageRequest","SqueakProfileFollowingIndicator","SqueakProfileDetailItem","handleReloadProfile","setAnchorEl","renameDialogOpen","setRenameDialogOpen","exportPrivateKeyDialogOpen","setExportPrivateKeyDialogOpen","configureDialogOpen","setConfigureDialogOpen","updateImageDialogOpen","setUpdateImageDialogOpen","clearImageDialogOpen","setClearImageDialogOpen","handleCloseRenameDialog","handleCloseExportPrivateKeyDialog","handleCloseConfigureDialog","handleCloseUpdateImageDialog","handleCloseClearImageDialog","CustomPriceContent","keepMounted","CardMedia","image","CardContent","gutterBottom","CardActions","ProfilePage","getSqueakProfileRequest","clickable","cardContentContainer","cardContentContainerVertical","cardHeaderContainer","cardContentFlexColumn","alignSelf","cardContentSection","cardHeaderRow","cardSubheaderText","cardSubheaderTextLabel","cardSubheaderTextValue","cardContent","cardContentColumns","detailItem","detailItemVertical","detailItemLabel","detailItemValue","balanceGridItemLabel","expandBtn","shortest","collapseBtn","channelIcon","channelStatus","channelStatusChip","channelStatusText","channelBalanceBarContainer","justifySelf","channelBalanceDetailsContainer","balanceContainerLocal","textAlign","balanceContainerRemote","balanceContainerCapacity","channelBalanceBarRow","balanceLabel","balanceValue","channelBalanceProgressBar","channelBalanceBuffer","channelBalanceBar","channelBalanceBar1Buffer","backgroundImage","channelBalanceBar2Buffer","channelBalanceDashed","backgroundSize","animation","transactionIcon","transactionAmt","inlineTimestamp","bullet","ReceiveBitcoinDialog","getNewAddress","lndNewAddressRequest","SendBitcoinDialog","satperbyte","setSatperbyte","sendall","setSendall","handleChangeAmount","handleChangeSatperbyte","handleChangeSendall","sendBitcoin","formControlLabel","TransactionItem","transaction","handleTransactionClick","expanded","setExpanded","TransactionDetailItem","amountGtZero","abs","unix","format","LightningPeerListItem","getPeerHost","getPeerPort","pieces","avatar","ChannelBalanceBar","valueBuffer","buffer","dashed","bar","bar1Buffer","bar2Buffer","ChannelItem","ChannelDetailItem","getTxId","Chip","humanize","PendingOpenChannelItem","WalletPage","lndInfo","setLndInfo","walletBalance","setWalletBalance","transactions","setTransactions","peers","setPeers","channels","setChannels","pendingChannels","setPendingChannels","receiveBitcoinDialogOpen","setReceiveBitcoinDialogOpen","sendBitcoinDialogOpen","setSendBitcoinDialogOpen","a11yProps","newValue","handleCloseReceiveBitcoinDialog","handleCloseSendBitcoinDialog","getLndInfo","lndGetInfoRequest","getWalletBalance","lndWalletBalanceRequest","getTransactions","lndGetTransactionsRequest","ReceiveBitcoinButton","SendBitcoinButton","BalanceContent","NodeInfoContent","toString","TransactionsContent","PeersContent","handlePeerClick","TabPanel","other","role","Tabs","Tab","OpenChannelDialog","handleChangeSatPerBytes","lndOpenChannelSyncRequest","LightningNodePage","openChannelDialogOpen","setOpenChannelDialogOpen","handleCloseOpenChannelDialog","isConnected","hasChannelToPeer","lndConnectPeerRequest","lndDisconnectPeerRequest","ConnectPeerButton","lightningHost","handleClickConnectPeer","DisconnectPeerButton","OpenChannelButton","NodeInfoGridItem","ChannelsContent","nodeChannels","filter","nodePendingOpenChannels","ChannelsGridItem","CloseChannelDialog","closeChannel","lndCloseChannelRequest","closeChannelDialogOpen","setCloseChannelDialogOpen","handleCloseCloseChannelDialog","isChannelOpen","CloseChannelButton","ChannelTabs","layoutContainer","layoutText","layoutButtonsRow","layoutButton","outline","layoutButtonActive","buttonsContainer","notificationCallButton","codeContainer","codeComponent","notificationItem","notificationCloseButton","toastsContainer","visibility","notificationComponent","positions","toast","POSITION","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","NotificationsPage","notificationsPosition","setNotificationPosition","errorToastId","setErrorToastId","closeButton","CloseButton","closeOnClick","progressClassName","notificationProgress","changeNotificationPosition","handleNotificationCall","language","docco","retryErrorNotification","componentProps","update","render","notificationType","toastId","sendNotification","positionId","closeToast","Close","mapContainer","BasicMap","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","parseFloat","lng","Maps","googleMapURL","loadingElement","containerElement","mapElement","CreateSigningProfileDialog","createSigningProfileRequest","ImportSigningProfileDialog","handleChangePrivateKey","importSigningProfileRequest","ProfileListItem","Profiles","profiles","setProfiles","createSigningProfileDialogOpen","setCreateSigningProfileDialogOpen","importSigningProfileDialogOpen","setImportSigningProfileDialogOpen","waitingForProfiles","setWaitingForProfiles","loadProfiles","getProfilesRequest","handleLoadedProfiles","handleCloseCreateSigningProfileDialog","handleCloseImportSigningProfileDialog","loadedProfiles","ProfilesTabs","ProfilesGridItem","Payments","loadPaymentSummary","getPaymentSummaryRequest","paymentsSummaryReply","PaymentSummaryContent","goToSentPaymentsPage","goToReceivedPaymentsPage","PeerDisplay","SentPayments","sentPayments","setSentPayments","waitingForSentPayments","setWaitingForSentPayments","loadSentPayments","getSentPaymentsRequest","handleLoadedSentPayments","reply","loadedSentPayments","prevSentPayments","PaymentsTabs","latestSentPayment","receivedPayment","ReceivedPayments","receivedPayments","setReceivedPayments","loadReceivedPayments","getReceivedPaymentsRequest","receivedPaymentsReply","reprocessReceivedPaymentsRequest","LikedPage","waitingForLikedSqueaks","setWaitingForLikedSqueaks","getLikedSqueakDisplaysRequest","titleBold","iconsBar","borderBottomColor","tab","materailIcon","materialIconText","iconsContainer","IconsPage","activeTabId","setActiveTabId","indicatorColor","textColor","series","ApexLineChart","themeOptions","dataLabels","enabled","curve","xaxis","categories","tooltip","x","colors","chart","legend","generateData","count","yrange","y","lineChartData","uv","pv","pieChartData","Charts","activeIndex","setActiveIndexId","strokeDasharray","r","activeShape","renderActiveShape","cx","cy","onMouseEnter","RADIAN","PI","midAngle","startAngle","endAngle","payload","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","dy","d","toFixed","form","CreatePeerDialog","customPortChecked","setCustomPortChecked","handleChangePeerName","handleChangeHost","handleChangeCustomPortChecked","handleChangePort","createPeerRequest","ConnectPeerDialog","PeerListItem","SavedPeerListItem","Peers","connectedPeers","setConnectedPeers","createPeerDialogOpen","setCreatePeerDialogOpen","connectPeerDialogOpen","setConnectPeerDialogOpen","getConnectedPeersRequest","subscribeConnectedPeersRequest","getSqueakPeers","getPeersRequest","handleCloseCreatePeerDialog","handleCloseConnectPeerDialog","CreatePeerButton","PeersTabs","DeletePeerDialog","deletePeerRequest","PeerPage","getPeerRequest","setPeerAutoconnectRequest","handleSettingsAutoconnectChange","PeerAddressPage","getConnectedPeerRequest","subscribeConnectedPeerRequest","DisconnectSqueakPeerRequest","disconnectSqueakPeerRequest","PeerConnectionDetails","momentTimeString","lastMsgReceivedTimeS","lastMsgReceivedString","numMsgsReceived","numBytesReceived","numMsgsSent","numBytesSent","path","SqueakAddress","Squeak","Profile","Liked","Wallet","Notifications","exact","Icons","logotypeText","logotypeIcon","paperRoot","textRow","errorCode","safetyText","backButton","logo","logotypeContainer","logotypeImage","formContainer","greeting","subGreeting","googleButton","googleButtonCreating","googleIcon","creatingButtonContainer","createAccountButton","formDividerContainer","formDividerWord","formDivider","errorMessage","textFieldUnderline","textField","formButtons","forgetButton","loginLoader","copyright","UserStateContext","UserDispatchContext","userReducer","isAuthenticated","UserProvider","localStorage","getItem","loginUser","login","password","setIsLoading","setTimeout","setItem","userDispatch","useUserDispatch","isLoading","nameValue","setNameValue","loginValue","setLoginValue","passwordValue","setPasswordValue","centered","google","Fade","InputProps","underline","App","PublicRoute","Layout","Login","rest","createElement","match","ReactDOM","ThemeProvider","Themes","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b185b1a7.chunk.js","sourcesContent":["/* eslint-disable */\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar proto_lnd_pb = require('../proto/lnd_pb.js');\ngoog.exportSymbol('proto.squeaknode.ClearSqueakProfileImageReply', null, global);\ngoog.exportSymbol('proto.squeaknode.ClearSqueakProfileImageRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.ConnectPeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.ConnectPeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.ConnectedPeer', null, global);\ngoog.exportSymbol('proto.squeaknode.CreateContactProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.CreateContactProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.CreatePeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.CreatePeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.CreateSigningProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.CreateSigningProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DeletePeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DeletePeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DeleteSqueakProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DeleteSqueakProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DeleteSqueakReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DeleteSqueakRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DisconnectPeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DisconnectPeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadAddressSqueaksReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadAddressSqueaksRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadOffersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadOffersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadRepliesReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadRepliesRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadSqueakReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadSqueakRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadSqueaksReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadSqueaksRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetAddressSqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetAddressSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetAncestorSqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetAncestorSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetBuyOfferReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetBuyOfferRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetBuyOffersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetBuyOffersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetConnectedPeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetConnectedPeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetConnectedPeersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetConnectedPeersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetContactProfilesReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetContactProfilesRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetLikedSqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetLikedSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetNetworkReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetNetworkRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPaymentSummaryReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPaymentSummaryRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPeersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPeersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetProfilesReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetProfilesRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetReceivedPaymentsReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetReceivedPaymentsRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetReplySqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetReplySqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentOffersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentOffersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentPaymentReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentPaymentRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentPaymentsReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentPaymentsRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSigningProfilesReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSigningProfilesRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakDetailsReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakDetailsRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakDisplayReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakDisplayRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileByAddressReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileByAddressRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileByNameReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileByNameRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfilePrivateKeyReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfilePrivateKeyRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetTimelineSqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetTimelineSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.ImportSigningProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.ImportSigningProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.LikeSqueakReply', null, global);\ngoog.exportSymbol('proto.squeaknode.LikeSqueakRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.LoadBuyOffersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.LoadBuyOffersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.MakeSqueakReply', null, global);\ngoog.exportSymbol('proto.squeaknode.MakeSqueakRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.OfferDisplayEntry', null, global);\ngoog.exportSymbol('proto.squeaknode.PayOfferReply', null, global);\ngoog.exportSymbol('proto.squeaknode.PayOfferRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.PaymentSummary', null, global);\ngoog.exportSymbol('proto.squeaknode.PeerAddress', null, global);\ngoog.exportSymbol('proto.squeaknode.ReceivedPayment', null, global);\ngoog.exportSymbol('proto.squeaknode.RenamePeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.RenamePeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.RenameSqueakProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.RenameSqueakProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.ReprocessReceivedPaymentsReply', null, global);\ngoog.exportSymbol('proto.squeaknode.ReprocessReceivedPaymentsRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SentOffer', null, global);\ngoog.exportSymbol('proto.squeaknode.SentPayment', null, global);\ngoog.exportSymbol('proto.squeaknode.SetPeerAutoconnectReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetPeerAutoconnectRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileCustomPriceReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileCustomPriceRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileFollowingReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileFollowingRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileImageReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileImageRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileUseCustomPriceReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileUseCustomPriceRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SqueakDetailEntry', null, global);\ngoog.exportSymbol('proto.squeaknode.SqueakDisplayEntry', null, global);\ngoog.exportSymbol('proto.squeaknode.SqueakPeer', null, global);\ngoog.exportSymbol('proto.squeaknode.SqueakProfile', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeAddressSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeBuyOffersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeConnectedPeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeConnectedPeersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeReceivedPaymentsRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeReplySqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeSqueakDisplayRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.UnlikeSqueakReply', null, global);\ngoog.exportSymbol('proto.squeaknode.UnlikeSqueakRequest', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreateSigningProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreateSigningProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreateSigningProfileRequest.displayName = 'proto.squeaknode.CreateSigningProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreateSigningProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreateSigningProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreateSigningProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateSigningProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileName: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreateSigningProfileRequest}\n */\nproto.squeaknode.CreateSigningProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreateSigningProfileRequest;\n  return proto.squeaknode.CreateSigningProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreateSigningProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreateSigningProfileRequest}\n */\nproto.squeaknode.CreateSigningProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreateSigningProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreateSigningProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreateSigningProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateSigningProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string profile_name = 1;\n * @return {string}\n */\nproto.squeaknode.CreateSigningProfileRequest.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.CreateSigningProfileRequest.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreateSigningProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreateSigningProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreateSigningProfileReply.displayName = 'proto.squeaknode.CreateSigningProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreateSigningProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreateSigningProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreateSigningProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateSigningProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreateSigningProfileReply}\n */\nproto.squeaknode.CreateSigningProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreateSigningProfileReply;\n  return proto.squeaknode.CreateSigningProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreateSigningProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreateSigningProfileReply}\n */\nproto.squeaknode.CreateSigningProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreateSigningProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreateSigningProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreateSigningProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateSigningProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.CreateSigningProfileReply.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.CreateSigningProfileReply.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ImportSigningProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ImportSigningProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ImportSigningProfileRequest.displayName = 'proto.squeaknode.ImportSigningProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ImportSigningProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ImportSigningProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ImportSigningProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ImportSigningProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    privateKey: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ImportSigningProfileRequest}\n */\nproto.squeaknode.ImportSigningProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ImportSigningProfileRequest;\n  return proto.squeaknode.ImportSigningProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ImportSigningProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ImportSigningProfileRequest}\n */\nproto.squeaknode.ImportSigningProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivateKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ImportSigningProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ImportSigningProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ImportSigningProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ImportSigningProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPrivateKey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string profile_name = 1;\n * @return {string}\n */\nproto.squeaknode.ImportSigningProfileRequest.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.ImportSigningProfileRequest.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string private_key = 2;\n * @return {string}\n */\nproto.squeaknode.ImportSigningProfileRequest.prototype.getPrivateKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.ImportSigningProfileRequest.prototype.setPrivateKey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ImportSigningProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ImportSigningProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ImportSigningProfileReply.displayName = 'proto.squeaknode.ImportSigningProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ImportSigningProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ImportSigningProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ImportSigningProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ImportSigningProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ImportSigningProfileReply}\n */\nproto.squeaknode.ImportSigningProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ImportSigningProfileReply;\n  return proto.squeaknode.ImportSigningProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ImportSigningProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ImportSigningProfileReply}\n */\nproto.squeaknode.ImportSigningProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ImportSigningProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ImportSigningProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ImportSigningProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ImportSigningProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.ImportSigningProfileReply.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ImportSigningProfileReply.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreateContactProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreateContactProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreateContactProfileRequest.displayName = 'proto.squeaknode.CreateContactProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreateContactProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreateContactProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreateContactProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateContactProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    address: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreateContactProfileRequest}\n */\nproto.squeaknode.CreateContactProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreateContactProfileRequest;\n  return proto.squeaknode.CreateContactProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreateContactProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreateContactProfileRequest}\n */\nproto.squeaknode.CreateContactProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreateContactProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreateContactProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreateContactProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateContactProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string profile_name = 1;\n * @return {string}\n */\nproto.squeaknode.CreateContactProfileRequest.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.CreateContactProfileRequest.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string address = 2;\n * @return {string}\n */\nproto.squeaknode.CreateContactProfileRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.CreateContactProfileRequest.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreateContactProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreateContactProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreateContactProfileReply.displayName = 'proto.squeaknode.CreateContactProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreateContactProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreateContactProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreateContactProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateContactProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreateContactProfileReply}\n */\nproto.squeaknode.CreateContactProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreateContactProfileReply;\n  return proto.squeaknode.CreateContactProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreateContactProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreateContactProfileReply}\n */\nproto.squeaknode.CreateContactProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreateContactProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreateContactProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreateContactProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateContactProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.CreateContactProfileReply.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.CreateContactProfileReply.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetProfilesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetProfilesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetProfilesRequest.displayName = 'proto.squeaknode.GetProfilesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetProfilesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetProfilesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetProfilesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetProfilesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetProfilesRequest}\n */\nproto.squeaknode.GetProfilesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetProfilesRequest;\n  return proto.squeaknode.GetProfilesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetProfilesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetProfilesRequest}\n */\nproto.squeaknode.GetProfilesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetProfilesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetProfilesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetProfilesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetProfilesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetProfilesReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetProfilesReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetProfilesReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetProfilesReply.displayName = 'proto.squeaknode.GetProfilesReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetProfilesReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetProfilesReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetProfilesReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetProfilesReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetProfilesReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfilesList: jspb.Message.toObjectList(msg.getSqueakProfilesList(),\n    proto.squeaknode.SqueakProfile.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetProfilesReply}\n */\nproto.squeaknode.GetProfilesReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetProfilesReply;\n  return proto.squeaknode.GetProfilesReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetProfilesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetProfilesReply}\n */\nproto.squeaknode.GetProfilesReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.addSqueakProfiles(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetProfilesReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetProfilesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetProfilesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetProfilesReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfilesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakProfile squeak_profiles = 1;\n * @return {!Array.<!proto.squeaknode.SqueakProfile>}\n */\nproto.squeaknode.GetProfilesReply.prototype.getSqueakProfilesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakProfile>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakProfile>} value */\nproto.squeaknode.GetProfilesReply.prototype.setSqueakProfilesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakProfile=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetProfilesReply.prototype.addSqueakProfiles = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakProfile, opt_index);\n};\n\n\nproto.squeaknode.GetProfilesReply.prototype.clearSqueakProfilesList = function() {\n  this.setSqueakProfilesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSigningProfilesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSigningProfilesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSigningProfilesRequest.displayName = 'proto.squeaknode.GetSigningProfilesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSigningProfilesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSigningProfilesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSigningProfilesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSigningProfilesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSigningProfilesRequest}\n */\nproto.squeaknode.GetSigningProfilesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSigningProfilesRequest;\n  return proto.squeaknode.GetSigningProfilesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSigningProfilesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSigningProfilesRequest}\n */\nproto.squeaknode.GetSigningProfilesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSigningProfilesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSigningProfilesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSigningProfilesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSigningProfilesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSigningProfilesReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetSigningProfilesReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetSigningProfilesReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSigningProfilesReply.displayName = 'proto.squeaknode.GetSigningProfilesReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetSigningProfilesReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSigningProfilesReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSigningProfilesReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSigningProfilesReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSigningProfilesReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfilesList: jspb.Message.toObjectList(msg.getSqueakProfilesList(),\n    proto.squeaknode.SqueakProfile.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSigningProfilesReply}\n */\nproto.squeaknode.GetSigningProfilesReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSigningProfilesReply;\n  return proto.squeaknode.GetSigningProfilesReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSigningProfilesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSigningProfilesReply}\n */\nproto.squeaknode.GetSigningProfilesReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.addSqueakProfiles(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSigningProfilesReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSigningProfilesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSigningProfilesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSigningProfilesReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfilesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakProfile squeak_profiles = 1;\n * @return {!Array.<!proto.squeaknode.SqueakProfile>}\n */\nproto.squeaknode.GetSigningProfilesReply.prototype.getSqueakProfilesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakProfile>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakProfile>} value */\nproto.squeaknode.GetSigningProfilesReply.prototype.setSqueakProfilesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakProfile=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetSigningProfilesReply.prototype.addSqueakProfiles = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakProfile, opt_index);\n};\n\n\nproto.squeaknode.GetSigningProfilesReply.prototype.clearSqueakProfilesList = function() {\n  this.setSqueakProfilesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetContactProfilesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetContactProfilesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetContactProfilesRequest.displayName = 'proto.squeaknode.GetContactProfilesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetContactProfilesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetContactProfilesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetContactProfilesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetContactProfilesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetContactProfilesRequest}\n */\nproto.squeaknode.GetContactProfilesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetContactProfilesRequest;\n  return proto.squeaknode.GetContactProfilesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetContactProfilesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetContactProfilesRequest}\n */\nproto.squeaknode.GetContactProfilesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetContactProfilesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetContactProfilesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetContactProfilesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetContactProfilesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetContactProfilesReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetContactProfilesReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetContactProfilesReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetContactProfilesReply.displayName = 'proto.squeaknode.GetContactProfilesReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetContactProfilesReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetContactProfilesReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetContactProfilesReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetContactProfilesReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetContactProfilesReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfilesList: jspb.Message.toObjectList(msg.getSqueakProfilesList(),\n    proto.squeaknode.SqueakProfile.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetContactProfilesReply}\n */\nproto.squeaknode.GetContactProfilesReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetContactProfilesReply;\n  return proto.squeaknode.GetContactProfilesReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetContactProfilesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetContactProfilesReply}\n */\nproto.squeaknode.GetContactProfilesReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.addSqueakProfiles(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetContactProfilesReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetContactProfilesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetContactProfilesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetContactProfilesReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfilesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakProfile squeak_profiles = 1;\n * @return {!Array.<!proto.squeaknode.SqueakProfile>}\n */\nproto.squeaknode.GetContactProfilesReply.prototype.getSqueakProfilesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakProfile>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakProfile>} value */\nproto.squeaknode.GetContactProfilesReply.prototype.setSqueakProfilesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakProfile=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetContactProfilesReply.prototype.addSqueakProfiles = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakProfile, opt_index);\n};\n\n\nproto.squeaknode.GetContactProfilesReply.prototype.clearSqueakProfilesList = function() {\n  this.setSqueakProfilesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileRequest.displayName = 'proto.squeaknode.GetSqueakProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileRequest}\n */\nproto.squeaknode.GetSqueakProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileRequest;\n  return proto.squeaknode.GetSqueakProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileRequest}\n */\nproto.squeaknode.GetSqueakProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetSqueakProfileRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetSqueakProfileRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileReply.displayName = 'proto.squeaknode.GetSqueakProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfile: (f = msg.getSqueakProfile()) && proto.squeaknode.SqueakProfile.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileReply}\n */\nproto.squeaknode.GetSqueakProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileReply;\n  return proto.squeaknode.GetSqueakProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileReply}\n */\nproto.squeaknode.GetSqueakProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.setSqueakProfile(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfile();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakProfile squeak_profile = 1;\n * @return {?proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetSqueakProfileReply.prototype.getSqueakProfile = function() {\n  return /** @type{?proto.squeaknode.SqueakProfile} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakProfile|undefined} value */\nproto.squeaknode.GetSqueakProfileReply.prototype.setSqueakProfile = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSqueakProfileReply.prototype.clearSqueakProfile = function() {\n  this.setSqueakProfile(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSqueakProfileReply.prototype.hasSqueakProfile = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileByAddressRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileByAddressRequest.displayName = 'proto.squeaknode.GetSqueakProfileByAddressRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileByAddressRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileByAddressRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileByAddressRequest}\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileByAddressRequest;\n  return proto.squeaknode.GetSqueakProfileByAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileByAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileByAddressRequest}\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileByAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileByAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSqueakProfileByAddressRequest.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileByAddressReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileByAddressReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileByAddressReply.displayName = 'proto.squeaknode.GetSqueakProfileByAddressReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileByAddressReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileByAddressReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfile: (f = msg.getSqueakProfile()) && proto.squeaknode.SqueakProfile.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileByAddressReply}\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileByAddressReply;\n  return proto.squeaknode.GetSqueakProfileByAddressReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileByAddressReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileByAddressReply}\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.setSqueakProfile(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileByAddressReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileByAddressReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfile();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakProfile squeak_profile = 1;\n * @return {?proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.prototype.getSqueakProfile = function() {\n  return /** @type{?proto.squeaknode.SqueakProfile} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakProfile|undefined} value */\nproto.squeaknode.GetSqueakProfileByAddressReply.prototype.setSqueakProfile = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSqueakProfileByAddressReply.prototype.clearSqueakProfile = function() {\n  this.setSqueakProfile(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.prototype.hasSqueakProfile = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileByNameRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileByNameRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileByNameRequest.displayName = 'proto.squeaknode.GetSqueakProfileByNameRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileByNameRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileByNameRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileByNameRequest}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileByNameRequest;\n  return proto.squeaknode.GetSqueakProfileByNameRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileByNameRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileByNameRequest}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileByNameRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileByNameRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSqueakProfileByNameRequest.prototype.setName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileByNameReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileByNameReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileByNameReply.displayName = 'proto.squeaknode.GetSqueakProfileByNameReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileByNameReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileByNameReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByNameReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfile: (f = msg.getSqueakProfile()) && proto.squeaknode.SqueakProfile.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileByNameReply}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileByNameReply;\n  return proto.squeaknode.GetSqueakProfileByNameReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileByNameReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileByNameReply}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.setSqueakProfile(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileByNameReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileByNameReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByNameReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfile();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakProfile squeak_profile = 1;\n * @return {?proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.getSqueakProfile = function() {\n  return /** @type{?proto.squeaknode.SqueakProfile} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakProfile|undefined} value */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.setSqueakProfile = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.clearSqueakProfile = function() {\n  this.setSqueakProfile(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.hasSqueakProfile = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileFollowingRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileFollowingRequest.displayName = 'proto.squeaknode.SetSqueakProfileFollowingRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileFollowingRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileFollowingRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    following: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileFollowingRequest}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileFollowingRequest;\n  return proto.squeaknode.SetSqueakProfileFollowingRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileFollowingRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileFollowingRequest}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFollowing(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileFollowingRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileFollowingRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getFollowing();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool following = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.getFollowing = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.setFollowing = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileFollowingReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileFollowingReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileFollowingReply.displayName = 'proto.squeaknode.SetSqueakProfileFollowingReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileFollowingReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileFollowingReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileFollowingReply}\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileFollowingReply;\n  return proto.squeaknode.SetSqueakProfileFollowingReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileFollowingReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileFollowingReply}\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileFollowingReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileFollowingReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileUseCustomPriceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileUseCustomPriceRequest.displayName = 'proto.squeaknode.SetSqueakProfileUseCustomPriceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileUseCustomPriceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileUseCustomPriceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    useCustomPrice: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileUseCustomPriceRequest}\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileUseCustomPriceRequest;\n  return proto.squeaknode.SetSqueakProfileUseCustomPriceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileUseCustomPriceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileUseCustomPriceRequest}\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setUseCustomPrice(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileUseCustomPriceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileUseCustomPriceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getUseCustomPrice();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetSqueakProfileUseCustomPriceRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool use_custom_price = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceRequest.prototype.getUseCustomPrice = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SetSqueakProfileUseCustomPriceRequest.prototype.setUseCustomPrice = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileUseCustomPriceReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileUseCustomPriceReply.displayName = 'proto.squeaknode.SetSqueakProfileUseCustomPriceReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileUseCustomPriceReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileUseCustomPriceReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileUseCustomPriceReply}\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileUseCustomPriceReply;\n  return proto.squeaknode.SetSqueakProfileUseCustomPriceReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileUseCustomPriceReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileUseCustomPriceReply}\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileUseCustomPriceReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileUseCustomPriceReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileUseCustomPriceReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileCustomPriceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileCustomPriceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileCustomPriceRequest.displayName = 'proto.squeaknode.SetSqueakProfileCustomPriceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileCustomPriceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileCustomPriceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileCustomPriceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileCustomPriceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    customPriceMsat: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileCustomPriceRequest}\n */\nproto.squeaknode.SetSqueakProfileCustomPriceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileCustomPriceRequest;\n  return proto.squeaknode.SetSqueakProfileCustomPriceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileCustomPriceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileCustomPriceRequest}\n */\nproto.squeaknode.SetSqueakProfileCustomPriceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCustomPriceMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileCustomPriceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileCustomPriceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileCustomPriceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileCustomPriceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getCustomPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.SetSqueakProfileCustomPriceRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetSqueakProfileCustomPriceRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 custom_price_msat = 2;\n * @return {number}\n */\nproto.squeaknode.SetSqueakProfileCustomPriceRequest.prototype.getCustomPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetSqueakProfileCustomPriceRequest.prototype.setCustomPriceMsat = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileCustomPriceReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileCustomPriceReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileCustomPriceReply.displayName = 'proto.squeaknode.SetSqueakProfileCustomPriceReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileCustomPriceReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileCustomPriceReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileCustomPriceReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileCustomPriceReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileCustomPriceReply}\n */\nproto.squeaknode.SetSqueakProfileCustomPriceReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileCustomPriceReply;\n  return proto.squeaknode.SetSqueakProfileCustomPriceReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileCustomPriceReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileCustomPriceReply}\n */\nproto.squeaknode.SetSqueakProfileCustomPriceReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileCustomPriceReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileCustomPriceReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileCustomPriceReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileCustomPriceReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.RenameSqueakProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.RenameSqueakProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.RenameSqueakProfileRequest.displayName = 'proto.squeaknode.RenameSqueakProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.RenameSqueakProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.RenameSqueakProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenameSqueakProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    profileName: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.RenameSqueakProfileRequest}\n */\nproto.squeaknode.RenameSqueakProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.RenameSqueakProfileRequest;\n  return proto.squeaknode.RenameSqueakProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.RenameSqueakProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.RenameSqueakProfileRequest}\n */\nproto.squeaknode.RenameSqueakProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.RenameSqueakProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.RenameSqueakProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenameSqueakProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string profile_name = 2;\n * @return {string}\n */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.RenameSqueakProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.RenameSqueakProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.RenameSqueakProfileReply.displayName = 'proto.squeaknode.RenameSqueakProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.RenameSqueakProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.RenameSqueakProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.RenameSqueakProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenameSqueakProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.RenameSqueakProfileReply}\n */\nproto.squeaknode.RenameSqueakProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.RenameSqueakProfileReply;\n  return proto.squeaknode.RenameSqueakProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.RenameSqueakProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.RenameSqueakProfileReply}\n */\nproto.squeaknode.RenameSqueakProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.RenameSqueakProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.RenameSqueakProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.RenameSqueakProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenameSqueakProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfilePrivateKeyRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfilePrivateKeyRequest.displayName = 'proto.squeaknode.GetSqueakProfilePrivateKeyRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfilePrivateKeyRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfilePrivateKeyRequest;\n  return proto.squeaknode.GetSqueakProfilePrivateKeyRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfilePrivateKeyRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfilePrivateKeyReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfilePrivateKeyReply.displayName = 'proto.squeaknode.GetSqueakProfilePrivateKeyReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfilePrivateKeyReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    privateKey: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfilePrivateKeyReply}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfilePrivateKeyReply;\n  return proto.squeaknode.GetSqueakProfilePrivateKeyReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfilePrivateKeyReply}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivateKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfilePrivateKeyReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPrivateKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string private_key = 1;\n * @return {string}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.prototype.getPrivateKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.prototype.setPrivateKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeleteSqueakProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeleteSqueakProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeleteSqueakProfileRequest.displayName = 'proto.squeaknode.DeleteSqueakProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeleteSqueakProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeleteSqueakProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeleteSqueakProfileRequest}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeleteSqueakProfileRequest;\n  return proto.squeaknode.DeleteSqueakProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeleteSqueakProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeleteSqueakProfileRequest}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeleteSqueakProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeleteSqueakProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DeleteSqueakProfileRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeleteSqueakProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeleteSqueakProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeleteSqueakProfileReply.displayName = 'proto.squeaknode.DeleteSqueakProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeleteSqueakProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeleteSqueakProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeleteSqueakProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeleteSqueakProfileReply}\n */\nproto.squeaknode.DeleteSqueakProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeleteSqueakProfileReply;\n  return proto.squeaknode.DeleteSqueakProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeleteSqueakProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeleteSqueakProfileReply}\n */\nproto.squeaknode.DeleteSqueakProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeleteSqueakProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeleteSqueakProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeleteSqueakProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileImageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileImageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileImageRequest.displayName = 'proto.squeaknode.SetSqueakProfileImageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileImageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileImageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileImageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    profileImage: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileImageRequest}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileImageRequest;\n  return proto.squeaknode.SetSqueakProfileImageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileImageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileImageRequest}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileImage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileImageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileImageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileImageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getProfileImage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string profile_image = 2;\n * @return {string}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.getProfileImage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.setProfileImage = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileImageReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileImageReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileImageReply.displayName = 'proto.squeaknode.SetSqueakProfileImageReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileImageReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileImageReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileImageReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileImageReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileImageReply}\n */\nproto.squeaknode.SetSqueakProfileImageReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileImageReply;\n  return proto.squeaknode.SetSqueakProfileImageReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileImageReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileImageReply}\n */\nproto.squeaknode.SetSqueakProfileImageReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileImageReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileImageReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileImageReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileImageReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ClearSqueakProfileImageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ClearSqueakProfileImageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ClearSqueakProfileImageRequest.displayName = 'proto.squeaknode.ClearSqueakProfileImageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ClearSqueakProfileImageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ClearSqueakProfileImageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ClearSqueakProfileImageRequest}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ClearSqueakProfileImageRequest;\n  return proto.squeaknode.ClearSqueakProfileImageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ClearSqueakProfileImageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ClearSqueakProfileImageRequest}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ClearSqueakProfileImageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ClearSqueakProfileImageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ClearSqueakProfileImageRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ClearSqueakProfileImageReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ClearSqueakProfileImageReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ClearSqueakProfileImageReply.displayName = 'proto.squeaknode.ClearSqueakProfileImageReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ClearSqueakProfileImageReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ClearSqueakProfileImageReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ClearSqueakProfileImageReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSqueakProfileImageReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ClearSqueakProfileImageReply}\n */\nproto.squeaknode.ClearSqueakProfileImageReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ClearSqueakProfileImageReply;\n  return proto.squeaknode.ClearSqueakProfileImageReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ClearSqueakProfileImageReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ClearSqueakProfileImageReply}\n */\nproto.squeaknode.ClearSqueakProfileImageReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ClearSqueakProfileImageReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ClearSqueakProfileImageReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ClearSqueakProfileImageReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSqueakProfileImageReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SqueakProfile = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SqueakProfile, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SqueakProfile.displayName = 'proto.squeaknode.SqueakProfile';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SqueakProfile.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SqueakProfile.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SqueakProfile} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakProfile.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    profileName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    hasPrivateKey: jspb.Message.getFieldWithDefault(msg, 3, false),\n    address: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    following: jspb.Message.getFieldWithDefault(msg, 5, false),\n    useCustomPrice: jspb.Message.getFieldWithDefault(msg, 6, false),\n    customPriceMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    profileImage: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    hasCustomProfileImage: jspb.Message.getFieldWithDefault(msg, 9, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.SqueakProfile.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SqueakProfile;\n  return proto.squeaknode.SqueakProfile.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SqueakProfile} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.SqueakProfile.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasPrivateKey(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFollowing(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setUseCustomPrice(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCustomPriceMsat(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileImage(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasCustomProfileImage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SqueakProfile.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SqueakProfile.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SqueakProfile} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakProfile.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getHasPrivateKey();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getFollowing();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getUseCustomPrice();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = message.getCustomPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getProfileImage();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getHasCustomProfileImage();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.SqueakProfile.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakProfile.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string profile_name = 2;\n * @return {string}\n */\nproto.squeaknode.SqueakProfile.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakProfile.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool has_private_key = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakProfile.prototype.getHasPrivateKey = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakProfile.prototype.setHasPrivateKey = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string address = 4;\n * @return {string}\n */\nproto.squeaknode.SqueakProfile.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakProfile.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bool following = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakProfile.prototype.getFollowing = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakProfile.prototype.setFollowing = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional bool use_custom_price = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakProfile.prototype.getUseCustomPrice = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakProfile.prototype.setUseCustomPrice = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 custom_price_msat = 7;\n * @return {number}\n */\nproto.squeaknode.SqueakProfile.prototype.getCustomPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakProfile.prototype.setCustomPriceMsat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string profile_image = 8;\n * @return {string}\n */\nproto.squeaknode.SqueakProfile.prototype.getProfileImage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakProfile.prototype.setProfileImage = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional bool has_custom_profile_image = 9;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakProfile.prototype.getHasCustomProfileImage = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakProfile.prototype.setHasCustomProfileImage = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.MakeSqueakRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.MakeSqueakRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.MakeSqueakRequest.displayName = 'proto.squeaknode.MakeSqueakRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.MakeSqueakRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.MakeSqueakRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.MakeSqueakRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    content: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    replyto: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.MakeSqueakRequest}\n */\nproto.squeaknode.MakeSqueakRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.MakeSqueakRequest;\n  return proto.squeaknode.MakeSqueakRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.MakeSqueakRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.MakeSqueakRequest}\n */\nproto.squeaknode.MakeSqueakRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setContent(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReplyto(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.MakeSqueakRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.MakeSqueakRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.MakeSqueakRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getContent();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getReplyto();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.MakeSqueakRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string content = 2;\n * @return {string}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.getContent = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.MakeSqueakRequest.prototype.setContent = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string replyto = 3;\n * @return {string}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.getReplyto = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.MakeSqueakRequest.prototype.setReplyto = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.MakeSqueakReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.MakeSqueakReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.MakeSqueakReply.displayName = 'proto.squeaknode.MakeSqueakReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.MakeSqueakReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.MakeSqueakReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.MakeSqueakReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.MakeSqueakReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.MakeSqueakReply}\n */\nproto.squeaknode.MakeSqueakReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.MakeSqueakReply;\n  return proto.squeaknode.MakeSqueakReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.MakeSqueakReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.MakeSqueakReply}\n */\nproto.squeaknode.MakeSqueakReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.MakeSqueakReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.MakeSqueakReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.MakeSqueakReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.MakeSqueakReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.MakeSqueakReply.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.MakeSqueakReply.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakDisplayRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakDisplayRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakDisplayRequest.displayName = 'proto.squeaknode.GetSqueakDisplayRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakDisplayRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakDisplayRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakDisplayRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDisplayRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakDisplayRequest}\n */\nproto.squeaknode.GetSqueakDisplayRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakDisplayRequest;\n  return proto.squeaknode.GetSqueakDisplayRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakDisplayRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakDisplayRequest}\n */\nproto.squeaknode.GetSqueakDisplayRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakDisplayRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakDisplayRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakDisplayRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDisplayRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.GetSqueakDisplayRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSqueakDisplayRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakDisplayReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakDisplayReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakDisplayReply.displayName = 'proto.squeaknode.GetSqueakDisplayReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakDisplayReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakDisplayReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakDisplayReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDisplayReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntry: (f = msg.getSqueakDisplayEntry()) && proto.squeaknode.SqueakDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakDisplayReply}\n */\nproto.squeaknode.GetSqueakDisplayReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakDisplayReply;\n  return proto.squeaknode.GetSqueakDisplayReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakDisplayReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakDisplayReply}\n */\nproto.squeaknode.GetSqueakDisplayReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.setSqueakDisplayEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakDisplayReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakDisplayReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakDisplayReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDisplayReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntry();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakDisplayEntry squeak_display_entry = 1;\n * @return {?proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetSqueakDisplayReply.prototype.getSqueakDisplayEntry = function() {\n  return /** @type{?proto.squeaknode.SqueakDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakDisplayEntry|undefined} value */\nproto.squeaknode.GetSqueakDisplayReply.prototype.setSqueakDisplayEntry = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSqueakDisplayReply.prototype.clearSqueakDisplayEntry = function() {\n  this.setSqueakDisplayEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSqueakDisplayReply.prototype.hasSqueakDisplayEntry = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SqueakDisplayEntry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SqueakDisplayEntry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SqueakDisplayEntry.displayName = 'proto.squeaknode.SqueakDisplayEntry';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SqueakDisplayEntry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SqueakDisplayEntry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakDisplayEntry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    isUnlocked: jspb.Message.getFieldWithDefault(msg, 2, false),\n    contentStr: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    isReply: jspb.Message.getFieldWithDefault(msg, 4, false),\n    replyTo: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    blockHeight: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    blockHash: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    blockTime: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    squeakTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    authorAddress: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n    isAuthorKnown: jspb.Message.getFieldWithDefault(msg, 11, false),\n    author: (f = msg.getAuthor()) && proto.squeaknode.SqueakProfile.toObject(includeInstance, f),\n    likedTimeMs: jspb.Message.getFieldWithDefault(msg, 13, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.SqueakDisplayEntry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SqueakDisplayEntry;\n  return proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SqueakDisplayEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsUnlocked(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setContentStr(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsReply(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReplyTo(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlockHeight(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBlockHash(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBlockTime(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSqueakTime(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAuthorAddress(value);\n      break;\n    case 11:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsAuthorKnown(value);\n      break;\n    case 12:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.setAuthor(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLikedTimeMs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SqueakDisplayEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getIsUnlocked();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getContentStr();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getIsReply();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getReplyTo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getBlockHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getBlockHash();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getBlockTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getSqueakTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getAuthorAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = message.getIsAuthorKnown();\n  if (f) {\n    writer.writeBool(\n      11,\n      f\n    );\n  }\n  f = message.getAuthor();\n  if (f != null) {\n    writer.writeMessage(\n      12,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n  f = message.getLikedTimeMs();\n  if (f !== 0) {\n    writer.writeInt64(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool is_unlocked = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getIsUnlocked = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setIsUnlocked = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string content_str = 3;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getContentStr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setContentStr = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool is_reply = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getIsReply = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setIsReply = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string reply_to = 5;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getReplyTo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setReplyTo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int32 block_height = 6;\n * @return {number}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setBlockHeight = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string block_hash = 7;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getBlockHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setBlockHash = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 block_time = 8;\n * @return {number}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getBlockTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setBlockTime = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 squeak_time = 9;\n * @return {number}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getSqueakTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setSqueakTime = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string author_address = 10;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getAuthorAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setAuthorAddress = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional bool is_author_known = 11;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getIsAuthorKnown = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setIsAuthorKnown = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional SqueakProfile author = 12;\n * @return {?proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getAuthor = function() {\n  return /** @type{?proto.squeaknode.SqueakProfile} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakProfile, 12));\n};\n\n\n/** @param {?proto.squeaknode.SqueakProfile|undefined} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setAuthor = function(value) {\n  jspb.Message.setWrapperField(this, 12, value);\n};\n\n\nproto.squeaknode.SqueakDisplayEntry.prototype.clearAuthor = function() {\n  this.setAuthor(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.hasAuthor = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * optional int64 liked_time_ms = 13;\n * @return {number}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getLikedTimeMs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setLikedTimeMs = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetTimelineSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetTimelineSqueakDisplaysRequest.displayName = 'proto.squeaknode.GetTimelineSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetTimelineSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    lastEntry: (f = msg.getLastEntry()) && proto.squeaknode.SqueakDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetTimelineSqueakDisplaysRequest}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetTimelineSqueakDisplaysRequest;\n  return proto.squeaknode.GetTimelineSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetTimelineSqueakDisplaysRequest}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLimit(value);\n      break;\n    case 2:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.setLastEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetTimelineSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getLastEntry();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 limit = 1;\n * @return {number}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.setLimit = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional SqueakDisplayEntry last_entry = 2;\n * @return {?proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.getLastEntry = function() {\n  return /** @type{?proto.squeaknode.SqueakDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 2));\n};\n\n\n/** @param {?proto.squeaknode.SqueakDisplayEntry|undefined} value */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.setLastEntry = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.clearLastEntry = function() {\n  this.setLastEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.hasLastEntry = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetTimelineSqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetTimelineSqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetTimelineSqueakDisplaysReply.displayName = 'proto.squeaknode.GetTimelineSqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetTimelineSqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetTimelineSqueakDisplaysReply}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetTimelineSqueakDisplaysReply;\n  return proto.squeaknode.GetTimelineSqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetTimelineSqueakDisplaysReply}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetTimelineSqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetAddressSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetAddressSqueakDisplaysRequest.displayName = 'proto.squeaknode.GetAddressSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetAddressSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetAddressSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    lastEntry: (f = msg.getLastEntry()) && proto.squeaknode.SqueakDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetAddressSqueakDisplaysRequest}\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetAddressSqueakDisplaysRequest;\n  return proto.squeaknode.GetAddressSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetAddressSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetAddressSqueakDisplaysRequest}\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLimit(value);\n      break;\n    case 3:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.setLastEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetAddressSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetAddressSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getLastEntry();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 limit = 2;\n * @return {number}\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.prototype.setLimit = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional SqueakDisplayEntry last_entry = 3;\n * @return {?proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.prototype.getLastEntry = function() {\n  return /** @type{?proto.squeaknode.SqueakDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 3));\n};\n\n\n/** @param {?proto.squeaknode.SqueakDisplayEntry|undefined} value */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.prototype.setLastEntry = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.squeaknode.GetAddressSqueakDisplaysRequest.prototype.clearLastEntry = function() {\n  this.setLastEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.prototype.hasLastEntry = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetAddressSqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetAddressSqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetAddressSqueakDisplaysReply.displayName = 'proto.squeaknode.GetAddressSqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetAddressSqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetAddressSqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetAddressSqueakDisplaysReply}\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetAddressSqueakDisplaysReply;\n  return proto.squeaknode.GetAddressSqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetAddressSqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetAddressSqueakDisplaysReply}\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetAddressSqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetAddressSqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetAddressSqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetAddressSqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetAncestorSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetAncestorSqueakDisplaysRequest.displayName = 'proto.squeaknode.GetAncestorSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetAncestorSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetAncestorSqueakDisplaysRequest}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetAncestorSqueakDisplaysRequest;\n  return proto.squeaknode.GetAncestorSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetAncestorSqueakDisplaysRequest}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetAncestorSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetAncestorSqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetAncestorSqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetAncestorSqueakDisplaysReply.displayName = 'proto.squeaknode.GetAncestorSqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetAncestorSqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetAncestorSqueakDisplaysReply}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetAncestorSqueakDisplaysReply;\n  return proto.squeaknode.GetAncestorSqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetAncestorSqueakDisplaysReply}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetAncestorSqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetReplySqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetReplySqueakDisplaysRequest.displayName = 'proto.squeaknode.GetReplySqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetReplySqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetReplySqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    lastEntry: (f = msg.getLastEntry()) && proto.squeaknode.SqueakDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetReplySqueakDisplaysRequest}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetReplySqueakDisplaysRequest;\n  return proto.squeaknode.GetReplySqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetReplySqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetReplySqueakDisplaysRequest}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLimit(value);\n      break;\n    case 3:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.setLastEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetReplySqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetReplySqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getLastEntry();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 limit = 2;\n * @return {number}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.setLimit = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional SqueakDisplayEntry last_entry = 3;\n * @return {?proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.getLastEntry = function() {\n  return /** @type{?proto.squeaknode.SqueakDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 3));\n};\n\n\n/** @param {?proto.squeaknode.SqueakDisplayEntry|undefined} value */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.setLastEntry = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.clearLastEntry = function() {\n  this.setLastEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.hasLastEntry = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetReplySqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetReplySqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetReplySqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetReplySqueakDisplaysReply.displayName = 'proto.squeaknode.GetReplySqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetReplySqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetReplySqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetReplySqueakDisplaysReply}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetReplySqueakDisplaysReply;\n  return proto.squeaknode.GetReplySqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetReplySqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetReplySqueakDisplaysReply}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetReplySqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetReplySqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeleteSqueakRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeleteSqueakRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeleteSqueakRequest.displayName = 'proto.squeaknode.DeleteSqueakRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeleteSqueakRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeleteSqueakRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeleteSqueakRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeleteSqueakRequest}\n */\nproto.squeaknode.DeleteSqueakRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeleteSqueakRequest;\n  return proto.squeaknode.DeleteSqueakRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeleteSqueakRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeleteSqueakRequest}\n */\nproto.squeaknode.DeleteSqueakRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeleteSqueakRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeleteSqueakRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeleteSqueakRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.DeleteSqueakRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.DeleteSqueakRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeleteSqueakReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeleteSqueakReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeleteSqueakReply.displayName = 'proto.squeaknode.DeleteSqueakReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeleteSqueakReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeleteSqueakReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeleteSqueakReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeleteSqueakReply}\n */\nproto.squeaknode.DeleteSqueakReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeleteSqueakReply;\n  return proto.squeaknode.DeleteSqueakReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeleteSqueakReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeleteSqueakReply}\n */\nproto.squeaknode.DeleteSqueakReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeleteSqueakReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeleteSqueakReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeleteSqueakReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreatePeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreatePeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreatePeerRequest.displayName = 'proto.squeaknode.CreatePeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreatePeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreatePeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreatePeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreatePeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreatePeerRequest}\n */\nproto.squeaknode.CreatePeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreatePeerRequest;\n  return proto.squeaknode.CreatePeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreatePeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreatePeerRequest}\n */\nproto.squeaknode.CreatePeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPeerName(value);\n      break;\n    case 2:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreatePeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreatePeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreatePeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreatePeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string peer_name = 1;\n * @return {string}\n */\nproto.squeaknode.CreatePeerRequest.prototype.getPeerName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.CreatePeerRequest.prototype.setPeerName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional PeerAddress peer_address = 2;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.CreatePeerRequest.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 2));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.CreatePeerRequest.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.squeaknode.CreatePeerRequest.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.CreatePeerRequest.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreatePeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreatePeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreatePeerReply.displayName = 'proto.squeaknode.CreatePeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreatePeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreatePeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreatePeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreatePeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreatePeerReply}\n */\nproto.squeaknode.CreatePeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreatePeerReply;\n  return proto.squeaknode.CreatePeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreatePeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreatePeerReply}\n */\nproto.squeaknode.CreatePeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreatePeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreatePeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreatePeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreatePeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.CreatePeerReply.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.CreatePeerReply.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPeerRequest.displayName = 'proto.squeaknode.GetPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPeerRequest}\n */\nproto.squeaknode.GetPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPeerRequest;\n  return proto.squeaknode.GetPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPeerRequest}\n */\nproto.squeaknode.GetPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetPeerRequest.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetPeerRequest.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPeerReply.displayName = 'proto.squeaknode.GetPeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakPeer: (f = msg.getSqueakPeer()) && proto.squeaknode.SqueakPeer.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPeerReply}\n */\nproto.squeaknode.GetPeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPeerReply;\n  return proto.squeaknode.GetPeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPeerReply}\n */\nproto.squeaknode.GetPeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakPeer;\n      reader.readMessage(value,proto.squeaknode.SqueakPeer.deserializeBinaryFromReader);\n      msg.setSqueakPeer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakPeer();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakPeer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakPeer squeak_peer = 1;\n * @return {?proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.GetPeerReply.prototype.getSqueakPeer = function() {\n  return /** @type{?proto.squeaknode.SqueakPeer} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakPeer, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakPeer|undefined} value */\nproto.squeaknode.GetPeerReply.prototype.setSqueakPeer = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetPeerReply.prototype.clearSqueakPeer = function() {\n  this.setSqueakPeer(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetPeerReply.prototype.hasSqueakPeer = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPeersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPeersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPeersRequest.displayName = 'proto.squeaknode.GetPeersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPeersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPeersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPeersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPeersRequest}\n */\nproto.squeaknode.GetPeersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPeersRequest;\n  return proto.squeaknode.GetPeersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPeersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPeersRequest}\n */\nproto.squeaknode.GetPeersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPeersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPeersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPeersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPeersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetPeersReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetPeersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPeersReply.displayName = 'proto.squeaknode.GetPeersReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetPeersReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPeersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPeersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPeersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakPeersList: jspb.Message.toObjectList(msg.getSqueakPeersList(),\n    proto.squeaknode.SqueakPeer.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPeersReply}\n */\nproto.squeaknode.GetPeersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPeersReply;\n  return proto.squeaknode.GetPeersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPeersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPeersReply}\n */\nproto.squeaknode.GetPeersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakPeer;\n      reader.readMessage(value,proto.squeaknode.SqueakPeer.deserializeBinaryFromReader);\n      msg.addSqueakPeers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPeersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPeersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPeersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakPeersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakPeer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakPeer squeak_peers = 1;\n * @return {!Array.<!proto.squeaknode.SqueakPeer>}\n */\nproto.squeaknode.GetPeersReply.prototype.getSqueakPeersList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakPeer>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakPeer, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakPeer>} value */\nproto.squeaknode.GetPeersReply.prototype.setSqueakPeersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakPeer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.GetPeersReply.prototype.addSqueakPeers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakPeer, opt_index);\n};\n\n\nproto.squeaknode.GetPeersReply.prototype.clearSqueakPeersList = function() {\n  this.setSqueakPeersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SqueakPeer = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SqueakPeer, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SqueakPeer.displayName = 'proto.squeaknode.SqueakPeer';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SqueakPeer.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SqueakPeer.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SqueakPeer} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakPeer.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    peerName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f),\n    autoconnect: jspb.Message.getFieldWithDefault(msg, 4, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.SqueakPeer.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SqueakPeer;\n  return proto.squeaknode.SqueakPeer.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SqueakPeer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.SqueakPeer.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPeerName(value);\n      break;\n    case 3:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAutoconnect(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SqueakPeer.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SqueakPeer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SqueakPeer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakPeer.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getPeerName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n  f = message.getAutoconnect();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.SqueakPeer.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakPeer.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string peer_name = 2;\n * @return {string}\n */\nproto.squeaknode.SqueakPeer.prototype.getPeerName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakPeer.prototype.setPeerName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional PeerAddress peer_address = 3;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.SqueakPeer.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 3));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.SqueakPeer.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.squeaknode.SqueakPeer.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.SqueakPeer.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bool autoconnect = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakPeer.prototype.getAutoconnect = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakPeer.prototype.setAutoconnect = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetPeerAutoconnectRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetPeerAutoconnectRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetPeerAutoconnectRequest.displayName = 'proto.squeaknode.SetPeerAutoconnectRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetPeerAutoconnectRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetPeerAutoconnectRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetPeerAutoconnectRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerAutoconnectRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    autoconnect: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetPeerAutoconnectRequest}\n */\nproto.squeaknode.SetPeerAutoconnectRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetPeerAutoconnectRequest;\n  return proto.squeaknode.SetPeerAutoconnectRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetPeerAutoconnectRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetPeerAutoconnectRequest}\n */\nproto.squeaknode.SetPeerAutoconnectRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAutoconnect(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetPeerAutoconnectRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetPeerAutoconnectRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetPeerAutoconnectRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerAutoconnectRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getAutoconnect();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.SetPeerAutoconnectRequest.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetPeerAutoconnectRequest.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool autoconnect = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SetPeerAutoconnectRequest.prototype.getAutoconnect = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SetPeerAutoconnectRequest.prototype.setAutoconnect = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetPeerAutoconnectReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetPeerAutoconnectReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetPeerAutoconnectReply.displayName = 'proto.squeaknode.SetPeerAutoconnectReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetPeerAutoconnectReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetPeerAutoconnectReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetPeerAutoconnectReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerAutoconnectReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetPeerAutoconnectReply}\n */\nproto.squeaknode.SetPeerAutoconnectReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetPeerAutoconnectReply;\n  return proto.squeaknode.SetPeerAutoconnectReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetPeerAutoconnectReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetPeerAutoconnectReply}\n */\nproto.squeaknode.SetPeerAutoconnectReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetPeerAutoconnectReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetPeerAutoconnectReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetPeerAutoconnectReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerAutoconnectReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.RenamePeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.RenamePeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.RenamePeerRequest.displayName = 'proto.squeaknode.RenamePeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.RenamePeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.RenamePeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.RenamePeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenamePeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    peerName: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.RenamePeerRequest}\n */\nproto.squeaknode.RenamePeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.RenamePeerRequest;\n  return proto.squeaknode.RenamePeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.RenamePeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.RenamePeerRequest}\n */\nproto.squeaknode.RenamePeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPeerName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.RenamePeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.RenamePeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.RenamePeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenamePeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getPeerName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.RenamePeerRequest.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.RenamePeerRequest.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string peer_name = 2;\n * @return {string}\n */\nproto.squeaknode.RenamePeerRequest.prototype.getPeerName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.RenamePeerRequest.prototype.setPeerName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.RenamePeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.RenamePeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.RenamePeerReply.displayName = 'proto.squeaknode.RenamePeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.RenamePeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.RenamePeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.RenamePeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenamePeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.RenamePeerReply}\n */\nproto.squeaknode.RenamePeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.RenamePeerReply;\n  return proto.squeaknode.RenamePeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.RenamePeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.RenamePeerReply}\n */\nproto.squeaknode.RenamePeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.RenamePeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.RenamePeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.RenamePeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenamePeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeletePeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeletePeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeletePeerRequest.displayName = 'proto.squeaknode.DeletePeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeletePeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeletePeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeletePeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeletePeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeletePeerRequest}\n */\nproto.squeaknode.DeletePeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeletePeerRequest;\n  return proto.squeaknode.DeletePeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeletePeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeletePeerRequest}\n */\nproto.squeaknode.DeletePeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeletePeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeletePeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeletePeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeletePeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.DeletePeerRequest.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DeletePeerRequest.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeletePeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeletePeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeletePeerReply.displayName = 'proto.squeaknode.DeletePeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeletePeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeletePeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeletePeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeletePeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeletePeerReply}\n */\nproto.squeaknode.DeletePeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeletePeerReply;\n  return proto.squeaknode.DeletePeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeletePeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeletePeerReply}\n */\nproto.squeaknode.DeletePeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeletePeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeletePeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeletePeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeletePeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.LoadBuyOffersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.LoadBuyOffersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.LoadBuyOffersRequest.displayName = 'proto.squeaknode.LoadBuyOffersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.LoadBuyOffersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.LoadBuyOffersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.LoadBuyOffersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LoadBuyOffersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.LoadBuyOffersRequest}\n */\nproto.squeaknode.LoadBuyOffersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.LoadBuyOffersRequest;\n  return proto.squeaknode.LoadBuyOffersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.LoadBuyOffersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.LoadBuyOffersRequest}\n */\nproto.squeaknode.LoadBuyOffersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.LoadBuyOffersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.LoadBuyOffersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.LoadBuyOffersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LoadBuyOffersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.LoadBuyOffersRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.LoadBuyOffersRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.LoadBuyOffersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.LoadBuyOffersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.LoadBuyOffersReply.displayName = 'proto.squeaknode.LoadBuyOffersReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.LoadBuyOffersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.LoadBuyOffersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.LoadBuyOffersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LoadBuyOffersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.LoadBuyOffersReply}\n */\nproto.squeaknode.LoadBuyOffersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.LoadBuyOffersReply;\n  return proto.squeaknode.LoadBuyOffersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.LoadBuyOffersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.LoadBuyOffersReply}\n */\nproto.squeaknode.LoadBuyOffersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.LoadBuyOffersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.LoadBuyOffersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.LoadBuyOffersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LoadBuyOffersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetBuyOffersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetBuyOffersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetBuyOffersRequest.displayName = 'proto.squeaknode.GetBuyOffersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetBuyOffersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetBuyOffersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetBuyOffersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOffersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetBuyOffersRequest}\n */\nproto.squeaknode.GetBuyOffersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetBuyOffersRequest;\n  return proto.squeaknode.GetBuyOffersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetBuyOffersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetBuyOffersRequest}\n */\nproto.squeaknode.GetBuyOffersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetBuyOffersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetBuyOffersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetBuyOffersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOffersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.GetBuyOffersRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetBuyOffersRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetBuyOffersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetBuyOffersReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetBuyOffersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetBuyOffersReply.displayName = 'proto.squeaknode.GetBuyOffersReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetBuyOffersReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetBuyOffersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetBuyOffersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetBuyOffersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOffersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offersList: jspb.Message.toObjectList(msg.getOffersList(),\n    proto.squeaknode.OfferDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetBuyOffersReply}\n */\nproto.squeaknode.GetBuyOffersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetBuyOffersReply;\n  return proto.squeaknode.GetBuyOffersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetBuyOffersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetBuyOffersReply}\n */\nproto.squeaknode.GetBuyOffersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.OfferDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.OfferDisplayEntry.deserializeBinaryFromReader);\n      msg.addOffers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetBuyOffersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetBuyOffersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetBuyOffersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOffersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOffersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.OfferDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated OfferDisplayEntry offers = 1;\n * @return {!Array.<!proto.squeaknode.OfferDisplayEntry>}\n */\nproto.squeaknode.GetBuyOffersReply.prototype.getOffersList = function() {\n  return /** @type{!Array.<!proto.squeaknode.OfferDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.OfferDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.OfferDisplayEntry>} value */\nproto.squeaknode.GetBuyOffersReply.prototype.setOffersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.OfferDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.OfferDisplayEntry}\n */\nproto.squeaknode.GetBuyOffersReply.prototype.addOffers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.OfferDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetBuyOffersReply.prototype.clearOffersList = function() {\n  this.setOffersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetBuyOfferRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetBuyOfferRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetBuyOfferRequest.displayName = 'proto.squeaknode.GetBuyOfferRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetBuyOfferRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetBuyOfferRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetBuyOfferRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOfferRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetBuyOfferRequest}\n */\nproto.squeaknode.GetBuyOfferRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetBuyOfferRequest;\n  return proto.squeaknode.GetBuyOfferRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetBuyOfferRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetBuyOfferRequest}\n */\nproto.squeaknode.GetBuyOfferRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setOfferId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetBuyOfferRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetBuyOfferRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetBuyOfferRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOfferRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOfferId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 offer_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetBuyOfferRequest.prototype.getOfferId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetBuyOfferRequest.prototype.setOfferId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetBuyOfferReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetBuyOfferReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetBuyOfferReply.displayName = 'proto.squeaknode.GetBuyOfferReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetBuyOfferReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetBuyOfferReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetBuyOfferReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOfferReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offer: (f = msg.getOffer()) && proto.squeaknode.OfferDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetBuyOfferReply}\n */\nproto.squeaknode.GetBuyOfferReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetBuyOfferReply;\n  return proto.squeaknode.GetBuyOfferReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetBuyOfferReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetBuyOfferReply}\n */\nproto.squeaknode.GetBuyOfferReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.OfferDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.OfferDisplayEntry.deserializeBinaryFromReader);\n      msg.setOffer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetBuyOfferReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetBuyOfferReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetBuyOfferReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOfferReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOffer();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.OfferDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional OfferDisplayEntry offer = 1;\n * @return {?proto.squeaknode.OfferDisplayEntry}\n */\nproto.squeaknode.GetBuyOfferReply.prototype.getOffer = function() {\n  return /** @type{?proto.squeaknode.OfferDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.OfferDisplayEntry, 1));\n};\n\n\n/** @param {?proto.squeaknode.OfferDisplayEntry|undefined} value */\nproto.squeaknode.GetBuyOfferReply.prototype.setOffer = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetBuyOfferReply.prototype.clearOffer = function() {\n  this.setOffer(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetBuyOfferReply.prototype.hasOffer = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.OfferDisplayEntry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.OfferDisplayEntry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.OfferDisplayEntry.displayName = 'proto.squeaknode.OfferDisplayEntry';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.OfferDisplayEntry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.OfferDisplayEntry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.OfferDisplayEntry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offerId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    priceMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    nodePubkey: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    nodeHost: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    nodePort: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    invoiceTimestamp: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    invoiceExpiry: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.OfferDisplayEntry}\n */\nproto.squeaknode.OfferDisplayEntry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.OfferDisplayEntry;\n  return proto.squeaknode.OfferDisplayEntry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.OfferDisplayEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.OfferDisplayEntry}\n */\nproto.squeaknode.OfferDisplayEntry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setOfferId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPriceMsat(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodePubkey(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodeHost(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNodePort(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setInvoiceTimestamp(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setInvoiceExpiry(value);\n      break;\n    case 9:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.OfferDisplayEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.OfferDisplayEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.OfferDisplayEntry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOfferId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getNodePubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getNodeHost();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getNodePort();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getInvoiceTimestamp();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n  f = message.getInvoiceExpiry();\n  if (f !== 0) {\n    writer.writeInt32(\n      8,\n      f\n    );\n  }\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      9,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 offer_id = 1;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getOfferId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setOfferId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string squeak_hash = 2;\n * @return {string}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 price_msat = 3;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setPriceMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string node_pubkey = 4;\n * @return {string}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getNodePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setNodePubkey = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string node_host = 5;\n * @return {string}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getNodeHost = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setNodeHost = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int32 node_port = 6;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getNodePort = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setNodePort = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int32 invoice_timestamp = 7;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getInvoiceTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setInvoiceTimestamp = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int32 invoice_expiry = 8;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getInvoiceExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setInvoiceExpiry = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional PeerAddress peer_address = 9;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 9));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n\n\nproto.squeaknode.OfferDisplayEntry.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadSqueaksRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.DownloadSqueaksRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.DownloadSqueaksRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadSqueaksRequest.displayName = 'proto.squeaknode.DownloadSqueaksRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.DownloadSqueaksRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadSqueaksRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadSqueaksRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadSqueaksRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueaksRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addresesList: jspb.Message.getRepeatedField(msg, 1),\n    minBlockHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    maxBlockHeight: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    replytoSqueakHash: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadSqueaksRequest}\n */\nproto.squeaknode.DownloadSqueaksRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadSqueaksRequest;\n  return proto.squeaknode.DownloadSqueaksRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadSqueaksRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadSqueaksRequest}\n */\nproto.squeaknode.DownloadSqueaksRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addAddreses(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinBlockHeight(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMaxBlockHeight(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReplytoSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadSqueaksRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadSqueaksRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadSqueaksRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueaksRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddresesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n  f = message.getMinBlockHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getMaxBlockHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getReplytoSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string addreses = 1;\n * @return {!Array.<string>}\n */\nproto.squeaknode.DownloadSqueaksRequest.prototype.getAddresesList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array.<string>} value */\nproto.squeaknode.DownloadSqueaksRequest.prototype.setAddresesList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.squeaknode.DownloadSqueaksRequest.prototype.addAddreses = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.squeaknode.DownloadSqueaksRequest.prototype.clearAddresesList = function() {\n  this.setAddresesList([]);\n};\n\n\n/**\n * optional int32 min_block_height = 2;\n * @return {number}\n */\nproto.squeaknode.DownloadSqueaksRequest.prototype.getMinBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DownloadSqueaksRequest.prototype.setMinBlockHeight = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 max_block_height = 3;\n * @return {number}\n */\nproto.squeaknode.DownloadSqueaksRequest.prototype.getMaxBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DownloadSqueaksRequest.prototype.setMaxBlockHeight = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string replyto_squeak_hash = 4;\n * @return {string}\n */\nproto.squeaknode.DownloadSqueaksRequest.prototype.getReplytoSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.DownloadSqueaksRequest.prototype.setReplytoSqueakHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadSqueaksReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadSqueaksReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadSqueaksReply.displayName = 'proto.squeaknode.DownloadSqueaksReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadSqueaksReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadSqueaksReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadSqueaksReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueaksReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadSqueaksReply}\n */\nproto.squeaknode.DownloadSqueaksReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadSqueaksReply;\n  return proto.squeaknode.DownloadSqueaksReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadSqueaksReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadSqueaksReply}\n */\nproto.squeaknode.DownloadSqueaksReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadSqueaksReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadSqueaksReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadSqueaksReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueaksReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.PayOfferRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.PayOfferRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.PayOfferRequest.displayName = 'proto.squeaknode.PayOfferRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.PayOfferRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.PayOfferRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.PayOfferRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PayOfferRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.PayOfferRequest}\n */\nproto.squeaknode.PayOfferRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.PayOfferRequest;\n  return proto.squeaknode.PayOfferRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.PayOfferRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.PayOfferRequest}\n */\nproto.squeaknode.PayOfferRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setOfferId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.PayOfferRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.PayOfferRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.PayOfferRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PayOfferRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOfferId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 offer_id = 1;\n * @return {number}\n */\nproto.squeaknode.PayOfferRequest.prototype.getOfferId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PayOfferRequest.prototype.setOfferId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.PayOfferReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.PayOfferReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.PayOfferReply.displayName = 'proto.squeaknode.PayOfferReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.PayOfferReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.PayOfferReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.PayOfferReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PayOfferReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPaymentId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.PayOfferReply}\n */\nproto.squeaknode.PayOfferReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.PayOfferReply;\n  return proto.squeaknode.PayOfferReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.PayOfferReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.PayOfferReply}\n */\nproto.squeaknode.PayOfferReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSentPaymentId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.PayOfferReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.PayOfferReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.PayOfferReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PayOfferReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPaymentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 sent_payment_id = 1;\n * @return {number}\n */\nproto.squeaknode.PayOfferReply.prototype.getSentPaymentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PayOfferReply.prototype.setSentPaymentId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSentPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentPaymentsRequest.displayName = 'proto.squeaknode.GetSentPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    lastSentPayment: (f = msg.getLastSentPayment()) && proto.squeaknode.SentPayment.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentPaymentsRequest}\n */\nproto.squeaknode.GetSentPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentPaymentsRequest;\n  return proto.squeaknode.GetSentPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentPaymentsRequest}\n */\nproto.squeaknode.GetSentPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLimit(value);\n      break;\n    case 2:\n      var value = new proto.squeaknode.SentPayment;\n      reader.readMessage(value,proto.squeaknode.SentPayment.deserializeBinaryFromReader);\n      msg.setLastSentPayment(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getLastSentPayment();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.squeaknode.SentPayment.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 limit = 1;\n * @return {number}\n */\nproto.squeaknode.GetSentPaymentsRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetSentPaymentsRequest.prototype.setLimit = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional SentPayment last_sent_payment = 2;\n * @return {?proto.squeaknode.SentPayment}\n */\nproto.squeaknode.GetSentPaymentsRequest.prototype.getLastSentPayment = function() {\n  return /** @type{?proto.squeaknode.SentPayment} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SentPayment, 2));\n};\n\n\n/** @param {?proto.squeaknode.SentPayment|undefined} value */\nproto.squeaknode.GetSentPaymentsRequest.prototype.setLastSentPayment = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.squeaknode.GetSentPaymentsRequest.prototype.clearLastSentPayment = function() {\n  this.setLastSentPayment(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSentPaymentsRequest.prototype.hasLastSentPayment = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentPaymentsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetSentPaymentsReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetSentPaymentsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentPaymentsReply.displayName = 'proto.squeaknode.GetSentPaymentsReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetSentPaymentsReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentPaymentsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentPaymentsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentPaymentsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPaymentsList: jspb.Message.toObjectList(msg.getSentPaymentsList(),\n    proto.squeaknode.SentPayment.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentPaymentsReply}\n */\nproto.squeaknode.GetSentPaymentsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentPaymentsReply;\n  return proto.squeaknode.GetSentPaymentsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentPaymentsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentPaymentsReply}\n */\nproto.squeaknode.GetSentPaymentsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SentPayment;\n      reader.readMessage(value,proto.squeaknode.SentPayment.deserializeBinaryFromReader);\n      msg.addSentPayments(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentPaymentsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentPaymentsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentPaymentsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPaymentsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SentPayment.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SentPayment sent_payments = 1;\n * @return {!Array.<!proto.squeaknode.SentPayment>}\n */\nproto.squeaknode.GetSentPaymentsReply.prototype.getSentPaymentsList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SentPayment>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SentPayment, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SentPayment>} value */\nproto.squeaknode.GetSentPaymentsReply.prototype.setSentPaymentsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SentPayment=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SentPayment}\n */\nproto.squeaknode.GetSentPaymentsReply.prototype.addSentPayments = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SentPayment, opt_index);\n};\n\n\nproto.squeaknode.GetSentPaymentsReply.prototype.clearSentPaymentsList = function() {\n  this.setSentPaymentsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentPaymentRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSentPaymentRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentPaymentRequest.displayName = 'proto.squeaknode.GetSentPaymentRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentPaymentRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentPaymentRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentPaymentRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPaymentId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentPaymentRequest}\n */\nproto.squeaknode.GetSentPaymentRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentPaymentRequest;\n  return proto.squeaknode.GetSentPaymentRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentPaymentRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentPaymentRequest}\n */\nproto.squeaknode.GetSentPaymentRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSentPaymentId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentPaymentRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentPaymentRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentPaymentRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPaymentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 sent_payment_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetSentPaymentRequest.prototype.getSentPaymentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetSentPaymentRequest.prototype.setSentPaymentId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentPaymentReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSentPaymentReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentPaymentReply.displayName = 'proto.squeaknode.GetSentPaymentReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentPaymentReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentPaymentReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentPaymentReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPayment: (f = msg.getSentPayment()) && proto.squeaknode.SentPayment.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentPaymentReply}\n */\nproto.squeaknode.GetSentPaymentReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentPaymentReply;\n  return proto.squeaknode.GetSentPaymentReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentPaymentReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentPaymentReply}\n */\nproto.squeaknode.GetSentPaymentReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SentPayment;\n      reader.readMessage(value,proto.squeaknode.SentPayment.deserializeBinaryFromReader);\n      msg.setSentPayment(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentPaymentReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentPaymentReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentPaymentReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPayment();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SentPayment.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SentPayment sent_payment = 1;\n * @return {?proto.squeaknode.SentPayment}\n */\nproto.squeaknode.GetSentPaymentReply.prototype.getSentPayment = function() {\n  return /** @type{?proto.squeaknode.SentPayment} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SentPayment, 1));\n};\n\n\n/** @param {?proto.squeaknode.SentPayment|undefined} value */\nproto.squeaknode.GetSentPaymentReply.prototype.setSentPayment = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSentPaymentReply.prototype.clearSentPayment = function() {\n  this.setSentPayment(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSentPaymentReply.prototype.hasSentPayment = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SentPayment = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SentPayment, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SentPayment.displayName = 'proto.squeaknode.SentPayment';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SentPayment.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SentPayment.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SentPayment} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SentPayment.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPaymentId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    priceMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    nodePubkey: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    valid: jspb.Message.getFieldWithDefault(msg, 6, false),\n    timeMs: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SentPayment}\n */\nproto.squeaknode.SentPayment.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SentPayment;\n  return proto.squeaknode.SentPayment.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SentPayment} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SentPayment}\n */\nproto.squeaknode.SentPayment.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSentPaymentId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPriceMsat(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodePubkey(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setValid(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimeMs(value);\n      break;\n    case 8:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SentPayment.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SentPayment.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SentPayment} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SentPayment.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPaymentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getNodePubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getValid();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = message.getTimeMs();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 sent_payment_id = 1;\n * @return {number}\n */\nproto.squeaknode.SentPayment.prototype.getSentPaymentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentPayment.prototype.setSentPaymentId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string squeak_hash = 2;\n * @return {string}\n */\nproto.squeaknode.SentPayment.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentPayment.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string payment_hash = 3;\n * @return {string}\n */\nproto.squeaknode.SentPayment.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentPayment.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 price_msat = 4;\n * @return {number}\n */\nproto.squeaknode.SentPayment.prototype.getPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentPayment.prototype.setPriceMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string node_pubkey = 5;\n * @return {string}\n */\nproto.squeaknode.SentPayment.prototype.getNodePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentPayment.prototype.setNodePubkey = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional bool valid = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SentPayment.prototype.getValid = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SentPayment.prototype.setValid = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 time_ms = 7;\n * @return {number}\n */\nproto.squeaknode.SentPayment.prototype.getTimeMs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentPayment.prototype.setTimeMs = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional PeerAddress peer_address = 8;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.SentPayment.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 8));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.SentPayment.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.squeaknode.SentPayment.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.SentPayment.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadSqueakRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadSqueakRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadSqueakRequest.displayName = 'proto.squeaknode.DownloadSqueakRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadSqueakRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadSqueakRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadSqueakRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueakRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadSqueakRequest}\n */\nproto.squeaknode.DownloadSqueakRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadSqueakRequest;\n  return proto.squeaknode.DownloadSqueakRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadSqueakRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadSqueakRequest}\n */\nproto.squeaknode.DownloadSqueakRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadSqueakRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadSqueakRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadSqueakRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueakRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.DownloadSqueakRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.DownloadSqueakRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadSqueakReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadSqueakReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadSqueakReply.displayName = 'proto.squeaknode.DownloadSqueakReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadSqueakReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadSqueakReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadSqueakReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueakReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadSqueakReply}\n */\nproto.squeaknode.DownloadSqueakReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadSqueakReply;\n  return proto.squeaknode.DownloadSqueakReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadSqueakReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadSqueakReply}\n */\nproto.squeaknode.DownloadSqueakReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadSqueakReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadSqueakReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadSqueakReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueakReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadOffersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadOffersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadOffersRequest.displayName = 'proto.squeaknode.DownloadOffersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadOffersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadOffersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadOffersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadOffersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadOffersRequest}\n */\nproto.squeaknode.DownloadOffersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadOffersRequest;\n  return proto.squeaknode.DownloadOffersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadOffersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadOffersRequest}\n */\nproto.squeaknode.DownloadOffersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadOffersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadOffersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadOffersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadOffersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.DownloadOffersRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.DownloadOffersRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadOffersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadOffersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadOffersReply.displayName = 'proto.squeaknode.DownloadOffersReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadOffersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadOffersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadOffersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadOffersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadOffersReply}\n */\nproto.squeaknode.DownloadOffersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadOffersReply;\n  return proto.squeaknode.DownloadOffersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadOffersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadOffersReply}\n */\nproto.squeaknode.DownloadOffersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadOffersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadOffersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadOffersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadOffersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadRepliesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadRepliesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadRepliesRequest.displayName = 'proto.squeaknode.DownloadRepliesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadRepliesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadRepliesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadRepliesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadRepliesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadRepliesRequest}\n */\nproto.squeaknode.DownloadRepliesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadRepliesRequest;\n  return proto.squeaknode.DownloadRepliesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadRepliesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadRepliesRequest}\n */\nproto.squeaknode.DownloadRepliesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadRepliesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadRepliesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadRepliesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadRepliesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.DownloadRepliesRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.DownloadRepliesRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadRepliesReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadRepliesReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadRepliesReply.displayName = 'proto.squeaknode.DownloadRepliesReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadRepliesReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadRepliesReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadRepliesReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadRepliesReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadRepliesReply}\n */\nproto.squeaknode.DownloadRepliesReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadRepliesReply;\n  return proto.squeaknode.DownloadRepliesReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadRepliesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadRepliesReply}\n */\nproto.squeaknode.DownloadRepliesReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadRepliesReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadRepliesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadRepliesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadRepliesReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadAddressSqueaksRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadAddressSqueaksRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadAddressSqueaksRequest.displayName = 'proto.squeaknode.DownloadAddressSqueaksRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadAddressSqueaksRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadAddressSqueaksRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadAddressSqueaksRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadAddressSqueaksRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadAddressSqueaksRequest}\n */\nproto.squeaknode.DownloadAddressSqueaksRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadAddressSqueaksRequest;\n  return proto.squeaknode.DownloadAddressSqueaksRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadAddressSqueaksRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadAddressSqueaksRequest}\n */\nproto.squeaknode.DownloadAddressSqueaksRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadAddressSqueaksRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadAddressSqueaksRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadAddressSqueaksRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadAddressSqueaksRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.squeaknode.DownloadAddressSqueaksRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.DownloadAddressSqueaksRequest.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadAddressSqueaksReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadAddressSqueaksReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadAddressSqueaksReply.displayName = 'proto.squeaknode.DownloadAddressSqueaksReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadAddressSqueaksReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadAddressSqueaksReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadAddressSqueaksReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadAddressSqueaksReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadAddressSqueaksReply}\n */\nproto.squeaknode.DownloadAddressSqueaksReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadAddressSqueaksReply;\n  return proto.squeaknode.DownloadAddressSqueaksReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadAddressSqueaksReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadAddressSqueaksReply}\n */\nproto.squeaknode.DownloadAddressSqueaksReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadAddressSqueaksReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadAddressSqueaksReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadAddressSqueaksReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadAddressSqueaksReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakDetailsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakDetailsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakDetailsRequest.displayName = 'proto.squeaknode.GetSqueakDetailsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakDetailsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakDetailsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakDetailsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDetailsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakDetailsRequest}\n */\nproto.squeaknode.GetSqueakDetailsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakDetailsRequest;\n  return proto.squeaknode.GetSqueakDetailsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakDetailsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakDetailsRequest}\n */\nproto.squeaknode.GetSqueakDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakDetailsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakDetailsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakDetailsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDetailsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.GetSqueakDetailsRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSqueakDetailsRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakDetailsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakDetailsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakDetailsReply.displayName = 'proto.squeaknode.GetSqueakDetailsReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakDetailsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakDetailsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakDetailsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDetailsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDetailEntry: (f = msg.getSqueakDetailEntry()) && proto.squeaknode.SqueakDetailEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakDetailsReply}\n */\nproto.squeaknode.GetSqueakDetailsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakDetailsReply;\n  return proto.squeaknode.GetSqueakDetailsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakDetailsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakDetailsReply}\n */\nproto.squeaknode.GetSqueakDetailsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDetailEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDetailEntry.deserializeBinaryFromReader);\n      msg.setSqueakDetailEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakDetailsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakDetailsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakDetailsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDetailsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDetailEntry();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDetailEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakDetailEntry squeak_detail_entry = 1;\n * @return {?proto.squeaknode.SqueakDetailEntry}\n */\nproto.squeaknode.GetSqueakDetailsReply.prototype.getSqueakDetailEntry = function() {\n  return /** @type{?proto.squeaknode.SqueakDetailEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakDetailEntry, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakDetailEntry|undefined} value */\nproto.squeaknode.GetSqueakDetailsReply.prototype.setSqueakDetailEntry = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSqueakDetailsReply.prototype.clearSqueakDetailEntry = function() {\n  this.setSqueakDetailEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSqueakDetailsReply.prototype.hasSqueakDetailEntry = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SqueakDetailEntry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SqueakDetailEntry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SqueakDetailEntry.displayName = 'proto.squeaknode.SqueakDetailEntry';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SqueakDetailEntry.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SqueakDetailEntry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SqueakDetailEntry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakDetailEntry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    serializedSqueakHex: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SqueakDetailEntry}\n */\nproto.squeaknode.SqueakDetailEntry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SqueakDetailEntry;\n  return proto.squeaknode.SqueakDetailEntry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SqueakDetailEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SqueakDetailEntry}\n */\nproto.squeaknode.SqueakDetailEntry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSerializedSqueakHex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SqueakDetailEntry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SqueakDetailEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SqueakDetailEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakDetailEntry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSerializedSqueakHex();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string serialized_squeak_hex = 1;\n * @return {string}\n */\nproto.squeaknode.SqueakDetailEntry.prototype.getSerializedSqueakHex = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDetailEntry.prototype.setSerializedSqueakHex = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentOffersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSentOffersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentOffersRequest.displayName = 'proto.squeaknode.GetSentOffersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentOffersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentOffersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentOffersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentOffersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentOffersRequest}\n */\nproto.squeaknode.GetSentOffersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentOffersRequest;\n  return proto.squeaknode.GetSentOffersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentOffersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentOffersRequest}\n */\nproto.squeaknode.GetSentOffersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentOffersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentOffersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentOffersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentOffersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentOffersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetSentOffersReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetSentOffersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentOffersReply.displayName = 'proto.squeaknode.GetSentOffersReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetSentOffersReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentOffersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentOffersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentOffersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentOffersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentOffersList: jspb.Message.toObjectList(msg.getSentOffersList(),\n    proto.squeaknode.SentOffer.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentOffersReply}\n */\nproto.squeaknode.GetSentOffersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentOffersReply;\n  return proto.squeaknode.GetSentOffersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentOffersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentOffersReply}\n */\nproto.squeaknode.GetSentOffersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SentOffer;\n      reader.readMessage(value,proto.squeaknode.SentOffer.deserializeBinaryFromReader);\n      msg.addSentOffers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentOffersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentOffersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentOffersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentOffersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentOffersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SentOffer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SentOffer sent_offers = 1;\n * @return {!Array.<!proto.squeaknode.SentOffer>}\n */\nproto.squeaknode.GetSentOffersReply.prototype.getSentOffersList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SentOffer>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SentOffer, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SentOffer>} value */\nproto.squeaknode.GetSentOffersReply.prototype.setSentOffersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SentOffer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SentOffer}\n */\nproto.squeaknode.GetSentOffersReply.prototype.addSentOffers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SentOffer, opt_index);\n};\n\n\nproto.squeaknode.GetSentOffersReply.prototype.clearSentOffersList = function() {\n  this.setSentOffersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SentOffer = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SentOffer, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SentOffer.displayName = 'proto.squeaknode.SentOffer';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SentOffer.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SentOffer.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SentOffer} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SentOffer.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentOfferId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    priceMsat: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SentOffer}\n */\nproto.squeaknode.SentOffer.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SentOffer;\n  return proto.squeaknode.SentOffer.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SentOffer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SentOffer}\n */\nproto.squeaknode.SentOffer.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSentOfferId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPriceMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SentOffer.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SentOffer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SentOffer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SentOffer.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentOfferId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 sent_offer_id = 1;\n * @return {number}\n */\nproto.squeaknode.SentOffer.prototype.getSentOfferId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentOffer.prototype.setSentOfferId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string squeak_hash = 2;\n * @return {string}\n */\nproto.squeaknode.SentOffer.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentOffer.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string payment_hash = 3;\n * @return {string}\n */\nproto.squeaknode.SentOffer.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentOffer.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 price_msat = 4;\n * @return {number}\n */\nproto.squeaknode.SentOffer.prototype.getPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentOffer.prototype.setPriceMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetReceivedPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetReceivedPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetReceivedPaymentsRequest.displayName = 'proto.squeaknode.GetReceivedPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetReceivedPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetReceivedPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReceivedPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetReceivedPaymentsRequest}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetReceivedPaymentsRequest;\n  return proto.squeaknode.GetReceivedPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetReceivedPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetReceivedPaymentsRequest}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetReceivedPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetReceivedPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReceivedPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetReceivedPaymentsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetReceivedPaymentsReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetReceivedPaymentsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetReceivedPaymentsReply.displayName = 'proto.squeaknode.GetReceivedPaymentsReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetReceivedPaymentsReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetReceivedPaymentsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetReceivedPaymentsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReceivedPaymentsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    receivedPaymentsList: jspb.Message.toObjectList(msg.getReceivedPaymentsList(),\n    proto.squeaknode.ReceivedPayment.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetReceivedPaymentsReply}\n */\nproto.squeaknode.GetReceivedPaymentsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetReceivedPaymentsReply;\n  return proto.squeaknode.GetReceivedPaymentsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetReceivedPaymentsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetReceivedPaymentsReply}\n */\nproto.squeaknode.GetReceivedPaymentsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.ReceivedPayment;\n      reader.readMessage(value,proto.squeaknode.ReceivedPayment.deserializeBinaryFromReader);\n      msg.addReceivedPayments(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetReceivedPaymentsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetReceivedPaymentsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReceivedPaymentsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getReceivedPaymentsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.ReceivedPayment.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ReceivedPayment received_payments = 1;\n * @return {!Array.<!proto.squeaknode.ReceivedPayment>}\n */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.getReceivedPaymentsList = function() {\n  return /** @type{!Array.<!proto.squeaknode.ReceivedPayment>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.ReceivedPayment, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.ReceivedPayment>} value */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.setReceivedPaymentsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.ReceivedPayment=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.ReceivedPayment}\n */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.addReceivedPayments = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.ReceivedPayment, opt_index);\n};\n\n\nproto.squeaknode.GetReceivedPaymentsReply.prototype.clearReceivedPaymentsList = function() {\n  this.setReceivedPaymentsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ReceivedPayment = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ReceivedPayment, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ReceivedPayment.displayName = 'proto.squeaknode.ReceivedPayment';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ReceivedPayment.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ReceivedPayment.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ReceivedPayment} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ReceivedPayment.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    receivedPaymentId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    priceMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    timeMs: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ReceivedPayment}\n */\nproto.squeaknode.ReceivedPayment.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ReceivedPayment;\n  return proto.squeaknode.ReceivedPayment.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ReceivedPayment} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ReceivedPayment}\n */\nproto.squeaknode.ReceivedPayment.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setReceivedPaymentId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPriceMsat(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimeMs(value);\n      break;\n    case 6:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ReceivedPayment.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ReceivedPayment.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ReceivedPayment} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ReceivedPayment.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getReceivedPaymentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getTimeMs();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 received_payment_id = 1;\n * @return {number}\n */\nproto.squeaknode.ReceivedPayment.prototype.getReceivedPaymentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ReceivedPayment.prototype.setReceivedPaymentId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string squeak_hash = 2;\n * @return {string}\n */\nproto.squeaknode.ReceivedPayment.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.ReceivedPayment.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string payment_hash = 3;\n * @return {string}\n */\nproto.squeaknode.ReceivedPayment.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.ReceivedPayment.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 price_msat = 4;\n * @return {number}\n */\nproto.squeaknode.ReceivedPayment.prototype.getPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ReceivedPayment.prototype.setPriceMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 time_ms = 5;\n * @return {number}\n */\nproto.squeaknode.ReceivedPayment.prototype.getTimeMs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ReceivedPayment.prototype.setTimeMs = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional PeerAddress peer_address = 6;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.ReceivedPayment.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 6));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.ReceivedPayment.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 6, value);\n};\n\n\nproto.squeaknode.ReceivedPayment.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.ReceivedPayment.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeReceivedPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeReceivedPaymentsRequest.displayName = 'proto.squeaknode.SubscribeReceivedPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeReceivedPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeReceivedPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentIndex: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeReceivedPaymentsRequest}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeReceivedPaymentsRequest;\n  return proto.squeaknode.SubscribeReceivedPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeReceivedPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeReceivedPaymentsRequest}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPaymentIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeReceivedPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeReceivedPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentIndex();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 payment_index = 1;\n * @return {number}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.prototype.getPaymentIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.prototype.setPaymentIndex = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetNetworkRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetNetworkRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetNetworkRequest.displayName = 'proto.squeaknode.GetNetworkRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetNetworkRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetNetworkRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetNetworkRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetNetworkRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetNetworkRequest}\n */\nproto.squeaknode.GetNetworkRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetNetworkRequest;\n  return proto.squeaknode.GetNetworkRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetNetworkRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetNetworkRequest}\n */\nproto.squeaknode.GetNetworkRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetNetworkRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetNetworkRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetNetworkRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetNetworkRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetNetworkReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetNetworkReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetNetworkReply.displayName = 'proto.squeaknode.GetNetworkReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetNetworkReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetNetworkReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetNetworkReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetNetworkReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    network: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetNetworkReply}\n */\nproto.squeaknode.GetNetworkReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetNetworkReply;\n  return proto.squeaknode.GetNetworkReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetNetworkReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetNetworkReply}\n */\nproto.squeaknode.GetNetworkReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNetwork(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetNetworkReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetNetworkReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetNetworkReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetNetworkReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNetwork();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string network = 1;\n * @return {string}\n */\nproto.squeaknode.GetNetworkReply.prototype.getNetwork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetNetworkReply.prototype.setNetwork = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPaymentSummaryRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPaymentSummaryRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPaymentSummaryRequest.displayName = 'proto.squeaknode.GetPaymentSummaryRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPaymentSummaryRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPaymentSummaryRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPaymentSummaryRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPaymentSummaryRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPaymentSummaryRequest}\n */\nproto.squeaknode.GetPaymentSummaryRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPaymentSummaryRequest;\n  return proto.squeaknode.GetPaymentSummaryRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPaymentSummaryRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPaymentSummaryRequest}\n */\nproto.squeaknode.GetPaymentSummaryRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPaymentSummaryRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPaymentSummaryRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPaymentSummaryRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPaymentSummaryRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPaymentSummaryReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPaymentSummaryReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPaymentSummaryReply.displayName = 'proto.squeaknode.GetPaymentSummaryReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPaymentSummaryReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPaymentSummaryReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPaymentSummaryReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPaymentSummaryReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentSummary: (f = msg.getPaymentSummary()) && proto.squeaknode.PaymentSummary.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPaymentSummaryReply}\n */\nproto.squeaknode.GetPaymentSummaryReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPaymentSummaryReply;\n  return proto.squeaknode.GetPaymentSummaryReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPaymentSummaryReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPaymentSummaryReply}\n */\nproto.squeaknode.GetPaymentSummaryReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PaymentSummary;\n      reader.readMessage(value,proto.squeaknode.PaymentSummary.deserializeBinaryFromReader);\n      msg.setPaymentSummary(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPaymentSummaryReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPaymentSummaryReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPaymentSummaryReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPaymentSummaryReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentSummary();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PaymentSummary.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PaymentSummary payment_summary = 1;\n * @return {?proto.squeaknode.PaymentSummary}\n */\nproto.squeaknode.GetPaymentSummaryReply.prototype.getPaymentSummary = function() {\n  return /** @type{?proto.squeaknode.PaymentSummary} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PaymentSummary, 1));\n};\n\n\n/** @param {?proto.squeaknode.PaymentSummary|undefined} value */\nproto.squeaknode.GetPaymentSummaryReply.prototype.setPaymentSummary = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetPaymentSummaryReply.prototype.clearPaymentSummary = function() {\n  this.setPaymentSummary(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetPaymentSummaryReply.prototype.hasPaymentSummary = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.PaymentSummary = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.PaymentSummary, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.PaymentSummary.displayName = 'proto.squeaknode.PaymentSummary';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.PaymentSummary.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.PaymentSummary.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.PaymentSummary} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PaymentSummary.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    numReceivedPayments: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    numSentPayments: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    amountEarnedMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    amountSpentMsat: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.PaymentSummary}\n */\nproto.squeaknode.PaymentSummary.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.PaymentSummary;\n  return proto.squeaknode.PaymentSummary.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.PaymentSummary} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.PaymentSummary}\n */\nproto.squeaknode.PaymentSummary.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumReceivedPayments(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumSentPayments(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmountEarnedMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmountSpentMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.PaymentSummary.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.PaymentSummary.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.PaymentSummary} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PaymentSummary.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNumReceivedPayments();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getNumSentPayments();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getAmountEarnedMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getAmountSpentMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 num_received_payments = 1;\n * @return {number}\n */\nproto.squeaknode.PaymentSummary.prototype.getNumReceivedPayments = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PaymentSummary.prototype.setNumReceivedPayments = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 num_sent_payments = 2;\n * @return {number}\n */\nproto.squeaknode.PaymentSummary.prototype.getNumSentPayments = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PaymentSummary.prototype.setNumSentPayments = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amount_earned_msat = 3;\n * @return {number}\n */\nproto.squeaknode.PaymentSummary.prototype.getAmountEarnedMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PaymentSummary.prototype.setAmountEarnedMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 amount_spent_msat = 4;\n * @return {number}\n */\nproto.squeaknode.PaymentSummary.prototype.getAmountSpentMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PaymentSummary.prototype.setAmountSpentMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ReprocessReceivedPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ReprocessReceivedPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ReprocessReceivedPaymentsRequest.displayName = 'proto.squeaknode.ReprocessReceivedPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ReprocessReceivedPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ReprocessReceivedPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ReprocessReceivedPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ReprocessReceivedPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ReprocessReceivedPaymentsRequest}\n */\nproto.squeaknode.ReprocessReceivedPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ReprocessReceivedPaymentsRequest;\n  return proto.squeaknode.ReprocessReceivedPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ReprocessReceivedPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ReprocessReceivedPaymentsRequest}\n */\nproto.squeaknode.ReprocessReceivedPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ReprocessReceivedPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ReprocessReceivedPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ReprocessReceivedPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ReprocessReceivedPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ReprocessReceivedPaymentsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ReprocessReceivedPaymentsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ReprocessReceivedPaymentsReply.displayName = 'proto.squeaknode.ReprocessReceivedPaymentsReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ReprocessReceivedPaymentsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ReprocessReceivedPaymentsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ReprocessReceivedPaymentsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ReprocessReceivedPaymentsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ReprocessReceivedPaymentsReply}\n */\nproto.squeaknode.ReprocessReceivedPaymentsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ReprocessReceivedPaymentsReply;\n  return proto.squeaknode.ReprocessReceivedPaymentsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ReprocessReceivedPaymentsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ReprocessReceivedPaymentsReply}\n */\nproto.squeaknode.ReprocessReceivedPaymentsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ReprocessReceivedPaymentsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ReprocessReceivedPaymentsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ReprocessReceivedPaymentsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ReprocessReceivedPaymentsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.LikeSqueakRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.LikeSqueakRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.LikeSqueakRequest.displayName = 'proto.squeaknode.LikeSqueakRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.LikeSqueakRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.LikeSqueakRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.LikeSqueakRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LikeSqueakRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.LikeSqueakRequest}\n */\nproto.squeaknode.LikeSqueakRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.LikeSqueakRequest;\n  return proto.squeaknode.LikeSqueakRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.LikeSqueakRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.LikeSqueakRequest}\n */\nproto.squeaknode.LikeSqueakRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.LikeSqueakRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.LikeSqueakRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.LikeSqueakRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LikeSqueakRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.LikeSqueakRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.LikeSqueakRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.LikeSqueakReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.LikeSqueakReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.LikeSqueakReply.displayName = 'proto.squeaknode.LikeSqueakReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.LikeSqueakReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.LikeSqueakReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.LikeSqueakReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LikeSqueakReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.LikeSqueakReply}\n */\nproto.squeaknode.LikeSqueakReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.LikeSqueakReply;\n  return proto.squeaknode.LikeSqueakReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.LikeSqueakReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.LikeSqueakReply}\n */\nproto.squeaknode.LikeSqueakReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.LikeSqueakReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.LikeSqueakReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.LikeSqueakReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LikeSqueakReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.UnlikeSqueakRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.UnlikeSqueakRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.UnlikeSqueakRequest.displayName = 'proto.squeaknode.UnlikeSqueakRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.UnlikeSqueakRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.UnlikeSqueakRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.UnlikeSqueakRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.UnlikeSqueakRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.UnlikeSqueakRequest}\n */\nproto.squeaknode.UnlikeSqueakRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.UnlikeSqueakRequest;\n  return proto.squeaknode.UnlikeSqueakRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.UnlikeSqueakRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.UnlikeSqueakRequest}\n */\nproto.squeaknode.UnlikeSqueakRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.UnlikeSqueakRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.UnlikeSqueakRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.UnlikeSqueakRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.UnlikeSqueakRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.UnlikeSqueakRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.UnlikeSqueakRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.UnlikeSqueakReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.UnlikeSqueakReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.UnlikeSqueakReply.displayName = 'proto.squeaknode.UnlikeSqueakReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.UnlikeSqueakReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.UnlikeSqueakReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.UnlikeSqueakReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.UnlikeSqueakReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.UnlikeSqueakReply}\n */\nproto.squeaknode.UnlikeSqueakReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.UnlikeSqueakReply;\n  return proto.squeaknode.UnlikeSqueakReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.UnlikeSqueakReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.UnlikeSqueakReply}\n */\nproto.squeaknode.UnlikeSqueakReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.UnlikeSqueakReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.UnlikeSqueakReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.UnlikeSqueakReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.UnlikeSqueakReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetLikedSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetLikedSqueakDisplaysRequest.displayName = 'proto.squeaknode.GetLikedSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetLikedSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetLikedSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    lastEntry: (f = msg.getLastEntry()) && proto.squeaknode.SqueakDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetLikedSqueakDisplaysRequest}\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetLikedSqueakDisplaysRequest;\n  return proto.squeaknode.GetLikedSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetLikedSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetLikedSqueakDisplaysRequest}\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLimit(value);\n      break;\n    case 2:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.setLastEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetLikedSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetLikedSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getLastEntry();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 limit = 1;\n * @return {number}\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.setLimit = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional SqueakDisplayEntry last_entry = 2;\n * @return {?proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.getLastEntry = function() {\n  return /** @type{?proto.squeaknode.SqueakDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 2));\n};\n\n\n/** @param {?proto.squeaknode.SqueakDisplayEntry|undefined} value */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.setLastEntry = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.clearLastEntry = function() {\n  this.setLastEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.hasLastEntry = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetLikedSqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetLikedSqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetLikedSqueakDisplaysReply.displayName = 'proto.squeaknode.GetLikedSqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetLikedSqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetLikedSqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetLikedSqueakDisplaysReply}\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetLikedSqueakDisplaysReply;\n  return proto.squeaknode.GetLikedSqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetLikedSqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetLikedSqueakDisplaysReply}\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetLikedSqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetLikedSqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetLikedSqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetLikedSqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ConnectPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ConnectPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ConnectPeerRequest.displayName = 'proto.squeaknode.ConnectPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ConnectPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ConnectPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ConnectPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ConnectPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ConnectPeerRequest}\n */\nproto.squeaknode.ConnectPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ConnectPeerRequest;\n  return proto.squeaknode.ConnectPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ConnectPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ConnectPeerRequest}\n */\nproto.squeaknode.ConnectPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ConnectPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ConnectPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ConnectPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ConnectPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress peer_address = 1;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.ConnectPeerRequest.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 1));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.ConnectPeerRequest.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.ConnectPeerRequest.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.ConnectPeerRequest.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ConnectPeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ConnectPeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ConnectPeerReply.displayName = 'proto.squeaknode.ConnectPeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ConnectPeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ConnectPeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ConnectPeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ConnectPeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ConnectPeerReply}\n */\nproto.squeaknode.ConnectPeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ConnectPeerReply;\n  return proto.squeaknode.ConnectPeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ConnectPeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ConnectPeerReply}\n */\nproto.squeaknode.ConnectPeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ConnectPeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ConnectPeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ConnectPeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ConnectPeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ConnectedPeer = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ConnectedPeer, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ConnectedPeer.displayName = 'proto.squeaknode.ConnectedPeer';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ConnectedPeer.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ConnectedPeer.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ConnectedPeer} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ConnectedPeer.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f),\n    connectTimeS: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    lastMessageReceivedTimeS: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    numberMessagesReceived: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    numberBytesReceived: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    numberMessagesSent: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    numberBytesSent: jspb.Message.getFieldWithDefault(msg, 7, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ConnectedPeer}\n */\nproto.squeaknode.ConnectedPeer.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ConnectedPeer;\n  return proto.squeaknode.ConnectedPeer.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ConnectedPeer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ConnectedPeer}\n */\nproto.squeaknode.ConnectedPeer.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setConnectTimeS(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLastMessageReceivedTimeS(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumberMessagesReceived(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumberBytesReceived(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumberMessagesSent(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumberBytesSent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ConnectedPeer.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ConnectedPeer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ConnectedPeer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ConnectedPeer.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n  f = message.getConnectTimeS();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getLastMessageReceivedTimeS();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getNumberMessagesReceived();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getNumberBytesReceived();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getNumberMessagesSent();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getNumberBytesSent();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress peer_address = 1;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.ConnectedPeer.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 1));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.ConnectedPeer.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.ConnectedPeer.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.ConnectedPeer.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 connect_time_s = 2;\n * @return {number}\n */\nproto.squeaknode.ConnectedPeer.prototype.getConnectTimeS = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ConnectedPeer.prototype.setConnectTimeS = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 last_message_received_time_s = 3;\n * @return {number}\n */\nproto.squeaknode.ConnectedPeer.prototype.getLastMessageReceivedTimeS = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ConnectedPeer.prototype.setLastMessageReceivedTimeS = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 number_messages_received = 4;\n * @return {number}\n */\nproto.squeaknode.ConnectedPeer.prototype.getNumberMessagesReceived = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ConnectedPeer.prototype.setNumberMessagesReceived = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 number_bytes_received = 5;\n * @return {number}\n */\nproto.squeaknode.ConnectedPeer.prototype.getNumberBytesReceived = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ConnectedPeer.prototype.setNumberBytesReceived = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 number_messages_sent = 6;\n * @return {number}\n */\nproto.squeaknode.ConnectedPeer.prototype.getNumberMessagesSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ConnectedPeer.prototype.setNumberMessagesSent = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 number_bytes_sent = 7;\n * @return {number}\n */\nproto.squeaknode.ConnectedPeer.prototype.getNumberBytesSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ConnectedPeer.prototype.setNumberBytesSent = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetConnectedPeersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetConnectedPeersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetConnectedPeersRequest.displayName = 'proto.squeaknode.GetConnectedPeersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetConnectedPeersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetConnectedPeersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetConnectedPeersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetConnectedPeersRequest}\n */\nproto.squeaknode.GetConnectedPeersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetConnectedPeersRequest;\n  return proto.squeaknode.GetConnectedPeersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetConnectedPeersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetConnectedPeersRequest}\n */\nproto.squeaknode.GetConnectedPeersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetConnectedPeersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetConnectedPeersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetConnectedPeersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetConnectedPeersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetConnectedPeersReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetConnectedPeersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetConnectedPeersReply.displayName = 'proto.squeaknode.GetConnectedPeersReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetConnectedPeersReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetConnectedPeersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetConnectedPeersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetConnectedPeersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    connectedPeersList: jspb.Message.toObjectList(msg.getConnectedPeersList(),\n    proto.squeaknode.ConnectedPeer.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetConnectedPeersReply}\n */\nproto.squeaknode.GetConnectedPeersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetConnectedPeersReply;\n  return proto.squeaknode.GetConnectedPeersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetConnectedPeersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetConnectedPeersReply}\n */\nproto.squeaknode.GetConnectedPeersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.ConnectedPeer;\n      reader.readMessage(value,proto.squeaknode.ConnectedPeer.deserializeBinaryFromReader);\n      msg.addConnectedPeers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetConnectedPeersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetConnectedPeersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetConnectedPeersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConnectedPeersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.ConnectedPeer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ConnectedPeer connected_peers = 1;\n * @return {!Array.<!proto.squeaknode.ConnectedPeer>}\n */\nproto.squeaknode.GetConnectedPeersReply.prototype.getConnectedPeersList = function() {\n  return /** @type{!Array.<!proto.squeaknode.ConnectedPeer>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.ConnectedPeer, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.ConnectedPeer>} value */\nproto.squeaknode.GetConnectedPeersReply.prototype.setConnectedPeersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.ConnectedPeer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.ConnectedPeer}\n */\nproto.squeaknode.GetConnectedPeersReply.prototype.addConnectedPeers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.ConnectedPeer, opt_index);\n};\n\n\nproto.squeaknode.GetConnectedPeersReply.prototype.clearConnectedPeersList = function() {\n  this.setConnectedPeersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetConnectedPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetConnectedPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetConnectedPeerRequest.displayName = 'proto.squeaknode.GetConnectedPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetConnectedPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetConnectedPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetConnectedPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetConnectedPeerRequest}\n */\nproto.squeaknode.GetConnectedPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetConnectedPeerRequest;\n  return proto.squeaknode.GetConnectedPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetConnectedPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetConnectedPeerRequest}\n */\nproto.squeaknode.GetConnectedPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetConnectedPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetConnectedPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetConnectedPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress peer_address = 1;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.GetConnectedPeerRequest.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 1));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.GetConnectedPeerRequest.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetConnectedPeerRequest.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetConnectedPeerRequest.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetConnectedPeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetConnectedPeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetConnectedPeerReply.displayName = 'proto.squeaknode.GetConnectedPeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetConnectedPeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetConnectedPeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetConnectedPeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    connectedPeer: (f = msg.getConnectedPeer()) && proto.squeaknode.ConnectedPeer.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetConnectedPeerReply}\n */\nproto.squeaknode.GetConnectedPeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetConnectedPeerReply;\n  return proto.squeaknode.GetConnectedPeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetConnectedPeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetConnectedPeerReply}\n */\nproto.squeaknode.GetConnectedPeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.ConnectedPeer;\n      reader.readMessage(value,proto.squeaknode.ConnectedPeer.deserializeBinaryFromReader);\n      msg.setConnectedPeer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetConnectedPeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetConnectedPeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetConnectedPeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConnectedPeer();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.ConnectedPeer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ConnectedPeer connected_peer = 1;\n * @return {?proto.squeaknode.ConnectedPeer}\n */\nproto.squeaknode.GetConnectedPeerReply.prototype.getConnectedPeer = function() {\n  return /** @type{?proto.squeaknode.ConnectedPeer} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.ConnectedPeer, 1));\n};\n\n\n/** @param {?proto.squeaknode.ConnectedPeer|undefined} value */\nproto.squeaknode.GetConnectedPeerReply.prototype.setConnectedPeer = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetConnectedPeerReply.prototype.clearConnectedPeer = function() {\n  this.setConnectedPeer(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetConnectedPeerReply.prototype.hasConnectedPeer = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DisconnectPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DisconnectPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DisconnectPeerRequest.displayName = 'proto.squeaknode.DisconnectPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DisconnectPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DisconnectPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DisconnectPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DisconnectPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DisconnectPeerRequest}\n */\nproto.squeaknode.DisconnectPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DisconnectPeerRequest;\n  return proto.squeaknode.DisconnectPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DisconnectPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DisconnectPeerRequest}\n */\nproto.squeaknode.DisconnectPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DisconnectPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DisconnectPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DisconnectPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DisconnectPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress peer_address = 1;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.DisconnectPeerRequest.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 1));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.DisconnectPeerRequest.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.DisconnectPeerRequest.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.DisconnectPeerRequest.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DisconnectPeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DisconnectPeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DisconnectPeerReply.displayName = 'proto.squeaknode.DisconnectPeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DisconnectPeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DisconnectPeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DisconnectPeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DisconnectPeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DisconnectPeerReply}\n */\nproto.squeaknode.DisconnectPeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DisconnectPeerReply;\n  return proto.squeaknode.DisconnectPeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DisconnectPeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DisconnectPeerReply}\n */\nproto.squeaknode.DisconnectPeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DisconnectPeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DisconnectPeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DisconnectPeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DisconnectPeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeConnectedPeersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeConnectedPeersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeConnectedPeersRequest.displayName = 'proto.squeaknode.SubscribeConnectedPeersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeConnectedPeersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeConnectedPeersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeConnectedPeersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeConnectedPeersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeConnectedPeersRequest}\n */\nproto.squeaknode.SubscribeConnectedPeersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeConnectedPeersRequest;\n  return proto.squeaknode.SubscribeConnectedPeersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeConnectedPeersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeConnectedPeersRequest}\n */\nproto.squeaknode.SubscribeConnectedPeersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeConnectedPeersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeConnectedPeersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeConnectedPeersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeConnectedPeersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeConnectedPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeConnectedPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeConnectedPeerRequest.displayName = 'proto.squeaknode.SubscribeConnectedPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeConnectedPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeConnectedPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeConnectedPeerRequest}\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeConnectedPeerRequest;\n  return proto.squeaknode.SubscribeConnectedPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeConnectedPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeConnectedPeerRequest}\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeConnectedPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeConnectedPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress peer_address = 1;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 1));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.SubscribeConnectedPeerRequest.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.SubscribeConnectedPeerRequest.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.PeerAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.PeerAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.PeerAddress.displayName = 'proto.squeaknode.PeerAddress';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.PeerAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.PeerAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.PeerAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PeerAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    host: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    port: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.PeerAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.PeerAddress;\n  return proto.squeaknode.PeerAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.PeerAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.PeerAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHost(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPort(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.PeerAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.PeerAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.PeerAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PeerAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHost();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPort();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string host = 1;\n * @return {string}\n */\nproto.squeaknode.PeerAddress.prototype.getHost = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.PeerAddress.prototype.setHost = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 port = 2;\n * @return {number}\n */\nproto.squeaknode.PeerAddress.prototype.getPort = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PeerAddress.prototype.setPort = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeBuyOffersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeBuyOffersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeBuyOffersRequest.displayName = 'proto.squeaknode.SubscribeBuyOffersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeBuyOffersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeBuyOffersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeBuyOffersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeBuyOffersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeBuyOffersRequest}\n */\nproto.squeaknode.SubscribeBuyOffersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeBuyOffersRequest;\n  return proto.squeaknode.SubscribeBuyOffersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeBuyOffersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeBuyOffersRequest}\n */\nproto.squeaknode.SubscribeBuyOffersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeBuyOffersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeBuyOffersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeBuyOffersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeBuyOffersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.SubscribeBuyOffersRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SubscribeBuyOffersRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeSqueakDisplayRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeSqueakDisplayRequest.displayName = 'proto.squeaknode.SubscribeSqueakDisplayRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeSqueakDisplayRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeSqueakDisplayRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeSqueakDisplayRequest}\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeSqueakDisplayRequest;\n  return proto.squeaknode.SubscribeSqueakDisplayRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeSqueakDisplayRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeSqueakDisplayRequest}\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeSqueakDisplayRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeSqueakDisplayRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SubscribeSqueakDisplayRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeReplySqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeReplySqueakDisplaysRequest.displayName = 'proto.squeaknode.SubscribeReplySqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeReplySqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeReplySqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeReplySqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeReplySqueakDisplaysRequest;\n  return proto.squeaknode.SubscribeReplySqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeReplySqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeReplySqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeReplySqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeReplySqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeAddressSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeAddressSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeAddressSqueakDisplaysRequest.displayName = 'proto.squeaknode.SubscribeAddressSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeAddressSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeAddressSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeAddressSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeAddressSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeAddressSqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeAddressSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeAddressSqueakDisplaysRequest;\n  return proto.squeaknode.SubscribeAddressSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeAddressSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeAddressSqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeAddressSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeAddressSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeAddressSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeAddressSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeAddressSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.squeaknode.SubscribeAddressSqueakDisplaysRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SubscribeAddressSqueakDisplaysRequest.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.displayName = 'proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest;\n  return proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeSqueakDisplaysRequest.displayName = 'proto.squeaknode.SubscribeSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeSqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeSqueakDisplaysRequest;\n  return proto.squeaknode.SubscribeSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeSqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeTimelineSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.displayName = 'proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest;\n  return proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\ngoog.object.extend(exports, proto.squeaknode);\n","module.exports = __webpack_public_path__ + \"static/media/google.695a3160.svg\";","/* eslint-disable */\n/**\n * @fileoverview gRPC-Web generated client stub for squeaknode\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\n\nvar proto_lnd_pb = require('../proto/lnd_pb.js')\nconst proto = {};\nproto.squeaknode = require('./squeak_admin_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.squeaknode.SqueakAdminClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.squeaknode.SqueakAdminPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.lnrpc.GetInfoRequest,\n *   !proto.lnrpc.GetInfoResponse>}\n */\nconst methodDescriptor_SqueakAdmin_LndGetInfo = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/LndGetInfo',\n  grpc.web.MethodType.UNARY,\n  proto_lnd_pb.GetInfoRequest,\n  proto_lnd_pb.GetInfoResponse,\n  /**\n   * @param {!proto.lnrpc.GetInfoRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.GetInfoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.lnrpc.GetInfoRequest,\n *   !proto.lnrpc.GetInfoResponse>}\n */\nconst methodInfo_SqueakAdmin_LndGetInfo = new grpc.web.AbstractClientBase.MethodInfo(\n  proto_lnd_pb.GetInfoResponse,\n  /**\n   * @param {!proto.lnrpc.GetInfoRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.GetInfoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.lnrpc.GetInfoRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.lnrpc.GetInfoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.GetInfoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.lndGetInfo =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndGetInfo',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndGetInfo,\n      callback);\n};\n\n\n/**\n * @param {!proto.lnrpc.GetInfoRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.lnrpc.GetInfoResponse>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.lndGetInfo =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndGetInfo',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndGetInfo);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.lnrpc.WalletBalanceRequest,\n *   !proto.lnrpc.WalletBalanceResponse>}\n */\nconst methodDescriptor_SqueakAdmin_LndWalletBalance = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/LndWalletBalance',\n  grpc.web.MethodType.UNARY,\n  proto_lnd_pb.WalletBalanceRequest,\n  proto_lnd_pb.WalletBalanceResponse,\n  /**\n   * @param {!proto.lnrpc.WalletBalanceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.WalletBalanceResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.lnrpc.WalletBalanceRequest,\n *   !proto.lnrpc.WalletBalanceResponse>}\n */\nconst methodInfo_SqueakAdmin_LndWalletBalance = new grpc.web.AbstractClientBase.MethodInfo(\n  proto_lnd_pb.WalletBalanceResponse,\n  /**\n   * @param {!proto.lnrpc.WalletBalanceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.WalletBalanceResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.lnrpc.WalletBalanceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.lnrpc.WalletBalanceResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.WalletBalanceResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.lndWalletBalance =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndWalletBalance',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndWalletBalance,\n      callback);\n};\n\n\n/**\n * @param {!proto.lnrpc.WalletBalanceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.lnrpc.WalletBalanceResponse>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.lndWalletBalance =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndWalletBalance',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndWalletBalance);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.lnrpc.NewAddressRequest,\n *   !proto.lnrpc.NewAddressResponse>}\n */\nconst methodDescriptor_SqueakAdmin_LndNewAddress = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/LndNewAddress',\n  grpc.web.MethodType.UNARY,\n  proto_lnd_pb.NewAddressRequest,\n  proto_lnd_pb.NewAddressResponse,\n  /**\n   * @param {!proto.lnrpc.NewAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.NewAddressResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.lnrpc.NewAddressRequest,\n *   !proto.lnrpc.NewAddressResponse>}\n */\nconst methodInfo_SqueakAdmin_LndNewAddress = new grpc.web.AbstractClientBase.MethodInfo(\n  proto_lnd_pb.NewAddressResponse,\n  /**\n   * @param {!proto.lnrpc.NewAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.NewAddressResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.lnrpc.NewAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.lnrpc.NewAddressResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.NewAddressResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.lndNewAddress =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndNewAddress',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndNewAddress,\n      callback);\n};\n\n\n/**\n * @param {!proto.lnrpc.NewAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.lnrpc.NewAddressResponse>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.lndNewAddress =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndNewAddress',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndNewAddress);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.lnrpc.ListChannelsRequest,\n *   !proto.lnrpc.ListChannelsResponse>}\n */\nconst methodDescriptor_SqueakAdmin_LndListChannels = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/LndListChannels',\n  grpc.web.MethodType.UNARY,\n  proto_lnd_pb.ListChannelsRequest,\n  proto_lnd_pb.ListChannelsResponse,\n  /**\n   * @param {!proto.lnrpc.ListChannelsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.ListChannelsResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.lnrpc.ListChannelsRequest,\n *   !proto.lnrpc.ListChannelsResponse>}\n */\nconst methodInfo_SqueakAdmin_LndListChannels = new grpc.web.AbstractClientBase.MethodInfo(\n  proto_lnd_pb.ListChannelsResponse,\n  /**\n   * @param {!proto.lnrpc.ListChannelsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.ListChannelsResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.lnrpc.ListChannelsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.lnrpc.ListChannelsResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.ListChannelsResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.lndListChannels =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndListChannels',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndListChannels,\n      callback);\n};\n\n\n/**\n * @param {!proto.lnrpc.ListChannelsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.lnrpc.ListChannelsResponse>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.lndListChannels =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndListChannels',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndListChannels);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.lnrpc.PendingChannelsRequest,\n *   !proto.lnrpc.PendingChannelsResponse>}\n */\nconst methodDescriptor_SqueakAdmin_LndPendingChannels = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/LndPendingChannels',\n  grpc.web.MethodType.UNARY,\n  proto_lnd_pb.PendingChannelsRequest,\n  proto_lnd_pb.PendingChannelsResponse,\n  /**\n   * @param {!proto.lnrpc.PendingChannelsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.PendingChannelsResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.lnrpc.PendingChannelsRequest,\n *   !proto.lnrpc.PendingChannelsResponse>}\n */\nconst methodInfo_SqueakAdmin_LndPendingChannels = new grpc.web.AbstractClientBase.MethodInfo(\n  proto_lnd_pb.PendingChannelsResponse,\n  /**\n   * @param {!proto.lnrpc.PendingChannelsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.PendingChannelsResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.lnrpc.PendingChannelsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.lnrpc.PendingChannelsResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.PendingChannelsResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.lndPendingChannels =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndPendingChannels',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndPendingChannels,\n      callback);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingChannelsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.lnrpc.PendingChannelsResponse>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.lndPendingChannels =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndPendingChannels',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndPendingChannels);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.lnrpc.GetTransactionsRequest,\n *   !proto.lnrpc.TransactionDetails>}\n */\nconst methodDescriptor_SqueakAdmin_LndGetTransactions = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/LndGetTransactions',\n  grpc.web.MethodType.UNARY,\n  proto_lnd_pb.GetTransactionsRequest,\n  proto_lnd_pb.TransactionDetails,\n  /**\n   * @param {!proto.lnrpc.GetTransactionsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.TransactionDetails.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.lnrpc.GetTransactionsRequest,\n *   !proto.lnrpc.TransactionDetails>}\n */\nconst methodInfo_SqueakAdmin_LndGetTransactions = new grpc.web.AbstractClientBase.MethodInfo(\n  proto_lnd_pb.TransactionDetails,\n  /**\n   * @param {!proto.lnrpc.GetTransactionsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.TransactionDetails.deserializeBinary\n);\n\n\n/**\n * @param {!proto.lnrpc.GetTransactionsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.lnrpc.TransactionDetails)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.TransactionDetails>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.lndGetTransactions =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndGetTransactions',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndGetTransactions,\n      callback);\n};\n\n\n/**\n * @param {!proto.lnrpc.GetTransactionsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.lnrpc.TransactionDetails>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.lndGetTransactions =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndGetTransactions',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndGetTransactions);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.lnrpc.ListPeersRequest,\n *   !proto.lnrpc.ListPeersResponse>}\n */\nconst methodDescriptor_SqueakAdmin_LndListPeers = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/LndListPeers',\n  grpc.web.MethodType.UNARY,\n  proto_lnd_pb.ListPeersRequest,\n  proto_lnd_pb.ListPeersResponse,\n  /**\n   * @param {!proto.lnrpc.ListPeersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.ListPeersResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.lnrpc.ListPeersRequest,\n *   !proto.lnrpc.ListPeersResponse>}\n */\nconst methodInfo_SqueakAdmin_LndListPeers = new grpc.web.AbstractClientBase.MethodInfo(\n  proto_lnd_pb.ListPeersResponse,\n  /**\n   * @param {!proto.lnrpc.ListPeersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.ListPeersResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.lnrpc.ListPeersRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.lnrpc.ListPeersResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.ListPeersResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.lndListPeers =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndListPeers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndListPeers,\n      callback);\n};\n\n\n/**\n * @param {!proto.lnrpc.ListPeersRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.lnrpc.ListPeersResponse>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.lndListPeers =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndListPeers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndListPeers);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.lnrpc.ConnectPeerRequest,\n *   !proto.lnrpc.ConnectPeerResponse>}\n */\nconst methodDescriptor_SqueakAdmin_LndConnectPeer = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/LndConnectPeer',\n  grpc.web.MethodType.UNARY,\n  proto_lnd_pb.ConnectPeerRequest,\n  proto_lnd_pb.ConnectPeerResponse,\n  /**\n   * @param {!proto.lnrpc.ConnectPeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.ConnectPeerResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.lnrpc.ConnectPeerRequest,\n *   !proto.lnrpc.ConnectPeerResponse>}\n */\nconst methodInfo_SqueakAdmin_LndConnectPeer = new grpc.web.AbstractClientBase.MethodInfo(\n  proto_lnd_pb.ConnectPeerResponse,\n  /**\n   * @param {!proto.lnrpc.ConnectPeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.ConnectPeerResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.lnrpc.ConnectPeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.lnrpc.ConnectPeerResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.ConnectPeerResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.lndConnectPeer =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndConnectPeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndConnectPeer,\n      callback);\n};\n\n\n/**\n * @param {!proto.lnrpc.ConnectPeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.lnrpc.ConnectPeerResponse>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.lndConnectPeer =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndConnectPeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndConnectPeer);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.lnrpc.DisconnectPeerRequest,\n *   !proto.lnrpc.DisconnectPeerResponse>}\n */\nconst methodDescriptor_SqueakAdmin_LndDisconnectPeer = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/LndDisconnectPeer',\n  grpc.web.MethodType.UNARY,\n  proto_lnd_pb.DisconnectPeerRequest,\n  proto_lnd_pb.DisconnectPeerResponse,\n  /**\n   * @param {!proto.lnrpc.DisconnectPeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.DisconnectPeerResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.lnrpc.DisconnectPeerRequest,\n *   !proto.lnrpc.DisconnectPeerResponse>}\n */\nconst methodInfo_SqueakAdmin_LndDisconnectPeer = new grpc.web.AbstractClientBase.MethodInfo(\n  proto_lnd_pb.DisconnectPeerResponse,\n  /**\n   * @param {!proto.lnrpc.DisconnectPeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.DisconnectPeerResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.lnrpc.DisconnectPeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.lnrpc.DisconnectPeerResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.DisconnectPeerResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.lndDisconnectPeer =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndDisconnectPeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndDisconnectPeer,\n      callback);\n};\n\n\n/**\n * @param {!proto.lnrpc.DisconnectPeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.lnrpc.DisconnectPeerResponse>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.lndDisconnectPeer =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndDisconnectPeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndDisconnectPeer);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.lnrpc.OpenChannelRequest,\n *   !proto.lnrpc.ChannelPoint>}\n */\nconst methodDescriptor_SqueakAdmin_LndOpenChannelSync = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/LndOpenChannelSync',\n  grpc.web.MethodType.UNARY,\n  proto_lnd_pb.OpenChannelRequest,\n  proto_lnd_pb.ChannelPoint,\n  /**\n   * @param {!proto.lnrpc.OpenChannelRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.ChannelPoint.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.lnrpc.OpenChannelRequest,\n *   !proto.lnrpc.ChannelPoint>}\n */\nconst methodInfo_SqueakAdmin_LndOpenChannelSync = new grpc.web.AbstractClientBase.MethodInfo(\n  proto_lnd_pb.ChannelPoint,\n  /**\n   * @param {!proto.lnrpc.OpenChannelRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.ChannelPoint.deserializeBinary\n);\n\n\n/**\n * @param {!proto.lnrpc.OpenChannelRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.lnrpc.ChannelPoint)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.ChannelPoint>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.lndOpenChannelSync =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndOpenChannelSync',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndOpenChannelSync,\n      callback);\n};\n\n\n/**\n * @param {!proto.lnrpc.OpenChannelRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.lnrpc.ChannelPoint>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.lndOpenChannelSync =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndOpenChannelSync',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndOpenChannelSync);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.lnrpc.CloseChannelRequest,\n *   !proto.lnrpc.CloseStatusUpdate>}\n */\nconst methodDescriptor_SqueakAdmin_LndCloseChannel = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/LndCloseChannel',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto_lnd_pb.CloseChannelRequest,\n  proto_lnd_pb.CloseStatusUpdate,\n  /**\n   * @param {!proto.lnrpc.CloseChannelRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.CloseStatusUpdate.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.lnrpc.CloseChannelRequest,\n *   !proto.lnrpc.CloseStatusUpdate>}\n */\nconst methodInfo_SqueakAdmin_LndCloseChannel = new grpc.web.AbstractClientBase.MethodInfo(\n  proto_lnd_pb.CloseStatusUpdate,\n  /**\n   * @param {!proto.lnrpc.CloseChannelRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.CloseStatusUpdate.deserializeBinary\n);\n\n\n/**\n * @param {!proto.lnrpc.CloseChannelRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.CloseStatusUpdate>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.lndCloseChannel =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndCloseChannel',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndCloseChannel);\n};\n\n\n/**\n * @param {!proto.lnrpc.CloseChannelRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.CloseStatusUpdate>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.lndCloseChannel =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndCloseChannel',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndCloseChannel);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.lnrpc.ChannelEventSubscription,\n *   !proto.lnrpc.ChannelEventUpdate>}\n */\nconst methodDescriptor_SqueakAdmin_LndSubscribeChannelEvents = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/LndSubscribeChannelEvents',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto_lnd_pb.ChannelEventSubscription,\n  proto_lnd_pb.ChannelEventUpdate,\n  /**\n   * @param {!proto.lnrpc.ChannelEventSubscription} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.ChannelEventUpdate.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.lnrpc.ChannelEventSubscription,\n *   !proto.lnrpc.ChannelEventUpdate>}\n */\nconst methodInfo_SqueakAdmin_LndSubscribeChannelEvents = new grpc.web.AbstractClientBase.MethodInfo(\n  proto_lnd_pb.ChannelEventUpdate,\n  /**\n   * @param {!proto.lnrpc.ChannelEventSubscription} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.ChannelEventUpdate.deserializeBinary\n);\n\n\n/**\n * @param {!proto.lnrpc.ChannelEventSubscription} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.ChannelEventUpdate>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.lndSubscribeChannelEvents =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndSubscribeChannelEvents',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndSubscribeChannelEvents);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelEventSubscription} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.ChannelEventUpdate>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.lndSubscribeChannelEvents =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndSubscribeChannelEvents',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndSubscribeChannelEvents);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.lnrpc.SendCoinsRequest,\n *   !proto.lnrpc.SendCoinsResponse>}\n */\nconst methodDescriptor_SqueakAdmin_LndSendCoins = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/LndSendCoins',\n  grpc.web.MethodType.UNARY,\n  proto_lnd_pb.SendCoinsRequest,\n  proto_lnd_pb.SendCoinsResponse,\n  /**\n   * @param {!proto.lnrpc.SendCoinsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.SendCoinsResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.lnrpc.SendCoinsRequest,\n *   !proto.lnrpc.SendCoinsResponse>}\n */\nconst methodInfo_SqueakAdmin_LndSendCoins = new grpc.web.AbstractClientBase.MethodInfo(\n  proto_lnd_pb.SendCoinsResponse,\n  /**\n   * @param {!proto.lnrpc.SendCoinsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto_lnd_pb.SendCoinsResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.lnrpc.SendCoinsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.lnrpc.SendCoinsResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.lnrpc.SendCoinsResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.lndSendCoins =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndSendCoins',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndSendCoins,\n      callback);\n};\n\n\n/**\n * @param {!proto.lnrpc.SendCoinsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.lnrpc.SendCoinsResponse>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.lndSendCoins =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LndSendCoins',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LndSendCoins);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.CreateSigningProfileRequest,\n *   !proto.squeaknode.CreateSigningProfileReply>}\n */\nconst methodDescriptor_SqueakAdmin_CreateSigningProfile = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/CreateSigningProfile',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.CreateSigningProfileRequest,\n  proto.squeaknode.CreateSigningProfileReply,\n  /**\n   * @param {!proto.squeaknode.CreateSigningProfileRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.CreateSigningProfileReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.CreateSigningProfileRequest,\n *   !proto.squeaknode.CreateSigningProfileReply>}\n */\nconst methodInfo_SqueakAdmin_CreateSigningProfile = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.CreateSigningProfileReply,\n  /**\n   * @param {!proto.squeaknode.CreateSigningProfileRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.CreateSigningProfileReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.CreateSigningProfileRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.CreateSigningProfileReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.CreateSigningProfileReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.createSigningProfile =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/CreateSigningProfile',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_CreateSigningProfile,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.CreateSigningProfileRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.CreateSigningProfileReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.createSigningProfile =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/CreateSigningProfile',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_CreateSigningProfile);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.CreateContactProfileRequest,\n *   !proto.squeaknode.CreateContactProfileReply>}\n */\nconst methodDescriptor_SqueakAdmin_CreateContactProfile = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/CreateContactProfile',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.CreateContactProfileRequest,\n  proto.squeaknode.CreateContactProfileReply,\n  /**\n   * @param {!proto.squeaknode.CreateContactProfileRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.CreateContactProfileReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.CreateContactProfileRequest,\n *   !proto.squeaknode.CreateContactProfileReply>}\n */\nconst methodInfo_SqueakAdmin_CreateContactProfile = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.CreateContactProfileReply,\n  /**\n   * @param {!proto.squeaknode.CreateContactProfileRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.CreateContactProfileReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.CreateContactProfileRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.CreateContactProfileReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.CreateContactProfileReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.createContactProfile =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/CreateContactProfile',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_CreateContactProfile,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.CreateContactProfileRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.CreateContactProfileReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.createContactProfile =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/CreateContactProfile',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_CreateContactProfile);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.ImportSigningProfileRequest,\n *   !proto.squeaknode.ImportSigningProfileReply>}\n */\nconst methodDescriptor_SqueakAdmin_ImportSigningProfile = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/ImportSigningProfile',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.ImportSigningProfileRequest,\n  proto.squeaknode.ImportSigningProfileReply,\n  /**\n   * @param {!proto.squeaknode.ImportSigningProfileRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.ImportSigningProfileReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.ImportSigningProfileRequest,\n *   !proto.squeaknode.ImportSigningProfileReply>}\n */\nconst methodInfo_SqueakAdmin_ImportSigningProfile = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.ImportSigningProfileReply,\n  /**\n   * @param {!proto.squeaknode.ImportSigningProfileRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.ImportSigningProfileReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.ImportSigningProfileRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.ImportSigningProfileReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.ImportSigningProfileReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.importSigningProfile =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/ImportSigningProfile',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_ImportSigningProfile,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.ImportSigningProfileRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.ImportSigningProfileReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.importSigningProfile =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/ImportSigningProfile',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_ImportSigningProfile);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetProfilesRequest,\n *   !proto.squeaknode.GetProfilesReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetProfiles = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetProfiles',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetProfilesRequest,\n  proto.squeaknode.GetProfilesReply,\n  /**\n   * @param {!proto.squeaknode.GetProfilesRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetProfilesReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetProfilesRequest,\n *   !proto.squeaknode.GetProfilesReply>}\n */\nconst methodInfo_SqueakAdmin_GetProfiles = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetProfilesReply,\n  /**\n   * @param {!proto.squeaknode.GetProfilesRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetProfilesReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetProfilesRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetProfilesReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetProfilesReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getProfiles =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetProfiles',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetProfiles,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetProfilesRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetProfilesReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getProfiles =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetProfiles',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetProfiles);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetSigningProfilesRequest,\n *   !proto.squeaknode.GetSigningProfilesReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetSigningProfiles = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetSigningProfiles',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetSigningProfilesRequest,\n  proto.squeaknode.GetSigningProfilesReply,\n  /**\n   * @param {!proto.squeaknode.GetSigningProfilesRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSigningProfilesReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetSigningProfilesRequest,\n *   !proto.squeaknode.GetSigningProfilesReply>}\n */\nconst methodInfo_SqueakAdmin_GetSigningProfiles = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSigningProfilesReply,\n  /**\n   * @param {!proto.squeaknode.GetSigningProfilesRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSigningProfilesReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetSigningProfilesRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetSigningProfilesReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSigningProfilesReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getSigningProfiles =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSigningProfiles',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSigningProfiles,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetSigningProfilesRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetSigningProfilesReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getSigningProfiles =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSigningProfiles',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSigningProfiles);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetContactProfilesRequest,\n *   !proto.squeaknode.GetContactProfilesReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetContactProfiles = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetContactProfiles',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetContactProfilesRequest,\n  proto.squeaknode.GetContactProfilesReply,\n  /**\n   * @param {!proto.squeaknode.GetContactProfilesRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetContactProfilesReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetContactProfilesRequest,\n *   !proto.squeaknode.GetContactProfilesReply>}\n */\nconst methodInfo_SqueakAdmin_GetContactProfiles = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetContactProfilesReply,\n  /**\n   * @param {!proto.squeaknode.GetContactProfilesRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetContactProfilesReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetContactProfilesRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetContactProfilesReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetContactProfilesReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getContactProfiles =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetContactProfiles',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetContactProfiles,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetContactProfilesRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetContactProfilesReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getContactProfiles =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetContactProfiles',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetContactProfiles);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetSqueakProfileRequest,\n *   !proto.squeaknode.GetSqueakProfileReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetSqueakProfile = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetSqueakProfile',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetSqueakProfileRequest,\n  proto.squeaknode.GetSqueakProfileReply,\n  /**\n   * @param {!proto.squeaknode.GetSqueakProfileRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakProfileReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetSqueakProfileRequest,\n *   !proto.squeaknode.GetSqueakProfileReply>}\n */\nconst methodInfo_SqueakAdmin_GetSqueakProfile = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSqueakProfileReply,\n  /**\n   * @param {!proto.squeaknode.GetSqueakProfileRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakProfileReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetSqueakProfileRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetSqueakProfileReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakProfileReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getSqueakProfile =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSqueakProfile',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSqueakProfile,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetSqueakProfileRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetSqueakProfileReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getSqueakProfile =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSqueakProfile',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSqueakProfile);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetSqueakProfileByAddressRequest,\n *   !proto.squeaknode.GetSqueakProfileByAddressReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetSqueakProfileByAddress = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetSqueakProfileByAddress',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetSqueakProfileByAddressRequest,\n  proto.squeaknode.GetSqueakProfileByAddressReply,\n  /**\n   * @param {!proto.squeaknode.GetSqueakProfileByAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakProfileByAddressReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetSqueakProfileByAddressRequest,\n *   !proto.squeaknode.GetSqueakProfileByAddressReply>}\n */\nconst methodInfo_SqueakAdmin_GetSqueakProfileByAddress = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSqueakProfileByAddressReply,\n  /**\n   * @param {!proto.squeaknode.GetSqueakProfileByAddressRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakProfileByAddressReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetSqueakProfileByAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetSqueakProfileByAddressReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakProfileByAddressReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getSqueakProfileByAddress =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSqueakProfileByAddress',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSqueakProfileByAddress,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetSqueakProfileByAddressRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetSqueakProfileByAddressReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getSqueakProfileByAddress =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSqueakProfileByAddress',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSqueakProfileByAddress);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetSqueakProfileByNameRequest,\n *   !proto.squeaknode.GetSqueakProfileByNameReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetSqueakProfileByName = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetSqueakProfileByName',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetSqueakProfileByNameRequest,\n  proto.squeaknode.GetSqueakProfileByNameReply,\n  /**\n   * @param {!proto.squeaknode.GetSqueakProfileByNameRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakProfileByNameReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetSqueakProfileByNameRequest,\n *   !proto.squeaknode.GetSqueakProfileByNameReply>}\n */\nconst methodInfo_SqueakAdmin_GetSqueakProfileByName = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSqueakProfileByNameReply,\n  /**\n   * @param {!proto.squeaknode.GetSqueakProfileByNameRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakProfileByNameReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetSqueakProfileByNameRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetSqueakProfileByNameReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakProfileByNameReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getSqueakProfileByName =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSqueakProfileByName',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSqueakProfileByName,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetSqueakProfileByNameRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetSqueakProfileByNameReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getSqueakProfileByName =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSqueakProfileByName',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSqueakProfileByName);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SetSqueakProfileFollowingRequest,\n *   !proto.squeaknode.SetSqueakProfileFollowingReply>}\n */\nconst methodDescriptor_SqueakAdmin_SetSqueakProfileFollowing = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SetSqueakProfileFollowing',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.SetSqueakProfileFollowingRequest,\n  proto.squeaknode.SetSqueakProfileFollowingReply,\n  /**\n   * @param {!proto.squeaknode.SetSqueakProfileFollowingRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.SetSqueakProfileFollowingReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SetSqueakProfileFollowingRequest,\n *   !proto.squeaknode.SetSqueakProfileFollowingReply>}\n */\nconst methodInfo_SqueakAdmin_SetSqueakProfileFollowing = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.SetSqueakProfileFollowingReply,\n  /**\n   * @param {!proto.squeaknode.SetSqueakProfileFollowingRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.SetSqueakProfileFollowingReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SetSqueakProfileFollowingRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.SetSqueakProfileFollowingReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.SetSqueakProfileFollowingReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.setSqueakProfileFollowing =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SetSqueakProfileFollowing',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SetSqueakProfileFollowing,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.SetSqueakProfileFollowingRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.SetSqueakProfileFollowingReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.setSqueakProfileFollowing =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SetSqueakProfileFollowing',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SetSqueakProfileFollowing);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SetSqueakProfileUseCustomPriceRequest,\n *   !proto.squeaknode.SetSqueakProfileUseCustomPriceReply>}\n */\nconst methodDescriptor_SqueakAdmin_SetSqueakProfileUseCustomPrice = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SetSqueakProfileUseCustomPrice',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.SetSqueakProfileUseCustomPriceRequest,\n  proto.squeaknode.SetSqueakProfileUseCustomPriceReply,\n  /**\n   * @param {!proto.squeaknode.SetSqueakProfileUseCustomPriceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.SetSqueakProfileUseCustomPriceReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SetSqueakProfileUseCustomPriceRequest,\n *   !proto.squeaknode.SetSqueakProfileUseCustomPriceReply>}\n */\nconst methodInfo_SqueakAdmin_SetSqueakProfileUseCustomPrice = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.SetSqueakProfileUseCustomPriceReply,\n  /**\n   * @param {!proto.squeaknode.SetSqueakProfileUseCustomPriceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.SetSqueakProfileUseCustomPriceReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SetSqueakProfileUseCustomPriceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.SetSqueakProfileUseCustomPriceReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.SetSqueakProfileUseCustomPriceReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.setSqueakProfileUseCustomPrice =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SetSqueakProfileUseCustomPrice',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SetSqueakProfileUseCustomPrice,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.SetSqueakProfileUseCustomPriceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.SetSqueakProfileUseCustomPriceReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.setSqueakProfileUseCustomPrice =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SetSqueakProfileUseCustomPrice',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SetSqueakProfileUseCustomPrice);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SetSqueakProfileCustomPriceRequest,\n *   !proto.squeaknode.SetSqueakProfileCustomPriceReply>}\n */\nconst methodDescriptor_SqueakAdmin_SetSqueakProfileCustomPrice = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SetSqueakProfileCustomPrice',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.SetSqueakProfileCustomPriceRequest,\n  proto.squeaknode.SetSqueakProfileCustomPriceReply,\n  /**\n   * @param {!proto.squeaknode.SetSqueakProfileCustomPriceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.SetSqueakProfileCustomPriceReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SetSqueakProfileCustomPriceRequest,\n *   !proto.squeaknode.SetSqueakProfileCustomPriceReply>}\n */\nconst methodInfo_SqueakAdmin_SetSqueakProfileCustomPrice = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.SetSqueakProfileCustomPriceReply,\n  /**\n   * @param {!proto.squeaknode.SetSqueakProfileCustomPriceRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.SetSqueakProfileCustomPriceReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SetSqueakProfileCustomPriceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.SetSqueakProfileCustomPriceReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.SetSqueakProfileCustomPriceReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.setSqueakProfileCustomPrice =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SetSqueakProfileCustomPrice',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SetSqueakProfileCustomPrice,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.SetSqueakProfileCustomPriceRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.SetSqueakProfileCustomPriceReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.setSqueakProfileCustomPrice =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SetSqueakProfileCustomPrice',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SetSqueakProfileCustomPrice);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.RenameSqueakProfileRequest,\n *   !proto.squeaknode.RenameSqueakProfileReply>}\n */\nconst methodDescriptor_SqueakAdmin_RenameSqueakProfile = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/RenameSqueakProfile',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.RenameSqueakProfileRequest,\n  proto.squeaknode.RenameSqueakProfileReply,\n  /**\n   * @param {!proto.squeaknode.RenameSqueakProfileRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.RenameSqueakProfileReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.RenameSqueakProfileRequest,\n *   !proto.squeaknode.RenameSqueakProfileReply>}\n */\nconst methodInfo_SqueakAdmin_RenameSqueakProfile = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.RenameSqueakProfileReply,\n  /**\n   * @param {!proto.squeaknode.RenameSqueakProfileRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.RenameSqueakProfileReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.RenameSqueakProfileRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.RenameSqueakProfileReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.RenameSqueakProfileReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.renameSqueakProfile =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/RenameSqueakProfile',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_RenameSqueakProfile,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.RenameSqueakProfileRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.RenameSqueakProfileReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.renameSqueakProfile =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/RenameSqueakProfile',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_RenameSqueakProfile);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetSqueakProfilePrivateKeyRequest,\n *   !proto.squeaknode.GetSqueakProfilePrivateKeyReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetSqueakProfilePrivateKey = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetSqueakProfilePrivateKey',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetSqueakProfilePrivateKeyRequest,\n  proto.squeaknode.GetSqueakProfilePrivateKeyReply,\n  /**\n   * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakProfilePrivateKeyReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetSqueakProfilePrivateKeyRequest,\n *   !proto.squeaknode.GetSqueakProfilePrivateKeyReply>}\n */\nconst methodInfo_SqueakAdmin_GetSqueakProfilePrivateKey = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSqueakProfilePrivateKeyReply,\n  /**\n   * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakProfilePrivateKeyReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetSqueakProfilePrivateKeyReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakProfilePrivateKeyReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getSqueakProfilePrivateKey =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSqueakProfilePrivateKey',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSqueakProfilePrivateKey,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetSqueakProfilePrivateKeyReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getSqueakProfilePrivateKey =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSqueakProfilePrivateKey',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSqueakProfilePrivateKey);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.DeleteSqueakProfileRequest,\n *   !proto.squeaknode.DeleteSqueakProfileReply>}\n */\nconst methodDescriptor_SqueakAdmin_DeleteSqueakProfile = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/DeleteSqueakProfile',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.DeleteSqueakProfileRequest,\n  proto.squeaknode.DeleteSqueakProfileReply,\n  /**\n   * @param {!proto.squeaknode.DeleteSqueakProfileRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DeleteSqueakProfileReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.DeleteSqueakProfileRequest,\n *   !proto.squeaknode.DeleteSqueakProfileReply>}\n */\nconst methodInfo_SqueakAdmin_DeleteSqueakProfile = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.DeleteSqueakProfileReply,\n  /**\n   * @param {!proto.squeaknode.DeleteSqueakProfileRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DeleteSqueakProfileReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.DeleteSqueakProfileRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.DeleteSqueakProfileReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.DeleteSqueakProfileReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.deleteSqueakProfile =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DeleteSqueakProfile',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DeleteSqueakProfile,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.DeleteSqueakProfileRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.DeleteSqueakProfileReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.deleteSqueakProfile =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DeleteSqueakProfile',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DeleteSqueakProfile);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SetSqueakProfileImageRequest,\n *   !proto.squeaknode.SetSqueakProfileImageReply>}\n */\nconst methodDescriptor_SqueakAdmin_SetSqueakProfileImage = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SetSqueakProfileImage',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.SetSqueakProfileImageRequest,\n  proto.squeaknode.SetSqueakProfileImageReply,\n  /**\n   * @param {!proto.squeaknode.SetSqueakProfileImageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.SetSqueakProfileImageReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SetSqueakProfileImageRequest,\n *   !proto.squeaknode.SetSqueakProfileImageReply>}\n */\nconst methodInfo_SqueakAdmin_SetSqueakProfileImage = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.SetSqueakProfileImageReply,\n  /**\n   * @param {!proto.squeaknode.SetSqueakProfileImageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.SetSqueakProfileImageReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SetSqueakProfileImageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.SetSqueakProfileImageReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.SetSqueakProfileImageReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.setSqueakProfileImage =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SetSqueakProfileImage',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SetSqueakProfileImage,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.SetSqueakProfileImageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.SetSqueakProfileImageReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.setSqueakProfileImage =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SetSqueakProfileImage',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SetSqueakProfileImage);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.ClearSqueakProfileImageRequest,\n *   !proto.squeaknode.ClearSqueakProfileImageReply>}\n */\nconst methodDescriptor_SqueakAdmin_ClearSqueakProfileImage = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/ClearSqueakProfileImage',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.ClearSqueakProfileImageRequest,\n  proto.squeaknode.ClearSqueakProfileImageReply,\n  /**\n   * @param {!proto.squeaknode.ClearSqueakProfileImageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.ClearSqueakProfileImageReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.ClearSqueakProfileImageRequest,\n *   !proto.squeaknode.ClearSqueakProfileImageReply>}\n */\nconst methodInfo_SqueakAdmin_ClearSqueakProfileImage = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.ClearSqueakProfileImageReply,\n  /**\n   * @param {!proto.squeaknode.ClearSqueakProfileImageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.ClearSqueakProfileImageReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.ClearSqueakProfileImageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.ClearSqueakProfileImageReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.ClearSqueakProfileImageReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.clearSqueakProfileImage =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/ClearSqueakProfileImage',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_ClearSqueakProfileImage,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.ClearSqueakProfileImageRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.ClearSqueakProfileImageReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.clearSqueakProfileImage =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/ClearSqueakProfileImage',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_ClearSqueakProfileImage);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.MakeSqueakRequest,\n *   !proto.squeaknode.MakeSqueakReply>}\n */\nconst methodDescriptor_SqueakAdmin_MakeSqueak = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/MakeSqueak',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.MakeSqueakRequest,\n  proto.squeaknode.MakeSqueakReply,\n  /**\n   * @param {!proto.squeaknode.MakeSqueakRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.MakeSqueakReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.MakeSqueakRequest,\n *   !proto.squeaknode.MakeSqueakReply>}\n */\nconst methodInfo_SqueakAdmin_MakeSqueak = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.MakeSqueakReply,\n  /**\n   * @param {!proto.squeaknode.MakeSqueakRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.MakeSqueakReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.MakeSqueakRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.MakeSqueakReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.MakeSqueakReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.makeSqueak =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/MakeSqueak',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_MakeSqueak,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.MakeSqueakRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.MakeSqueakReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.makeSqueak =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/MakeSqueak',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_MakeSqueak);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetSqueakDisplayRequest,\n *   !proto.squeaknode.GetSqueakDisplayReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetSqueakDisplay = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetSqueakDisplay',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetSqueakDisplayRequest,\n  proto.squeaknode.GetSqueakDisplayReply,\n  /**\n   * @param {!proto.squeaknode.GetSqueakDisplayRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakDisplayReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetSqueakDisplayRequest,\n *   !proto.squeaknode.GetSqueakDisplayReply>}\n */\nconst methodInfo_SqueakAdmin_GetSqueakDisplay = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSqueakDisplayReply,\n  /**\n   * @param {!proto.squeaknode.GetSqueakDisplayRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakDisplayReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetSqueakDisplayRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetSqueakDisplayReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakDisplayReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getSqueakDisplay =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSqueakDisplay',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSqueakDisplay,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetSqueakDisplayRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetSqueakDisplayReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getSqueakDisplay =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSqueakDisplay',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSqueakDisplay);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetTimelineSqueakDisplaysRequest,\n *   !proto.squeaknode.GetTimelineSqueakDisplaysReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetTimelineSqueakDisplays = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetTimelineSqueakDisplays',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetTimelineSqueakDisplaysRequest,\n  proto.squeaknode.GetTimelineSqueakDisplaysReply,\n  /**\n   * @param {!proto.squeaknode.GetTimelineSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetTimelineSqueakDisplaysReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetTimelineSqueakDisplaysRequest,\n *   !proto.squeaknode.GetTimelineSqueakDisplaysReply>}\n */\nconst methodInfo_SqueakAdmin_GetTimelineSqueakDisplays = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetTimelineSqueakDisplaysReply,\n  /**\n   * @param {!proto.squeaknode.GetTimelineSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetTimelineSqueakDisplaysReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetTimelineSqueakDisplaysReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetTimelineSqueakDisplaysReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getTimelineSqueakDisplays =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetTimelineSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetTimelineSqueakDisplays,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetTimelineSqueakDisplaysReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getTimelineSqueakDisplays =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetTimelineSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetTimelineSqueakDisplays);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetAddressSqueakDisplaysRequest,\n *   !proto.squeaknode.GetAddressSqueakDisplaysReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetAddressSqueakDisplays = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetAddressSqueakDisplays',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetAddressSqueakDisplaysRequest,\n  proto.squeaknode.GetAddressSqueakDisplaysReply,\n  /**\n   * @param {!proto.squeaknode.GetAddressSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetAddressSqueakDisplaysReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetAddressSqueakDisplaysRequest,\n *   !proto.squeaknode.GetAddressSqueakDisplaysReply>}\n */\nconst methodInfo_SqueakAdmin_GetAddressSqueakDisplays = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetAddressSqueakDisplaysReply,\n  /**\n   * @param {!proto.squeaknode.GetAddressSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetAddressSqueakDisplaysReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetAddressSqueakDisplaysRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetAddressSqueakDisplaysReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetAddressSqueakDisplaysReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getAddressSqueakDisplays =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetAddressSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetAddressSqueakDisplays,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetAddressSqueakDisplaysRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetAddressSqueakDisplaysReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getAddressSqueakDisplays =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetAddressSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetAddressSqueakDisplays);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetAncestorSqueakDisplaysRequest,\n *   !proto.squeaknode.GetAncestorSqueakDisplaysReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetAncestorSqueakDisplays = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetAncestorSqueakDisplays',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetAncestorSqueakDisplaysRequest,\n  proto.squeaknode.GetAncestorSqueakDisplaysReply,\n  /**\n   * @param {!proto.squeaknode.GetAncestorSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetAncestorSqueakDisplaysReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetAncestorSqueakDisplaysRequest,\n *   !proto.squeaknode.GetAncestorSqueakDisplaysReply>}\n */\nconst methodInfo_SqueakAdmin_GetAncestorSqueakDisplays = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetAncestorSqueakDisplaysReply,\n  /**\n   * @param {!proto.squeaknode.GetAncestorSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetAncestorSqueakDisplaysReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetAncestorSqueakDisplaysReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetAncestorSqueakDisplaysReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getAncestorSqueakDisplays =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetAncestorSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetAncestorSqueakDisplays,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetAncestorSqueakDisplaysReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getAncestorSqueakDisplays =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetAncestorSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetAncestorSqueakDisplays);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetReplySqueakDisplaysRequest,\n *   !proto.squeaknode.GetReplySqueakDisplaysReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetReplySqueakDisplays = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetReplySqueakDisplays',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetReplySqueakDisplaysRequest,\n  proto.squeaknode.GetReplySqueakDisplaysReply,\n  /**\n   * @param {!proto.squeaknode.GetReplySqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetReplySqueakDisplaysReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetReplySqueakDisplaysRequest,\n *   !proto.squeaknode.GetReplySqueakDisplaysReply>}\n */\nconst methodInfo_SqueakAdmin_GetReplySqueakDisplays = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetReplySqueakDisplaysReply,\n  /**\n   * @param {!proto.squeaknode.GetReplySqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetReplySqueakDisplaysReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetReplySqueakDisplaysRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetReplySqueakDisplaysReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetReplySqueakDisplaysReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getReplySqueakDisplays =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetReplySqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetReplySqueakDisplays,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetReplySqueakDisplaysRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetReplySqueakDisplaysReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getReplySqueakDisplays =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetReplySqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetReplySqueakDisplays);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.DeleteSqueakRequest,\n *   !proto.squeaknode.DeleteSqueakReply>}\n */\nconst methodDescriptor_SqueakAdmin_DeleteSqueak = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/DeleteSqueak',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.DeleteSqueakRequest,\n  proto.squeaknode.DeleteSqueakReply,\n  /**\n   * @param {!proto.squeaknode.DeleteSqueakRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DeleteSqueakReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.DeleteSqueakRequest,\n *   !proto.squeaknode.DeleteSqueakReply>}\n */\nconst methodInfo_SqueakAdmin_DeleteSqueak = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.DeleteSqueakReply,\n  /**\n   * @param {!proto.squeaknode.DeleteSqueakRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DeleteSqueakReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.DeleteSqueakRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.DeleteSqueakReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.DeleteSqueakReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.deleteSqueak =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DeleteSqueak',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DeleteSqueak,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.DeleteSqueakRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.DeleteSqueakReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.deleteSqueak =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DeleteSqueak',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DeleteSqueak);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.CreatePeerRequest,\n *   !proto.squeaknode.CreatePeerReply>}\n */\nconst methodDescriptor_SqueakAdmin_CreatePeer = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/CreatePeer',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.CreatePeerRequest,\n  proto.squeaknode.CreatePeerReply,\n  /**\n   * @param {!proto.squeaknode.CreatePeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.CreatePeerReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.CreatePeerRequest,\n *   !proto.squeaknode.CreatePeerReply>}\n */\nconst methodInfo_SqueakAdmin_CreatePeer = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.CreatePeerReply,\n  /**\n   * @param {!proto.squeaknode.CreatePeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.CreatePeerReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.CreatePeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.CreatePeerReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.CreatePeerReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.createPeer =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/CreatePeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_CreatePeer,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.CreatePeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.CreatePeerReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.createPeer =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/CreatePeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_CreatePeer);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetPeerRequest,\n *   !proto.squeaknode.GetPeerReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetPeer = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetPeer',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetPeerRequest,\n  proto.squeaknode.GetPeerReply,\n  /**\n   * @param {!proto.squeaknode.GetPeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetPeerReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetPeerRequest,\n *   !proto.squeaknode.GetPeerReply>}\n */\nconst methodInfo_SqueakAdmin_GetPeer = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetPeerReply,\n  /**\n   * @param {!proto.squeaknode.GetPeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetPeerReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetPeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetPeerReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetPeerReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getPeer =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetPeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetPeer,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetPeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetPeerReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getPeer =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetPeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetPeer);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetPeersRequest,\n *   !proto.squeaknode.GetPeersReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetPeers = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetPeers',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetPeersRequest,\n  proto.squeaknode.GetPeersReply,\n  /**\n   * @param {!proto.squeaknode.GetPeersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetPeersReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetPeersRequest,\n *   !proto.squeaknode.GetPeersReply>}\n */\nconst methodInfo_SqueakAdmin_GetPeers = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetPeersReply,\n  /**\n   * @param {!proto.squeaknode.GetPeersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetPeersReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetPeersRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetPeersReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetPeersReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getPeers =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetPeers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetPeers,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetPeersRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetPeersReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getPeers =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetPeers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetPeers);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SetPeerAutoconnectRequest,\n *   !proto.squeaknode.SetPeerAutoconnectReply>}\n */\nconst methodDescriptor_SqueakAdmin_SetPeerAutoconnect = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SetPeerAutoconnect',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.SetPeerAutoconnectRequest,\n  proto.squeaknode.SetPeerAutoconnectReply,\n  /**\n   * @param {!proto.squeaknode.SetPeerAutoconnectRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.SetPeerAutoconnectReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SetPeerAutoconnectRequest,\n *   !proto.squeaknode.SetPeerAutoconnectReply>}\n */\nconst methodInfo_SqueakAdmin_SetPeerAutoconnect = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.SetPeerAutoconnectReply,\n  /**\n   * @param {!proto.squeaknode.SetPeerAutoconnectRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.SetPeerAutoconnectReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SetPeerAutoconnectRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.SetPeerAutoconnectReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.SetPeerAutoconnectReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.setPeerAutoconnect =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SetPeerAutoconnect',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SetPeerAutoconnect,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.SetPeerAutoconnectRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.SetPeerAutoconnectReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.setPeerAutoconnect =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SetPeerAutoconnect',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SetPeerAutoconnect);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.RenamePeerRequest,\n *   !proto.squeaknode.RenamePeerReply>}\n */\nconst methodDescriptor_SqueakAdmin_RenamePeer = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/RenamePeer',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.RenamePeerRequest,\n  proto.squeaknode.RenamePeerReply,\n  /**\n   * @param {!proto.squeaknode.RenamePeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.RenamePeerReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.RenamePeerRequest,\n *   !proto.squeaknode.RenamePeerReply>}\n */\nconst methodInfo_SqueakAdmin_RenamePeer = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.RenamePeerReply,\n  /**\n   * @param {!proto.squeaknode.RenamePeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.RenamePeerReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.RenamePeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.RenamePeerReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.RenamePeerReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.renamePeer =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/RenamePeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_RenamePeer,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.RenamePeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.RenamePeerReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.renamePeer =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/RenamePeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_RenamePeer);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.DeletePeerRequest,\n *   !proto.squeaknode.DeletePeerReply>}\n */\nconst methodDescriptor_SqueakAdmin_DeletePeer = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/DeletePeer',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.DeletePeerRequest,\n  proto.squeaknode.DeletePeerReply,\n  /**\n   * @param {!proto.squeaknode.DeletePeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DeletePeerReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.DeletePeerRequest,\n *   !proto.squeaknode.DeletePeerReply>}\n */\nconst methodInfo_SqueakAdmin_DeletePeer = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.DeletePeerReply,\n  /**\n   * @param {!proto.squeaknode.DeletePeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DeletePeerReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.DeletePeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.DeletePeerReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.DeletePeerReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.deletePeer =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DeletePeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DeletePeer,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.DeletePeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.DeletePeerReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.deletePeer =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DeletePeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DeletePeer);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetBuyOffersRequest,\n *   !proto.squeaknode.GetBuyOffersReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetBuyOffers = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetBuyOffers',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetBuyOffersRequest,\n  proto.squeaknode.GetBuyOffersReply,\n  /**\n   * @param {!proto.squeaknode.GetBuyOffersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetBuyOffersReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetBuyOffersRequest,\n *   !proto.squeaknode.GetBuyOffersReply>}\n */\nconst methodInfo_SqueakAdmin_GetBuyOffers = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetBuyOffersReply,\n  /**\n   * @param {!proto.squeaknode.GetBuyOffersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetBuyOffersReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetBuyOffersRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetBuyOffersReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetBuyOffersReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getBuyOffers =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetBuyOffers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetBuyOffers,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetBuyOffersRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetBuyOffersReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getBuyOffers =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetBuyOffers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetBuyOffers);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetBuyOfferRequest,\n *   !proto.squeaknode.GetBuyOfferReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetBuyOffer = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetBuyOffer',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetBuyOfferRequest,\n  proto.squeaknode.GetBuyOfferReply,\n  /**\n   * @param {!proto.squeaknode.GetBuyOfferRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetBuyOfferReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetBuyOfferRequest,\n *   !proto.squeaknode.GetBuyOfferReply>}\n */\nconst methodInfo_SqueakAdmin_GetBuyOffer = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetBuyOfferReply,\n  /**\n   * @param {!proto.squeaknode.GetBuyOfferRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetBuyOfferReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetBuyOfferRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetBuyOfferReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetBuyOfferReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getBuyOffer =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetBuyOffer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetBuyOffer,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetBuyOfferRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetBuyOfferReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getBuyOffer =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetBuyOffer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetBuyOffer);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.DownloadSqueaksRequest,\n *   !proto.squeaknode.DownloadSqueaksReply>}\n */\nconst methodDescriptor_SqueakAdmin_DownloadSqueaks = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/DownloadSqueaks',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.DownloadSqueaksRequest,\n  proto.squeaknode.DownloadSqueaksReply,\n  /**\n   * @param {!proto.squeaknode.DownloadSqueaksRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DownloadSqueaksReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.DownloadSqueaksRequest,\n *   !proto.squeaknode.DownloadSqueaksReply>}\n */\nconst methodInfo_SqueakAdmin_DownloadSqueaks = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.DownloadSqueaksReply,\n  /**\n   * @param {!proto.squeaknode.DownloadSqueaksRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DownloadSqueaksReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.DownloadSqueaksRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.DownloadSqueaksReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.DownloadSqueaksReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.downloadSqueaks =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DownloadSqueaks',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DownloadSqueaks,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.DownloadSqueaksRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.DownloadSqueaksReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.downloadSqueaks =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DownloadSqueaks',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DownloadSqueaks);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.DownloadSqueakRequest,\n *   !proto.squeaknode.DownloadSqueakReply>}\n */\nconst methodDescriptor_SqueakAdmin_DownloadSqueak = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/DownloadSqueak',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.DownloadSqueakRequest,\n  proto.squeaknode.DownloadSqueakReply,\n  /**\n   * @param {!proto.squeaknode.DownloadSqueakRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DownloadSqueakReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.DownloadSqueakRequest,\n *   !proto.squeaknode.DownloadSqueakReply>}\n */\nconst methodInfo_SqueakAdmin_DownloadSqueak = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.DownloadSqueakReply,\n  /**\n   * @param {!proto.squeaknode.DownloadSqueakRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DownloadSqueakReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.DownloadSqueakRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.DownloadSqueakReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.DownloadSqueakReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.downloadSqueak =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DownloadSqueak',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DownloadSqueak,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.DownloadSqueakRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.DownloadSqueakReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.downloadSqueak =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DownloadSqueak',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DownloadSqueak);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.DownloadOffersRequest,\n *   !proto.squeaknode.DownloadOffersReply>}\n */\nconst methodDescriptor_SqueakAdmin_DownloadOffers = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/DownloadOffers',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.DownloadOffersRequest,\n  proto.squeaknode.DownloadOffersReply,\n  /**\n   * @param {!proto.squeaknode.DownloadOffersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DownloadOffersReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.DownloadOffersRequest,\n *   !proto.squeaknode.DownloadOffersReply>}\n */\nconst methodInfo_SqueakAdmin_DownloadOffers = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.DownloadOffersReply,\n  /**\n   * @param {!proto.squeaknode.DownloadOffersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DownloadOffersReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.DownloadOffersRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.DownloadOffersReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.DownloadOffersReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.downloadOffers =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DownloadOffers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DownloadOffers,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.DownloadOffersRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.DownloadOffersReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.downloadOffers =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DownloadOffers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DownloadOffers);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.DownloadRepliesRequest,\n *   !proto.squeaknode.DownloadRepliesReply>}\n */\nconst methodDescriptor_SqueakAdmin_DownloadReplies = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/DownloadReplies',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.DownloadRepliesRequest,\n  proto.squeaknode.DownloadRepliesReply,\n  /**\n   * @param {!proto.squeaknode.DownloadRepliesRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DownloadRepliesReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.DownloadRepliesRequest,\n *   !proto.squeaknode.DownloadRepliesReply>}\n */\nconst methodInfo_SqueakAdmin_DownloadReplies = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.DownloadRepliesReply,\n  /**\n   * @param {!proto.squeaknode.DownloadRepliesRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DownloadRepliesReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.DownloadRepliesRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.DownloadRepliesReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.DownloadRepliesReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.downloadReplies =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DownloadReplies',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DownloadReplies,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.DownloadRepliesRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.DownloadRepliesReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.downloadReplies =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DownloadReplies',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DownloadReplies);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.DownloadAddressSqueaksRequest,\n *   !proto.squeaknode.DownloadAddressSqueaksReply>}\n */\nconst methodDescriptor_SqueakAdmin_DownloadAddressSqueaks = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/DownloadAddressSqueaks',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.DownloadAddressSqueaksRequest,\n  proto.squeaknode.DownloadAddressSqueaksReply,\n  /**\n   * @param {!proto.squeaknode.DownloadAddressSqueaksRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DownloadAddressSqueaksReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.DownloadAddressSqueaksRequest,\n *   !proto.squeaknode.DownloadAddressSqueaksReply>}\n */\nconst methodInfo_SqueakAdmin_DownloadAddressSqueaks = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.DownloadAddressSqueaksReply,\n  /**\n   * @param {!proto.squeaknode.DownloadAddressSqueaksRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DownloadAddressSqueaksReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.DownloadAddressSqueaksRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.DownloadAddressSqueaksReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.DownloadAddressSqueaksReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.downloadAddressSqueaks =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DownloadAddressSqueaks',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DownloadAddressSqueaks,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.DownloadAddressSqueaksRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.DownloadAddressSqueaksReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.downloadAddressSqueaks =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DownloadAddressSqueaks',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DownloadAddressSqueaks);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.PayOfferRequest,\n *   !proto.squeaknode.PayOfferReply>}\n */\nconst methodDescriptor_SqueakAdmin_PayOffer = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/PayOffer',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.PayOfferRequest,\n  proto.squeaknode.PayOfferReply,\n  /**\n   * @param {!proto.squeaknode.PayOfferRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.PayOfferReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.PayOfferRequest,\n *   !proto.squeaknode.PayOfferReply>}\n */\nconst methodInfo_SqueakAdmin_PayOffer = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.PayOfferReply,\n  /**\n   * @param {!proto.squeaknode.PayOfferRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.PayOfferReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.PayOfferRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.PayOfferReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.PayOfferReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.payOffer =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/PayOffer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_PayOffer,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.PayOfferRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.PayOfferReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.payOffer =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/PayOffer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_PayOffer);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetSentPaymentsRequest,\n *   !proto.squeaknode.GetSentPaymentsReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetSentPayments = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetSentPayments',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetSentPaymentsRequest,\n  proto.squeaknode.GetSentPaymentsReply,\n  /**\n   * @param {!proto.squeaknode.GetSentPaymentsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSentPaymentsReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetSentPaymentsRequest,\n *   !proto.squeaknode.GetSentPaymentsReply>}\n */\nconst methodInfo_SqueakAdmin_GetSentPayments = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSentPaymentsReply,\n  /**\n   * @param {!proto.squeaknode.GetSentPaymentsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSentPaymentsReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetSentPaymentsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetSentPaymentsReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSentPaymentsReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getSentPayments =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSentPayments',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSentPayments,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetSentPaymentsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetSentPaymentsReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getSentPayments =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSentPayments',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSentPayments);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetSentPaymentRequest,\n *   !proto.squeaknode.GetSentPaymentReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetSentPayment = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetSentPayment',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetSentPaymentRequest,\n  proto.squeaknode.GetSentPaymentReply,\n  /**\n   * @param {!proto.squeaknode.GetSentPaymentRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSentPaymentReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetSentPaymentRequest,\n *   !proto.squeaknode.GetSentPaymentReply>}\n */\nconst methodInfo_SqueakAdmin_GetSentPayment = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSentPaymentReply,\n  /**\n   * @param {!proto.squeaknode.GetSentPaymentRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSentPaymentReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetSentPaymentRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetSentPaymentReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSentPaymentReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getSentPayment =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSentPayment',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSentPayment,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetSentPaymentRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetSentPaymentReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getSentPayment =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSentPayment',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSentPayment);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetSqueakDetailsRequest,\n *   !proto.squeaknode.GetSqueakDetailsReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetSqueakDetails = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetSqueakDetails',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetSqueakDetailsRequest,\n  proto.squeaknode.GetSqueakDetailsReply,\n  /**\n   * @param {!proto.squeaknode.GetSqueakDetailsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakDetailsReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetSqueakDetailsRequest,\n *   !proto.squeaknode.GetSqueakDetailsReply>}\n */\nconst methodInfo_SqueakAdmin_GetSqueakDetails = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSqueakDetailsReply,\n  /**\n   * @param {!proto.squeaknode.GetSqueakDetailsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakDetailsReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetSqueakDetailsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetSqueakDetailsReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakDetailsReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getSqueakDetails =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSqueakDetails',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSqueakDetails,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetSqueakDetailsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetSqueakDetailsReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getSqueakDetails =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSqueakDetails',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSqueakDetails);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetSentOffersRequest,\n *   !proto.squeaknode.GetSentOffersReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetSentOffers = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetSentOffers',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetSentOffersRequest,\n  proto.squeaknode.GetSentOffersReply,\n  /**\n   * @param {!proto.squeaknode.GetSentOffersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSentOffersReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetSentOffersRequest,\n *   !proto.squeaknode.GetSentOffersReply>}\n */\nconst methodInfo_SqueakAdmin_GetSentOffers = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSentOffersReply,\n  /**\n   * @param {!proto.squeaknode.GetSentOffersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSentOffersReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetSentOffersRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetSentOffersReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSentOffersReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getSentOffers =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSentOffers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSentOffers,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetSentOffersRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetSentOffersReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getSentOffers =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetSentOffers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetSentOffers);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetReceivedPaymentsRequest,\n *   !proto.squeaknode.GetReceivedPaymentsReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetReceivedPayments = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetReceivedPayments',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetReceivedPaymentsRequest,\n  proto.squeaknode.GetReceivedPaymentsReply,\n  /**\n   * @param {!proto.squeaknode.GetReceivedPaymentsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetReceivedPaymentsReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetReceivedPaymentsRequest,\n *   !proto.squeaknode.GetReceivedPaymentsReply>}\n */\nconst methodInfo_SqueakAdmin_GetReceivedPayments = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetReceivedPaymentsReply,\n  /**\n   * @param {!proto.squeaknode.GetReceivedPaymentsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetReceivedPaymentsReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetReceivedPaymentsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetReceivedPaymentsReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetReceivedPaymentsReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getReceivedPayments =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetReceivedPayments',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetReceivedPayments,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetReceivedPaymentsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetReceivedPaymentsReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getReceivedPayments =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetReceivedPayments',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetReceivedPayments);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SubscribeReceivedPaymentsRequest,\n *   !proto.squeaknode.ReceivedPayment>}\n */\nconst methodDescriptor_SqueakAdmin_SubscribeReceivedPayments = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SubscribeReceivedPayments',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.squeaknode.SubscribeReceivedPaymentsRequest,\n  proto.squeaknode.ReceivedPayment,\n  /**\n   * @param {!proto.squeaknode.SubscribeReceivedPaymentsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.ReceivedPayment.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SubscribeReceivedPaymentsRequest,\n *   !proto.squeaknode.ReceivedPayment>}\n */\nconst methodInfo_SqueakAdmin_SubscribeReceivedPayments = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.ReceivedPayment,\n  /**\n   * @param {!proto.squeaknode.SubscribeReceivedPaymentsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.ReceivedPayment.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SubscribeReceivedPaymentsRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.ReceivedPayment>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.subscribeReceivedPayments =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeReceivedPayments',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeReceivedPayments);\n};\n\n\n/**\n * @param {!proto.squeaknode.SubscribeReceivedPaymentsRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.ReceivedPayment>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.subscribeReceivedPayments =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeReceivedPayments',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeReceivedPayments);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetNetworkRequest,\n *   !proto.squeaknode.GetNetworkReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetNetwork = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetNetwork',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetNetworkRequest,\n  proto.squeaknode.GetNetworkReply,\n  /**\n   * @param {!proto.squeaknode.GetNetworkRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetNetworkReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetNetworkRequest,\n *   !proto.squeaknode.GetNetworkReply>}\n */\nconst methodInfo_SqueakAdmin_GetNetwork = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetNetworkReply,\n  /**\n   * @param {!proto.squeaknode.GetNetworkRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetNetworkReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetNetworkRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetNetworkReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetNetworkReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getNetwork =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetNetwork',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetNetwork,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetNetworkRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetNetworkReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getNetwork =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetNetwork',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetNetwork);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetPaymentSummaryRequest,\n *   !proto.squeaknode.GetPaymentSummaryReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetPaymentSummary = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetPaymentSummary',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetPaymentSummaryRequest,\n  proto.squeaknode.GetPaymentSummaryReply,\n  /**\n   * @param {!proto.squeaknode.GetPaymentSummaryRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetPaymentSummaryReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetPaymentSummaryRequest,\n *   !proto.squeaknode.GetPaymentSummaryReply>}\n */\nconst methodInfo_SqueakAdmin_GetPaymentSummary = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetPaymentSummaryReply,\n  /**\n   * @param {!proto.squeaknode.GetPaymentSummaryRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetPaymentSummaryReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetPaymentSummaryRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetPaymentSummaryReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetPaymentSummaryReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getPaymentSummary =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetPaymentSummary',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetPaymentSummary,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetPaymentSummaryRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetPaymentSummaryReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getPaymentSummary =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetPaymentSummary',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetPaymentSummary);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.ReprocessReceivedPaymentsRequest,\n *   !proto.squeaknode.ReprocessReceivedPaymentsReply>}\n */\nconst methodDescriptor_SqueakAdmin_ReprocessReceivedPayments = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/ReprocessReceivedPayments',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.ReprocessReceivedPaymentsRequest,\n  proto.squeaknode.ReprocessReceivedPaymentsReply,\n  /**\n   * @param {!proto.squeaknode.ReprocessReceivedPaymentsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.ReprocessReceivedPaymentsReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.ReprocessReceivedPaymentsRequest,\n *   !proto.squeaknode.ReprocessReceivedPaymentsReply>}\n */\nconst methodInfo_SqueakAdmin_ReprocessReceivedPayments = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.ReprocessReceivedPaymentsReply,\n  /**\n   * @param {!proto.squeaknode.ReprocessReceivedPaymentsRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.ReprocessReceivedPaymentsReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.ReprocessReceivedPaymentsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.ReprocessReceivedPaymentsReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.ReprocessReceivedPaymentsReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.reprocessReceivedPayments =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/ReprocessReceivedPayments',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_ReprocessReceivedPayments,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.ReprocessReceivedPaymentsRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.ReprocessReceivedPaymentsReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.reprocessReceivedPayments =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/ReprocessReceivedPayments',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_ReprocessReceivedPayments);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.LikeSqueakRequest,\n *   !proto.squeaknode.LikeSqueakReply>}\n */\nconst methodDescriptor_SqueakAdmin_LikeSqueak = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/LikeSqueak',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.LikeSqueakRequest,\n  proto.squeaknode.LikeSqueakReply,\n  /**\n   * @param {!proto.squeaknode.LikeSqueakRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.LikeSqueakReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.LikeSqueakRequest,\n *   !proto.squeaknode.LikeSqueakReply>}\n */\nconst methodInfo_SqueakAdmin_LikeSqueak = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.LikeSqueakReply,\n  /**\n   * @param {!proto.squeaknode.LikeSqueakRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.LikeSqueakReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.LikeSqueakRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.LikeSqueakReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.LikeSqueakReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.likeSqueak =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LikeSqueak',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LikeSqueak,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.LikeSqueakRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.LikeSqueakReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.likeSqueak =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/LikeSqueak',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_LikeSqueak);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.UnlikeSqueakRequest,\n *   !proto.squeaknode.UnlikeSqueakReply>}\n */\nconst methodDescriptor_SqueakAdmin_UnlikeSqueak = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/UnlikeSqueak',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.UnlikeSqueakRequest,\n  proto.squeaknode.UnlikeSqueakReply,\n  /**\n   * @param {!proto.squeaknode.UnlikeSqueakRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.UnlikeSqueakReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.UnlikeSqueakRequest,\n *   !proto.squeaknode.UnlikeSqueakReply>}\n */\nconst methodInfo_SqueakAdmin_UnlikeSqueak = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.UnlikeSqueakReply,\n  /**\n   * @param {!proto.squeaknode.UnlikeSqueakRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.UnlikeSqueakReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.UnlikeSqueakRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.UnlikeSqueakReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.UnlikeSqueakReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.unlikeSqueak =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/UnlikeSqueak',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_UnlikeSqueak,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.UnlikeSqueakRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.UnlikeSqueakReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.unlikeSqueak =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/UnlikeSqueak',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_UnlikeSqueak);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetLikedSqueakDisplaysRequest,\n *   !proto.squeaknode.GetLikedSqueakDisplaysReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetLikedSqueakDisplays = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetLikedSqueakDisplays',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetLikedSqueakDisplaysRequest,\n  proto.squeaknode.GetLikedSqueakDisplaysReply,\n  /**\n   * @param {!proto.squeaknode.GetLikedSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetLikedSqueakDisplaysReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetLikedSqueakDisplaysRequest,\n *   !proto.squeaknode.GetLikedSqueakDisplaysReply>}\n */\nconst methodInfo_SqueakAdmin_GetLikedSqueakDisplays = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetLikedSqueakDisplaysReply,\n  /**\n   * @param {!proto.squeaknode.GetLikedSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetLikedSqueakDisplaysReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetLikedSqueakDisplaysRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetLikedSqueakDisplaysReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetLikedSqueakDisplaysReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getLikedSqueakDisplays =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetLikedSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetLikedSqueakDisplays,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetLikedSqueakDisplaysRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetLikedSqueakDisplaysReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getLikedSqueakDisplays =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetLikedSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetLikedSqueakDisplays);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.ConnectPeerRequest,\n *   !proto.squeaknode.ConnectPeerReply>}\n */\nconst methodDescriptor_SqueakAdmin_ConnectPeer = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/ConnectPeer',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.ConnectPeerRequest,\n  proto.squeaknode.ConnectPeerReply,\n  /**\n   * @param {!proto.squeaknode.ConnectPeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.ConnectPeerReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.ConnectPeerRequest,\n *   !proto.squeaknode.ConnectPeerReply>}\n */\nconst methodInfo_SqueakAdmin_ConnectPeer = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.ConnectPeerReply,\n  /**\n   * @param {!proto.squeaknode.ConnectPeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.ConnectPeerReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.ConnectPeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.ConnectPeerReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.ConnectPeerReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.connectPeer =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/ConnectPeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_ConnectPeer,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.ConnectPeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.ConnectPeerReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.connectPeer =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/ConnectPeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_ConnectPeer);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetConnectedPeersRequest,\n *   !proto.squeaknode.GetConnectedPeersReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetConnectedPeers = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetConnectedPeers',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetConnectedPeersRequest,\n  proto.squeaknode.GetConnectedPeersReply,\n  /**\n   * @param {!proto.squeaknode.GetConnectedPeersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetConnectedPeersReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetConnectedPeersRequest,\n *   !proto.squeaknode.GetConnectedPeersReply>}\n */\nconst methodInfo_SqueakAdmin_GetConnectedPeers = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetConnectedPeersReply,\n  /**\n   * @param {!proto.squeaknode.GetConnectedPeersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetConnectedPeersReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetConnectedPeersRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetConnectedPeersReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetConnectedPeersReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getConnectedPeers =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetConnectedPeers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetConnectedPeers,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetConnectedPeersRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetConnectedPeersReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getConnectedPeers =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetConnectedPeers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetConnectedPeers);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.GetConnectedPeerRequest,\n *   !proto.squeaknode.GetConnectedPeerReply>}\n */\nconst methodDescriptor_SqueakAdmin_GetConnectedPeer = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/GetConnectedPeer',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.GetConnectedPeerRequest,\n  proto.squeaknode.GetConnectedPeerReply,\n  /**\n   * @param {!proto.squeaknode.GetConnectedPeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetConnectedPeerReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.GetConnectedPeerRequest,\n *   !proto.squeaknode.GetConnectedPeerReply>}\n */\nconst methodInfo_SqueakAdmin_GetConnectedPeer = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetConnectedPeerReply,\n  /**\n   * @param {!proto.squeaknode.GetConnectedPeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetConnectedPeerReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.GetConnectedPeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.GetConnectedPeerReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetConnectedPeerReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.getConnectedPeer =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetConnectedPeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetConnectedPeer,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.GetConnectedPeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.GetConnectedPeerReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.getConnectedPeer =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/GetConnectedPeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_GetConnectedPeer);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.DisconnectPeerRequest,\n *   !proto.squeaknode.DisconnectPeerReply>}\n */\nconst methodDescriptor_SqueakAdmin_DisconnectPeer = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/DisconnectPeer',\n  grpc.web.MethodType.UNARY,\n  proto.squeaknode.DisconnectPeerRequest,\n  proto.squeaknode.DisconnectPeerReply,\n  /**\n   * @param {!proto.squeaknode.DisconnectPeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DisconnectPeerReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.DisconnectPeerRequest,\n *   !proto.squeaknode.DisconnectPeerReply>}\n */\nconst methodInfo_SqueakAdmin_DisconnectPeer = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.DisconnectPeerReply,\n  /**\n   * @param {!proto.squeaknode.DisconnectPeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.DisconnectPeerReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.DisconnectPeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.squeaknode.DisconnectPeerReply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.DisconnectPeerReply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.disconnectPeer =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DisconnectPeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DisconnectPeer,\n      callback);\n};\n\n\n/**\n * @param {!proto.squeaknode.DisconnectPeerRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.squeaknode.DisconnectPeerReply>}\n *     Promise that resolves to the response\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.disconnectPeer =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/squeaknode.SqueakAdmin/DisconnectPeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_DisconnectPeer);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SubscribeConnectedPeersRequest,\n *   !proto.squeaknode.GetConnectedPeersReply>}\n */\nconst methodDescriptor_SqueakAdmin_SubscribeConnectedPeers = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SubscribeConnectedPeers',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.squeaknode.SubscribeConnectedPeersRequest,\n  proto.squeaknode.GetConnectedPeersReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeConnectedPeersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetConnectedPeersReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SubscribeConnectedPeersRequest,\n *   !proto.squeaknode.GetConnectedPeersReply>}\n */\nconst methodInfo_SqueakAdmin_SubscribeConnectedPeers = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetConnectedPeersReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeConnectedPeersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetConnectedPeersReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SubscribeConnectedPeersRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetConnectedPeersReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.subscribeConnectedPeers =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeConnectedPeers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeConnectedPeers);\n};\n\n\n/**\n * @param {!proto.squeaknode.SubscribeConnectedPeersRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetConnectedPeersReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.subscribeConnectedPeers =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeConnectedPeers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeConnectedPeers);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SubscribeConnectedPeerRequest,\n *   !proto.squeaknode.GetConnectedPeerReply>}\n */\nconst methodDescriptor_SqueakAdmin_SubscribeConnectedPeer = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SubscribeConnectedPeer',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.squeaknode.SubscribeConnectedPeerRequest,\n  proto.squeaknode.GetConnectedPeerReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeConnectedPeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetConnectedPeerReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SubscribeConnectedPeerRequest,\n *   !proto.squeaknode.GetConnectedPeerReply>}\n */\nconst methodInfo_SqueakAdmin_SubscribeConnectedPeer = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetConnectedPeerReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeConnectedPeerRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetConnectedPeerReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SubscribeConnectedPeerRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetConnectedPeerReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.subscribeConnectedPeer =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeConnectedPeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeConnectedPeer);\n};\n\n\n/**\n * @param {!proto.squeaknode.SubscribeConnectedPeerRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetConnectedPeerReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.subscribeConnectedPeer =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeConnectedPeer',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeConnectedPeer);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SubscribeBuyOffersRequest,\n *   !proto.squeaknode.GetBuyOfferReply>}\n */\nconst methodDescriptor_SqueakAdmin_SubscribeBuyOffers = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SubscribeBuyOffers',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.squeaknode.SubscribeBuyOffersRequest,\n  proto.squeaknode.GetBuyOfferReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeBuyOffersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetBuyOfferReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SubscribeBuyOffersRequest,\n *   !proto.squeaknode.GetBuyOfferReply>}\n */\nconst methodInfo_SqueakAdmin_SubscribeBuyOffers = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetBuyOfferReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeBuyOffersRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetBuyOfferReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SubscribeBuyOffersRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetBuyOfferReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.subscribeBuyOffers =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeBuyOffers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeBuyOffers);\n};\n\n\n/**\n * @param {!proto.squeaknode.SubscribeBuyOffersRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetBuyOfferReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.subscribeBuyOffers =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeBuyOffers',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeBuyOffers);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SubscribeSqueakDisplayRequest,\n *   !proto.squeaknode.GetSqueakDisplayReply>}\n */\nconst methodDescriptor_SqueakAdmin_SubscribeSqueakDisplay = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SubscribeSqueakDisplay',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.squeaknode.SubscribeSqueakDisplayRequest,\n  proto.squeaknode.GetSqueakDisplayReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeSqueakDisplayRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakDisplayReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SubscribeSqueakDisplayRequest,\n *   !proto.squeaknode.GetSqueakDisplayReply>}\n */\nconst methodInfo_SqueakAdmin_SubscribeSqueakDisplay = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSqueakDisplayReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeSqueakDisplayRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakDisplayReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SubscribeSqueakDisplayRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakDisplayReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.subscribeSqueakDisplay =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeSqueakDisplay',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeSqueakDisplay);\n};\n\n\n/**\n * @param {!proto.squeaknode.SubscribeSqueakDisplayRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakDisplayReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.subscribeSqueakDisplay =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeSqueakDisplay',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeSqueakDisplay);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SubscribeReplySqueakDisplaysRequest,\n *   !proto.squeaknode.GetSqueakDisplayReply>}\n */\nconst methodDescriptor_SqueakAdmin_SubscribeReplySqueakDisplays = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SubscribeReplySqueakDisplays',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.squeaknode.SubscribeReplySqueakDisplaysRequest,\n  proto.squeaknode.GetSqueakDisplayReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeReplySqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakDisplayReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SubscribeReplySqueakDisplaysRequest,\n *   !proto.squeaknode.GetSqueakDisplayReply>}\n */\nconst methodInfo_SqueakAdmin_SubscribeReplySqueakDisplays = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSqueakDisplayReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeReplySqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakDisplayReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SubscribeReplySqueakDisplaysRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakDisplayReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.subscribeReplySqueakDisplays =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeReplySqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeReplySqueakDisplays);\n};\n\n\n/**\n * @param {!proto.squeaknode.SubscribeReplySqueakDisplaysRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakDisplayReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.subscribeReplySqueakDisplays =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeReplySqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeReplySqueakDisplays);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SubscribeAddressSqueakDisplaysRequest,\n *   !proto.squeaknode.GetSqueakDisplayReply>}\n */\nconst methodDescriptor_SqueakAdmin_SubscribeAddressSqueakDisplays = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SubscribeAddressSqueakDisplays',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.squeaknode.SubscribeAddressSqueakDisplaysRequest,\n  proto.squeaknode.GetSqueakDisplayReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeAddressSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakDisplayReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SubscribeAddressSqueakDisplaysRequest,\n *   !proto.squeaknode.GetSqueakDisplayReply>}\n */\nconst methodInfo_SqueakAdmin_SubscribeAddressSqueakDisplays = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSqueakDisplayReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeAddressSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakDisplayReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SubscribeAddressSqueakDisplaysRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakDisplayReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.subscribeAddressSqueakDisplays =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeAddressSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeAddressSqueakDisplays);\n};\n\n\n/**\n * @param {!proto.squeaknode.SubscribeAddressSqueakDisplaysRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakDisplayReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.subscribeAddressSqueakDisplays =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeAddressSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeAddressSqueakDisplays);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest,\n *   !proto.squeaknode.GetAncestorSqueakDisplaysReply>}\n */\nconst methodDescriptor_SqueakAdmin_SubscribeAncestorSqueakDisplays = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SubscribeAncestorSqueakDisplays',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest,\n  proto.squeaknode.GetAncestorSqueakDisplaysReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetAncestorSqueakDisplaysReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest,\n *   !proto.squeaknode.GetAncestorSqueakDisplaysReply>}\n */\nconst methodInfo_SqueakAdmin_SubscribeAncestorSqueakDisplays = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetAncestorSqueakDisplaysReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetAncestorSqueakDisplaysReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetAncestorSqueakDisplaysReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.subscribeAncestorSqueakDisplays =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeAncestorSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeAncestorSqueakDisplays);\n};\n\n\n/**\n * @param {!proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetAncestorSqueakDisplaysReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.subscribeAncestorSqueakDisplays =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeAncestorSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeAncestorSqueakDisplays);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SubscribeSqueakDisplaysRequest,\n *   !proto.squeaknode.GetSqueakDisplayReply>}\n */\nconst methodDescriptor_SqueakAdmin_SubscribeSqueakDisplays = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SubscribeSqueakDisplays',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.squeaknode.SubscribeSqueakDisplaysRequest,\n  proto.squeaknode.GetSqueakDisplayReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakDisplayReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SubscribeSqueakDisplaysRequest,\n *   !proto.squeaknode.GetSqueakDisplayReply>}\n */\nconst methodInfo_SqueakAdmin_SubscribeSqueakDisplays = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSqueakDisplayReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakDisplayReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SubscribeSqueakDisplaysRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakDisplayReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.subscribeSqueakDisplays =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeSqueakDisplays);\n};\n\n\n/**\n * @param {!proto.squeaknode.SubscribeSqueakDisplaysRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakDisplayReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.subscribeSqueakDisplays =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeSqueakDisplays);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest,\n *   !proto.squeaknode.GetSqueakDisplayReply>}\n */\nconst methodDescriptor_SqueakAdmin_SubscribeTimelineSqueakDisplays = new grpc.web.MethodDescriptor(\n  '/squeaknode.SqueakAdmin/SubscribeTimelineSqueakDisplays',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest,\n  proto.squeaknode.GetSqueakDisplayReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakDisplayReply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest,\n *   !proto.squeaknode.GetSqueakDisplayReply>}\n */\nconst methodInfo_SqueakAdmin_SubscribeTimelineSqueakDisplays = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.squeaknode.GetSqueakDisplayReply,\n  /**\n   * @param {!proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.squeaknode.GetSqueakDisplayReply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakDisplayReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminClient.prototype.subscribeTimelineSqueakDisplays =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeTimelineSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeTimelineSqueakDisplays);\n};\n\n\n/**\n * @param {!proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.squeaknode.GetSqueakDisplayReply>}\n *     The XHR Node Readable Stream\n */\nproto.squeaknode.SqueakAdminPromiseClient.prototype.subscribeTimelineSqueakDisplays =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/squeaknode.SqueakAdmin/SubscribeTimelineSqueakDisplays',\n      request,\n      metadata || {},\n      methodDescriptor_SqueakAdmin_SubscribeTimelineSqueakDisplays);\n};\n\n\nmodule.exports = proto.squeaknode;\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.a0185b04.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.a0185b04.svg\";","/* eslint-disable */\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.lnrpc.AbandonChannelRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.AbandonChannelResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.AddInvoiceResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.AddressType', null, global);\ngoog.exportSymbol('proto.lnrpc.BakeMacaroonRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.BakeMacaroonResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.Chain', null, global);\ngoog.exportSymbol('proto.lnrpc.ChanBackupExportRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChanBackupSnapshot', null, global);\ngoog.exportSymbol('proto.lnrpc.ChanInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChanPointShim', null, global);\ngoog.exportSymbol('proto.lnrpc.Channel', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelAcceptRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelAcceptResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBackup', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBackupSubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBackups', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBalanceRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBalanceResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelCloseSummary', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelCloseSummary.ClosureType', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelCloseUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelConstraints', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEdge', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEdgeUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEventSubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEventUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEventUpdate.UpdateType', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelFeeReport', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelGraph', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelGraphRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelOpenUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelPoint', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.CloseChannelRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.CloseStatusUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ClosedChannelUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ClosedChannelsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ClosedChannelsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.CommitmentType', null, global);\ngoog.exportSymbol('proto.lnrpc.ConfirmationUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ConnectPeerRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ConnectPeerResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.DebugLevelRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.DebugLevelResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.DeleteAllPaymentsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.DeleteAllPaymentsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.DisconnectPeerRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.DisconnectPeerResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.EdgeLocator', null, global);\ngoog.exportSymbol('proto.lnrpc.EstimateFeeRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.EstimateFeeResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ExportChannelBackupRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.Failure', null, global);\ngoog.exportSymbol('proto.lnrpc.Failure.FailureCode', null, global);\ngoog.exportSymbol('proto.lnrpc.Feature', null, global);\ngoog.exportSymbol('proto.lnrpc.FeatureBit', null, global);\ngoog.exportSymbol('proto.lnrpc.FeeLimit', null, global);\ngoog.exportSymbol('proto.lnrpc.FeeReportRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.FeeReportResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.FloatMetric', null, global);\ngoog.exportSymbol('proto.lnrpc.ForwardingEvent', null, global);\ngoog.exportSymbol('proto.lnrpc.ForwardingHistoryRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ForwardingHistoryResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingPsbtFinalize', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingPsbtVerify', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingShim', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingShimCancel', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingStateStepResp', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingTransitionMsg', null, global);\ngoog.exportSymbol('proto.lnrpc.GetInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.GetInfoResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.GetRecoveryInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.GetRecoveryInfoResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.GetTransactionsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.GraphTopologySubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.GraphTopologyUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.HTLC', null, global);\ngoog.exportSymbol('proto.lnrpc.HTLCAttempt', null, global);\ngoog.exportSymbol('proto.lnrpc.HTLCAttempt.HTLCStatus', null, global);\ngoog.exportSymbol('proto.lnrpc.Hop', null, global);\ngoog.exportSymbol('proto.lnrpc.HopHint', null, global);\ngoog.exportSymbol('proto.lnrpc.Initiator', null, global);\ngoog.exportSymbol('proto.lnrpc.Invoice', null, global);\ngoog.exportSymbol('proto.lnrpc.Invoice.InvoiceState', null, global);\ngoog.exportSymbol('proto.lnrpc.InvoiceHTLC', null, global);\ngoog.exportSymbol('proto.lnrpc.InvoiceHTLCState', null, global);\ngoog.exportSymbol('proto.lnrpc.InvoiceSubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.KeyDescriptor', null, global);\ngoog.exportSymbol('proto.lnrpc.KeyLocator', null, global);\ngoog.exportSymbol('proto.lnrpc.LightningAddress', null, global);\ngoog.exportSymbol('proto.lnrpc.LightningNode', null, global);\ngoog.exportSymbol('proto.lnrpc.ListChannelsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListChannelsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ListInvoiceRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListInvoiceResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ListPaymentsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListPaymentsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ListPeersRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListPeersResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ListUnspentRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListUnspentResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.MPPRecord', null, global);\ngoog.exportSymbol('proto.lnrpc.MacaroonPermission', null, global);\ngoog.exportSymbol('proto.lnrpc.MultiChanBackup', null, global);\ngoog.exportSymbol('proto.lnrpc.NetworkInfo', null, global);\ngoog.exportSymbol('proto.lnrpc.NetworkInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.NewAddressRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.NewAddressResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeAddress', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeInfo', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeMetricType', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeMetricsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeMetricsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.NodePair', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.OpenChannelRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.OpenStatusUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.OutPoint', null, global);\ngoog.exportSymbol('proto.lnrpc.PayReq', null, global);\ngoog.exportSymbol('proto.lnrpc.PayReqString', null, global);\ngoog.exportSymbol('proto.lnrpc.Payment', null, global);\ngoog.exportSymbol('proto.lnrpc.Payment.PaymentStatus', null, global);\ngoog.exportSymbol('proto.lnrpc.PaymentFailureReason', null, global);\ngoog.exportSymbol('proto.lnrpc.PaymentHash', null, global);\ngoog.exportSymbol('proto.lnrpc.Peer', null, global);\ngoog.exportSymbol('proto.lnrpc.Peer.SyncType', null, global);\ngoog.exportSymbol('proto.lnrpc.PeerEvent', null, global);\ngoog.exportSymbol('proto.lnrpc.PeerEvent.EventType', null, global);\ngoog.exportSymbol('proto.lnrpc.PeerEventSubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.ClosedChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.Commitments', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.ForceClosedChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.PendingChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.PendingOpenChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingHTLC', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.PolicyUpdateRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.PolicyUpdateResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.PsbtShim', null, global);\ngoog.exportSymbol('proto.lnrpc.QueryRoutesRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.QueryRoutesResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ReadyForPsbtFunding', null, global);\ngoog.exportSymbol('proto.lnrpc.Resolution', null, global);\ngoog.exportSymbol('proto.lnrpc.ResolutionOutcome', null, global);\ngoog.exportSymbol('proto.lnrpc.ResolutionType', null, global);\ngoog.exportSymbol('proto.lnrpc.RestoreBackupResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.RestoreChanBackupRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.Route', null, global);\ngoog.exportSymbol('proto.lnrpc.RouteHint', null, global);\ngoog.exportSymbol('proto.lnrpc.RoutingPolicy', null, global);\ngoog.exportSymbol('proto.lnrpc.SendCoinsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SendCoinsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.SendManyRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SendManyResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.SendRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SendResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.SendToRouteRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SignMessageRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SignMessageResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.StopRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.StopResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.TimestampedError', null, global);\ngoog.exportSymbol('proto.lnrpc.Transaction', null, global);\ngoog.exportSymbol('proto.lnrpc.TransactionDetails', null, global);\ngoog.exportSymbol('proto.lnrpc.Utxo', null, global);\ngoog.exportSymbol('proto.lnrpc.VerifyChanBackupResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.VerifyMessageRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.VerifyMessageResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.WalletBalanceRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.WalletBalanceResponse', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Utxo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Utxo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Utxo.displayName = 'proto.lnrpc.Utxo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Utxo.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Utxo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Utxo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Utxo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressType: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    address: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    amountSat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    pkScript: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    outpoint: (f = msg.getOutpoint()) && proto.lnrpc.OutPoint.toObject(includeInstance, f),\n    confirmations: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Utxo}\n */\nproto.lnrpc.Utxo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Utxo;\n  return proto.lnrpc.Utxo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Utxo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Utxo}\n */\nproto.lnrpc.Utxo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lnrpc.AddressType} */ (reader.readEnum());\n      msg.setAddressType(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmountSat(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPkScript(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.OutPoint;\n      reader.readMessage(value,proto.lnrpc.OutPoint.deserializeBinaryFromReader);\n      msg.setOutpoint(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setConfirmations(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Utxo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Utxo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Utxo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Utxo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmountSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getPkScript();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getOutpoint();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.lnrpc.OutPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getConfirmations();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional AddressType address_type = 1;\n * @return {!proto.lnrpc.AddressType}\n */\nproto.lnrpc.Utxo.prototype.getAddressType = function() {\n  return /** @type {!proto.lnrpc.AddressType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.AddressType} value */\nproto.lnrpc.Utxo.prototype.setAddressType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string address = 2;\n * @return {string}\n */\nproto.lnrpc.Utxo.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Utxo.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amount_sat = 3;\n * @return {number}\n */\nproto.lnrpc.Utxo.prototype.getAmountSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Utxo.prototype.setAmountSat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string pk_script = 4;\n * @return {string}\n */\nproto.lnrpc.Utxo.prototype.getPkScript = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Utxo.prototype.setPkScript = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional OutPoint outpoint = 5;\n * @return {?proto.lnrpc.OutPoint}\n */\nproto.lnrpc.Utxo.prototype.getOutpoint = function() {\n  return /** @type{?proto.lnrpc.OutPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.OutPoint, 5));\n};\n\n\n/** @param {?proto.lnrpc.OutPoint|undefined} value */\nproto.lnrpc.Utxo.prototype.setOutpoint = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.lnrpc.Utxo.prototype.clearOutpoint = function() {\n  this.setOutpoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Utxo.prototype.hasOutpoint = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional int64 confirmations = 6;\n * @return {number}\n */\nproto.lnrpc.Utxo.prototype.getConfirmations = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Utxo.prototype.setConfirmations = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Transaction = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Transaction.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Transaction, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Transaction.displayName = 'proto.lnrpc.Transaction';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Transaction.repeatedFields_ = [8];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Transaction.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Transaction.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Transaction} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Transaction.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txHash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    numConfirmations: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    blockHash: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    blockHeight: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    timeStamp: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    totalFees: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    destAddressesList: jspb.Message.getRepeatedField(msg, 8),\n    rawTxHex: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    label: jspb.Message.getFieldWithDefault(msg, 10, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Transaction}\n */\nproto.lnrpc.Transaction.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Transaction;\n  return proto.lnrpc.Transaction.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Transaction} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Transaction}\n */\nproto.lnrpc.Transaction.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumConfirmations(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBlockHash(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlockHeight(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimeStamp(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalFees(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addDestAddresses(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRawTxHex(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Transaction.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Transaction.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Transaction} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Transaction.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getNumConfirmations();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getBlockHash();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getBlockHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getTimeStamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getTotalFees();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getDestAddressesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      8,\n      f\n    );\n  }\n  f = message.getRawTxHex();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getLabel();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string tx_hash = 1;\n * @return {string}\n */\nproto.lnrpc.Transaction.prototype.getTxHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Transaction.prototype.setTxHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amount = 2;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 num_confirmations = 3;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getNumConfirmations = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setNumConfirmations = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string block_hash = 4;\n * @return {string}\n */\nproto.lnrpc.Transaction.prototype.getBlockHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Transaction.prototype.setBlockHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int32 block_height = 5;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setBlockHeight = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 time_stamp = 6;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getTimeStamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setTimeStamp = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 total_fees = 7;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getTotalFees = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setTotalFees = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * repeated string dest_addresses = 8;\n * @return {!Array.<string>}\n */\nproto.lnrpc.Transaction.prototype.getDestAddressesList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 8));\n};\n\n\n/** @param {!Array.<string>} value */\nproto.lnrpc.Transaction.prototype.setDestAddressesList = function(value) {\n  jspb.Message.setField(this, 8, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.lnrpc.Transaction.prototype.addDestAddresses = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 8, value, opt_index);\n};\n\n\nproto.lnrpc.Transaction.prototype.clearDestAddressesList = function() {\n  this.setDestAddressesList([]);\n};\n\n\n/**\n * optional string raw_tx_hex = 9;\n * @return {string}\n */\nproto.lnrpc.Transaction.prototype.getRawTxHex = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Transaction.prototype.setRawTxHex = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string label = 10;\n * @return {string}\n */\nproto.lnrpc.Transaction.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Transaction.prototype.setLabel = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetTransactionsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GetTransactionsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetTransactionsRequest.displayName = 'proto.lnrpc.GetTransactionsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetTransactionsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetTransactionsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetTransactionsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetTransactionsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    startHeight: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    endHeight: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetTransactionsRequest}\n */\nproto.lnrpc.GetTransactionsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetTransactionsRequest;\n  return proto.lnrpc.GetTransactionsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetTransactionsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetTransactionsRequest}\n */\nproto.lnrpc.GetTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStartHeight(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setEndHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetTransactionsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetTransactionsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetTransactionsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetTransactionsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStartHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getEndHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 start_height = 1;\n * @return {number}\n */\nproto.lnrpc.GetTransactionsRequest.prototype.getStartHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetTransactionsRequest.prototype.setStartHeight = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 end_height = 2;\n * @return {number}\n */\nproto.lnrpc.GetTransactionsRequest.prototype.getEndHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetTransactionsRequest.prototype.setEndHeight = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.TransactionDetails = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.TransactionDetails.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.TransactionDetails, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.TransactionDetails.displayName = 'proto.lnrpc.TransactionDetails';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.TransactionDetails.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.TransactionDetails.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.TransactionDetails.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.TransactionDetails} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.TransactionDetails.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),\n    proto.lnrpc.Transaction.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.TransactionDetails}\n */\nproto.lnrpc.TransactionDetails.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.TransactionDetails;\n  return proto.lnrpc.TransactionDetails.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.TransactionDetails} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.TransactionDetails}\n */\nproto.lnrpc.TransactionDetails.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Transaction;\n      reader.readMessage(value,proto.lnrpc.Transaction.deserializeBinaryFromReader);\n      msg.addTransactions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.TransactionDetails.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.TransactionDetails.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.TransactionDetails} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.TransactionDetails.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTransactionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Transaction.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Transaction transactions = 1;\n * @return {!Array.<!proto.lnrpc.Transaction>}\n */\nproto.lnrpc.TransactionDetails.prototype.getTransactionsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Transaction>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Transaction, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Transaction>} value */\nproto.lnrpc.TransactionDetails.prototype.setTransactionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Transaction=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Transaction}\n */\nproto.lnrpc.TransactionDetails.prototype.addTransactions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Transaction, opt_index);\n};\n\n\nproto.lnrpc.TransactionDetails.prototype.clearTransactionsList = function() {\n  this.setTransactionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FeeLimit = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.FeeLimit.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.FeeLimit, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FeeLimit.displayName = 'proto.lnrpc.FeeLimit';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.FeeLimit.oneofGroups_ = [[1,3,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.FeeLimit.LimitCase = {\n  LIMIT_NOT_SET: 0,\n  FIXED: 1,\n  FIXED_MSAT: 3,\n  PERCENT: 2\n};\n\n/**\n * @return {proto.lnrpc.FeeLimit.LimitCase}\n */\nproto.lnrpc.FeeLimit.prototype.getLimitCase = function() {\n  return /** @type {proto.lnrpc.FeeLimit.LimitCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.FeeLimit.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FeeLimit.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FeeLimit.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FeeLimit} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeLimit.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fixed: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    fixedMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    percent: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FeeLimit}\n */\nproto.lnrpc.FeeLimit.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FeeLimit;\n  return proto.lnrpc.FeeLimit.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FeeLimit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FeeLimit}\n */\nproto.lnrpc.FeeLimit.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFixed(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFixedMsat(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPercent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FeeLimit.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FeeLimit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FeeLimit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeLimit.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 fixed = 1;\n * @return {number}\n */\nproto.lnrpc.FeeLimit.prototype.getFixed = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeLimit.prototype.setFixed = function(value) {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.FeeLimit.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FeeLimit.prototype.clearFixed = function() {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.FeeLimit.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FeeLimit.prototype.hasFixed = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 fixed_msat = 3;\n * @return {number}\n */\nproto.lnrpc.FeeLimit.prototype.getFixedMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeLimit.prototype.setFixedMsat = function(value) {\n  jspb.Message.setOneofField(this, 3, proto.lnrpc.FeeLimit.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FeeLimit.prototype.clearFixedMsat = function() {\n  jspb.Message.setOneofField(this, 3, proto.lnrpc.FeeLimit.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FeeLimit.prototype.hasFixedMsat = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional int64 percent = 2;\n * @return {number}\n */\nproto.lnrpc.FeeLimit.prototype.getPercent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeLimit.prototype.setPercent = function(value) {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.FeeLimit.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FeeLimit.prototype.clearPercent = function() {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.FeeLimit.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FeeLimit.prototype.hasPercent = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.SendRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.SendRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendRequest.displayName = 'proto.lnrpc.SendRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.SendRequest.repeatedFields_ = [15];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dest: msg.getDest_asB64(),\n    destString: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    amt: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    amtMsat: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    paymentHash: msg.getPaymentHash_asB64(),\n    paymentHashString: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    paymentRequest: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    finalCltvDelta: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    feeLimit: (f = msg.getFeeLimit()) && proto.lnrpc.FeeLimit.toObject(includeInstance, f),\n    outgoingChanId: jspb.Message.getFieldWithDefault(msg, 9, \"0\"),\n    lastHopPubkey: msg.getLastHopPubkey_asB64(),\n    cltvLimit: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    destCustomRecordsMap: (f = msg.getDestCustomRecordsMap()) ? f.toObject(includeInstance, undefined) : [],\n    allowSelfPayment: jspb.Message.getFieldWithDefault(msg, 14, false),\n    destFeaturesList: jspb.Message.getRepeatedField(msg, 15)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendRequest}\n */\nproto.lnrpc.SendRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendRequest;\n  return proto.lnrpc.SendRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendRequest}\n */\nproto.lnrpc.SendRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDest(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDestString(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmt(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentHash(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHashString(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentRequest(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setFinalCltvDelta(value);\n      break;\n    case 8:\n      var value = new proto.lnrpc.FeeLimit;\n      reader.readMessage(value,proto.lnrpc.FeeLimit.deserializeBinaryFromReader);\n      msg.setFeeLimit(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setOutgoingChanId(value);\n      break;\n    case 13:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setLastHopPubkey(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCltvLimit(value);\n      break;\n    case 11:\n      var value = msg.getDestCustomRecordsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readBytes);\n         });\n      break;\n    case 14:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAllowSelfPayment(value);\n      break;\n    case 15:\n      var value = /** @type {!Array.<!proto.lnrpc.FeatureBit>} */ (reader.readPackedEnum());\n      msg.setDestFeaturesList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDest_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getDestString();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmt();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getPaymentHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getPaymentHashString();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getPaymentRequest();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getFinalCltvDelta();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n  f = message.getFeeLimit();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.lnrpc.FeeLimit.serializeBinaryToWriter\n    );\n  }\n  f = message.getOutgoingChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      9,\n      f\n    );\n  }\n  f = message.getLastHopPubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      13,\n      f\n    );\n  }\n  f = message.getCltvLimit();\n  if (f !== 0) {\n    writer.writeUint32(\n      10,\n      f\n    );\n  }\n  f = message.getDestCustomRecordsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getAllowSelfPayment();\n  if (f) {\n    writer.writeBool(\n      14,\n      f\n    );\n  }\n  f = message.getDestFeaturesList();\n  if (f.length > 0) {\n    writer.writePackedEnum(\n      15,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dest = 1;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getDest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dest = 1;\n * This is a type-conversion wrapper around `getDest()`\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getDest_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDest()));\n};\n\n\n/**\n * optional bytes dest = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDest()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendRequest.prototype.getDest_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDest()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendRequest.prototype.setDest = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string dest_string = 2;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getDestString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendRequest.prototype.setDestString = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt = 3;\n * @return {number}\n */\nproto.lnrpc.SendRequest.prototype.getAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendRequest.prototype.setAmt = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 amt_msat = 12;\n * @return {number}\n */\nproto.lnrpc.SendRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentHash()));\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendRequest.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string payment_hash_string = 5;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentHashString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendRequest.prototype.setPaymentHashString = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string payment_request = 6;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentRequest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendRequest.prototype.setPaymentRequest = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int32 final_cltv_delta = 7;\n * @return {number}\n */\nproto.lnrpc.SendRequest.prototype.getFinalCltvDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendRequest.prototype.setFinalCltvDelta = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional FeeLimit fee_limit = 8;\n * @return {?proto.lnrpc.FeeLimit}\n */\nproto.lnrpc.SendRequest.prototype.getFeeLimit = function() {\n  return /** @type{?proto.lnrpc.FeeLimit} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FeeLimit, 8));\n};\n\n\n/** @param {?proto.lnrpc.FeeLimit|undefined} value */\nproto.lnrpc.SendRequest.prototype.setFeeLimit = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.lnrpc.SendRequest.prototype.clearFeeLimit = function() {\n  this.setFeeLimit(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.SendRequest.prototype.hasFeeLimit = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional uint64 outgoing_chan_id = 9;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getOutgoingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendRequest.prototype.setOutgoingChanId = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 13;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getLastHopPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 13;\n * This is a type-conversion wrapper around `getLastHopPubkey()`\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getLastHopPubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getLastHopPubkey()));\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 13;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getLastHopPubkey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendRequest.prototype.getLastHopPubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getLastHopPubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendRequest.prototype.setLastHopPubkey = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional uint32 cltv_limit = 10;\n * @return {number}\n */\nproto.lnrpc.SendRequest.prototype.getCltvLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendRequest.prototype.setCltvLimit = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * map<uint64, bytes> dest_custom_records = 11;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!(string|Uint8Array)>}\n */\nproto.lnrpc.SendRequest.prototype.getDestCustomRecordsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 11, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.SendRequest.prototype.clearDestCustomRecordsMap = function() {\n  this.getDestCustomRecordsMap().clear();\n};\n\n\n/**\n * optional bool allow_self_payment = 14;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.SendRequest.prototype.getAllowSelfPayment = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.SendRequest.prototype.setAllowSelfPayment = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * repeated FeatureBit dest_features = 15;\n * @return {!Array.<!proto.lnrpc.FeatureBit>}\n */\nproto.lnrpc.SendRequest.prototype.getDestFeaturesList = function() {\n  return /** @type {!Array.<!proto.lnrpc.FeatureBit>} */ (jspb.Message.getRepeatedField(this, 15));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.FeatureBit>} value */\nproto.lnrpc.SendRequest.prototype.setDestFeaturesList = function(value) {\n  jspb.Message.setField(this, 15, value || []);\n};\n\n\n/**\n * @param {!proto.lnrpc.FeatureBit} value\n * @param {number=} opt_index\n */\nproto.lnrpc.SendRequest.prototype.addDestFeatures = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 15, value, opt_index);\n};\n\n\nproto.lnrpc.SendRequest.prototype.clearDestFeaturesList = function() {\n  this.setDestFeaturesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendResponse.displayName = 'proto.lnrpc.SendResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentError: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    paymentPreimage: msg.getPaymentPreimage_asB64(),\n    paymentRoute: (f = msg.getPaymentRoute()) && proto.lnrpc.Route.toObject(includeInstance, f),\n    paymentHash: msg.getPaymentHash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendResponse}\n */\nproto.lnrpc.SendResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendResponse;\n  return proto.lnrpc.SendResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendResponse}\n */\nproto.lnrpc.SendResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentError(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentPreimage(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.Route;\n      reader.readMessage(value,proto.lnrpc.Route.deserializeBinaryFromReader);\n      msg.setPaymentRoute(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPaymentPreimage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getPaymentRoute();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.Route.serializeBinaryToWriter\n    );\n  }\n  f = message.getPaymentHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string payment_error = 1;\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendResponse.prototype.setPaymentError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes payment_preimage = 2;\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes payment_preimage = 2;\n * This is a type-conversion wrapper around `getPaymentPreimage()`\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentPreimage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentPreimage()));\n};\n\n\n/**\n * optional bytes payment_preimage = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentPreimage()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentPreimage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentPreimage()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendResponse.prototype.setPaymentPreimage = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional Route payment_route = 3;\n * @return {?proto.lnrpc.Route}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentRoute = function() {\n  return /** @type{?proto.lnrpc.Route} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Route, 3));\n};\n\n\n/** @param {?proto.lnrpc.Route|undefined} value */\nproto.lnrpc.SendResponse.prototype.setPaymentRoute = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.SendResponse.prototype.clearPaymentRoute = function() {\n  this.setPaymentRoute(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.SendResponse.prototype.hasPaymentRoute = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentHash()));\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendResponse.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendToRouteRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendToRouteRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendToRouteRequest.displayName = 'proto.lnrpc.SendToRouteRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendToRouteRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendToRouteRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendToRouteRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendToRouteRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentHash: msg.getPaymentHash_asB64(),\n    paymentHashString: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    route: (f = msg.getRoute()) && proto.lnrpc.Route.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendToRouteRequest}\n */\nproto.lnrpc.SendToRouteRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendToRouteRequest;\n  return proto.lnrpc.SendToRouteRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendToRouteRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendToRouteRequest}\n */\nproto.lnrpc.SendToRouteRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentHash(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHashString(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.Route;\n      reader.readMessage(value,proto.lnrpc.Route.deserializeBinaryFromReader);\n      msg.setRoute(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendToRouteRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendToRouteRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendToRouteRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendToRouteRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPaymentHashString();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getRoute();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.Route.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes payment_hash = 1;\n * @return {string}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes payment_hash = 1;\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {string}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getPaymentHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentHash()));\n};\n\n\n/**\n * optional bytes payment_hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getPaymentHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendToRouteRequest.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string payment_hash_string = 2;\n * @return {string}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getPaymentHashString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendToRouteRequest.prototype.setPaymentHashString = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional Route route = 4;\n * @return {?proto.lnrpc.Route}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getRoute = function() {\n  return /** @type{?proto.lnrpc.Route} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Route, 4));\n};\n\n\n/** @param {?proto.lnrpc.Route|undefined} value */\nproto.lnrpc.SendToRouteRequest.prototype.setRoute = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.lnrpc.SendToRouteRequest.prototype.clearRoute = function() {\n  this.setRoute(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.SendToRouteRequest.prototype.hasRoute = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelAcceptRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelAcceptRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelAcceptRequest.displayName = 'proto.lnrpc.ChannelAcceptRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelAcceptRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelAcceptRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelAcceptRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodePubkey: msg.getNodePubkey_asB64(),\n    chainHash: msg.getChainHash_asB64(),\n    pendingChanId: msg.getPendingChanId_asB64(),\n    fundingAmt: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    pushAmt: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    dustLimit: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    maxValueInFlight: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    channelReserve: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    minHtlc: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    feePerKw: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    csvDelay: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    maxAcceptedHtlcs: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    channelFlags: jspb.Message.getFieldWithDefault(msg, 13, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelAcceptRequest}\n */\nproto.lnrpc.ChannelAcceptRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelAcceptRequest;\n  return proto.lnrpc.ChannelAcceptRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelAcceptRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelAcceptRequest}\n */\nproto.lnrpc.ChannelAcceptRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNodePubkey(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChainHash(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFundingAmt(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPushAmt(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDustLimit(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxValueInFlight(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChannelReserve(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMinHtlc(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFeePerKw(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCsvDelay(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaxAcceptedHtlcs(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setChannelFlags(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelAcceptRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelAcceptRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelAcceptRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodePubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getChainHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getFundingAmt();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getPushAmt();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getDustLimit();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getMaxValueInFlight();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getChannelReserve();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n  f = message.getMinHtlc();\n  if (f !== 0) {\n    writer.writeUint64(\n      9,\n      f\n    );\n  }\n  f = message.getFeePerKw();\n  if (f !== 0) {\n    writer.writeUint64(\n      10,\n      f\n    );\n  }\n  f = message.getCsvDelay();\n  if (f !== 0) {\n    writer.writeUint32(\n      11,\n      f\n    );\n  }\n  f = message.getMaxAcceptedHtlcs();\n  if (f !== 0) {\n    writer.writeUint32(\n      12,\n      f\n    );\n  }\n  f = message.getChannelFlags();\n  if (f !== 0) {\n    writer.writeUint32(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes node_pubkey = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getNodePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes node_pubkey = 1;\n * This is a type-conversion wrapper around `getNodePubkey()`\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getNodePubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNodePubkey()));\n};\n\n\n/**\n * optional bytes node_pubkey = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNodePubkey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getNodePubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNodePubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setNodePubkey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChainHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * This is a type-conversion wrapper around `getChainHash()`\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChainHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChainHash()));\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChainHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChainHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChainHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setChainHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 3;\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 3;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 funding_amt = 4;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getFundingAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setFundingAmt = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 push_amt = 5;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getPushAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setPushAmt = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 dust_limit = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getDustLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setDustLimit = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 max_value_in_flight = 7;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getMaxValueInFlight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setMaxValueInFlight = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional uint64 channel_reserve = 8;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChannelReserve = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setChannelReserve = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional uint64 min_htlc = 9;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getMinHtlc = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setMinHtlc = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional uint64 fee_per_kw = 10;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getFeePerKw = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setFeePerKw = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional uint32 csv_delay = 11;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getCsvDelay = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setCsvDelay = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional uint32 max_accepted_htlcs = 12;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getMaxAcceptedHtlcs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setMaxAcceptedHtlcs = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional uint32 channel_flags = 13;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChannelFlags = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setChannelFlags = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelAcceptResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelAcceptResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelAcceptResponse.displayName = 'proto.lnrpc.ChannelAcceptResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelAcceptResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelAcceptResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelAcceptResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accept: jspb.Message.getFieldWithDefault(msg, 1, false),\n    pendingChanId: msg.getPendingChanId_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelAcceptResponse}\n */\nproto.lnrpc.ChannelAcceptResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelAcceptResponse;\n  return proto.lnrpc.ChannelAcceptResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelAcceptResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelAcceptResponse}\n */\nproto.lnrpc.ChannelAcceptResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAccept(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelAcceptResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelAcceptResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelAcceptResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccept();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool accept = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getAccept = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ChannelAcceptResponse.prototype.setAccept = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelAcceptResponse.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelPoint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.ChannelPoint.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.ChannelPoint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelPoint.displayName = 'proto.lnrpc.ChannelPoint';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.ChannelPoint.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ChannelPoint.FundingTxidCase = {\n  FUNDING_TXID_NOT_SET: 0,\n  FUNDING_TXID_BYTES: 1,\n  FUNDING_TXID_STR: 2\n};\n\n/**\n * @return {proto.lnrpc.ChannelPoint.FundingTxidCase}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidCase = function() {\n  return /** @type {proto.lnrpc.ChannelPoint.FundingTxidCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.ChannelPoint.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelPoint.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelPoint.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelPoint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelPoint.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fundingTxidBytes: msg.getFundingTxidBytes_asB64(),\n    fundingTxidStr: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    outputIndex: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelPoint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelPoint;\n  return proto.lnrpc.ChannelPoint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelPoint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelPoint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFundingTxidBytes(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFundingTxidStr(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOutputIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelPoint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelPoint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelPoint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelPoint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getOutputIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes funding_txid_bytes = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidBytes = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes funding_txid_bytes = 1;\n * This is a type-conversion wrapper around `getFundingTxidBytes()`\n * @return {string}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidBytes_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFundingTxidBytes()));\n};\n\n\n/**\n * optional bytes funding_txid_bytes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFundingTxidBytes()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidBytes_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFundingTxidBytes()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelPoint.prototype.setFundingTxidBytes = function(value) {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.ChannelPoint.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelPoint.prototype.clearFundingTxidBytes = function() {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.ChannelPoint.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelPoint.prototype.hasFundingTxidBytes = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string funding_txid_str = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidStr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelPoint.prototype.setFundingTxidStr = function(value) {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.ChannelPoint.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelPoint.prototype.clearFundingTxidStr = function() {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.ChannelPoint.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelPoint.prototype.hasFundingTxidStr = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional uint32 output_index = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelPoint.prototype.getOutputIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelPoint.prototype.setOutputIndex = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.OutPoint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.OutPoint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.OutPoint.displayName = 'proto.lnrpc.OutPoint';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.OutPoint.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.OutPoint.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.OutPoint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OutPoint.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txidBytes: msg.getTxidBytes_asB64(),\n    txidStr: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    outputIndex: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.OutPoint}\n */\nproto.lnrpc.OutPoint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.OutPoint;\n  return proto.lnrpc.OutPoint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.OutPoint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.OutPoint}\n */\nproto.lnrpc.OutPoint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTxidBytes(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxidStr(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOutputIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.OutPoint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.OutPoint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.OutPoint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OutPoint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxidBytes_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getTxidStr();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getOutputIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes txid_bytes = 1;\n * @return {string}\n */\nproto.lnrpc.OutPoint.prototype.getTxidBytes = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes txid_bytes = 1;\n * This is a type-conversion wrapper around `getTxidBytes()`\n * @return {string}\n */\nproto.lnrpc.OutPoint.prototype.getTxidBytes_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTxidBytes()));\n};\n\n\n/**\n * optional bytes txid_bytes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxidBytes()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.OutPoint.prototype.getTxidBytes_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTxidBytes()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.OutPoint.prototype.setTxidBytes = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string txid_str = 2;\n * @return {string}\n */\nproto.lnrpc.OutPoint.prototype.getTxidStr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.OutPoint.prototype.setTxidStr = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 output_index = 3;\n * @return {number}\n */\nproto.lnrpc.OutPoint.prototype.getOutputIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OutPoint.prototype.setOutputIndex = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.LightningAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.LightningAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.LightningAddress.displayName = 'proto.lnrpc.LightningAddress';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.LightningAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.LightningAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.LightningAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.LightningAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubkey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    host: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.LightningAddress}\n */\nproto.lnrpc.LightningAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.LightningAddress;\n  return proto.lnrpc.LightningAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.LightningAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.LightningAddress}\n */\nproto.lnrpc.LightningAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubkey(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHost(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.LightningAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.LightningAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.LightningAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.LightningAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getHost();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pubkey = 1;\n * @return {string}\n */\nproto.lnrpc.LightningAddress.prototype.getPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningAddress.prototype.setPubkey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string host = 2;\n * @return {string}\n */\nproto.lnrpc.LightningAddress.prototype.getHost = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningAddress.prototype.setHost = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.EstimateFeeRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.EstimateFeeRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.EstimateFeeRequest.displayName = 'proto.lnrpc.EstimateFeeRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.EstimateFeeRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.EstimateFeeRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.EstimateFeeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EstimateFeeRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addrtoamountMap: (f = msg.getAddrtoamountMap()) ? f.toObject(includeInstance, undefined) : [],\n    targetConf: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.EstimateFeeRequest}\n */\nproto.lnrpc.EstimateFeeRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.EstimateFeeRequest;\n  return proto.lnrpc.EstimateFeeRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.EstimateFeeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.EstimateFeeRequest}\n */\nproto.lnrpc.EstimateFeeRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = msg.getAddrtoamountMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64);\n         });\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.EstimateFeeRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.EstimateFeeRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.EstimateFeeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EstimateFeeRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddrtoamountMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * map<string, int64> AddrToAmount = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nproto.lnrpc.EstimateFeeRequest.prototype.getAddrtoamountMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.EstimateFeeRequest.prototype.clearAddrtoamountMap = function() {\n  this.getAddrtoamountMap().clear();\n};\n\n\n/**\n * optional int32 target_conf = 2;\n * @return {number}\n */\nproto.lnrpc.EstimateFeeRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.EstimateFeeRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.EstimateFeeResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.EstimateFeeResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.EstimateFeeResponse.displayName = 'proto.lnrpc.EstimateFeeResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.EstimateFeeResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.EstimateFeeResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.EstimateFeeResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EstimateFeeResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    feeSat: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    feerateSatPerByte: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.EstimateFeeResponse}\n */\nproto.lnrpc.EstimateFeeResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.EstimateFeeResponse;\n  return proto.lnrpc.EstimateFeeResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.EstimateFeeResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.EstimateFeeResponse}\n */\nproto.lnrpc.EstimateFeeResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeSat(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeerateSatPerByte(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.EstimateFeeResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.EstimateFeeResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.EstimateFeeResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EstimateFeeResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFeeSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getFeerateSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 fee_sat = 1;\n * @return {number}\n */\nproto.lnrpc.EstimateFeeResponse.prototype.getFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.EstimateFeeResponse.prototype.setFeeSat = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 feerate_sat_per_byte = 2;\n * @return {number}\n */\nproto.lnrpc.EstimateFeeResponse.prototype.getFeerateSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.EstimateFeeResponse.prototype.setFeerateSatPerByte = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendManyRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendManyRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendManyRequest.displayName = 'proto.lnrpc.SendManyRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendManyRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendManyRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendManyRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendManyRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addrtoamountMap: (f = msg.getAddrtoamountMap()) ? f.toObject(includeInstance, undefined) : [],\n    targetConf: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    satPerByte: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    label: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendManyRequest}\n */\nproto.lnrpc.SendManyRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendManyRequest;\n  return proto.lnrpc.SendManyRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendManyRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendManyRequest}\n */\nproto.lnrpc.SendManyRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = msg.getAddrtoamountMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64);\n         });\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatPerByte(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendManyRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendManyRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendManyRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendManyRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddrtoamountMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getLabel();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * map<string, int64> AddrToAmount = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nproto.lnrpc.SendManyRequest.prototype.getAddrtoamountMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.SendManyRequest.prototype.clearAddrtoamountMap = function() {\n  this.getAddrtoamountMap().clear();\n};\n\n\n/**\n * optional int32 target_conf = 3;\n * @return {number}\n */\nproto.lnrpc.SendManyRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendManyRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 sat_per_byte = 5;\n * @return {number}\n */\nproto.lnrpc.SendManyRequest.prototype.getSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendManyRequest.prototype.setSatPerByte = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string label = 6;\n * @return {string}\n */\nproto.lnrpc.SendManyRequest.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendManyRequest.prototype.setLabel = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendManyResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendManyResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendManyResponse.displayName = 'proto.lnrpc.SendManyResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendManyResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendManyResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendManyResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendManyResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendManyResponse}\n */\nproto.lnrpc.SendManyResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendManyResponse;\n  return proto.lnrpc.SendManyResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendManyResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendManyResponse}\n */\nproto.lnrpc.SendManyResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendManyResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendManyResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendManyResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendManyResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string txid = 1;\n * @return {string}\n */\nproto.lnrpc.SendManyResponse.prototype.getTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendManyResponse.prototype.setTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendCoinsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendCoinsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendCoinsRequest.displayName = 'proto.lnrpc.SendCoinsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendCoinsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendCoinsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendCoinsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendCoinsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addr: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    targetConf: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    satPerByte: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    sendAll: jspb.Message.getFieldWithDefault(msg, 6, false),\n    label: jspb.Message.getFieldWithDefault(msg, 7, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendCoinsRequest}\n */\nproto.lnrpc.SendCoinsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendCoinsRequest;\n  return proto.lnrpc.SendCoinsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendCoinsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendCoinsRequest}\n */\nproto.lnrpc.SendCoinsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddr(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatPerByte(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSendAll(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendCoinsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendCoinsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendCoinsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendCoinsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getSendAll();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = message.getLabel();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string addr = 1;\n * @return {string}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendCoinsRequest.prototype.setAddr = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amount = 2;\n * @return {number}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendCoinsRequest.prototype.setAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 target_conf = 3;\n * @return {number}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendCoinsRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 sat_per_byte = 5;\n * @return {number}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendCoinsRequest.prototype.setSatPerByte = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional bool send_all = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getSendAll = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.SendCoinsRequest.prototype.setSendAll = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string label = 7;\n * @return {string}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendCoinsRequest.prototype.setLabel = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendCoinsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendCoinsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendCoinsResponse.displayName = 'proto.lnrpc.SendCoinsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendCoinsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendCoinsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendCoinsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendCoinsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendCoinsResponse}\n */\nproto.lnrpc.SendCoinsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendCoinsResponse;\n  return proto.lnrpc.SendCoinsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendCoinsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendCoinsResponse}\n */\nproto.lnrpc.SendCoinsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendCoinsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendCoinsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendCoinsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendCoinsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string txid = 1;\n * @return {string}\n */\nproto.lnrpc.SendCoinsResponse.prototype.getTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendCoinsResponse.prototype.setTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListUnspentRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListUnspentRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListUnspentRequest.displayName = 'proto.lnrpc.ListUnspentRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListUnspentRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListUnspentRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListUnspentRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListUnspentRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    minConfs: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    maxConfs: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListUnspentRequest}\n */\nproto.lnrpc.ListUnspentRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListUnspentRequest;\n  return proto.lnrpc.ListUnspentRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListUnspentRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListUnspentRequest}\n */\nproto.lnrpc.ListUnspentRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinConfs(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMaxConfs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListUnspentRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListUnspentRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListUnspentRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListUnspentRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMinConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMaxConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 min_confs = 1;\n * @return {number}\n */\nproto.lnrpc.ListUnspentRequest.prototype.getMinConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListUnspentRequest.prototype.setMinConfs = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 max_confs = 2;\n * @return {number}\n */\nproto.lnrpc.ListUnspentRequest.prototype.getMaxConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListUnspentRequest.prototype.setMaxConfs = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListUnspentResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListUnspentResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListUnspentResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListUnspentResponse.displayName = 'proto.lnrpc.ListUnspentResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListUnspentResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListUnspentResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListUnspentResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListUnspentResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListUnspentResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    utxosList: jspb.Message.toObjectList(msg.getUtxosList(),\n    proto.lnrpc.Utxo.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListUnspentResponse}\n */\nproto.lnrpc.ListUnspentResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListUnspentResponse;\n  return proto.lnrpc.ListUnspentResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListUnspentResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListUnspentResponse}\n */\nproto.lnrpc.ListUnspentResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Utxo;\n      reader.readMessage(value,proto.lnrpc.Utxo.deserializeBinaryFromReader);\n      msg.addUtxos(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListUnspentResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListUnspentResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListUnspentResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListUnspentResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUtxosList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Utxo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Utxo utxos = 1;\n * @return {!Array.<!proto.lnrpc.Utxo>}\n */\nproto.lnrpc.ListUnspentResponse.prototype.getUtxosList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Utxo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Utxo, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Utxo>} value */\nproto.lnrpc.ListUnspentResponse.prototype.setUtxosList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Utxo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Utxo}\n */\nproto.lnrpc.ListUnspentResponse.prototype.addUtxos = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Utxo, opt_index);\n};\n\n\nproto.lnrpc.ListUnspentResponse.prototype.clearUtxosList = function() {\n  this.setUtxosList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NewAddressRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NewAddressRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NewAddressRequest.displayName = 'proto.lnrpc.NewAddressRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NewAddressRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NewAddressRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NewAddressRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NewAddressRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NewAddressRequest}\n */\nproto.lnrpc.NewAddressRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NewAddressRequest;\n  return proto.lnrpc.NewAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NewAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NewAddressRequest}\n */\nproto.lnrpc.NewAddressRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lnrpc.AddressType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NewAddressRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NewAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NewAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NewAddressRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional AddressType type = 1;\n * @return {!proto.lnrpc.AddressType}\n */\nproto.lnrpc.NewAddressRequest.prototype.getType = function() {\n  return /** @type {!proto.lnrpc.AddressType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.AddressType} value */\nproto.lnrpc.NewAddressRequest.prototype.setType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NewAddressResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NewAddressResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NewAddressResponse.displayName = 'proto.lnrpc.NewAddressResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NewAddressResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NewAddressResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NewAddressResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NewAddressResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NewAddressResponse}\n */\nproto.lnrpc.NewAddressResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NewAddressResponse;\n  return proto.lnrpc.NewAddressResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NewAddressResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NewAddressResponse}\n */\nproto.lnrpc.NewAddressResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NewAddressResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NewAddressResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NewAddressResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NewAddressResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.lnrpc.NewAddressResponse.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NewAddressResponse.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SignMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SignMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SignMessageRequest.displayName = 'proto.lnrpc.SignMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SignMessageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SignMessageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SignMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SignMessageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    msg: msg.getMsg_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SignMessageRequest}\n */\nproto.lnrpc.SignMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SignMessageRequest;\n  return proto.lnrpc.SignMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SignMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SignMessageRequest}\n */\nproto.lnrpc.SignMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMsg(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SignMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SignMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SignMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SignMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMsg_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes msg = 1;\n * @return {string}\n */\nproto.lnrpc.SignMessageRequest.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes msg = 1;\n * This is a type-conversion wrapper around `getMsg()`\n * @return {string}\n */\nproto.lnrpc.SignMessageRequest.prototype.getMsg_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMsg()));\n};\n\n\n/**\n * optional bytes msg = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMsg()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SignMessageRequest.prototype.getMsg_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMsg()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SignMessageRequest.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SignMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SignMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SignMessageResponse.displayName = 'proto.lnrpc.SignMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SignMessageResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SignMessageResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SignMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SignMessageResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    signature: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SignMessageResponse}\n */\nproto.lnrpc.SignMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SignMessageResponse;\n  return proto.lnrpc.SignMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SignMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SignMessageResponse}\n */\nproto.lnrpc.SignMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SignMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SignMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SignMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SignMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSignature();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string signature = 1;\n * @return {string}\n */\nproto.lnrpc.SignMessageResponse.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SignMessageResponse.prototype.setSignature = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.VerifyMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.VerifyMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.VerifyMessageRequest.displayName = 'proto.lnrpc.VerifyMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.VerifyMessageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.VerifyMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyMessageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    msg: msg.getMsg_asB64(),\n    signature: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.VerifyMessageRequest}\n */\nproto.lnrpc.VerifyMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.VerifyMessageRequest;\n  return proto.lnrpc.VerifyMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.VerifyMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.VerifyMessageRequest}\n */\nproto.lnrpc.VerifyMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMsg(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.VerifyMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.VerifyMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMsg_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getSignature();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes msg = 1;\n * @return {string}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes msg = 1;\n * This is a type-conversion wrapper around `getMsg()`\n * @return {string}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.getMsg_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMsg()));\n};\n\n\n/**\n * optional bytes msg = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMsg()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.getMsg_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMsg()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.VerifyMessageRequest.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string signature = 2;\n * @return {string}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.VerifyMessageRequest.prototype.setSignature = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.VerifyMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.VerifyMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.VerifyMessageResponse.displayName = 'proto.lnrpc.VerifyMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.VerifyMessageResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.VerifyMessageResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.VerifyMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyMessageResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    valid: jspb.Message.getFieldWithDefault(msg, 1, false),\n    pubkey: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.VerifyMessageResponse}\n */\nproto.lnrpc.VerifyMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.VerifyMessageResponse;\n  return proto.lnrpc.VerifyMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.VerifyMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.VerifyMessageResponse}\n */\nproto.lnrpc.VerifyMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setValid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubkey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.VerifyMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.VerifyMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.VerifyMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValid();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool valid = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.VerifyMessageResponse.prototype.getValid = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.VerifyMessageResponse.prototype.setValid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string pubkey = 2;\n * @return {string}\n */\nproto.lnrpc.VerifyMessageResponse.prototype.getPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.VerifyMessageResponse.prototype.setPubkey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ConnectPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ConnectPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ConnectPeerRequest.displayName = 'proto.lnrpc.ConnectPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ConnectPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ConnectPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConnectPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addr: (f = msg.getAddr()) && proto.lnrpc.LightningAddress.toObject(includeInstance, f),\n    perm: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ConnectPeerRequest}\n */\nproto.lnrpc.ConnectPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ConnectPeerRequest;\n  return proto.lnrpc.ConnectPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ConnectPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ConnectPeerRequest}\n */\nproto.lnrpc.ConnectPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.LightningAddress;\n      reader.readMessage(value,proto.lnrpc.LightningAddress.deserializeBinaryFromReader);\n      msg.setAddr(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPerm(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ConnectPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ConnectPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConnectPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddr();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.LightningAddress.serializeBinaryToWriter\n    );\n  }\n  f = message.getPerm();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional LightningAddress addr = 1;\n * @return {?proto.lnrpc.LightningAddress}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.getAddr = function() {\n  return /** @type{?proto.lnrpc.LightningAddress} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.LightningAddress, 1));\n};\n\n\n/** @param {?proto.lnrpc.LightningAddress|undefined} value */\nproto.lnrpc.ConnectPeerRequest.prototype.setAddr = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ConnectPeerRequest.prototype.clearAddr = function() {\n  this.setAddr(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.hasAddr = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool perm = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.getPerm = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ConnectPeerRequest.prototype.setPerm = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ConnectPeerResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ConnectPeerResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ConnectPeerResponse.displayName = 'proto.lnrpc.ConnectPeerResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ConnectPeerResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ConnectPeerResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ConnectPeerResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConnectPeerResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ConnectPeerResponse}\n */\nproto.lnrpc.ConnectPeerResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ConnectPeerResponse;\n  return proto.lnrpc.ConnectPeerResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ConnectPeerResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ConnectPeerResponse}\n */\nproto.lnrpc.ConnectPeerResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ConnectPeerResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ConnectPeerResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ConnectPeerResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConnectPeerResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DisconnectPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DisconnectPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DisconnectPeerRequest.displayName = 'proto.lnrpc.DisconnectPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DisconnectPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DisconnectPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DisconnectPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DisconnectPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DisconnectPeerRequest}\n */\nproto.lnrpc.DisconnectPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DisconnectPeerRequest;\n  return proto.lnrpc.DisconnectPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DisconnectPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DisconnectPeerRequest}\n */\nproto.lnrpc.DisconnectPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DisconnectPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DisconnectPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DisconnectPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DisconnectPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.DisconnectPeerRequest.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.DisconnectPeerRequest.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DisconnectPeerResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DisconnectPeerResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DisconnectPeerResponse.displayName = 'proto.lnrpc.DisconnectPeerResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DisconnectPeerResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DisconnectPeerResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DisconnectPeerResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DisconnectPeerResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DisconnectPeerResponse}\n */\nproto.lnrpc.DisconnectPeerResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DisconnectPeerResponse;\n  return proto.lnrpc.DisconnectPeerResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DisconnectPeerResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DisconnectPeerResponse}\n */\nproto.lnrpc.DisconnectPeerResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DisconnectPeerResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DisconnectPeerResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DisconnectPeerResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DisconnectPeerResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.HTLC = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.HTLC, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.HTLC.displayName = 'proto.lnrpc.HTLC';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.HTLC.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.HTLC.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.HTLC} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HTLC.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    incoming: jspb.Message.getFieldWithDefault(msg, 1, false),\n    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    hashLock: msg.getHashLock_asB64(),\n    expirationHeight: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.HTLC}\n */\nproto.lnrpc.HTLC.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.HTLC;\n  return proto.lnrpc.HTLC.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.HTLC} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.HTLC}\n */\nproto.lnrpc.HTLC.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncoming(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHashLock(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setExpirationHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.HTLC.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.HTLC.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.HTLC} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HTLC.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIncoming();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getHashLock_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getExpirationHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool incoming = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.HTLC.prototype.getIncoming = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.HTLC.prototype.setIncoming = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amount = 2;\n * @return {number}\n */\nproto.lnrpc.HTLC.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLC.prototype.setAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bytes hash_lock = 3;\n * @return {string}\n */\nproto.lnrpc.HTLC.prototype.getHashLock = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes hash_lock = 3;\n * This is a type-conversion wrapper around `getHashLock()`\n * @return {string}\n */\nproto.lnrpc.HTLC.prototype.getHashLock_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHashLock()));\n};\n\n\n/**\n * optional bytes hash_lock = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHashLock()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.HTLC.prototype.getHashLock_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHashLock()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.HTLC.prototype.setHashLock = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 expiration_height = 4;\n * @return {number}\n */\nproto.lnrpc.HTLC.prototype.getExpirationHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLC.prototype.setExpirationHeight = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelConstraints = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelConstraints, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelConstraints.displayName = 'proto.lnrpc.ChannelConstraints';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelConstraints.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelConstraints.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelConstraints} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelConstraints.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    csvDelay: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    chanReserveSat: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    dustLimitSat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    maxPendingAmtMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    minHtlcMsat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    maxAcceptedHtlcs: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelConstraints}\n */\nproto.lnrpc.ChannelConstraints.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelConstraints;\n  return proto.lnrpc.ChannelConstraints.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelConstraints} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelConstraints}\n */\nproto.lnrpc.ChannelConstraints.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCsvDelay(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChanReserveSat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDustLimitSat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxPendingAmtMsat(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMinHtlcMsat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaxAcceptedHtlcs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelConstraints.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelConstraints.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelConstraints} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelConstraints.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCsvDelay();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getChanReserveSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getDustLimitSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getMaxPendingAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getMinHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getMaxAcceptedHtlcs();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 csv_delay = 1;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getCsvDelay = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setCsvDelay = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 chan_reserve_sat = 2;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setChanReserveSat = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 dust_limit_sat = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getDustLimitSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setDustLimitSat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 max_pending_amt_msat = 4;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getMaxPendingAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setMaxPendingAmtMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 min_htlc_msat = 5;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getMinHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setMinHtlcMsat = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 max_accepted_htlcs = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getMaxAcceptedHtlcs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setMaxAcceptedHtlcs = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Channel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Channel.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Channel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Channel.displayName = 'proto.lnrpc.Channel';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Channel.repeatedFields_ = [15];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Channel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Channel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Channel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Channel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    active: jspb.Message.getFieldWithDefault(msg, 1, false),\n    remotePubkey: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    channelPoint: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    chanId: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    localBalance: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    remoteBalance: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    commitFee: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    commitWeight: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    feePerKw: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    unsettledBalance: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    totalSatoshisSent: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    totalSatoshisReceived: jspb.Message.getFieldWithDefault(msg, 13, 0),\n    numUpdates: jspb.Message.getFieldWithDefault(msg, 14, 0),\n    pendingHtlcsList: jspb.Message.toObjectList(msg.getPendingHtlcsList(),\n    proto.lnrpc.HTLC.toObject, includeInstance),\n    csvDelay: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    pb_private: jspb.Message.getFieldWithDefault(msg, 17, false),\n    initiator: jspb.Message.getFieldWithDefault(msg, 18, false),\n    chanStatusFlags: jspb.Message.getFieldWithDefault(msg, 19, \"\"),\n    localChanReserveSat: jspb.Message.getFieldWithDefault(msg, 20, 0),\n    remoteChanReserveSat: jspb.Message.getFieldWithDefault(msg, 21, 0),\n    staticRemoteKey: jspb.Message.getFieldWithDefault(msg, 22, false),\n    commitmentType: jspb.Message.getFieldWithDefault(msg, 26, 0),\n    lifetime: jspb.Message.getFieldWithDefault(msg, 23, 0),\n    uptime: jspb.Message.getFieldWithDefault(msg, 24, 0),\n    closeAddress: jspb.Message.getFieldWithDefault(msg, 25, \"\"),\n    pushAmountSat: jspb.Message.getFieldWithDefault(msg, 27, 0),\n    thawHeight: jspb.Message.getFieldWithDefault(msg, 28, 0),\n    localConstraints: (f = msg.getLocalConstraints()) && proto.lnrpc.ChannelConstraints.toObject(includeInstance, f),\n    remoteConstraints: (f = msg.getRemoteConstraints()) && proto.lnrpc.ChannelConstraints.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Channel}\n */\nproto.lnrpc.Channel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Channel;\n  return proto.lnrpc.Channel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Channel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Channel}\n */\nproto.lnrpc.Channel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActive(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemotePubkey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelPoint(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalBalance(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRemoteBalance(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommitFee(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommitWeight(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeePerKw(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUnsettledBalance(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalSatoshisSent(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalSatoshisReceived(value);\n      break;\n    case 14:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNumUpdates(value);\n      break;\n    case 15:\n      var value = new proto.lnrpc.HTLC;\n      reader.readMessage(value,proto.lnrpc.HTLC.deserializeBinaryFromReader);\n      msg.addPendingHtlcs(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCsvDelay(value);\n      break;\n    case 17:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivate(value);\n      break;\n    case 18:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setInitiator(value);\n      break;\n    case 19:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChanStatusFlags(value);\n      break;\n    case 20:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalChanReserveSat(value);\n      break;\n    case 21:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRemoteChanReserveSat(value);\n      break;\n    case 22:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setStaticRemoteKey(value);\n      break;\n    case 26:\n      var value = /** @type {!proto.lnrpc.CommitmentType} */ (reader.readEnum());\n      msg.setCommitmentType(value);\n      break;\n    case 23:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLifetime(value);\n      break;\n    case 24:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUptime(value);\n      break;\n    case 25:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCloseAddress(value);\n      break;\n    case 27:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPushAmountSat(value);\n      break;\n    case 28:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setThawHeight(value);\n      break;\n    case 29:\n      var value = new proto.lnrpc.ChannelConstraints;\n      reader.readMessage(value,proto.lnrpc.ChannelConstraints.deserializeBinaryFromReader);\n      msg.setLocalConstraints(value);\n      break;\n    case 30:\n      var value = new proto.lnrpc.ChannelConstraints;\n      reader.readMessage(value,proto.lnrpc.ChannelConstraints.deserializeBinaryFromReader);\n      msg.setRemoteConstraints(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Channel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Channel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Channel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Channel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getActive();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getRemotePubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getChannelPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      4,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getLocalBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getRemoteBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getCommitFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getCommitWeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getFeePerKw();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n  f = message.getUnsettledBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getTotalSatoshisSent();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getTotalSatoshisReceived();\n  if (f !== 0) {\n    writer.writeInt64(\n      13,\n      f\n    );\n  }\n  f = message.getNumUpdates();\n  if (f !== 0) {\n    writer.writeUint64(\n      14,\n      f\n    );\n  }\n  f = message.getPendingHtlcsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      15,\n      f,\n      proto.lnrpc.HTLC.serializeBinaryToWriter\n    );\n  }\n  f = message.getCsvDelay();\n  if (f !== 0) {\n    writer.writeUint32(\n      16,\n      f\n    );\n  }\n  f = message.getPrivate();\n  if (f) {\n    writer.writeBool(\n      17,\n      f\n    );\n  }\n  f = message.getInitiator();\n  if (f) {\n    writer.writeBool(\n      18,\n      f\n    );\n  }\n  f = message.getChanStatusFlags();\n  if (f.length > 0) {\n    writer.writeString(\n      19,\n      f\n    );\n  }\n  f = message.getLocalChanReserveSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      20,\n      f\n    );\n  }\n  f = message.getRemoteChanReserveSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      21,\n      f\n    );\n  }\n  f = message.getStaticRemoteKey();\n  if (f) {\n    writer.writeBool(\n      22,\n      f\n    );\n  }\n  f = message.getCommitmentType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      26,\n      f\n    );\n  }\n  f = message.getLifetime();\n  if (f !== 0) {\n    writer.writeInt64(\n      23,\n      f\n    );\n  }\n  f = message.getUptime();\n  if (f !== 0) {\n    writer.writeInt64(\n      24,\n      f\n    );\n  }\n  f = message.getCloseAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      25,\n      f\n    );\n  }\n  f = message.getPushAmountSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      27,\n      f\n    );\n  }\n  f = message.getThawHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      28,\n      f\n    );\n  }\n  f = message.getLocalConstraints();\n  if (f != null) {\n    writer.writeMessage(\n      29,\n      f,\n      proto.lnrpc.ChannelConstraints.serializeBinaryToWriter\n    );\n  }\n  f = message.getRemoteConstraints();\n  if (f != null) {\n    writer.writeMessage(\n      30,\n      f,\n      proto.lnrpc.ChannelConstraints.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bool active = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Channel.prototype.getActive = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Channel.prototype.setActive = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string remote_pubkey = 2;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getRemotePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setRemotePubkey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string channel_point = 3;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getChannelPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setChannelPoint = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 chan_id = 4;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 capacity = 5;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 local_balance = 6;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getLocalBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setLocalBalance = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 remote_balance = 7;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getRemoteBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setRemoteBalance = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 commit_fee = 8;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getCommitFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setCommitFee = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 commit_weight = 9;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getCommitWeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setCommitWeight = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional int64 fee_per_kw = 10;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getFeePerKw = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setFeePerKw = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional int64 unsettled_balance = 11;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getUnsettledBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setUnsettledBalance = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional int64 total_satoshis_sent = 12;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getTotalSatoshisSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setTotalSatoshisSent = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional int64 total_satoshis_received = 13;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getTotalSatoshisReceived = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setTotalSatoshisReceived = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional uint64 num_updates = 14;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getNumUpdates = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setNumUpdates = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * repeated HTLC pending_htlcs = 15;\n * @return {!Array.<!proto.lnrpc.HTLC>}\n */\nproto.lnrpc.Channel.prototype.getPendingHtlcsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.HTLC>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.HTLC, 15));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.HTLC>} value */\nproto.lnrpc.Channel.prototype.setPendingHtlcsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 15, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.HTLC=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.HTLC}\n */\nproto.lnrpc.Channel.prototype.addPendingHtlcs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.lnrpc.HTLC, opt_index);\n};\n\n\nproto.lnrpc.Channel.prototype.clearPendingHtlcsList = function() {\n  this.setPendingHtlcsList([]);\n};\n\n\n/**\n * optional uint32 csv_delay = 16;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getCsvDelay = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setCsvDelay = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n/**\n * optional bool private = 17;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Channel.prototype.getPrivate = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Channel.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\n/**\n * optional bool initiator = 18;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Channel.prototype.getInitiator = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Channel.prototype.setInitiator = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\n/**\n * optional string chan_status_flags = 19;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getChanStatusFlags = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setChanStatusFlags = function(value) {\n  jspb.Message.setField(this, 19, value);\n};\n\n\n/**\n * optional int64 local_chan_reserve_sat = 20;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getLocalChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setLocalChanReserveSat = function(value) {\n  jspb.Message.setField(this, 20, value);\n};\n\n\n/**\n * optional int64 remote_chan_reserve_sat = 21;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getRemoteChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setRemoteChanReserveSat = function(value) {\n  jspb.Message.setField(this, 21, value);\n};\n\n\n/**\n * optional bool static_remote_key = 22;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Channel.prototype.getStaticRemoteKey = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 22, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Channel.prototype.setStaticRemoteKey = function(value) {\n  jspb.Message.setField(this, 22, value);\n};\n\n\n/**\n * optional CommitmentType commitment_type = 26;\n * @return {!proto.lnrpc.CommitmentType}\n */\nproto.lnrpc.Channel.prototype.getCommitmentType = function() {\n  return /** @type {!proto.lnrpc.CommitmentType} */ (jspb.Message.getFieldWithDefault(this, 26, 0));\n};\n\n\n/** @param {!proto.lnrpc.CommitmentType} value */\nproto.lnrpc.Channel.prototype.setCommitmentType = function(value) {\n  jspb.Message.setField(this, 26, value);\n};\n\n\n/**\n * optional int64 lifetime = 23;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getLifetime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setLifetime = function(value) {\n  jspb.Message.setField(this, 23, value);\n};\n\n\n/**\n * optional int64 uptime = 24;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getUptime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setUptime = function(value) {\n  jspb.Message.setField(this, 24, value);\n};\n\n\n/**\n * optional string close_address = 25;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getCloseAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setCloseAddress = function(value) {\n  jspb.Message.setField(this, 25, value);\n};\n\n\n/**\n * optional uint64 push_amount_sat = 27;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getPushAmountSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setPushAmountSat = function(value) {\n  jspb.Message.setField(this, 27, value);\n};\n\n\n/**\n * optional uint32 thaw_height = 28;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getThawHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setThawHeight = function(value) {\n  jspb.Message.setField(this, 28, value);\n};\n\n\n/**\n * optional ChannelConstraints local_constraints = 29;\n * @return {?proto.lnrpc.ChannelConstraints}\n */\nproto.lnrpc.Channel.prototype.getLocalConstraints = function() {\n  return /** @type{?proto.lnrpc.ChannelConstraints} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelConstraints, 29));\n};\n\n\n/** @param {?proto.lnrpc.ChannelConstraints|undefined} value */\nproto.lnrpc.Channel.prototype.setLocalConstraints = function(value) {\n  jspb.Message.setWrapperField(this, 29, value);\n};\n\n\nproto.lnrpc.Channel.prototype.clearLocalConstraints = function() {\n  this.setLocalConstraints(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Channel.prototype.hasLocalConstraints = function() {\n  return jspb.Message.getField(this, 29) != null;\n};\n\n\n/**\n * optional ChannelConstraints remote_constraints = 30;\n * @return {?proto.lnrpc.ChannelConstraints}\n */\nproto.lnrpc.Channel.prototype.getRemoteConstraints = function() {\n  return /** @type{?proto.lnrpc.ChannelConstraints} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelConstraints, 30));\n};\n\n\n/** @param {?proto.lnrpc.ChannelConstraints|undefined} value */\nproto.lnrpc.Channel.prototype.setRemoteConstraints = function(value) {\n  jspb.Message.setWrapperField(this, 30, value);\n};\n\n\nproto.lnrpc.Channel.prototype.clearRemoteConstraints = function() {\n  this.setRemoteConstraints(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Channel.prototype.hasRemoteConstraints = function() {\n  return jspb.Message.getField(this, 30) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListChannelsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListChannelsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListChannelsRequest.displayName = 'proto.lnrpc.ListChannelsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListChannelsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListChannelsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListChannelsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListChannelsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    activeOnly: jspb.Message.getFieldWithDefault(msg, 1, false),\n    inactiveOnly: jspb.Message.getFieldWithDefault(msg, 2, false),\n    publicOnly: jspb.Message.getFieldWithDefault(msg, 3, false),\n    privateOnly: jspb.Message.getFieldWithDefault(msg, 4, false),\n    peer: msg.getPeer_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListChannelsRequest}\n */\nproto.lnrpc.ListChannelsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListChannelsRequest;\n  return proto.lnrpc.ListChannelsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListChannelsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListChannelsRequest}\n */\nproto.lnrpc.ListChannelsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActiveOnly(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setInactiveOnly(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPublicOnly(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivateOnly(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPeer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListChannelsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListChannelsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListChannelsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListChannelsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getActiveOnly();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getInactiveOnly();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getPublicOnly();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getPrivateOnly();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getPeer_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool active_only = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getActiveOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListChannelsRequest.prototype.setActiveOnly = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool inactive_only = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getInactiveOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListChannelsRequest.prototype.setInactiveOnly = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool public_only = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPublicOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListChannelsRequest.prototype.setPublicOnly = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool private_only = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPrivateOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListChannelsRequest.prototype.setPrivateOnly = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bytes peer = 5;\n * @return {string}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPeer = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes peer = 5;\n * This is a type-conversion wrapper around `getPeer()`\n * @return {string}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPeer_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPeer()));\n};\n\n\n/**\n * optional bytes peer = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPeer()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPeer_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPeer()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ListChannelsRequest.prototype.setPeer = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListChannelsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListChannelsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListChannelsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListChannelsResponse.displayName = 'proto.lnrpc.ListChannelsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListChannelsResponse.repeatedFields_ = [11];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListChannelsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListChannelsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListChannelsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListChannelsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),\n    proto.lnrpc.Channel.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListChannelsResponse}\n */\nproto.lnrpc.ListChannelsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListChannelsResponse;\n  return proto.lnrpc.ListChannelsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListChannelsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListChannelsResponse}\n */\nproto.lnrpc.ListChannelsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 11:\n      var value = new proto.lnrpc.Channel;\n      reader.readMessage(value,proto.lnrpc.Channel.deserializeBinaryFromReader);\n      msg.addChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListChannelsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListChannelsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListChannelsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListChannelsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      11,\n      f,\n      proto.lnrpc.Channel.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Channel channels = 11;\n * @return {!Array.<!proto.lnrpc.Channel>}\n */\nproto.lnrpc.ListChannelsResponse.prototype.getChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Channel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Channel, 11));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Channel>} value */\nproto.lnrpc.ListChannelsResponse.prototype.setChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 11, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Channel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Channel}\n */\nproto.lnrpc.ListChannelsResponse.prototype.addChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.lnrpc.Channel, opt_index);\n};\n\n\nproto.lnrpc.ListChannelsResponse.prototype.clearChannelsList = function() {\n  this.setChannelsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelCloseSummary = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ChannelCloseSummary.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ChannelCloseSummary, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelCloseSummary.displayName = 'proto.lnrpc.ChannelCloseSummary';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ChannelCloseSummary.repeatedFields_ = [13];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelCloseSummary.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelCloseSummary} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelCloseSummary.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelPoint: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    chanId: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\n    chainHash: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    closingTxHash: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    remotePubkey: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    closeHeight: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    settledBalance: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    timeLockedBalance: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    closeType: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    openInitiator: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    closeInitiator: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    resolutionsList: jspb.Message.toObjectList(msg.getResolutionsList(),\n    proto.lnrpc.Resolution.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelCloseSummary}\n */\nproto.lnrpc.ChannelCloseSummary.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelCloseSummary;\n  return proto.lnrpc.ChannelCloseSummary.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelCloseSummary} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelCloseSummary}\n */\nproto.lnrpc.ChannelCloseSummary.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelPoint(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChainHash(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClosingTxHash(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemotePubkey(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCloseHeight(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSettledBalance(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimeLockedBalance(value);\n      break;\n    case 10:\n      var value = /** @type {!proto.lnrpc.ChannelCloseSummary.ClosureType} */ (reader.readEnum());\n      msg.setCloseType(value);\n      break;\n    case 11:\n      var value = /** @type {!proto.lnrpc.Initiator} */ (reader.readEnum());\n      msg.setOpenInitiator(value);\n      break;\n    case 12:\n      var value = /** @type {!proto.lnrpc.Initiator} */ (reader.readEnum());\n      msg.setCloseInitiator(value);\n      break;\n    case 13:\n      var value = new proto.lnrpc.Resolution;\n      reader.readMessage(value,proto.lnrpc.Resolution.deserializeBinaryFromReader);\n      msg.addResolutions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelCloseSummary.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelCloseSummary} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelCloseSummary.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      2,\n      f\n    );\n  }\n  f = message.getChainHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getClosingTxHash();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getRemotePubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getCloseHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      7,\n      f\n    );\n  }\n  f = message.getSettledBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getTimeLockedBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getCloseType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getOpenInitiator();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      11,\n      f\n    );\n  }\n  f = message.getCloseInitiator();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      12,\n      f\n    );\n  }\n  f = message.getResolutionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      13,\n      f,\n      proto.lnrpc.Resolution.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ChannelCloseSummary.ClosureType = {\n  COOPERATIVE_CLOSE: 0,\n  LOCAL_FORCE_CLOSE: 1,\n  REMOTE_FORCE_CLOSE: 2,\n  BREACH_CLOSE: 3,\n  FUNDING_CANCELED: 4,\n  ABANDONED: 5\n};\n\n/**\n * optional string channel_point = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getChannelPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setChannelPoint = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string chain_hash = 3;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getChainHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setChainHash = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string closing_tx_hash = 4;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getClosingTxHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setClosingTxHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string remote_pubkey = 5;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getRemotePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setRemotePubkey = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 capacity = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint32 close_height = 7;\n * @return {number}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getCloseHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setCloseHeight = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 settled_balance = 8;\n * @return {number}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getSettledBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setSettledBalance = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 time_locked_balance = 9;\n * @return {number}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getTimeLockedBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setTimeLockedBalance = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional ClosureType close_type = 10;\n * @return {!proto.lnrpc.ChannelCloseSummary.ClosureType}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getCloseType = function() {\n  return /** @type {!proto.lnrpc.ChannelCloseSummary.ClosureType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {!proto.lnrpc.ChannelCloseSummary.ClosureType} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setCloseType = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional Initiator open_initiator = 11;\n * @return {!proto.lnrpc.Initiator}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getOpenInitiator = function() {\n  return /** @type {!proto.lnrpc.Initiator} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {!proto.lnrpc.Initiator} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setOpenInitiator = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional Initiator close_initiator = 12;\n * @return {!proto.lnrpc.Initiator}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getCloseInitiator = function() {\n  return /** @type {!proto.lnrpc.Initiator} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {!proto.lnrpc.Initiator} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setCloseInitiator = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * repeated Resolution resolutions = 13;\n * @return {!Array.<!proto.lnrpc.Resolution>}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getResolutionsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Resolution>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Resolution, 13));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Resolution>} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setResolutionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 13, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Resolution=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Resolution}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.addResolutions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.lnrpc.Resolution, opt_index);\n};\n\n\nproto.lnrpc.ChannelCloseSummary.prototype.clearResolutionsList = function() {\n  this.setResolutionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Resolution = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Resolution, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Resolution.displayName = 'proto.lnrpc.Resolution';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Resolution.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Resolution.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Resolution} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Resolution.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    resolutionType: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    outcome: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    outpoint: (f = msg.getOutpoint()) && proto.lnrpc.OutPoint.toObject(includeInstance, f),\n    amountSat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    sweepTxid: jspb.Message.getFieldWithDefault(msg, 5, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Resolution}\n */\nproto.lnrpc.Resolution.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Resolution;\n  return proto.lnrpc.Resolution.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Resolution} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Resolution}\n */\nproto.lnrpc.Resolution.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lnrpc.ResolutionType} */ (reader.readEnum());\n      msg.setResolutionType(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.lnrpc.ResolutionOutcome} */ (reader.readEnum());\n      msg.setOutcome(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.OutPoint;\n      reader.readMessage(value,proto.lnrpc.OutPoint.deserializeBinaryFromReader);\n      msg.setOutpoint(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmountSat(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSweepTxid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Resolution.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Resolution.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Resolution} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Resolution.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getResolutionType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getOutcome();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getOutpoint();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.OutPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getAmountSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getSweepTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ResolutionType resolution_type = 1;\n * @return {!proto.lnrpc.ResolutionType}\n */\nproto.lnrpc.Resolution.prototype.getResolutionType = function() {\n  return /** @type {!proto.lnrpc.ResolutionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.ResolutionType} value */\nproto.lnrpc.Resolution.prototype.setResolutionType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional ResolutionOutcome outcome = 2;\n * @return {!proto.lnrpc.ResolutionOutcome}\n */\nproto.lnrpc.Resolution.prototype.getOutcome = function() {\n  return /** @type {!proto.lnrpc.ResolutionOutcome} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {!proto.lnrpc.ResolutionOutcome} value */\nproto.lnrpc.Resolution.prototype.setOutcome = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional OutPoint outpoint = 3;\n * @return {?proto.lnrpc.OutPoint}\n */\nproto.lnrpc.Resolution.prototype.getOutpoint = function() {\n  return /** @type{?proto.lnrpc.OutPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.OutPoint, 3));\n};\n\n\n/** @param {?proto.lnrpc.OutPoint|undefined} value */\nproto.lnrpc.Resolution.prototype.setOutpoint = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.Resolution.prototype.clearOutpoint = function() {\n  this.setOutpoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Resolution.prototype.hasOutpoint = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint64 amount_sat = 4;\n * @return {number}\n */\nproto.lnrpc.Resolution.prototype.getAmountSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Resolution.prototype.setAmountSat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string sweep_txid = 5;\n * @return {string}\n */\nproto.lnrpc.Resolution.prototype.getSweepTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Resolution.prototype.setSweepTxid = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ClosedChannelsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ClosedChannelsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ClosedChannelsRequest.displayName = 'proto.lnrpc.ClosedChannelsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ClosedChannelsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ClosedChannelsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cooperative: jspb.Message.getFieldWithDefault(msg, 1, false),\n    localForce: jspb.Message.getFieldWithDefault(msg, 2, false),\n    remoteForce: jspb.Message.getFieldWithDefault(msg, 3, false),\n    breach: jspb.Message.getFieldWithDefault(msg, 4, false),\n    fundingCanceled: jspb.Message.getFieldWithDefault(msg, 5, false),\n    abandoned: jspb.Message.getFieldWithDefault(msg, 6, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ClosedChannelsRequest}\n */\nproto.lnrpc.ClosedChannelsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ClosedChannelsRequest;\n  return proto.lnrpc.ClosedChannelsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ClosedChannelsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ClosedChannelsRequest}\n */\nproto.lnrpc.ClosedChannelsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setCooperative(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setLocalForce(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRemoteForce(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setBreach(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFundingCanceled(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAbandoned(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ClosedChannelsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ClosedChannelsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCooperative();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getLocalForce();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getRemoteForce();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getBreach();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getFundingCanceled();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getAbandoned();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool cooperative = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getCooperative = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setCooperative = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool local_force = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getLocalForce = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setLocalForce = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool remote_force = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getRemoteForce = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setRemoteForce = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool breach = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getBreach = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setBreach = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bool funding_canceled = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getFundingCanceled = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setFundingCanceled = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional bool abandoned = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getAbandoned = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setAbandoned = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ClosedChannelsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ClosedChannelsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ClosedChannelsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ClosedChannelsResponse.displayName = 'proto.lnrpc.ClosedChannelsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ClosedChannelsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ClosedChannelsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ClosedChannelsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ClosedChannelsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),\n    proto.lnrpc.ChannelCloseSummary.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ClosedChannelsResponse}\n */\nproto.lnrpc.ClosedChannelsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ClosedChannelsResponse;\n  return proto.lnrpc.ClosedChannelsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ClosedChannelsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ClosedChannelsResponse}\n */\nproto.lnrpc.ClosedChannelsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelCloseSummary;\n      reader.readMessage(value,proto.lnrpc.ChannelCloseSummary.deserializeBinaryFromReader);\n      msg.addChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ClosedChannelsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ClosedChannelsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ClosedChannelsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelCloseSummary.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ChannelCloseSummary channels = 1;\n * @return {!Array.<!proto.lnrpc.ChannelCloseSummary>}\n */\nproto.lnrpc.ClosedChannelsResponse.prototype.getChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelCloseSummary>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelCloseSummary, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelCloseSummary>} value */\nproto.lnrpc.ClosedChannelsResponse.prototype.setChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelCloseSummary=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelCloseSummary}\n */\nproto.lnrpc.ClosedChannelsResponse.prototype.addChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ChannelCloseSummary, opt_index);\n};\n\n\nproto.lnrpc.ClosedChannelsResponse.prototype.clearChannelsList = function() {\n  this.setChannelsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Peer = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Peer.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Peer, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Peer.displayName = 'proto.lnrpc.Peer';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Peer.repeatedFields_ = [12];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Peer.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Peer.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Peer} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Peer.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    address: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    bytesSent: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    bytesRecv: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    satSent: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    satRecv: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    inbound: jspb.Message.getFieldWithDefault(msg, 8, false),\n    pingTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    syncType: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : [],\n    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),\n    proto.lnrpc.TimestampedError.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Peer}\n */\nproto.lnrpc.Peer.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Peer;\n  return proto.lnrpc.Peer.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Peer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Peer}\n */\nproto.lnrpc.Peer.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBytesSent(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBytesRecv(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatSent(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatRecv(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setInbound(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPingTime(value);\n      break;\n    case 10:\n      var value = /** @type {!proto.lnrpc.Peer.SyncType} */ (reader.readEnum());\n      msg.setSyncType(value);\n      break;\n    case 11:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    case 12:\n      var value = new proto.lnrpc.TimestampedError;\n      reader.readMessage(value,proto.lnrpc.TimestampedError.deserializeBinaryFromReader);\n      msg.addErrors(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Peer.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Peer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Peer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Peer.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getBytesSent();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getBytesRecv();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getSatSent();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getSatRecv();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getInbound();\n  if (f) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n  f = message.getPingTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getSyncType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n  f = message.getErrorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      12,\n      f,\n      proto.lnrpc.TimestampedError.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Peer.SyncType = {\n  UNKNOWN_SYNC: 0,\n  ACTIVE_SYNC: 1,\n  PASSIVE_SYNC: 2\n};\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.Peer.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Peer.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string address = 3;\n * @return {string}\n */\nproto.lnrpc.Peer.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Peer.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 bytes_sent = 4;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getBytesSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setBytesSent = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 bytes_recv = 5;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getBytesRecv = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setBytesRecv = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 sat_sent = 6;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getSatSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setSatSent = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 sat_recv = 7;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getSatRecv = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setSatRecv = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional bool inbound = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Peer.prototype.getInbound = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Peer.prototype.setInbound = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 ping_time = 9;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getPingTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setPingTime = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional SyncType sync_type = 10;\n * @return {!proto.lnrpc.Peer.SyncType}\n */\nproto.lnrpc.Peer.prototype.getSyncType = function() {\n  return /** @type {!proto.lnrpc.Peer.SyncType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {!proto.lnrpc.Peer.SyncType} value */\nproto.lnrpc.Peer.prototype.setSyncType = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * map<uint32, Feature> features = 11;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.Peer.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 11, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.Peer.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n/**\n * repeated TimestampedError errors = 12;\n * @return {!Array.<!proto.lnrpc.TimestampedError>}\n */\nproto.lnrpc.Peer.prototype.getErrorsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.TimestampedError>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.TimestampedError, 12));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.TimestampedError>} value */\nproto.lnrpc.Peer.prototype.setErrorsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 12, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.TimestampedError=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.TimestampedError}\n */\nproto.lnrpc.Peer.prototype.addErrors = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.lnrpc.TimestampedError, opt_index);\n};\n\n\nproto.lnrpc.Peer.prototype.clearErrorsList = function() {\n  this.setErrorsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.TimestampedError = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.TimestampedError, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.TimestampedError.displayName = 'proto.lnrpc.TimestampedError';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.TimestampedError.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.TimestampedError.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.TimestampedError} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.TimestampedError.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    error: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.TimestampedError}\n */\nproto.lnrpc.TimestampedError.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.TimestampedError;\n  return proto.lnrpc.TimestampedError.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.TimestampedError} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.TimestampedError}\n */\nproto.lnrpc.TimestampedError.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setTimestamp(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.TimestampedError.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.TimestampedError.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.TimestampedError} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.TimestampedError.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 timestamp = 1;\n * @return {number}\n */\nproto.lnrpc.TimestampedError.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.TimestampedError.prototype.setTimestamp = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string error = 2;\n * @return {string}\n */\nproto.lnrpc.TimestampedError.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.TimestampedError.prototype.setError = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListPeersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListPeersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListPeersRequest.displayName = 'proto.lnrpc.ListPeersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListPeersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListPeersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListPeersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPeersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    latestError: jspb.Message.getFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListPeersRequest}\n */\nproto.lnrpc.ListPeersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListPeersRequest;\n  return proto.lnrpc.ListPeersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListPeersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListPeersRequest}\n */\nproto.lnrpc.ListPeersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setLatestError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListPeersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListPeersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListPeersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPeersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLatestError();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool latest_error = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListPeersRequest.prototype.getLatestError = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListPeersRequest.prototype.setLatestError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListPeersResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListPeersResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListPeersResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListPeersResponse.displayName = 'proto.lnrpc.ListPeersResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListPeersResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListPeersResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListPeersResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListPeersResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPeersResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peersList: jspb.Message.toObjectList(msg.getPeersList(),\n    proto.lnrpc.Peer.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListPeersResponse}\n */\nproto.lnrpc.ListPeersResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListPeersResponse;\n  return proto.lnrpc.ListPeersResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListPeersResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListPeersResponse}\n */\nproto.lnrpc.ListPeersResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Peer;\n      reader.readMessage(value,proto.lnrpc.Peer.deserializeBinaryFromReader);\n      msg.addPeers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListPeersResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListPeersResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListPeersResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPeersResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Peer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Peer peers = 1;\n * @return {!Array.<!proto.lnrpc.Peer>}\n */\nproto.lnrpc.ListPeersResponse.prototype.getPeersList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Peer>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Peer, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Peer>} value */\nproto.lnrpc.ListPeersResponse.prototype.setPeersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Peer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Peer}\n */\nproto.lnrpc.ListPeersResponse.prototype.addPeers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Peer, opt_index);\n};\n\n\nproto.lnrpc.ListPeersResponse.prototype.clearPeersList = function() {\n  this.setPeersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PeerEventSubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PeerEventSubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PeerEventSubscription.displayName = 'proto.lnrpc.PeerEventSubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PeerEventSubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PeerEventSubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PeerEventSubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PeerEventSubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PeerEventSubscription}\n */\nproto.lnrpc.PeerEventSubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PeerEventSubscription;\n  return proto.lnrpc.PeerEventSubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PeerEventSubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PeerEventSubscription}\n */\nproto.lnrpc.PeerEventSubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PeerEventSubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PeerEventSubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PeerEventSubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PeerEventSubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PeerEvent = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PeerEvent, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PeerEvent.displayName = 'proto.lnrpc.PeerEvent';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PeerEvent.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PeerEvent.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PeerEvent} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PeerEvent.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    type: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PeerEvent}\n */\nproto.lnrpc.PeerEvent.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PeerEvent;\n  return proto.lnrpc.PeerEvent.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PeerEvent} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PeerEvent}\n */\nproto.lnrpc.PeerEvent.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.lnrpc.PeerEvent.EventType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PeerEvent.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PeerEvent.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PeerEvent} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PeerEvent.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.PeerEvent.EventType = {\n  PEER_ONLINE: 0,\n  PEER_OFFLINE: 1\n};\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.PeerEvent.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PeerEvent.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional EventType type = 2;\n * @return {!proto.lnrpc.PeerEvent.EventType}\n */\nproto.lnrpc.PeerEvent.prototype.getType = function() {\n  return /** @type {!proto.lnrpc.PeerEvent.EventType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {!proto.lnrpc.PeerEvent.EventType} value */\nproto.lnrpc.PeerEvent.prototype.setType = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GetInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetInfoRequest.displayName = 'proto.lnrpc.GetInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetInfoRequest}\n */\nproto.lnrpc.GetInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetInfoRequest;\n  return proto.lnrpc.GetInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetInfoRequest}\n */\nproto.lnrpc.GetInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.GetInfoResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.GetInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetInfoResponse.displayName = 'proto.lnrpc.GetInfoResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.GetInfoResponse.repeatedFields_ = [16,12];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetInfoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetInfoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetInfoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    version: jspb.Message.getFieldWithDefault(msg, 14, \"\"),\n    commitHash: jspb.Message.getFieldWithDefault(msg, 20, \"\"),\n    identityPubkey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    alias: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    color: jspb.Message.getFieldWithDefault(msg, 17, \"\"),\n    numPendingChannels: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    numActiveChannels: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    numInactiveChannels: jspb.Message.getFieldWithDefault(msg, 15, 0),\n    numPeers: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    blockHeight: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    blockHash: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    bestHeaderTimestamp: jspb.Message.getFieldWithDefault(msg, 13, 0),\n    syncedToChain: jspb.Message.getFieldWithDefault(msg, 9, false),\n    syncedToGraph: jspb.Message.getFieldWithDefault(msg, 18, false),\n    testnet: jspb.Message.getFieldWithDefault(msg, 10, false),\n    chainsList: jspb.Message.toObjectList(msg.getChainsList(),\n    proto.lnrpc.Chain.toObject, includeInstance),\n    urisList: jspb.Message.getRepeatedField(msg, 12),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetInfoResponse}\n */\nproto.lnrpc.GetInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetInfoResponse;\n  return proto.lnrpc.GetInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetInfoResponse}\n */\nproto.lnrpc.GetInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 20:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCommitHash(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIdentityPubkey(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    case 17:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setColor(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumPendingChannels(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumActiveChannels(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumInactiveChannels(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumPeers(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setBlockHeight(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBlockHash(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBestHeaderTimestamp(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSyncedToChain(value);\n      break;\n    case 18:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSyncedToGraph(value);\n      break;\n    case 10:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setTestnet(value);\n      break;\n    case 16:\n      var value = new proto.lnrpc.Chain;\n      reader.readMessage(value,proto.lnrpc.Chain.deserializeBinaryFromReader);\n      msg.addChains(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addUris(value);\n      break;\n    case 19:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n  f = message.getCommitHash();\n  if (f.length > 0) {\n    writer.writeString(\n      20,\n      f\n    );\n  }\n  f = message.getIdentityPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getColor();\n  if (f.length > 0) {\n    writer.writeString(\n      17,\n      f\n    );\n  }\n  f = message.getNumPendingChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getNumActiveChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getNumInactiveChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      15,\n      f\n    );\n  }\n  f = message.getNumPeers();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getBlockHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n  f = message.getBlockHash();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getBestHeaderTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      13,\n      f\n    );\n  }\n  f = message.getSyncedToChain();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n  f = message.getSyncedToGraph();\n  if (f) {\n    writer.writeBool(\n      18,\n      f\n    );\n  }\n  f = message.getTestnet();\n  if (f) {\n    writer.writeBool(\n      10,\n      f\n    );\n  }\n  f = message.getChainsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      16,\n      f,\n      proto.lnrpc.Chain.serializeBinaryToWriter\n    );\n  }\n  f = message.getUrisList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      12,\n      f\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(19, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * optional string version = 14;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setVersion = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * optional string commit_hash = 20;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getCommitHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setCommitHash = function(value) {\n  jspb.Message.setField(this, 20, value);\n};\n\n\n/**\n * optional string identity_pubkey = 1;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getIdentityPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setIdentityPubkey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string alias = 2;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setAlias = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string color = 17;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getColor = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setColor = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\n/**\n * optional uint32 num_pending_channels = 3;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getNumPendingChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setNumPendingChannels = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 num_active_channels = 4;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getNumActiveChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setNumActiveChannels = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 num_inactive_channels = 15;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getNumInactiveChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setNumInactiveChannels = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * optional uint32 num_peers = 5;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getNumPeers = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setNumPeers = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 block_height = 6;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setBlockHeight = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string block_hash = 8;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getBlockHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setBlockHash = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 best_header_timestamp = 13;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getBestHeaderTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setBestHeaderTimestamp = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional bool synced_to_chain = 9;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetInfoResponse.prototype.getSyncedToChain = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetInfoResponse.prototype.setSyncedToChain = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional bool synced_to_graph = 18;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetInfoResponse.prototype.getSyncedToGraph = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetInfoResponse.prototype.setSyncedToGraph = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\n/**\n * optional bool testnet = 10;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetInfoResponse.prototype.getTestnet = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetInfoResponse.prototype.setTestnet = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * repeated Chain chains = 16;\n * @return {!Array.<!proto.lnrpc.Chain>}\n */\nproto.lnrpc.GetInfoResponse.prototype.getChainsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Chain>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Chain, 16));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Chain>} value */\nproto.lnrpc.GetInfoResponse.prototype.setChainsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 16, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Chain=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Chain}\n */\nproto.lnrpc.GetInfoResponse.prototype.addChains = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.lnrpc.Chain, opt_index);\n};\n\n\nproto.lnrpc.GetInfoResponse.prototype.clearChainsList = function() {\n  this.setChainsList([]);\n};\n\n\n/**\n * repeated string uris = 12;\n * @return {!Array.<string>}\n */\nproto.lnrpc.GetInfoResponse.prototype.getUrisList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 12));\n};\n\n\n/** @param {!Array.<string>} value */\nproto.lnrpc.GetInfoResponse.prototype.setUrisList = function(value) {\n  jspb.Message.setField(this, 12, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.lnrpc.GetInfoResponse.prototype.addUris = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 12, value, opt_index);\n};\n\n\nproto.lnrpc.GetInfoResponse.prototype.clearUrisList = function() {\n  this.setUrisList([]);\n};\n\n\n/**\n * map<uint32, Feature> features = 19;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.GetInfoResponse.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 19, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.GetInfoResponse.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetRecoveryInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GetRecoveryInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetRecoveryInfoRequest.displayName = 'proto.lnrpc.GetRecoveryInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetRecoveryInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetRecoveryInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetRecoveryInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetRecoveryInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetRecoveryInfoRequest}\n */\nproto.lnrpc.GetRecoveryInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetRecoveryInfoRequest;\n  return proto.lnrpc.GetRecoveryInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetRecoveryInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetRecoveryInfoRequest}\n */\nproto.lnrpc.GetRecoveryInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetRecoveryInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetRecoveryInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetRecoveryInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetRecoveryInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetRecoveryInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GetRecoveryInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetRecoveryInfoResponse.displayName = 'proto.lnrpc.GetRecoveryInfoResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetRecoveryInfoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetRecoveryInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetRecoveryInfoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    recoveryMode: jspb.Message.getFieldWithDefault(msg, 1, false),\n    recoveryFinished: jspb.Message.getFieldWithDefault(msg, 2, false),\n    progress: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetRecoveryInfoResponse}\n */\nproto.lnrpc.GetRecoveryInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetRecoveryInfoResponse;\n  return proto.lnrpc.GetRecoveryInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetRecoveryInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetRecoveryInfoResponse}\n */\nproto.lnrpc.GetRecoveryInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRecoveryMode(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRecoveryFinished(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setProgress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetRecoveryInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetRecoveryInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetRecoveryInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRecoveryMode();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getRecoveryFinished();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getProgress();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool recovery_mode = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.getRecoveryMode = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.setRecoveryMode = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool recovery_finished = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.getRecoveryFinished = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.setRecoveryFinished = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional double progress = 3;\n * @return {number}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.getProgress = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.setProgress = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Chain = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Chain, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Chain.displayName = 'proto.lnrpc.Chain';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Chain.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Chain.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Chain} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Chain.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chain: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    network: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Chain}\n */\nproto.lnrpc.Chain.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Chain;\n  return proto.lnrpc.Chain.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Chain} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Chain}\n */\nproto.lnrpc.Chain.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChain(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNetwork(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Chain.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Chain.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Chain} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Chain.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChain();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getNetwork();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string chain = 1;\n * @return {string}\n */\nproto.lnrpc.Chain.prototype.getChain = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Chain.prototype.setChain = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string network = 2;\n * @return {string}\n */\nproto.lnrpc.Chain.prototype.getNetwork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Chain.prototype.setNetwork = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ConfirmationUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ConfirmationUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ConfirmationUpdate.displayName = 'proto.lnrpc.ConfirmationUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ConfirmationUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ConfirmationUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConfirmationUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    blockSha: msg.getBlockSha_asB64(),\n    blockHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    numConfsLeft: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ConfirmationUpdate}\n */\nproto.lnrpc.ConfirmationUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ConfirmationUpdate;\n  return proto.lnrpc.ConfirmationUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ConfirmationUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ConfirmationUpdate}\n */\nproto.lnrpc.ConfirmationUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBlockSha(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlockHeight(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumConfsLeft(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ConfirmationUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ConfirmationUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConfirmationUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBlockSha_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBlockHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getNumConfsLeft();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes block_sha = 1;\n * @return {string}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getBlockSha = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes block_sha = 1;\n * This is a type-conversion wrapper around `getBlockSha()`\n * @return {string}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getBlockSha_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBlockSha()));\n};\n\n\n/**\n * optional bytes block_sha = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBlockSha()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getBlockSha_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBlockSha()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ConfirmationUpdate.prototype.setBlockSha = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 block_height = 2;\n * @return {number}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ConfirmationUpdate.prototype.setBlockHeight = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 num_confs_left = 3;\n * @return {number}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getNumConfsLeft = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ConfirmationUpdate.prototype.setNumConfsLeft = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelOpenUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelOpenUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelOpenUpdate.displayName = 'proto.lnrpc.ChannelOpenUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelOpenUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelOpenUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelOpenUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelOpenUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelPoint: (f = msg.getChannelPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelOpenUpdate}\n */\nproto.lnrpc.ChannelOpenUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelOpenUpdate;\n  return proto.lnrpc.ChannelOpenUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelOpenUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelOpenUpdate}\n */\nproto.lnrpc.ChannelOpenUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChannelPoint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelOpenUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelOpenUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelOpenUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelOpenUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint channel_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelOpenUpdate.prototype.getChannelPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelOpenUpdate.prototype.setChannelPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ChannelOpenUpdate.prototype.clearChannelPoint = function() {\n  this.setChannelPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelOpenUpdate.prototype.hasChannelPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelCloseUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelCloseUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelCloseUpdate.displayName = 'proto.lnrpc.ChannelCloseUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelCloseUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelCloseUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelCloseUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    closingTxid: msg.getClosingTxid_asB64(),\n    success: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelCloseUpdate}\n */\nproto.lnrpc.ChannelCloseUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelCloseUpdate;\n  return proto.lnrpc.ChannelCloseUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelCloseUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelCloseUpdate}\n */\nproto.lnrpc.ChannelCloseUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setClosingTxid(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSuccess(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelCloseUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelCloseUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelCloseUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getClosingTxid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getSuccess();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes closing_txid = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.getClosingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes closing_txid = 1;\n * This is a type-conversion wrapper around `getClosingTxid()`\n * @return {string}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.getClosingTxid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getClosingTxid()));\n};\n\n\n/**\n * optional bytes closing_txid = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getClosingTxid()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.getClosingTxid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getClosingTxid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelCloseUpdate.prototype.setClosingTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool success = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.getSuccess = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ChannelCloseUpdate.prototype.setSuccess = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.CloseChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.CloseChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.CloseChannelRequest.displayName = 'proto.lnrpc.CloseChannelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.CloseChannelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.CloseChannelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.CloseChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CloseChannelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelPoint: (f = msg.getChannelPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    force: jspb.Message.getFieldWithDefault(msg, 2, false),\n    targetConf: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    satPerByte: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    deliveryAddress: jspb.Message.getFieldWithDefault(msg, 5, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.CloseChannelRequest}\n */\nproto.lnrpc.CloseChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.CloseChannelRequest;\n  return proto.lnrpc.CloseChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.CloseChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.CloseChannelRequest}\n */\nproto.lnrpc.CloseChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChannelPoint(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setForce(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatPerByte(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeliveryAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.CloseChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.CloseChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.CloseChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CloseChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getForce();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getDeliveryAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint channel_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getChannelPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.CloseChannelRequest.prototype.setChannelPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.CloseChannelRequest.prototype.clearChannelPoint = function() {\n  this.setChannelPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.CloseChannelRequest.prototype.hasChannelPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool force = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getForce = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.CloseChannelRequest.prototype.setForce = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 target_conf = 3;\n * @return {number}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.CloseChannelRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 sat_per_byte = 4;\n * @return {number}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.CloseChannelRequest.prototype.setSatPerByte = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string delivery_address = 5;\n * @return {string}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getDeliveryAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.CloseChannelRequest.prototype.setDeliveryAddress = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.CloseStatusUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.CloseStatusUpdate.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.CloseStatusUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.CloseStatusUpdate.displayName = 'proto.lnrpc.CloseStatusUpdate';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.CloseStatusUpdate.oneofGroups_ = [[1,3]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.CloseStatusUpdate.UpdateCase = {\n  UPDATE_NOT_SET: 0,\n  CLOSE_PENDING: 1,\n  CHAN_CLOSE: 3\n};\n\n/**\n * @return {proto.lnrpc.CloseStatusUpdate.UpdateCase}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.getUpdateCase = function() {\n  return /** @type {proto.lnrpc.CloseStatusUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.CloseStatusUpdate.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.CloseStatusUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.CloseStatusUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CloseStatusUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    closePending: (f = msg.getClosePending()) && proto.lnrpc.PendingUpdate.toObject(includeInstance, f),\n    chanClose: (f = msg.getChanClose()) && proto.lnrpc.ChannelCloseUpdate.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.CloseStatusUpdate}\n */\nproto.lnrpc.CloseStatusUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.CloseStatusUpdate;\n  return proto.lnrpc.CloseStatusUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.CloseStatusUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.CloseStatusUpdate}\n */\nproto.lnrpc.CloseStatusUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingUpdate;\n      reader.readMessage(value,proto.lnrpc.PendingUpdate.deserializeBinaryFromReader);\n      msg.setClosePending(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ChannelCloseUpdate;\n      reader.readMessage(value,proto.lnrpc.ChannelCloseUpdate.deserializeBinaryFromReader);\n      msg.setChanClose(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.CloseStatusUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.CloseStatusUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CloseStatusUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getClosePending();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getChanClose();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.ChannelCloseUpdate.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PendingUpdate close_pending = 1;\n * @return {?proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.getClosePending = function() {\n  return /** @type{?proto.lnrpc.PendingUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingUpdate, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingUpdate|undefined} value */\nproto.lnrpc.CloseStatusUpdate.prototype.setClosePending = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.CloseStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.CloseStatusUpdate.prototype.clearClosePending = function() {\n  this.setClosePending(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.hasClosePending = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ChannelCloseUpdate chan_close = 3;\n * @return {?proto.lnrpc.ChannelCloseUpdate}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.getChanClose = function() {\n  return /** @type{?proto.lnrpc.ChannelCloseUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelCloseUpdate, 3));\n};\n\n\n/** @param {?proto.lnrpc.ChannelCloseUpdate|undefined} value */\nproto.lnrpc.CloseStatusUpdate.prototype.setChanClose = function(value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.lnrpc.CloseStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.CloseStatusUpdate.prototype.clearChanClose = function() {\n  this.setChanClose(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.hasChanClose = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingUpdate.displayName = 'proto.lnrpc.PendingUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txid: msg.getTxid_asB64(),\n    outputIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.PendingUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingUpdate;\n  return proto.lnrpc.PendingUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.PendingUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTxid(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOutputIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOutputIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes txid = 1;\n * @return {string}\n */\nproto.lnrpc.PendingUpdate.prototype.getTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes txid = 1;\n * This is a type-conversion wrapper around `getTxid()`\n * @return {string}\n */\nproto.lnrpc.PendingUpdate.prototype.getTxid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTxid()));\n};\n\n\n/**\n * optional bytes txid = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxid()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingUpdate.prototype.getTxid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTxid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PendingUpdate.prototype.setTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint32 output_index = 2;\n * @return {number}\n */\nproto.lnrpc.PendingUpdate.prototype.getOutputIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingUpdate.prototype.setOutputIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ReadyForPsbtFunding = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ReadyForPsbtFunding, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ReadyForPsbtFunding.displayName = 'proto.lnrpc.ReadyForPsbtFunding';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ReadyForPsbtFunding.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ReadyForPsbtFunding} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ReadyForPsbtFunding.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fundingAddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    fundingAmount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    psbt: msg.getPsbt_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ReadyForPsbtFunding}\n */\nproto.lnrpc.ReadyForPsbtFunding.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ReadyForPsbtFunding;\n  return proto.lnrpc.ReadyForPsbtFunding.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ReadyForPsbtFunding} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ReadyForPsbtFunding}\n */\nproto.lnrpc.ReadyForPsbtFunding.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFundingAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFundingAmount(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPsbt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ReadyForPsbtFunding.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ReadyForPsbtFunding} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ReadyForPsbtFunding.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFundingAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getFundingAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getPsbt_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string funding_address = 1;\n * @return {string}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getFundingAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ReadyForPsbtFunding.prototype.setFundingAddress = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 funding_amount = 2;\n * @return {number}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getFundingAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ReadyForPsbtFunding.prototype.setFundingAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bytes psbt = 3;\n * @return {string}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getPsbt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes psbt = 3;\n * This is a type-conversion wrapper around `getPsbt()`\n * @return {string}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getPsbt_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPsbt()));\n};\n\n\n/**\n * optional bytes psbt = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPsbt()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getPsbt_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPsbt()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ReadyForPsbtFunding.prototype.setPsbt = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.OpenChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.OpenChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.OpenChannelRequest.displayName = 'proto.lnrpc.OpenChannelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.OpenChannelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.OpenChannelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.OpenChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OpenChannelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodePubkey: msg.getNodePubkey_asB64(),\n    nodePubkeyString: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    localFundingAmount: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    pushSat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    targetConf: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    satPerByte: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    pb_private: jspb.Message.getFieldWithDefault(msg, 8, false),\n    minHtlcMsat: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    remoteCsvDelay: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    minConfs: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    spendUnconfirmed: jspb.Message.getFieldWithDefault(msg, 12, false),\n    closeAddress: jspb.Message.getFieldWithDefault(msg, 13, \"\"),\n    fundingShim: (f = msg.getFundingShim()) && proto.lnrpc.FundingShim.toObject(includeInstance, f),\n    remoteMaxValueInFlightMsat: jspb.Message.getFieldWithDefault(msg, 15, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.OpenChannelRequest}\n */\nproto.lnrpc.OpenChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.OpenChannelRequest;\n  return proto.lnrpc.OpenChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.OpenChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.OpenChannelRequest}\n */\nproto.lnrpc.OpenChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNodePubkey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodePubkeyString(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalFundingAmount(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPushSat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatPerByte(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivate(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMinHtlcMsat(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setRemoteCsvDelay(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinConfs(value);\n      break;\n    case 12:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSpendUnconfirmed(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCloseAddress(value);\n      break;\n    case 14:\n      var value = new proto.lnrpc.FundingShim;\n      reader.readMessage(value,proto.lnrpc.FundingShim.deserializeBinaryFromReader);\n      msg.setFundingShim(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRemoteMaxValueInFlightMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.OpenChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.OpenChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.OpenChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OpenChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodePubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getNodePubkeyString();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getLocalFundingAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getPushSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getPrivate();\n  if (f) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n  f = message.getMinHtlcMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getRemoteCsvDelay();\n  if (f !== 0) {\n    writer.writeUint32(\n      10,\n      f\n    );\n  }\n  f = message.getMinConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      11,\n      f\n    );\n  }\n  f = message.getSpendUnconfirmed();\n  if (f) {\n    writer.writeBool(\n      12,\n      f\n    );\n  }\n  f = message.getCloseAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = message.getFundingShim();\n  if (f != null) {\n    writer.writeMessage(\n      14,\n      f,\n      proto.lnrpc.FundingShim.serializeBinaryToWriter\n    );\n  }\n  f = message.getRemoteMaxValueInFlightMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      15,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes node_pubkey = 2;\n * @return {string}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getNodePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes node_pubkey = 2;\n * This is a type-conversion wrapper around `getNodePubkey()`\n * @return {string}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getNodePubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNodePubkey()));\n};\n\n\n/**\n * optional bytes node_pubkey = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNodePubkey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getNodePubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNodePubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.OpenChannelRequest.prototype.setNodePubkey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string node_pubkey_string = 3;\n * @return {string}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getNodePubkeyString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.OpenChannelRequest.prototype.setNodePubkeyString = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 local_funding_amount = 4;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getLocalFundingAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setLocalFundingAmount = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 push_sat = 5;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getPushSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setPushSat = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int32 target_conf = 6;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 sat_per_byte = 7;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setSatPerByte = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional bool private = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getPrivate = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.OpenChannelRequest.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 min_htlc_msat = 9;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getMinHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setMinHtlcMsat = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional uint32 remote_csv_delay = 10;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getRemoteCsvDelay = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setRemoteCsvDelay = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional int32 min_confs = 11;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getMinConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setMinConfs = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional bool spend_unconfirmed = 12;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getSpendUnconfirmed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.OpenChannelRequest.prototype.setSpendUnconfirmed = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string close_address = 13;\n * @return {string}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getCloseAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.OpenChannelRequest.prototype.setCloseAddress = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional FundingShim funding_shim = 14;\n * @return {?proto.lnrpc.FundingShim}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getFundingShim = function() {\n  return /** @type{?proto.lnrpc.FundingShim} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingShim, 14));\n};\n\n\n/** @param {?proto.lnrpc.FundingShim|undefined} value */\nproto.lnrpc.OpenChannelRequest.prototype.setFundingShim = function(value) {\n  jspb.Message.setWrapperField(this, 14, value);\n};\n\n\nproto.lnrpc.OpenChannelRequest.prototype.clearFundingShim = function() {\n  this.setFundingShim(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.OpenChannelRequest.prototype.hasFundingShim = function() {\n  return jspb.Message.getField(this, 14) != null;\n};\n\n\n/**\n * optional uint64 remote_max_value_in_flight_msat = 15;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getRemoteMaxValueInFlightMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setRemoteMaxValueInFlightMsat = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.OpenStatusUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.OpenStatusUpdate.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.OpenStatusUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.OpenStatusUpdate.displayName = 'proto.lnrpc.OpenStatusUpdate';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.OpenStatusUpdate.oneofGroups_ = [[1,3,5]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.OpenStatusUpdate.UpdateCase = {\n  UPDATE_NOT_SET: 0,\n  CHAN_PENDING: 1,\n  CHAN_OPEN: 3,\n  PSBT_FUND: 5\n};\n\n/**\n * @return {proto.lnrpc.OpenStatusUpdate.UpdateCase}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getUpdateCase = function() {\n  return /** @type {proto.lnrpc.OpenStatusUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.OpenStatusUpdate.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.OpenStatusUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.OpenStatusUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OpenStatusUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPending: (f = msg.getChanPending()) && proto.lnrpc.PendingUpdate.toObject(includeInstance, f),\n    chanOpen: (f = msg.getChanOpen()) && proto.lnrpc.ChannelOpenUpdate.toObject(includeInstance, f),\n    psbtFund: (f = msg.getPsbtFund()) && proto.lnrpc.ReadyForPsbtFunding.toObject(includeInstance, f),\n    pendingChanId: msg.getPendingChanId_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.OpenStatusUpdate}\n */\nproto.lnrpc.OpenStatusUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.OpenStatusUpdate;\n  return proto.lnrpc.OpenStatusUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.OpenStatusUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.OpenStatusUpdate}\n */\nproto.lnrpc.OpenStatusUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingUpdate;\n      reader.readMessage(value,proto.lnrpc.PendingUpdate.deserializeBinaryFromReader);\n      msg.setChanPending(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ChannelOpenUpdate;\n      reader.readMessage(value,proto.lnrpc.ChannelOpenUpdate.deserializeBinaryFromReader);\n      msg.setChanOpen(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.ReadyForPsbtFunding;\n      reader.readMessage(value,proto.lnrpc.ReadyForPsbtFunding.deserializeBinaryFromReader);\n      msg.setPsbtFund(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.OpenStatusUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.OpenStatusUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OpenStatusUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPending();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getChanOpen();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.ChannelOpenUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getPsbtFund();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.lnrpc.ReadyForPsbtFunding.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PendingUpdate chan_pending = 1;\n * @return {?proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getChanPending = function() {\n  return /** @type{?proto.lnrpc.PendingUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingUpdate, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingUpdate|undefined} value */\nproto.lnrpc.OpenStatusUpdate.prototype.setChanPending = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.OpenStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.OpenStatusUpdate.prototype.clearChanPending = function() {\n  this.setChanPending(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.hasChanPending = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ChannelOpenUpdate chan_open = 3;\n * @return {?proto.lnrpc.ChannelOpenUpdate}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getChanOpen = function() {\n  return /** @type{?proto.lnrpc.ChannelOpenUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelOpenUpdate, 3));\n};\n\n\n/** @param {?proto.lnrpc.ChannelOpenUpdate|undefined} value */\nproto.lnrpc.OpenStatusUpdate.prototype.setChanOpen = function(value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.lnrpc.OpenStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.OpenStatusUpdate.prototype.clearChanOpen = function() {\n  this.setChanOpen(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.hasChanOpen = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional ReadyForPsbtFunding psbt_fund = 5;\n * @return {?proto.lnrpc.ReadyForPsbtFunding}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getPsbtFund = function() {\n  return /** @type{?proto.lnrpc.ReadyForPsbtFunding} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ReadyForPsbtFunding, 5));\n};\n\n\n/** @param {?proto.lnrpc.ReadyForPsbtFunding|undefined} value */\nproto.lnrpc.OpenStatusUpdate.prototype.setPsbtFund = function(value) {\n  jspb.Message.setOneofWrapperField(this, 5, proto.lnrpc.OpenStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.OpenStatusUpdate.prototype.clearPsbtFund = function() {\n  this.setPsbtFund(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.hasPsbtFund = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bytes pending_chan_id = 4;\n * @return {string}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 4;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.OpenStatusUpdate.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.KeyLocator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.KeyLocator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.KeyLocator.displayName = 'proto.lnrpc.KeyLocator';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.KeyLocator.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.KeyLocator.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.KeyLocator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.KeyLocator.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    keyFamily: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    keyIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.KeyLocator}\n */\nproto.lnrpc.KeyLocator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.KeyLocator;\n  return proto.lnrpc.KeyLocator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.KeyLocator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.KeyLocator}\n */\nproto.lnrpc.KeyLocator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setKeyFamily(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setKeyIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.KeyLocator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.KeyLocator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.KeyLocator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.KeyLocator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKeyFamily();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getKeyIndex();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 key_family = 1;\n * @return {number}\n */\nproto.lnrpc.KeyLocator.prototype.getKeyFamily = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.KeyLocator.prototype.setKeyFamily = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 key_index = 2;\n * @return {number}\n */\nproto.lnrpc.KeyLocator.prototype.getKeyIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.KeyLocator.prototype.setKeyIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.KeyDescriptor = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.KeyDescriptor, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.KeyDescriptor.displayName = 'proto.lnrpc.KeyDescriptor';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.KeyDescriptor.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.KeyDescriptor.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.KeyDescriptor} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.KeyDescriptor.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rawKeyBytes: msg.getRawKeyBytes_asB64(),\n    keyLoc: (f = msg.getKeyLoc()) && proto.lnrpc.KeyLocator.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.KeyDescriptor}\n */\nproto.lnrpc.KeyDescriptor.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.KeyDescriptor;\n  return proto.lnrpc.KeyDescriptor.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.KeyDescriptor} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.KeyDescriptor}\n */\nproto.lnrpc.KeyDescriptor.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRawKeyBytes(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.KeyLocator;\n      reader.readMessage(value,proto.lnrpc.KeyLocator.deserializeBinaryFromReader);\n      msg.setKeyLoc(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.KeyDescriptor.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.KeyDescriptor.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.KeyDescriptor} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.KeyDescriptor.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRawKeyBytes_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getKeyLoc();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.KeyLocator.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes raw_key_bytes = 1;\n * @return {string}\n */\nproto.lnrpc.KeyDescriptor.prototype.getRawKeyBytes = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes raw_key_bytes = 1;\n * This is a type-conversion wrapper around `getRawKeyBytes()`\n * @return {string}\n */\nproto.lnrpc.KeyDescriptor.prototype.getRawKeyBytes_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRawKeyBytes()));\n};\n\n\n/**\n * optional bytes raw_key_bytes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRawKeyBytes()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.KeyDescriptor.prototype.getRawKeyBytes_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRawKeyBytes()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.KeyDescriptor.prototype.setRawKeyBytes = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional KeyLocator key_loc = 2;\n * @return {?proto.lnrpc.KeyLocator}\n */\nproto.lnrpc.KeyDescriptor.prototype.getKeyLoc = function() {\n  return /** @type{?proto.lnrpc.KeyLocator} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.KeyLocator, 2));\n};\n\n\n/** @param {?proto.lnrpc.KeyLocator|undefined} value */\nproto.lnrpc.KeyDescriptor.prototype.setKeyLoc = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.KeyDescriptor.prototype.clearKeyLoc = function() {\n  this.setKeyLoc(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.KeyDescriptor.prototype.hasKeyLoc = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChanPointShim = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChanPointShim, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChanPointShim.displayName = 'proto.lnrpc.ChanPointShim';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChanPointShim.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChanPointShim.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChanPointShim} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanPointShim.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    amt: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    localKey: (f = msg.getLocalKey()) && proto.lnrpc.KeyDescriptor.toObject(includeInstance, f),\n    remoteKey: msg.getRemoteKey_asB64(),\n    pendingChanId: msg.getPendingChanId_asB64(),\n    thawHeight: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChanPointShim}\n */\nproto.lnrpc.ChanPointShim.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChanPointShim;\n  return proto.lnrpc.ChanPointShim.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChanPointShim} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChanPointShim}\n */\nproto.lnrpc.ChanPointShim.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmt(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.KeyDescriptor;\n      reader.readMessage(value,proto.lnrpc.KeyDescriptor.deserializeBinaryFromReader);\n      msg.setLocalKey(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRemoteKey(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setThawHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanPointShim.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChanPointShim.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChanPointShim} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanPointShim.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAmt();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getLocalKey();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.KeyDescriptor.serializeBinaryToWriter\n    );\n  }\n  f = message.getRemoteKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getThawHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 amt = 1;\n * @return {number}\n */\nproto.lnrpc.ChanPointShim.prototype.getAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChanPointShim.prototype.setAmt = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional ChannelPoint chan_point = 2;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChanPointShim.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 2));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChanPointShim.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.ChanPointShim.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChanPointShim.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional KeyDescriptor local_key = 3;\n * @return {?proto.lnrpc.KeyDescriptor}\n */\nproto.lnrpc.ChanPointShim.prototype.getLocalKey = function() {\n  return /** @type{?proto.lnrpc.KeyDescriptor} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.KeyDescriptor, 3));\n};\n\n\n/** @param {?proto.lnrpc.KeyDescriptor|undefined} value */\nproto.lnrpc.ChanPointShim.prototype.setLocalKey = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.ChanPointShim.prototype.clearLocalKey = function() {\n  this.setLocalKey(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChanPointShim.prototype.hasLocalKey = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bytes remote_key = 4;\n * @return {string}\n */\nproto.lnrpc.ChanPointShim.prototype.getRemoteKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes remote_key = 4;\n * This is a type-conversion wrapper around `getRemoteKey()`\n * @return {string}\n */\nproto.lnrpc.ChanPointShim.prototype.getRemoteKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRemoteKey()));\n};\n\n\n/**\n * optional bytes remote_key = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRemoteKey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanPointShim.prototype.getRemoteKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRemoteKey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChanPointShim.prototype.setRemoteKey = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 5;\n * @return {string}\n */\nproto.lnrpc.ChanPointShim.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 5;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.ChanPointShim.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanPointShim.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChanPointShim.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 thaw_height = 6;\n * @return {number}\n */\nproto.lnrpc.ChanPointShim.prototype.getThawHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChanPointShim.prototype.setThawHeight = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PsbtShim = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PsbtShim, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PsbtShim.displayName = 'proto.lnrpc.PsbtShim';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PsbtShim.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PsbtShim.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PsbtShim} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PsbtShim.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pendingChanId: msg.getPendingChanId_asB64(),\n    basePsbt: msg.getBasePsbt_asB64(),\n    noPublish: jspb.Message.getFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PsbtShim}\n */\nproto.lnrpc.PsbtShim.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PsbtShim;\n  return proto.lnrpc.PsbtShim.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PsbtShim} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PsbtShim}\n */\nproto.lnrpc.PsbtShim.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBasePsbt(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setNoPublish(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PsbtShim.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PsbtShim.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PsbtShim} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PsbtShim.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBasePsbt_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getNoPublish();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.PsbtShim.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.PsbtShim.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PsbtShim.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PsbtShim.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes base_psbt = 2;\n * @return {string}\n */\nproto.lnrpc.PsbtShim.prototype.getBasePsbt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes base_psbt = 2;\n * This is a type-conversion wrapper around `getBasePsbt()`\n * @return {string}\n */\nproto.lnrpc.PsbtShim.prototype.getBasePsbt_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBasePsbt()));\n};\n\n\n/**\n * optional bytes base_psbt = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBasePsbt()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PsbtShim.prototype.getBasePsbt_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBasePsbt()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PsbtShim.prototype.setBasePsbt = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool no_publish = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.PsbtShim.prototype.getNoPublish = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.PsbtShim.prototype.setNoPublish = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingShim = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.FundingShim.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.FundingShim, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingShim.displayName = 'proto.lnrpc.FundingShim';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.FundingShim.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.FundingShim.ShimCase = {\n  SHIM_NOT_SET: 0,\n  CHAN_POINT_SHIM: 1,\n  PSBT_SHIM: 2\n};\n\n/**\n * @return {proto.lnrpc.FundingShim.ShimCase}\n */\nproto.lnrpc.FundingShim.prototype.getShimCase = function() {\n  return /** @type {proto.lnrpc.FundingShim.ShimCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.FundingShim.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingShim.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingShim.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingShim} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingShim.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPointShim: (f = msg.getChanPointShim()) && proto.lnrpc.ChanPointShim.toObject(includeInstance, f),\n    psbtShim: (f = msg.getPsbtShim()) && proto.lnrpc.PsbtShim.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingShim}\n */\nproto.lnrpc.FundingShim.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingShim;\n  return proto.lnrpc.FundingShim.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingShim} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingShim}\n */\nproto.lnrpc.FundingShim.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChanPointShim;\n      reader.readMessage(value,proto.lnrpc.ChanPointShim.deserializeBinaryFromReader);\n      msg.setChanPointShim(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.PsbtShim;\n      reader.readMessage(value,proto.lnrpc.PsbtShim.deserializeBinaryFromReader);\n      msg.setPsbtShim(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingShim.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingShim.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingShim} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingShim.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPointShim();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChanPointShim.serializeBinaryToWriter\n    );\n  }\n  f = message.getPsbtShim();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.PsbtShim.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ChanPointShim chan_point_shim = 1;\n * @return {?proto.lnrpc.ChanPointShim}\n */\nproto.lnrpc.FundingShim.prototype.getChanPointShim = function() {\n  return /** @type{?proto.lnrpc.ChanPointShim} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChanPointShim, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChanPointShim|undefined} value */\nproto.lnrpc.FundingShim.prototype.setChanPointShim = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.FundingShim.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingShim.prototype.clearChanPointShim = function() {\n  this.setChanPointShim(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingShim.prototype.hasChanPointShim = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional PsbtShim psbt_shim = 2;\n * @return {?proto.lnrpc.PsbtShim}\n */\nproto.lnrpc.FundingShim.prototype.getPsbtShim = function() {\n  return /** @type{?proto.lnrpc.PsbtShim} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PsbtShim, 2));\n};\n\n\n/** @param {?proto.lnrpc.PsbtShim|undefined} value */\nproto.lnrpc.FundingShim.prototype.setPsbtShim = function(value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.lnrpc.FundingShim.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingShim.prototype.clearPsbtShim = function() {\n  this.setPsbtShim(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingShim.prototype.hasPsbtShim = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingShimCancel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FundingShimCancel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingShimCancel.displayName = 'proto.lnrpc.FundingShimCancel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingShimCancel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingShimCancel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingShimCancel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingShimCancel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pendingChanId: msg.getPendingChanId_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingShimCancel}\n */\nproto.lnrpc.FundingShimCancel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingShimCancel;\n  return proto.lnrpc.FundingShimCancel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingShimCancel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingShimCancel}\n */\nproto.lnrpc.FundingShimCancel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingShimCancel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingShimCancel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingShimCancel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingShimCancel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.FundingShimCancel.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.FundingShimCancel.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingShimCancel.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingShimCancel.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingPsbtVerify = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FundingPsbtVerify, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingPsbtVerify.displayName = 'proto.lnrpc.FundingPsbtVerify';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingPsbtVerify.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingPsbtVerify} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingPsbtVerify.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fundedPsbt: msg.getFundedPsbt_asB64(),\n    pendingChanId: msg.getPendingChanId_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingPsbtVerify}\n */\nproto.lnrpc.FundingPsbtVerify.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingPsbtVerify;\n  return proto.lnrpc.FundingPsbtVerify.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingPsbtVerify} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingPsbtVerify}\n */\nproto.lnrpc.FundingPsbtVerify.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFundedPsbt(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingPsbtVerify.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingPsbtVerify} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingPsbtVerify.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFundedPsbt_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes funded_psbt = 1;\n * @return {string}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getFundedPsbt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes funded_psbt = 1;\n * This is a type-conversion wrapper around `getFundedPsbt()`\n * @return {string}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getFundedPsbt_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFundedPsbt()));\n};\n\n\n/**\n * optional bytes funded_psbt = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFundedPsbt()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getFundedPsbt_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFundedPsbt()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingPsbtVerify.prototype.setFundedPsbt = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingPsbtVerify.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingPsbtFinalize = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FundingPsbtFinalize, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingPsbtFinalize.displayName = 'proto.lnrpc.FundingPsbtFinalize';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingPsbtFinalize.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingPsbtFinalize} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingPsbtFinalize.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    signedPsbt: msg.getSignedPsbt_asB64(),\n    pendingChanId: msg.getPendingChanId_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingPsbtFinalize}\n */\nproto.lnrpc.FundingPsbtFinalize.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingPsbtFinalize;\n  return proto.lnrpc.FundingPsbtFinalize.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingPsbtFinalize} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingPsbtFinalize}\n */\nproto.lnrpc.FundingPsbtFinalize.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignedPsbt(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingPsbtFinalize.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingPsbtFinalize} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingPsbtFinalize.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSignedPsbt_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes signed_psbt = 1;\n * @return {string}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getSignedPsbt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes signed_psbt = 1;\n * This is a type-conversion wrapper around `getSignedPsbt()`\n * @return {string}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getSignedPsbt_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignedPsbt()));\n};\n\n\n/**\n * optional bytes signed_psbt = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignedPsbt()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getSignedPsbt_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignedPsbt()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingPsbtFinalize.prototype.setSignedPsbt = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingPsbtFinalize.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingTransitionMsg = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.FundingTransitionMsg.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.FundingTransitionMsg, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingTransitionMsg.displayName = 'proto.lnrpc.FundingTransitionMsg';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.FundingTransitionMsg.oneofGroups_ = [[1,2,3,4]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.FundingTransitionMsg.TriggerCase = {\n  TRIGGER_NOT_SET: 0,\n  SHIM_REGISTER: 1,\n  SHIM_CANCEL: 2,\n  PSBT_VERIFY: 3,\n  PSBT_FINALIZE: 4\n};\n\n/**\n * @return {proto.lnrpc.FundingTransitionMsg.TriggerCase}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getTriggerCase = function() {\n  return /** @type {proto.lnrpc.FundingTransitionMsg.TriggerCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingTransitionMsg.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingTransitionMsg} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingTransitionMsg.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    shimRegister: (f = msg.getShimRegister()) && proto.lnrpc.FundingShim.toObject(includeInstance, f),\n    shimCancel: (f = msg.getShimCancel()) && proto.lnrpc.FundingShimCancel.toObject(includeInstance, f),\n    psbtVerify: (f = msg.getPsbtVerify()) && proto.lnrpc.FundingPsbtVerify.toObject(includeInstance, f),\n    psbtFinalize: (f = msg.getPsbtFinalize()) && proto.lnrpc.FundingPsbtFinalize.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingTransitionMsg}\n */\nproto.lnrpc.FundingTransitionMsg.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingTransitionMsg;\n  return proto.lnrpc.FundingTransitionMsg.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingTransitionMsg} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingTransitionMsg}\n */\nproto.lnrpc.FundingTransitionMsg.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.FundingShim;\n      reader.readMessage(value,proto.lnrpc.FundingShim.deserializeBinaryFromReader);\n      msg.setShimRegister(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.FundingShimCancel;\n      reader.readMessage(value,proto.lnrpc.FundingShimCancel.deserializeBinaryFromReader);\n      msg.setShimCancel(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.FundingPsbtVerify;\n      reader.readMessage(value,proto.lnrpc.FundingPsbtVerify.deserializeBinaryFromReader);\n      msg.setPsbtVerify(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.FundingPsbtFinalize;\n      reader.readMessage(value,proto.lnrpc.FundingPsbtFinalize.deserializeBinaryFromReader);\n      msg.setPsbtFinalize(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingTransitionMsg.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingTransitionMsg} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingTransitionMsg.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getShimRegister();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.FundingShim.serializeBinaryToWriter\n    );\n  }\n  f = message.getShimCancel();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.FundingShimCancel.serializeBinaryToWriter\n    );\n  }\n  f = message.getPsbtVerify();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.FundingPsbtVerify.serializeBinaryToWriter\n    );\n  }\n  f = message.getPsbtFinalize();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.FundingPsbtFinalize.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional FundingShim shim_register = 1;\n * @return {?proto.lnrpc.FundingShim}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getShimRegister = function() {\n  return /** @type{?proto.lnrpc.FundingShim} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingShim, 1));\n};\n\n\n/** @param {?proto.lnrpc.FundingShim|undefined} value */\nproto.lnrpc.FundingTransitionMsg.prototype.setShimRegister = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingTransitionMsg.prototype.clearShimRegister = function() {\n  this.setShimRegister(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.hasShimRegister = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional FundingShimCancel shim_cancel = 2;\n * @return {?proto.lnrpc.FundingShimCancel}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getShimCancel = function() {\n  return /** @type{?proto.lnrpc.FundingShimCancel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingShimCancel, 2));\n};\n\n\n/** @param {?proto.lnrpc.FundingShimCancel|undefined} value */\nproto.lnrpc.FundingTransitionMsg.prototype.setShimCancel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingTransitionMsg.prototype.clearShimCancel = function() {\n  this.setShimCancel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.hasShimCancel = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional FundingPsbtVerify psbt_verify = 3;\n * @return {?proto.lnrpc.FundingPsbtVerify}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getPsbtVerify = function() {\n  return /** @type{?proto.lnrpc.FundingPsbtVerify} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingPsbtVerify, 3));\n};\n\n\n/** @param {?proto.lnrpc.FundingPsbtVerify|undefined} value */\nproto.lnrpc.FundingTransitionMsg.prototype.setPsbtVerify = function(value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingTransitionMsg.prototype.clearPsbtVerify = function() {\n  this.setPsbtVerify(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.hasPsbtVerify = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional FundingPsbtFinalize psbt_finalize = 4;\n * @return {?proto.lnrpc.FundingPsbtFinalize}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getPsbtFinalize = function() {\n  return /** @type{?proto.lnrpc.FundingPsbtFinalize} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingPsbtFinalize, 4));\n};\n\n\n/** @param {?proto.lnrpc.FundingPsbtFinalize|undefined} value */\nproto.lnrpc.FundingTransitionMsg.prototype.setPsbtFinalize = function(value) {\n  jspb.Message.setOneofWrapperField(this, 4, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingTransitionMsg.prototype.clearPsbtFinalize = function() {\n  this.setPsbtFinalize(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.hasPsbtFinalize = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingStateStepResp = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FundingStateStepResp, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingStateStepResp.displayName = 'proto.lnrpc.FundingStateStepResp';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingStateStepResp.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingStateStepResp.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingStateStepResp} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingStateStepResp.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingStateStepResp}\n */\nproto.lnrpc.FundingStateStepResp.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingStateStepResp;\n  return proto.lnrpc.FundingStateStepResp.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingStateStepResp} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingStateStepResp}\n */\nproto.lnrpc.FundingStateStepResp.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingStateStepResp.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingStateStepResp.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingStateStepResp} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingStateStepResp.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingHTLC = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingHTLC, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingHTLC.displayName = 'proto.lnrpc.PendingHTLC';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingHTLC.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingHTLC.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingHTLC} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingHTLC.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    incoming: jspb.Message.getFieldWithDefault(msg, 1, false),\n    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    outpoint: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    maturityHeight: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    blocksTilMaturity: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    stage: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingHTLC}\n */\nproto.lnrpc.PendingHTLC.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingHTLC;\n  return proto.lnrpc.PendingHTLC.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingHTLC} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingHTLC}\n */\nproto.lnrpc.PendingHTLC.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncoming(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOutpoint(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaturityHeight(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlocksTilMaturity(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setStage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingHTLC.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingHTLC.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingHTLC} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingHTLC.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIncoming();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getOutpoint();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getMaturityHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getBlocksTilMaturity();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getStage();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool incoming = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.PendingHTLC.prototype.getIncoming = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.PendingHTLC.prototype.setIncoming = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amount = 2;\n * @return {number}\n */\nproto.lnrpc.PendingHTLC.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingHTLC.prototype.setAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string outpoint = 3;\n * @return {string}\n */\nproto.lnrpc.PendingHTLC.prototype.getOutpoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingHTLC.prototype.setOutpoint = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 maturity_height = 4;\n * @return {number}\n */\nproto.lnrpc.PendingHTLC.prototype.getMaturityHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingHTLC.prototype.setMaturityHeight = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int32 blocks_til_maturity = 5;\n * @return {number}\n */\nproto.lnrpc.PendingHTLC.prototype.getBlocksTilMaturity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingHTLC.prototype.setBlocksTilMaturity = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 stage = 6;\n * @return {number}\n */\nproto.lnrpc.PendingHTLC.prototype.getStage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingHTLC.prototype.setStage = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsRequest.displayName = 'proto.lnrpc.PendingChannelsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsRequest}\n */\nproto.lnrpc.PendingChannelsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsRequest;\n  return proto.lnrpc.PendingChannelsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsRequest}\n */\nproto.lnrpc.PendingChannelsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.PendingChannelsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.displayName = 'proto.lnrpc.PendingChannelsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.PendingChannelsResponse.repeatedFields_ = [2,3,4,5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    totalLimboBalance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    pendingOpenChannelsList: jspb.Message.toObjectList(msg.getPendingOpenChannelsList(),\n    proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.toObject, includeInstance),\n    pendingClosingChannelsList: jspb.Message.toObjectList(msg.getPendingClosingChannelsList(),\n    proto.lnrpc.PendingChannelsResponse.ClosedChannel.toObject, includeInstance),\n    pendingForceClosingChannelsList: jspb.Message.toObjectList(msg.getPendingForceClosingChannelsList(),\n    proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.toObject, includeInstance),\n    waitingCloseChannelsList: jspb.Message.toObjectList(msg.getWaitingCloseChannelsList(),\n    proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse}\n */\nproto.lnrpc.PendingChannelsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse;\n  return proto.lnrpc.PendingChannelsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse}\n */\nproto.lnrpc.PendingChannelsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalLimboBalance(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingOpenChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.deserializeBinaryFromReader);\n      msg.addPendingOpenChannels(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.PendingChannelsResponse.ClosedChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.ClosedChannel.deserializeBinaryFromReader);\n      msg.addPendingClosingChannels(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.PendingChannelsResponse.ForceClosedChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.deserializeBinaryFromReader);\n      msg.addPendingForceClosingChannels(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.deserializeBinaryFromReader);\n      msg.addWaitingCloseChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTotalLimboBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPendingOpenChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingClosingChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.lnrpc.PendingChannelsResponse.ClosedChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingForceClosingChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getWaitingCloseChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.PendingChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.PendingChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.PendingChannel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    remoteNodePub: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    channelPoint: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    localBalance: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    remoteBalance: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    localChanReserveSat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    remoteChanReserveSat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    initiator: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    commitmentType: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n  return proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemoteNodePub(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelPoint(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalBalance(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRemoteBalance(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalChanReserveSat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRemoteChanReserveSat(value);\n      break;\n    case 8:\n      var value = /** @type {!proto.lnrpc.Initiator} */ (reader.readEnum());\n      msg.setInitiator(value);\n      break;\n    case 9:\n      var value = /** @type {!proto.lnrpc.CommitmentType} */ (reader.readEnum());\n      msg.setCommitmentType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRemoteNodePub();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getChannelPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getLocalBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getRemoteBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getLocalChanReserveSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getRemoteChanReserveSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getInitiator();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      8,\n      f\n    );\n  }\n  f = message.getCommitmentType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string remote_node_pub = 1;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getRemoteNodePub = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setRemoteNodePub = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string channel_point = 2;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getChannelPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setChannelPoint = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 capacity = 3;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 local_balance = 4;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getLocalBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setLocalBalance = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 remote_balance = 5;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getRemoteBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setRemoteBalance = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 local_chan_reserve_sat = 6;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getLocalChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setLocalChanReserveSat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 remote_chan_reserve_sat = 7;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getRemoteChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setRemoteChanReserveSat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional Initiator initiator = 8;\n * @return {!proto.lnrpc.Initiator}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getInitiator = function() {\n  return /** @type {!proto.lnrpc.Initiator} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {!proto.lnrpc.Initiator} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setInitiator = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional CommitmentType commitment_type = 9;\n * @return {!proto.lnrpc.CommitmentType}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getCommitmentType = function() {\n  return /** @type {!proto.lnrpc.CommitmentType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {!proto.lnrpc.CommitmentType} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setCommitmentType = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.PendingOpenChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.PendingOpenChannel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channel: (f = msg.getChannel()) && proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(includeInstance, f),\n    confirmationHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    commitFee: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    commitWeight: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    feePerKw: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.PendingOpenChannel;\n  return proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader);\n      msg.setChannel(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setConfirmationHeight(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommitFee(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommitWeight(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeePerKw(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getConfirmationHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getCommitFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getCommitWeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getFeePerKw();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PendingChannel channel = 1;\n * @return {?proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getChannel = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.PendingChannel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingChannel, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.PendingChannel|undefined} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setChannel = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.clearChannel = function() {\n  this.setChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.hasChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 confirmation_height = 2;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getConfirmationHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setConfirmationHeight = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 commit_fee = 4;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getCommitFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setCommitFee = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 commit_weight = 5;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getCommitWeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setCommitWeight = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 fee_per_kw = 6;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getFeePerKw = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setFeePerKw = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channel: (f = msg.getChannel()) && proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(includeInstance, f),\n    limboBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    commitments: (f = msg.getCommitments()) && proto.lnrpc.PendingChannelsResponse.Commitments.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel;\n  return proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader);\n      msg.setChannel(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLimboBalance(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.PendingChannelsResponse.Commitments;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.Commitments.deserializeBinaryFromReader);\n      msg.setCommitments(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getLimboBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getCommitments();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.PendingChannelsResponse.Commitments.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PendingChannel channel = 1;\n * @return {?proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.getChannel = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.PendingChannel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingChannel, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.PendingChannel|undefined} value */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.setChannel = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.clearChannel = function() {\n  this.setChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.hasChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 limbo_balance = 2;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.getLimboBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.setLimboBalance = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional Commitments commitments = 3;\n * @return {?proto.lnrpc.PendingChannelsResponse.Commitments}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.getCommitments = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.Commitments} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.Commitments, 3));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.Commitments|undefined} value */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.setCommitments = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.clearCommitments = function() {\n  this.setCommitments(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.hasCommitments = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.Commitments = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.Commitments, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.Commitments.displayName = 'proto.lnrpc.PendingChannelsResponse.Commitments';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.Commitments.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.Commitments} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    localTxid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    remoteTxid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    remotePendingTxid: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    localCommitFeeSat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    remoteCommitFeeSat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    remotePendingCommitFeeSat: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.Commitments}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.Commitments;\n  return proto.lnrpc.PendingChannelsResponse.Commitments.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.Commitments} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.Commitments}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLocalTxid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemoteTxid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemotePendingTxid(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLocalCommitFeeSat(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRemoteCommitFeeSat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRemotePendingCommitFeeSat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.Commitments.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.Commitments} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLocalTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRemoteTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getRemotePendingTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getLocalCommitFeeSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getRemoteCommitFeeSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getRemotePendingCommitFeeSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string local_txid = 1;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getLocalTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setLocalTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string remote_txid = 2;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getRemoteTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setRemoteTxid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string remote_pending_txid = 3;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getRemotePendingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setRemotePendingTxid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 local_commit_fee_sat = 4;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getLocalCommitFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setLocalCommitFeeSat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 remote_commit_fee_sat = 5;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getRemoteCommitFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setRemoteCommitFeeSat = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 remote_pending_commit_fee_sat = 6;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getRemotePendingCommitFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setRemotePendingCommitFeeSat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.ClosedChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.ClosedChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.ClosedChannel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.ClosedChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.ClosedChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channel: (f = msg.getChannel()) && proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(includeInstance, f),\n    closingTxid: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.ClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.ClosedChannel;\n  return proto.lnrpc.PendingChannelsResponse.ClosedChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.ClosedChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.ClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader);\n      msg.setChannel(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClosingTxid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.ClosedChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.ClosedChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getClosingTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PendingChannel channel = 1;\n * @return {?proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.getChannel = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.PendingChannel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingChannel, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.PendingChannel|undefined} value */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.setChannel = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.clearChannel = function() {\n  this.setChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.hasChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string closing_txid = 2;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.getClosingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.setClosingTxid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.ForceClosedChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.ForceClosedChannel';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.repeatedFields_ = [8];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channel: (f = msg.getChannel()) && proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(includeInstance, f),\n    closingTxid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    limboBalance: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    maturityHeight: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    blocksTilMaturity: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    recoveredBalance: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    pendingHtlcsList: jspb.Message.toObjectList(msg.getPendingHtlcsList(),\n    proto.lnrpc.PendingHTLC.toObject, includeInstance),\n    anchor: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.ForceClosedChannel;\n  return proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader);\n      msg.setChannel(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClosingTxid(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLimboBalance(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaturityHeight(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlocksTilMaturity(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRecoveredBalance(value);\n      break;\n    case 8:\n      var value = new proto.lnrpc.PendingHTLC;\n      reader.readMessage(value,proto.lnrpc.PendingHTLC.deserializeBinaryFromReader);\n      msg.addPendingHtlcs(value);\n      break;\n    case 9:\n      var value = /** @type {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState} */ (reader.readEnum());\n      msg.setAnchor(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getClosingTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getLimboBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getMaturityHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getBlocksTilMaturity();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getRecoveredBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getPendingHtlcsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      8,\n      f,\n      proto.lnrpc.PendingHTLC.serializeBinaryToWriter\n    );\n  }\n  f = message.getAnchor();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState = {\n  LIMBO: 0,\n  RECOVERED: 1,\n  LOST: 2\n};\n\n/**\n * optional PendingChannel channel = 1;\n * @return {?proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getChannel = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.PendingChannel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingChannel, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.PendingChannel|undefined} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setChannel = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.clearChannel = function() {\n  this.setChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.hasChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string closing_txid = 2;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getClosingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setClosingTxid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 limbo_balance = 3;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getLimboBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setLimboBalance = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 maturity_height = 4;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getMaturityHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setMaturityHeight = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int32 blocks_til_maturity = 5;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getBlocksTilMaturity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setBlocksTilMaturity = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 recovered_balance = 6;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getRecoveredBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setRecoveredBalance = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * repeated PendingHTLC pending_htlcs = 8;\n * @return {!Array.<!proto.lnrpc.PendingHTLC>}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getPendingHtlcsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingHTLC>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingHTLC, 8));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingHTLC>} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setPendingHtlcsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 8, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingHTLC=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingHTLC}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.addPendingHtlcs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.lnrpc.PendingHTLC, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.clearPendingHtlcsList = function() {\n  this.setPendingHtlcsList([]);\n};\n\n\n/**\n * optional AnchorState anchor = 9;\n * @return {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getAnchor = function() {\n  return /** @type {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setAnchor = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional int64 total_limbo_balance = 1;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getTotalLimboBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setTotalLimboBalance = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * repeated PendingOpenChannel pending_open_channels = 2;\n * @return {!Array.<!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel>}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getPendingOpenChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingOpenChannel, 2));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel>} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setPendingOpenChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.addPendingOpenChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.lnrpc.PendingChannelsResponse.PendingOpenChannel, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.prototype.clearPendingOpenChannelsList = function() {\n  this.setPendingOpenChannelsList([]);\n};\n\n\n/**\n * repeated ClosedChannel pending_closing_channels = 3;\n * @return {!Array.<!proto.lnrpc.PendingChannelsResponse.ClosedChannel>}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getPendingClosingChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingChannelsResponse.ClosedChannel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingChannelsResponse.ClosedChannel, 3));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingChannelsResponse.ClosedChannel>} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setPendingClosingChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingChannelsResponse.ClosedChannel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingChannelsResponse.ClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.addPendingClosingChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.lnrpc.PendingChannelsResponse.ClosedChannel, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.prototype.clearPendingClosingChannelsList = function() {\n  this.setPendingClosingChannelsList([]);\n};\n\n\n/**\n * repeated ForceClosedChannel pending_force_closing_channels = 4;\n * @return {!Array.<!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel>}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getPendingForceClosingChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingChannelsResponse.ForceClosedChannel, 4));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel>} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setPendingForceClosingChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.addPendingForceClosingChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.lnrpc.PendingChannelsResponse.ForceClosedChannel, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.prototype.clearPendingForceClosingChannelsList = function() {\n  this.setPendingForceClosingChannelsList([]);\n};\n\n\n/**\n * repeated WaitingCloseChannel waiting_close_channels = 5;\n * @return {!Array.<!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel>}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getWaitingCloseChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel, 5));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel>} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setWaitingCloseChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.addWaitingCloseChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.prototype.clearWaitingCloseChannelsList = function() {\n  this.setWaitingCloseChannelsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelEventSubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelEventSubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelEventSubscription.displayName = 'proto.lnrpc.ChannelEventSubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelEventSubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelEventSubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelEventSubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEventSubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelEventSubscription}\n */\nproto.lnrpc.ChannelEventSubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelEventSubscription;\n  return proto.lnrpc.ChannelEventSubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelEventSubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelEventSubscription}\n */\nproto.lnrpc.ChannelEventSubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelEventSubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelEventSubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelEventSubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEventSubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelEventUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.ChannelEventUpdate.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.ChannelEventUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelEventUpdate.displayName = 'proto.lnrpc.ChannelEventUpdate';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.ChannelEventUpdate.oneofGroups_ = [[1,2,3,4,6]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ChannelEventUpdate.ChannelCase = {\n  CHANNEL_NOT_SET: 0,\n  OPEN_CHANNEL: 1,\n  CLOSED_CHANNEL: 2,\n  ACTIVE_CHANNEL: 3,\n  INACTIVE_CHANNEL: 4,\n  PENDING_OPEN_CHANNEL: 6\n};\n\n/**\n * @return {proto.lnrpc.ChannelEventUpdate.ChannelCase}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getChannelCase = function() {\n  return /** @type {proto.lnrpc.ChannelEventUpdate.ChannelCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelEventUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelEventUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEventUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    openChannel: (f = msg.getOpenChannel()) && proto.lnrpc.Channel.toObject(includeInstance, f),\n    closedChannel: (f = msg.getClosedChannel()) && proto.lnrpc.ChannelCloseSummary.toObject(includeInstance, f),\n    activeChannel: (f = msg.getActiveChannel()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    inactiveChannel: (f = msg.getInactiveChannel()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    pendingOpenChannel: (f = msg.getPendingOpenChannel()) && proto.lnrpc.PendingUpdate.toObject(includeInstance, f),\n    type: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelEventUpdate}\n */\nproto.lnrpc.ChannelEventUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelEventUpdate;\n  return proto.lnrpc.ChannelEventUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelEventUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelEventUpdate}\n */\nproto.lnrpc.ChannelEventUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Channel;\n      reader.readMessage(value,proto.lnrpc.Channel.deserializeBinaryFromReader);\n      msg.setOpenChannel(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelCloseSummary;\n      reader.readMessage(value,proto.lnrpc.ChannelCloseSummary.deserializeBinaryFromReader);\n      msg.setClosedChannel(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setActiveChannel(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setInactiveChannel(value);\n      break;\n    case 6:\n      var value = new proto.lnrpc.PendingUpdate;\n      reader.readMessage(value,proto.lnrpc.PendingUpdate.deserializeBinaryFromReader);\n      msg.setPendingOpenChannel(value);\n      break;\n    case 5:\n      var value = /** @type {!proto.lnrpc.ChannelEventUpdate.UpdateType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelEventUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelEventUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEventUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOpenChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.Channel.serializeBinaryToWriter\n    );\n  }\n  f = message.getClosedChannel();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelCloseSummary.serializeBinaryToWriter\n    );\n  }\n  f = message.getActiveChannel();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getInactiveChannel();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingOpenChannel();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.lnrpc.PendingUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ChannelEventUpdate.UpdateType = {\n  OPEN_CHANNEL: 0,\n  CLOSED_CHANNEL: 1,\n  ACTIVE_CHANNEL: 2,\n  INACTIVE_CHANNEL: 3,\n  PENDING_OPEN_CHANNEL: 4\n};\n\n/**\n * optional Channel open_channel = 1;\n * @return {?proto.lnrpc.Channel}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getOpenChannel = function() {\n  return /** @type{?proto.lnrpc.Channel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Channel, 1));\n};\n\n\n/** @param {?proto.lnrpc.Channel|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setOpenChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearOpenChannel = function() {\n  this.setOpenChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasOpenChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ChannelCloseSummary closed_channel = 2;\n * @return {?proto.lnrpc.ChannelCloseSummary}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getClosedChannel = function() {\n  return /** @type{?proto.lnrpc.ChannelCloseSummary} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelCloseSummary, 2));\n};\n\n\n/** @param {?proto.lnrpc.ChannelCloseSummary|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setClosedChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearClosedChannel = function() {\n  this.setClosedChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasClosedChannel = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional ChannelPoint active_channel = 3;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getActiveChannel = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 3));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setActiveChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearActiveChannel = function() {\n  this.setActiveChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasActiveChannel = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional ChannelPoint inactive_channel = 4;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getInactiveChannel = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 4));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setInactiveChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 4, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearInactiveChannel = function() {\n  this.setInactiveChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasInactiveChannel = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional PendingUpdate pending_open_channel = 6;\n * @return {?proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getPendingOpenChannel = function() {\n  return /** @type{?proto.lnrpc.PendingUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingUpdate, 6));\n};\n\n\n/** @param {?proto.lnrpc.PendingUpdate|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setPendingOpenChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 6, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearPendingOpenChannel = function() {\n  this.setPendingOpenChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasPendingOpenChannel = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional UpdateType type = 5;\n * @return {!proto.lnrpc.ChannelEventUpdate.UpdateType}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getType = function() {\n  return /** @type {!proto.lnrpc.ChannelEventUpdate.UpdateType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {!proto.lnrpc.ChannelEventUpdate.UpdateType} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setType = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.WalletBalanceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.WalletBalanceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.WalletBalanceRequest.displayName = 'proto.lnrpc.WalletBalanceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.WalletBalanceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.WalletBalanceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.WalletBalanceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.WalletBalanceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.WalletBalanceRequest}\n */\nproto.lnrpc.WalletBalanceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.WalletBalanceRequest;\n  return proto.lnrpc.WalletBalanceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.WalletBalanceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.WalletBalanceRequest}\n */\nproto.lnrpc.WalletBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.WalletBalanceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.WalletBalanceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.WalletBalanceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.WalletBalanceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.WalletBalanceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.WalletBalanceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.WalletBalanceResponse.displayName = 'proto.lnrpc.WalletBalanceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.WalletBalanceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.WalletBalanceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.WalletBalanceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    totalBalance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    confirmedBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    unconfirmedBalance: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.WalletBalanceResponse}\n */\nproto.lnrpc.WalletBalanceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.WalletBalanceResponse;\n  return proto.lnrpc.WalletBalanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.WalletBalanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.WalletBalanceResponse}\n */\nproto.lnrpc.WalletBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalBalance(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setConfirmedBalance(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUnconfirmedBalance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.WalletBalanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.WalletBalanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.WalletBalanceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTotalBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getConfirmedBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getUnconfirmedBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 total_balance = 1;\n * @return {number}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.getTotalBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.WalletBalanceResponse.prototype.setTotalBalance = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 confirmed_balance = 2;\n * @return {number}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.getConfirmedBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.WalletBalanceResponse.prototype.setConfirmedBalance = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 unconfirmed_balance = 3;\n * @return {number}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.getUnconfirmedBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.WalletBalanceResponse.prototype.setUnconfirmedBalance = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBalanceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBalanceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBalanceRequest.displayName = 'proto.lnrpc.ChannelBalanceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBalanceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBalanceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBalanceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBalanceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBalanceRequest}\n */\nproto.lnrpc.ChannelBalanceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBalanceRequest;\n  return proto.lnrpc.ChannelBalanceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBalanceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBalanceRequest}\n */\nproto.lnrpc.ChannelBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBalanceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBalanceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBalanceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBalanceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBalanceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBalanceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBalanceResponse.displayName = 'proto.lnrpc.ChannelBalanceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBalanceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBalanceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBalanceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    balance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    pendingOpenBalance: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBalanceResponse}\n */\nproto.lnrpc.ChannelBalanceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBalanceResponse;\n  return proto.lnrpc.ChannelBalanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBalanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBalanceResponse}\n */\nproto.lnrpc.ChannelBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPendingOpenBalance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBalanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBalanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBalanceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPendingOpenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 balance = 1;\n * @return {number}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelBalanceResponse.prototype.setBalance = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 pending_open_balance = 2;\n * @return {number}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.getPendingOpenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelBalanceResponse.prototype.setPendingOpenBalance = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.QueryRoutesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.QueryRoutesRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.QueryRoutesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.QueryRoutesRequest.displayName = 'proto.lnrpc.QueryRoutesRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.QueryRoutesRequest.repeatedFields_ = [6,7,10,16,17];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.QueryRoutesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.QueryRoutesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.QueryRoutesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    amt: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    amtMsat: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    finalCltvDelta: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    feeLimit: (f = msg.getFeeLimit()) && proto.lnrpc.FeeLimit.toObject(includeInstance, f),\n    ignoredNodesList: msg.getIgnoredNodesList_asB64(),\n    ignoredEdgesList: jspb.Message.toObjectList(msg.getIgnoredEdgesList(),\n    proto.lnrpc.EdgeLocator.toObject, includeInstance),\n    sourcePubKey: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    useMissionControl: jspb.Message.getFieldWithDefault(msg, 9, false),\n    ignoredPairsList: jspb.Message.toObjectList(msg.getIgnoredPairsList(),\n    proto.lnrpc.NodePair.toObject, includeInstance),\n    cltvLimit: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    destCustomRecordsMap: (f = msg.getDestCustomRecordsMap()) ? f.toObject(includeInstance, undefined) : [],\n    outgoingChanId: jspb.Message.getFieldWithDefault(msg, 14, \"0\"),\n    lastHopPubkey: msg.getLastHopPubkey_asB64(),\n    routeHintsList: jspb.Message.toObjectList(msg.getRouteHintsList(),\n    proto.lnrpc.RouteHint.toObject, includeInstance),\n    destFeaturesList: jspb.Message.getRepeatedField(msg, 17)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.QueryRoutesRequest}\n */\nproto.lnrpc.QueryRoutesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.QueryRoutesRequest;\n  return proto.lnrpc.QueryRoutesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.QueryRoutesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.QueryRoutesRequest}\n */\nproto.lnrpc.QueryRoutesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmt(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setFinalCltvDelta(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.FeeLimit;\n      reader.readMessage(value,proto.lnrpc.FeeLimit.deserializeBinaryFromReader);\n      msg.setFeeLimit(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addIgnoredNodes(value);\n      break;\n    case 7:\n      var value = new proto.lnrpc.EdgeLocator;\n      reader.readMessage(value,proto.lnrpc.EdgeLocator.deserializeBinaryFromReader);\n      msg.addIgnoredEdges(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSourcePubKey(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setUseMissionControl(value);\n      break;\n    case 10:\n      var value = new proto.lnrpc.NodePair;\n      reader.readMessage(value,proto.lnrpc.NodePair.deserializeBinaryFromReader);\n      msg.addIgnoredPairs(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCltvLimit(value);\n      break;\n    case 13:\n      var value = msg.getDestCustomRecordsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readBytes);\n         });\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setOutgoingChanId(value);\n      break;\n    case 15:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setLastHopPubkey(value);\n      break;\n    case 16:\n      var value = new proto.lnrpc.RouteHint;\n      reader.readMessage(value,proto.lnrpc.RouteHint.deserializeBinaryFromReader);\n      msg.addRouteHints(value);\n      break;\n    case 17:\n      var value = /** @type {!Array.<!proto.lnrpc.FeatureBit>} */ (reader.readPackedEnum());\n      msg.setDestFeaturesList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.QueryRoutesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.QueryRoutesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.QueryRoutesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmt();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getFinalCltvDelta();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getFeeLimit();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.lnrpc.FeeLimit.serializeBinaryToWriter\n    );\n  }\n  f = message.getIgnoredNodesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      6,\n      f\n    );\n  }\n  f = message.getIgnoredEdgesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      proto.lnrpc.EdgeLocator.serializeBinaryToWriter\n    );\n  }\n  f = message.getSourcePubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getUseMissionControl();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n  f = message.getIgnoredPairsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      10,\n      f,\n      proto.lnrpc.NodePair.serializeBinaryToWriter\n    );\n  }\n  f = message.getCltvLimit();\n  if (f !== 0) {\n    writer.writeUint32(\n      11,\n      f\n    );\n  }\n  f = message.getDestCustomRecordsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getOutgoingChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      14,\n      f\n    );\n  }\n  f = message.getLastHopPubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      15,\n      f\n    );\n  }\n  f = message.getRouteHintsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      16,\n      f,\n      proto.lnrpc.RouteHint.serializeBinaryToWriter\n    );\n  }\n  f = message.getDestFeaturesList();\n  if (f.length > 0) {\n    writer.writePackedEnum(\n      17,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amt = 2;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setAmt = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_msat = 12;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional int32 final_cltv_delta = 4;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getFinalCltvDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setFinalCltvDelta = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional FeeLimit fee_limit = 5;\n * @return {?proto.lnrpc.FeeLimit}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getFeeLimit = function() {\n  return /** @type{?proto.lnrpc.FeeLimit} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FeeLimit, 5));\n};\n\n\n/** @param {?proto.lnrpc.FeeLimit|undefined} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setFeeLimit = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearFeeLimit = function() {\n  this.setFeeLimit(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.hasFeeLimit = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * repeated bytes ignored_nodes = 6;\n * @return {!Array.<string>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredNodesList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 6));\n};\n\n\n/**\n * repeated bytes ignored_nodes = 6;\n * This is a type-conversion wrapper around `getIgnoredNodesList()`\n * @return {!Array.<string>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredNodesList_asB64 = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(\n      this.getIgnoredNodesList()));\n};\n\n\n/**\n * repeated bytes ignored_nodes = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getIgnoredNodesList()`\n * @return {!Array.<!Uint8Array>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredNodesList_asU8 = function() {\n  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getIgnoredNodesList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setIgnoredNodesList = function(value) {\n  jspb.Message.setField(this, 6, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addIgnoredNodes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 6, value, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearIgnoredNodesList = function() {\n  this.setIgnoredNodesList([]);\n};\n\n\n/**\n * repeated EdgeLocator ignored_edges = 7;\n * @return {!Array.<!proto.lnrpc.EdgeLocator>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredEdgesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.EdgeLocator>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.EdgeLocator, 7));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.EdgeLocator>} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setIgnoredEdgesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.EdgeLocator=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.EdgeLocator}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addIgnoredEdges = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.lnrpc.EdgeLocator, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearIgnoredEdgesList = function() {\n  this.setIgnoredEdgesList([]);\n};\n\n\n/**\n * optional string source_pub_key = 8;\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getSourcePubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setSourcePubKey = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional bool use_mission_control = 9;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getUseMissionControl = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setUseMissionControl = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * repeated NodePair ignored_pairs = 10;\n * @return {!Array.<!proto.lnrpc.NodePair>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredPairsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.NodePair>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.NodePair, 10));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.NodePair>} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setIgnoredPairsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 10, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.NodePair=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.NodePair}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addIgnoredPairs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.lnrpc.NodePair, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearIgnoredPairsList = function() {\n  this.setIgnoredPairsList([]);\n};\n\n\n/**\n * optional uint32 cltv_limit = 11;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getCltvLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setCltvLimit = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * map<uint64, bytes> dest_custom_records = 13;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!(string|Uint8Array)>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getDestCustomRecordsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 13, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearDestCustomRecordsMap = function() {\n  this.getDestCustomRecordsMap().clear();\n};\n\n\n/**\n * optional uint64 outgoing_chan_id = 14;\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getOutgoingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setOutgoingChanId = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 15;\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getLastHopPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, \"\"));\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 15;\n * This is a type-conversion wrapper around `getLastHopPubkey()`\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getLastHopPubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getLastHopPubkey()));\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 15;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getLastHopPubkey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getLastHopPubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getLastHopPubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setLastHopPubkey = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * repeated RouteHint route_hints = 16;\n * @return {!Array.<!proto.lnrpc.RouteHint>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getRouteHintsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.RouteHint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.RouteHint, 16));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.RouteHint>} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setRouteHintsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 16, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.RouteHint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addRouteHints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.lnrpc.RouteHint, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearRouteHintsList = function() {\n  this.setRouteHintsList([]);\n};\n\n\n/**\n * repeated FeatureBit dest_features = 17;\n * @return {!Array.<!proto.lnrpc.FeatureBit>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getDestFeaturesList = function() {\n  return /** @type {!Array.<!proto.lnrpc.FeatureBit>} */ (jspb.Message.getRepeatedField(this, 17));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.FeatureBit>} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setDestFeaturesList = function(value) {\n  jspb.Message.setField(this, 17, value || []);\n};\n\n\n/**\n * @param {!proto.lnrpc.FeatureBit} value\n * @param {number=} opt_index\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addDestFeatures = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 17, value, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearDestFeaturesList = function() {\n  this.setDestFeaturesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodePair = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NodePair, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodePair.displayName = 'proto.lnrpc.NodePair';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodePair.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodePair.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodePair} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodePair.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: msg.getFrom_asB64(),\n    to: msg.getTo_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodePair}\n */\nproto.lnrpc.NodePair.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodePair;\n  return proto.lnrpc.NodePair.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodePair} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodePair}\n */\nproto.lnrpc.NodePair.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodePair.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodePair.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodePair} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodePair.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getTo_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes from = 1;\n * @return {string}\n */\nproto.lnrpc.NodePair.prototype.getFrom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes from = 1;\n * This is a type-conversion wrapper around `getFrom()`\n * @return {string}\n */\nproto.lnrpc.NodePair.prototype.getFrom_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFrom()));\n};\n\n\n/**\n * optional bytes from = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFrom()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodePair.prototype.getFrom_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFrom()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.NodePair.prototype.setFrom = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes to = 2;\n * @return {string}\n */\nproto.lnrpc.NodePair.prototype.getTo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes to = 2;\n * This is a type-conversion wrapper around `getTo()`\n * @return {string}\n */\nproto.lnrpc.NodePair.prototype.getTo_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTo()));\n};\n\n\n/**\n * optional bytes to = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTo()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodePair.prototype.getTo_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTo()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.NodePair.prototype.setTo = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.EdgeLocator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.EdgeLocator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.EdgeLocator.displayName = 'proto.lnrpc.EdgeLocator';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.EdgeLocator.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.EdgeLocator.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.EdgeLocator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EdgeLocator.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    directionReverse: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.EdgeLocator}\n */\nproto.lnrpc.EdgeLocator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.EdgeLocator;\n  return proto.lnrpc.EdgeLocator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.EdgeLocator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.EdgeLocator}\n */\nproto.lnrpc.EdgeLocator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChannelId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDirectionReverse(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.EdgeLocator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.EdgeLocator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.EdgeLocator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EdgeLocator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getDirectionReverse();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 channel_id = 1;\n * @return {string}\n */\nproto.lnrpc.EdgeLocator.prototype.getChannelId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.EdgeLocator.prototype.setChannelId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool direction_reverse = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.EdgeLocator.prototype.getDirectionReverse = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.EdgeLocator.prototype.setDirectionReverse = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.QueryRoutesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.QueryRoutesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.QueryRoutesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.QueryRoutesResponse.displayName = 'proto.lnrpc.QueryRoutesResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.QueryRoutesResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.QueryRoutesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.QueryRoutesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.QueryRoutesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    routesList: jspb.Message.toObjectList(msg.getRoutesList(),\n    proto.lnrpc.Route.toObject, includeInstance),\n    successProb: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.QueryRoutesResponse}\n */\nproto.lnrpc.QueryRoutesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.QueryRoutesResponse;\n  return proto.lnrpc.QueryRoutesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.QueryRoutesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.QueryRoutesResponse}\n */\nproto.lnrpc.QueryRoutesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Route;\n      reader.readMessage(value,proto.lnrpc.Route.deserializeBinaryFromReader);\n      msg.addRoutes(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setSuccessProb(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.QueryRoutesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.QueryRoutesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.QueryRoutesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRoutesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Route.serializeBinaryToWriter\n    );\n  }\n  f = message.getSuccessProb();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated Route routes = 1;\n * @return {!Array.<!proto.lnrpc.Route>}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.getRoutesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Route>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Route, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Route>} value */\nproto.lnrpc.QueryRoutesResponse.prototype.setRoutesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Route=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Route}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.addRoutes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Route, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesResponse.prototype.clearRoutesList = function() {\n  this.setRoutesList([]);\n};\n\n\n/**\n * optional double success_prob = 2;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.getSuccessProb = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesResponse.prototype.setSuccessProb = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Hop = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Hop, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Hop.displayName = 'proto.lnrpc.Hop';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Hop.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Hop.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Hop} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Hop.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    chanCapacity: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    amtToForward: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    fee: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    expiry: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    amtToForwardMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    feeMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    pubKey: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    tlvPayload: jspb.Message.getFieldWithDefault(msg, 9, false),\n    mppRecord: (f = msg.getMppRecord()) && proto.lnrpc.MPPRecord.toObject(includeInstance, f),\n    customRecordsMap: (f = msg.getCustomRecordsMap()) ? f.toObject(includeInstance, undefined) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Hop}\n */\nproto.lnrpc.Hop.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Hop;\n  return proto.lnrpc.Hop.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Hop} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Hop}\n */\nproto.lnrpc.Hop.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setChanCapacity(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtToForward(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFee(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setExpiry(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtToForwardMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeMsat(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setTlvPayload(value);\n      break;\n    case 10:\n      var value = new proto.lnrpc.MPPRecord;\n      reader.readMessage(value,proto.lnrpc.MPPRecord.deserializeBinaryFromReader);\n      msg.setMppRecord(value);\n      break;\n    case 11:\n      var value = msg.getCustomRecordsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readBytes);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Hop.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Hop.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Hop} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Hop.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getChanCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getAmtToForward();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getExpiry();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getAmtToForwardMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getTlvPayload();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n  f = message.getMppRecord();\n  if (f != null) {\n    writer.writeMessage(\n      10,\n      f,\n      proto.lnrpc.MPPRecord.serializeBinaryToWriter\n    );\n  }\n  f = message.getCustomRecordsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeBytes);\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.Hop.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Hop.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 chan_capacity = 2;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getChanCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setChanCapacity = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_to_forward = 3;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getAmtToForward = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setAmtToForward = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 fee = 4;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setFee = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 expiry = 5;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setExpiry = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 amt_to_forward_msat = 6;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getAmtToForwardMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setAmtToForwardMsat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 fee_msat = 7;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setFeeMsat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string pub_key = 8;\n * @return {string}\n */\nproto.lnrpc.Hop.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Hop.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional bool tlv_payload = 9;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Hop.prototype.getTlvPayload = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Hop.prototype.setTlvPayload = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional MPPRecord mpp_record = 10;\n * @return {?proto.lnrpc.MPPRecord}\n */\nproto.lnrpc.Hop.prototype.getMppRecord = function() {\n  return /** @type{?proto.lnrpc.MPPRecord} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.MPPRecord, 10));\n};\n\n\n/** @param {?proto.lnrpc.MPPRecord|undefined} value */\nproto.lnrpc.Hop.prototype.setMppRecord = function(value) {\n  jspb.Message.setWrapperField(this, 10, value);\n};\n\n\nproto.lnrpc.Hop.prototype.clearMppRecord = function() {\n  this.setMppRecord(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Hop.prototype.hasMppRecord = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * map<uint64, bytes> custom_records = 11;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!(string|Uint8Array)>}\n */\nproto.lnrpc.Hop.prototype.getCustomRecordsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 11, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.Hop.prototype.clearCustomRecordsMap = function() {\n  this.getCustomRecordsMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.MPPRecord = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.MPPRecord, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.MPPRecord.displayName = 'proto.lnrpc.MPPRecord';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.MPPRecord.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.MPPRecord.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.MPPRecord} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MPPRecord.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentAddr: msg.getPaymentAddr_asB64(),\n    totalAmtMsat: jspb.Message.getFieldWithDefault(msg, 10, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.MPPRecord}\n */\nproto.lnrpc.MPPRecord.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.MPPRecord;\n  return proto.lnrpc.MPPRecord.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.MPPRecord} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.MPPRecord}\n */\nproto.lnrpc.MPPRecord.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 11:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentAddr(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalAmtMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.MPPRecord.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.MPPRecord.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.MPPRecord} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MPPRecord.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentAddr_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      11,\n      f\n    );\n  }\n  f = message.getTotalAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * @return {string}\n */\nproto.lnrpc.MPPRecord.prototype.getPaymentAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {string}\n */\nproto.lnrpc.MPPRecord.prototype.getPaymentAddr_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentAddr()));\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.MPPRecord.prototype.getPaymentAddr_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentAddr()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.MPPRecord.prototype.setPaymentAddr = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional int64 total_amt_msat = 10;\n * @return {number}\n */\nproto.lnrpc.MPPRecord.prototype.getTotalAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.MPPRecord.prototype.setTotalAmtMsat = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Route = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Route.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Route, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Route.displayName = 'proto.lnrpc.Route';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Route.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Route.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Route.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Route} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Route.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    totalTimeLock: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    totalFees: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    totalAmt: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    hopsList: jspb.Message.toObjectList(msg.getHopsList(),\n    proto.lnrpc.Hop.toObject, includeInstance),\n    totalFeesMsat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    totalAmtMsat: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Route}\n */\nproto.lnrpc.Route.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Route;\n  return proto.lnrpc.Route.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Route} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Route}\n */\nproto.lnrpc.Route.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTotalTimeLock(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalFees(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalAmt(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.Hop;\n      reader.readMessage(value,proto.lnrpc.Hop.deserializeBinaryFromReader);\n      msg.addHops(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalFeesMsat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalAmtMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Route.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Route.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Route} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Route.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTotalTimeLock();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getTotalFees();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTotalAmt();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getHopsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.lnrpc.Hop.serializeBinaryToWriter\n    );\n  }\n  f = message.getTotalFeesMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getTotalAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 total_time_lock = 1;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalTimeLock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalTimeLock = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 total_fees = 2;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalFees = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalFees = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 total_amt = 3;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalAmt = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * repeated Hop hops = 4;\n * @return {!Array.<!proto.lnrpc.Hop>}\n */\nproto.lnrpc.Route.prototype.getHopsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Hop>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Hop, 4));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Hop>} value */\nproto.lnrpc.Route.prototype.setHopsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Hop=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Hop}\n */\nproto.lnrpc.Route.prototype.addHops = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.lnrpc.Hop, opt_index);\n};\n\n\nproto.lnrpc.Route.prototype.clearHopsList = function() {\n  this.setHopsList([]);\n};\n\n\n/**\n * optional int64 total_fees_msat = 5;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalFeesMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalFeesMsat = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 total_amt_msat = 6;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalAmtMsat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NodeInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeInfoRequest.displayName = 'proto.lnrpc.NodeInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    includeChannels: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeInfoRequest}\n */\nproto.lnrpc.NodeInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeInfoRequest;\n  return proto.lnrpc.NodeInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeInfoRequest}\n */\nproto.lnrpc.NodeInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getIncludeChannels();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.NodeInfoRequest.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeInfoRequest.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool include_channels = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.NodeInfoRequest.prototype.getIncludeChannels = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.NodeInfoRequest.prototype.setIncludeChannels = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.NodeInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.NodeInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeInfo.displayName = 'proto.lnrpc.NodeInfo';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.NodeInfo.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    node: (f = msg.getNode()) && proto.lnrpc.LightningNode.toObject(includeInstance, f),\n    numChannels: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    totalCapacity: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),\n    proto.lnrpc.ChannelEdge.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeInfo}\n */\nproto.lnrpc.NodeInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeInfo;\n  return proto.lnrpc.NodeInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeInfo}\n */\nproto.lnrpc.NodeInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.LightningNode;\n      reader.readMessage(value,proto.lnrpc.LightningNode.deserializeBinaryFromReader);\n      msg.setNode(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumChannels(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalCapacity(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.ChannelEdge;\n      reader.readMessage(value,proto.lnrpc.ChannelEdge.deserializeBinaryFromReader);\n      msg.addChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNode();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.LightningNode.serializeBinaryToWriter\n    );\n  }\n  f = message.getNumChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getTotalCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.lnrpc.ChannelEdge.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional LightningNode node = 1;\n * @return {?proto.lnrpc.LightningNode}\n */\nproto.lnrpc.NodeInfo.prototype.getNode = function() {\n  return /** @type{?proto.lnrpc.LightningNode} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.LightningNode, 1));\n};\n\n\n/** @param {?proto.lnrpc.LightningNode|undefined} value */\nproto.lnrpc.NodeInfo.prototype.setNode = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.NodeInfo.prototype.clearNode = function() {\n  this.setNode(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.NodeInfo.prototype.hasNode = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 num_channels = 2;\n * @return {number}\n */\nproto.lnrpc.NodeInfo.prototype.getNumChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NodeInfo.prototype.setNumChannels = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 total_capacity = 3;\n * @return {number}\n */\nproto.lnrpc.NodeInfo.prototype.getTotalCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NodeInfo.prototype.setTotalCapacity = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * repeated ChannelEdge channels = 4;\n * @return {!Array.<!proto.lnrpc.ChannelEdge>}\n */\nproto.lnrpc.NodeInfo.prototype.getChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelEdge>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelEdge, 4));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelEdge>} value */\nproto.lnrpc.NodeInfo.prototype.setChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelEdge=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelEdge}\n */\nproto.lnrpc.NodeInfo.prototype.addChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.lnrpc.ChannelEdge, opt_index);\n};\n\n\nproto.lnrpc.NodeInfo.prototype.clearChannelsList = function() {\n  this.setChannelsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.LightningNode = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.LightningNode.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.LightningNode, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.LightningNode.displayName = 'proto.lnrpc.LightningNode';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.LightningNode.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.LightningNode.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.LightningNode.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.LightningNode} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.LightningNode.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    lastUpdate: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    pubKey: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    alias: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    addressesList: jspb.Message.toObjectList(msg.getAddressesList(),\n    proto.lnrpc.NodeAddress.toObject, includeInstance),\n    color: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.LightningNode}\n */\nproto.lnrpc.LightningNode.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.LightningNode;\n  return proto.lnrpc.LightningNode.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.LightningNode} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.LightningNode}\n */\nproto.lnrpc.LightningNode.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLastUpdate(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.NodeAddress;\n      reader.readMessage(value,proto.lnrpc.NodeAddress.deserializeBinaryFromReader);\n      msg.addAddresses(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setColor(value);\n      break;\n    case 6:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.LightningNode.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.LightningNode.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.LightningNode} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.LightningNode.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLastUpdate();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getAddressesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.lnrpc.NodeAddress.serializeBinaryToWriter\n    );\n  }\n  f = message.getColor();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * optional uint32 last_update = 1;\n * @return {number}\n */\nproto.lnrpc.LightningNode.prototype.getLastUpdate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.LightningNode.prototype.setLastUpdate = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string pub_key = 2;\n * @return {string}\n */\nproto.lnrpc.LightningNode.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningNode.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string alias = 3;\n * @return {string}\n */\nproto.lnrpc.LightningNode.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningNode.prototype.setAlias = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * repeated NodeAddress addresses = 4;\n * @return {!Array.<!proto.lnrpc.NodeAddress>}\n */\nproto.lnrpc.LightningNode.prototype.getAddressesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.NodeAddress>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.NodeAddress, 4));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.NodeAddress>} value */\nproto.lnrpc.LightningNode.prototype.setAddressesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.NodeAddress=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.NodeAddress}\n */\nproto.lnrpc.LightningNode.prototype.addAddresses = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.lnrpc.NodeAddress, opt_index);\n};\n\n\nproto.lnrpc.LightningNode.prototype.clearAddressesList = function() {\n  this.setAddressesList([]);\n};\n\n\n/**\n * optional string color = 5;\n * @return {string}\n */\nproto.lnrpc.LightningNode.prototype.getColor = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningNode.prototype.setColor = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * map<uint32, Feature> features = 6;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.LightningNode.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 6, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.LightningNode.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NodeAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeAddress.displayName = 'proto.lnrpc.NodeAddress';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    network: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    addr: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeAddress}\n */\nproto.lnrpc.NodeAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeAddress;\n  return proto.lnrpc.NodeAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeAddress}\n */\nproto.lnrpc.NodeAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNetwork(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddr(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNetwork();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string network = 1;\n * @return {string}\n */\nproto.lnrpc.NodeAddress.prototype.getNetwork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeAddress.prototype.setNetwork = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string addr = 2;\n * @return {string}\n */\nproto.lnrpc.NodeAddress.prototype.getAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeAddress.prototype.setAddr = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RoutingPolicy = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.RoutingPolicy, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RoutingPolicy.displayName = 'proto.lnrpc.RoutingPolicy';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RoutingPolicy.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RoutingPolicy.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RoutingPolicy} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RoutingPolicy.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    timeLockDelta: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    minHtlc: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    feeBaseMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    feeRateMilliMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    disabled: jspb.Message.getFieldWithDefault(msg, 5, false),\n    maxHtlcMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    lastUpdate: jspb.Message.getFieldWithDefault(msg, 7, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.RoutingPolicy.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RoutingPolicy;\n  return proto.lnrpc.RoutingPolicy.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RoutingPolicy} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.RoutingPolicy.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTimeLockDelta(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMinHtlc(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeBaseMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeRateMilliMsat(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDisabled(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxHtlcMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLastUpdate(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RoutingPolicy.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RoutingPolicy.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RoutingPolicy} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RoutingPolicy.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTimeLockDelta();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getMinHtlc();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getFeeBaseMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFeeRateMilliMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getDisabled();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getMaxHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getLastUpdate();\n  if (f !== 0) {\n    writer.writeUint32(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 time_lock_delta = 1;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getTimeLockDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setTimeLockDelta = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 min_htlc = 2;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getMinHtlc = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setMinHtlc = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 fee_base_msat = 3;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getFeeBaseMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setFeeBaseMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 fee_rate_milli_msat = 4;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getFeeRateMilliMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setFeeRateMilliMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bool disabled = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.RoutingPolicy.prototype.getDisabled = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.RoutingPolicy.prototype.setDisabled = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 max_htlc_msat = 6;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getMaxHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setMaxHtlcMsat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint32 last_update = 7;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getLastUpdate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setLastUpdate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelEdge = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelEdge, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelEdge.displayName = 'proto.lnrpc.ChannelEdge';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelEdge.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelEdge.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelEdge} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEdge.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    chanPoint: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    lastUpdate: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    node1Pub: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    node2Pub: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    node1Policy: (f = msg.getNode1Policy()) && proto.lnrpc.RoutingPolicy.toObject(includeInstance, f),\n    node2Policy: (f = msg.getNode2Policy()) && proto.lnrpc.RoutingPolicy.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelEdge}\n */\nproto.lnrpc.ChannelEdge.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelEdge;\n  return proto.lnrpc.ChannelEdge.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelEdge} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelEdge}\n */\nproto.lnrpc.ChannelEdge.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChannelId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChanPoint(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLastUpdate(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNode1Pub(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNode2Pub(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 7:\n      var value = new proto.lnrpc.RoutingPolicy;\n      reader.readMessage(value,proto.lnrpc.RoutingPolicy.deserializeBinaryFromReader);\n      msg.setNode1Policy(value);\n      break;\n    case 8:\n      var value = new proto.lnrpc.RoutingPolicy;\n      reader.readMessage(value,proto.lnrpc.RoutingPolicy.deserializeBinaryFromReader);\n      msg.setNode2Policy(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelEdge.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelEdge.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelEdge} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEdge.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getLastUpdate();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getNode1Pub();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getNode2Pub();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getNode1Policy();\n  if (f != null) {\n    writer.writeMessage(\n      7,\n      f,\n      proto.lnrpc.RoutingPolicy.serializeBinaryToWriter\n    );\n  }\n  f = message.getNode2Policy();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.lnrpc.RoutingPolicy.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 channel_id = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelEdge.prototype.getChannelId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdge.prototype.setChannelId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string chan_point = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelEdge.prototype.getChanPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdge.prototype.setChanPoint = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 last_update = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelEdge.prototype.getLastUpdate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelEdge.prototype.setLastUpdate = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string node1_pub = 4;\n * @return {string}\n */\nproto.lnrpc.ChannelEdge.prototype.getNode1Pub = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdge.prototype.setNode1Pub = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string node2_pub = 5;\n * @return {string}\n */\nproto.lnrpc.ChannelEdge.prototype.getNode2Pub = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdge.prototype.setNode2Pub = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 capacity = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelEdge.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelEdge.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional RoutingPolicy node1_policy = 7;\n * @return {?proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.ChannelEdge.prototype.getNode1Policy = function() {\n  return /** @type{?proto.lnrpc.RoutingPolicy} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.RoutingPolicy, 7));\n};\n\n\n/** @param {?proto.lnrpc.RoutingPolicy|undefined} value */\nproto.lnrpc.ChannelEdge.prototype.setNode1Policy = function(value) {\n  jspb.Message.setWrapperField(this, 7, value);\n};\n\n\nproto.lnrpc.ChannelEdge.prototype.clearNode1Policy = function() {\n  this.setNode1Policy(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEdge.prototype.hasNode1Policy = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional RoutingPolicy node2_policy = 8;\n * @return {?proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.ChannelEdge.prototype.getNode2Policy = function() {\n  return /** @type{?proto.lnrpc.RoutingPolicy} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.RoutingPolicy, 8));\n};\n\n\n/** @param {?proto.lnrpc.RoutingPolicy|undefined} value */\nproto.lnrpc.ChannelEdge.prototype.setNode2Policy = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.lnrpc.ChannelEdge.prototype.clearNode2Policy = function() {\n  this.setNode2Policy(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEdge.prototype.hasNode2Policy = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelGraphRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelGraphRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelGraphRequest.displayName = 'proto.lnrpc.ChannelGraphRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelGraphRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelGraphRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelGraphRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelGraphRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    includeUnannounced: jspb.Message.getFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelGraphRequest}\n */\nproto.lnrpc.ChannelGraphRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelGraphRequest;\n  return proto.lnrpc.ChannelGraphRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelGraphRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelGraphRequest}\n */\nproto.lnrpc.ChannelGraphRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeUnannounced(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelGraphRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelGraphRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelGraphRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelGraphRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIncludeUnannounced();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool include_unannounced = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ChannelGraphRequest.prototype.getIncludeUnannounced = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ChannelGraphRequest.prototype.setIncludeUnannounced = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelGraph = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ChannelGraph.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ChannelGraph, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelGraph.displayName = 'proto.lnrpc.ChannelGraph';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ChannelGraph.repeatedFields_ = [1,2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelGraph.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelGraph.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelGraph} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelGraph.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodesList: jspb.Message.toObjectList(msg.getNodesList(),\n    proto.lnrpc.LightningNode.toObject, includeInstance),\n    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),\n    proto.lnrpc.ChannelEdge.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelGraph}\n */\nproto.lnrpc.ChannelGraph.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelGraph;\n  return proto.lnrpc.ChannelGraph.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelGraph} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelGraph}\n */\nproto.lnrpc.ChannelGraph.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.LightningNode;\n      reader.readMessage(value,proto.lnrpc.LightningNode.deserializeBinaryFromReader);\n      msg.addNodes(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelEdge;\n      reader.readMessage(value,proto.lnrpc.ChannelEdge.deserializeBinaryFromReader);\n      msg.addEdges(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelGraph.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelGraph.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelGraph} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelGraph.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.LightningNode.serializeBinaryToWriter\n    );\n  }\n  f = message.getEdgesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelEdge.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated LightningNode nodes = 1;\n * @return {!Array.<!proto.lnrpc.LightningNode>}\n */\nproto.lnrpc.ChannelGraph.prototype.getNodesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.LightningNode>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.LightningNode, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.LightningNode>} value */\nproto.lnrpc.ChannelGraph.prototype.setNodesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.LightningNode=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.LightningNode}\n */\nproto.lnrpc.ChannelGraph.prototype.addNodes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.LightningNode, opt_index);\n};\n\n\nproto.lnrpc.ChannelGraph.prototype.clearNodesList = function() {\n  this.setNodesList([]);\n};\n\n\n/**\n * repeated ChannelEdge edges = 2;\n * @return {!Array.<!proto.lnrpc.ChannelEdge>}\n */\nproto.lnrpc.ChannelGraph.prototype.getEdgesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelEdge>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelEdge, 2));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelEdge>} value */\nproto.lnrpc.ChannelGraph.prototype.setEdgesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelEdge=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelEdge}\n */\nproto.lnrpc.ChannelGraph.prototype.addEdges = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.lnrpc.ChannelEdge, opt_index);\n};\n\n\nproto.lnrpc.ChannelGraph.prototype.clearEdgesList = function() {\n  this.setEdgesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeMetricsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.NodeMetricsRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.NodeMetricsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeMetricsRequest.displayName = 'proto.lnrpc.NodeMetricsRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.NodeMetricsRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeMetricsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeMetricsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeMetricsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeMetricsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    typesList: jspb.Message.getRepeatedField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeMetricsRequest}\n */\nproto.lnrpc.NodeMetricsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeMetricsRequest;\n  return proto.lnrpc.NodeMetricsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeMetricsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeMetricsRequest}\n */\nproto.lnrpc.NodeMetricsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Array.<!proto.lnrpc.NodeMetricType>} */ (reader.readPackedEnum());\n      msg.setTypesList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeMetricsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeMetricsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeMetricsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeMetricsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTypesList();\n  if (f.length > 0) {\n    writer.writePackedEnum(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated NodeMetricType types = 1;\n * @return {!Array.<!proto.lnrpc.NodeMetricType>}\n */\nproto.lnrpc.NodeMetricsRequest.prototype.getTypesList = function() {\n  return /** @type {!Array.<!proto.lnrpc.NodeMetricType>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.NodeMetricType>} value */\nproto.lnrpc.NodeMetricsRequest.prototype.setTypesList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!proto.lnrpc.NodeMetricType} value\n * @param {number=} opt_index\n */\nproto.lnrpc.NodeMetricsRequest.prototype.addTypes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.lnrpc.NodeMetricsRequest.prototype.clearTypesList = function() {\n  this.setTypesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeMetricsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NodeMetricsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeMetricsResponse.displayName = 'proto.lnrpc.NodeMetricsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeMetricsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeMetricsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeMetricsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeMetricsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    betweennessCentralityMap: (f = msg.getBetweennessCentralityMap()) ? f.toObject(includeInstance, proto.lnrpc.FloatMetric.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeMetricsResponse}\n */\nproto.lnrpc.NodeMetricsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeMetricsResponse;\n  return proto.lnrpc.NodeMetricsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeMetricsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeMetricsResponse}\n */\nproto.lnrpc.NodeMetricsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = msg.getBetweennessCentralityMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.FloatMetric.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeMetricsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeMetricsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeMetricsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeMetricsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBetweennessCentralityMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.FloatMetric.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * map<string, FloatMetric> betweenness_centrality = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!proto.lnrpc.FloatMetric>}\n */\nproto.lnrpc.NodeMetricsResponse.prototype.getBetweennessCentralityMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!proto.lnrpc.FloatMetric>} */ (\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\n      proto.lnrpc.FloatMetric));\n};\n\n\nproto.lnrpc.NodeMetricsResponse.prototype.clearBetweennessCentralityMap = function() {\n  this.getBetweennessCentralityMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FloatMetric = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FloatMetric, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FloatMetric.displayName = 'proto.lnrpc.FloatMetric';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FloatMetric.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FloatMetric.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FloatMetric} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FloatMetric.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),\n    normalizedValue: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FloatMetric}\n */\nproto.lnrpc.FloatMetric.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FloatMetric;\n  return proto.lnrpc.FloatMetric.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FloatMetric} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FloatMetric}\n */\nproto.lnrpc.FloatMetric.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setValue(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setNormalizedValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FloatMetric.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FloatMetric.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FloatMetric} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FloatMetric.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      1,\n      f\n    );\n  }\n  f = message.getNormalizedValue();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional double value = 1;\n * @return {number}\n */\nproto.lnrpc.FloatMetric.prototype.getValue = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FloatMetric.prototype.setValue = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional double normalized_value = 2;\n * @return {number}\n */\nproto.lnrpc.FloatMetric.prototype.getNormalizedValue = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FloatMetric.prototype.setNormalizedValue = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChanInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChanInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChanInfoRequest.displayName = 'proto.lnrpc.ChanInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChanInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChanInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChanInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChanInfoRequest}\n */\nproto.lnrpc.ChanInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChanInfoRequest;\n  return proto.lnrpc.ChanInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChanInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChanInfoRequest}\n */\nproto.lnrpc.ChanInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChanInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChanInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.ChanInfoRequest.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChanInfoRequest.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NetworkInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NetworkInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NetworkInfoRequest.displayName = 'proto.lnrpc.NetworkInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NetworkInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NetworkInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NetworkInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NetworkInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NetworkInfoRequest}\n */\nproto.lnrpc.NetworkInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NetworkInfoRequest;\n  return proto.lnrpc.NetworkInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NetworkInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NetworkInfoRequest}\n */\nproto.lnrpc.NetworkInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NetworkInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NetworkInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NetworkInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NetworkInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NetworkInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NetworkInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NetworkInfo.displayName = 'proto.lnrpc.NetworkInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NetworkInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NetworkInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NetworkInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NetworkInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    graphDiameter: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    avgOutDegree: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),\n    maxOutDegree: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    numNodes: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    numChannels: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    totalNetworkCapacity: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    avgChannelSize: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),\n    minChannelSize: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    maxChannelSize: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    medianChannelSizeSat: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    numZombieChans: jspb.Message.getFieldWithDefault(msg, 11, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NetworkInfo}\n */\nproto.lnrpc.NetworkInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NetworkInfo;\n  return proto.lnrpc.NetworkInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NetworkInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NetworkInfo}\n */\nproto.lnrpc.NetworkInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setGraphDiameter(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setAvgOutDegree(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaxOutDegree(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumNodes(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumChannels(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalNetworkCapacity(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setAvgChannelSize(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMinChannelSize(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMaxChannelSize(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMedianChannelSizeSat(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNumZombieChans(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NetworkInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NetworkInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NetworkInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NetworkInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getGraphDiameter();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getAvgOutDegree();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      2,\n      f\n    );\n  }\n  f = message.getMaxOutDegree();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getNumNodes();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getNumChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getTotalNetworkCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getAvgChannelSize();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      7,\n      f\n    );\n  }\n  f = message.getMinChannelSize();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getMaxChannelSize();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getMedianChannelSizeSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n  f = message.getNumZombieChans();\n  if (f !== 0) {\n    writer.writeUint64(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 graph_diameter = 1;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getGraphDiameter = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setGraphDiameter = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional double avg_out_degree = 2;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getAvgOutDegree = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setAvgOutDegree = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 max_out_degree = 3;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getMaxOutDegree = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setMaxOutDegree = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 num_nodes = 4;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getNumNodes = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setNumNodes = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 num_channels = 5;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getNumChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setNumChannels = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 total_network_capacity = 6;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getTotalNetworkCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setTotalNetworkCapacity = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional double avg_channel_size = 7;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getAvgChannelSize = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setAvgChannelSize = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 min_channel_size = 8;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getMinChannelSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setMinChannelSize = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 max_channel_size = 9;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getMaxChannelSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setMaxChannelSize = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional int64 median_channel_size_sat = 10;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getMedianChannelSizeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setMedianChannelSizeSat = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional uint64 num_zombie_chans = 11;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getNumZombieChans = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setNumZombieChans = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.StopRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.StopRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.StopRequest.displayName = 'proto.lnrpc.StopRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.StopRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.StopRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.StopRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.StopRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.StopRequest}\n */\nproto.lnrpc.StopRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.StopRequest;\n  return proto.lnrpc.StopRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.StopRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.StopRequest}\n */\nproto.lnrpc.StopRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.StopRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.StopRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.StopRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.StopRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.StopResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.StopResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.StopResponse.displayName = 'proto.lnrpc.StopResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.StopResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.StopResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.StopResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.StopResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.StopResponse}\n */\nproto.lnrpc.StopResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.StopResponse;\n  return proto.lnrpc.StopResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.StopResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.StopResponse}\n */\nproto.lnrpc.StopResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.StopResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.StopResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.StopResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.StopResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GraphTopologySubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GraphTopologySubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GraphTopologySubscription.displayName = 'proto.lnrpc.GraphTopologySubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GraphTopologySubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GraphTopologySubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GraphTopologySubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GraphTopologySubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GraphTopologySubscription}\n */\nproto.lnrpc.GraphTopologySubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GraphTopologySubscription;\n  return proto.lnrpc.GraphTopologySubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GraphTopologySubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GraphTopologySubscription}\n */\nproto.lnrpc.GraphTopologySubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GraphTopologySubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GraphTopologySubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GraphTopologySubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GraphTopologySubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GraphTopologyUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.GraphTopologyUpdate.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.GraphTopologyUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GraphTopologyUpdate.displayName = 'proto.lnrpc.GraphTopologyUpdate';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.GraphTopologyUpdate.repeatedFields_ = [1,2,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GraphTopologyUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GraphTopologyUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GraphTopologyUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodeUpdatesList: jspb.Message.toObjectList(msg.getNodeUpdatesList(),\n    proto.lnrpc.NodeUpdate.toObject, includeInstance),\n    channelUpdatesList: jspb.Message.toObjectList(msg.getChannelUpdatesList(),\n    proto.lnrpc.ChannelEdgeUpdate.toObject, includeInstance),\n    closedChansList: jspb.Message.toObjectList(msg.getClosedChansList(),\n    proto.lnrpc.ClosedChannelUpdate.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GraphTopologyUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GraphTopologyUpdate;\n  return proto.lnrpc.GraphTopologyUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GraphTopologyUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GraphTopologyUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.NodeUpdate;\n      reader.readMessage(value,proto.lnrpc.NodeUpdate.deserializeBinaryFromReader);\n      msg.addNodeUpdates(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelEdgeUpdate;\n      reader.readMessage(value,proto.lnrpc.ChannelEdgeUpdate.deserializeBinaryFromReader);\n      msg.addChannelUpdates(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ClosedChannelUpdate;\n      reader.readMessage(value,proto.lnrpc.ClosedChannelUpdate.deserializeBinaryFromReader);\n      msg.addClosedChans(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GraphTopologyUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GraphTopologyUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GraphTopologyUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodeUpdatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.NodeUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getChannelUpdatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelEdgeUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getClosedChansList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.lnrpc.ClosedChannelUpdate.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated NodeUpdate node_updates = 1;\n * @return {!Array.<!proto.lnrpc.NodeUpdate>}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.getNodeUpdatesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.NodeUpdate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.NodeUpdate, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.NodeUpdate>} value */\nproto.lnrpc.GraphTopologyUpdate.prototype.setNodeUpdatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.NodeUpdate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.NodeUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.addNodeUpdates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.NodeUpdate, opt_index);\n};\n\n\nproto.lnrpc.GraphTopologyUpdate.prototype.clearNodeUpdatesList = function() {\n  this.setNodeUpdatesList([]);\n};\n\n\n/**\n * repeated ChannelEdgeUpdate channel_updates = 2;\n * @return {!Array.<!proto.lnrpc.ChannelEdgeUpdate>}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.getChannelUpdatesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelEdgeUpdate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelEdgeUpdate, 2));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelEdgeUpdate>} value */\nproto.lnrpc.GraphTopologyUpdate.prototype.setChannelUpdatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelEdgeUpdate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelEdgeUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.addChannelUpdates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.lnrpc.ChannelEdgeUpdate, opt_index);\n};\n\n\nproto.lnrpc.GraphTopologyUpdate.prototype.clearChannelUpdatesList = function() {\n  this.setChannelUpdatesList([]);\n};\n\n\n/**\n * repeated ClosedChannelUpdate closed_chans = 3;\n * @return {!Array.<!proto.lnrpc.ClosedChannelUpdate>}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.getClosedChansList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ClosedChannelUpdate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ClosedChannelUpdate, 3));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ClosedChannelUpdate>} value */\nproto.lnrpc.GraphTopologyUpdate.prototype.setClosedChansList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ClosedChannelUpdate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ClosedChannelUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.addClosedChans = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.lnrpc.ClosedChannelUpdate, opt_index);\n};\n\n\nproto.lnrpc.GraphTopologyUpdate.prototype.clearClosedChansList = function() {\n  this.setClosedChansList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.NodeUpdate.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.NodeUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeUpdate.displayName = 'proto.lnrpc.NodeUpdate';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.NodeUpdate.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressesList: jspb.Message.getRepeatedField(msg, 1),\n    identityKey: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    globalFeatures: msg.getGlobalFeatures_asB64(),\n    alias: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    color: jspb.Message.getFieldWithDefault(msg, 5, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeUpdate}\n */\nproto.lnrpc.NodeUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeUpdate;\n  return proto.lnrpc.NodeUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeUpdate}\n */\nproto.lnrpc.NodeUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addAddresses(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIdentityKey(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setGlobalFeatures(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setColor(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n  f = message.getIdentityKey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getGlobalFeatures_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getColor();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string addresses = 1;\n * @return {!Array.<string>}\n */\nproto.lnrpc.NodeUpdate.prototype.getAddressesList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array.<string>} value */\nproto.lnrpc.NodeUpdate.prototype.setAddressesList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.lnrpc.NodeUpdate.prototype.addAddresses = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.lnrpc.NodeUpdate.prototype.clearAddressesList = function() {\n  this.setAddressesList([]);\n};\n\n\n/**\n * optional string identity_key = 2;\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getIdentityKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeUpdate.prototype.setIdentityKey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bytes global_features = 3;\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getGlobalFeatures = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes global_features = 3;\n * This is a type-conversion wrapper around `getGlobalFeatures()`\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getGlobalFeatures_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getGlobalFeatures()));\n};\n\n\n/**\n * optional bytes global_features = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getGlobalFeatures()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeUpdate.prototype.getGlobalFeatures_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getGlobalFeatures()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.NodeUpdate.prototype.setGlobalFeatures = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string alias = 4;\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeUpdate.prototype.setAlias = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string color = 5;\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getColor = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeUpdate.prototype.setColor = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelEdgeUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelEdgeUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelEdgeUpdate.displayName = 'proto.lnrpc.ChannelEdgeUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelEdgeUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelEdgeUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEdgeUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    capacity: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    routingPolicy: (f = msg.getRoutingPolicy()) && proto.lnrpc.RoutingPolicy.toObject(includeInstance, f),\n    advertisingNode: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    connectingNode: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelEdgeUpdate}\n */\nproto.lnrpc.ChannelEdgeUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelEdgeUpdate;\n  return proto.lnrpc.ChannelEdgeUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelEdgeUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelEdgeUpdate}\n */\nproto.lnrpc.ChannelEdgeUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.RoutingPolicy;\n      reader.readMessage(value,proto.lnrpc.RoutingPolicy.deserializeBinaryFromReader);\n      msg.setRoutingPolicy(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAdvertisingNode(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setConnectingNode(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelEdgeUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelEdgeUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEdgeUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getRoutingPolicy();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.RoutingPolicy.serializeBinaryToWriter\n    );\n  }\n  f = message.getAdvertisingNode();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getConnectingNode();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional ChannelPoint chan_point = 2;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 2));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.ChannelEdgeUpdate.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 capacity = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional RoutingPolicy routing_policy = 4;\n * @return {?proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getRoutingPolicy = function() {\n  return /** @type{?proto.lnrpc.RoutingPolicy} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.RoutingPolicy, 4));\n};\n\n\n/** @param {?proto.lnrpc.RoutingPolicy|undefined} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setRoutingPolicy = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.lnrpc.ChannelEdgeUpdate.prototype.clearRoutingPolicy = function() {\n  this.setRoutingPolicy(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.hasRoutingPolicy = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional string advertising_node = 5;\n * @return {string}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getAdvertisingNode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setAdvertisingNode = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string connecting_node = 6;\n * @return {string}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getConnectingNode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setConnectingNode = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ClosedChannelUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ClosedChannelUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ClosedChannelUpdate.displayName = 'proto.lnrpc.ClosedChannelUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ClosedChannelUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ClosedChannelUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    closedHeight: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ClosedChannelUpdate}\n */\nproto.lnrpc.ClosedChannelUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ClosedChannelUpdate;\n  return proto.lnrpc.ClosedChannelUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ClosedChannelUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ClosedChannelUpdate}\n */\nproto.lnrpc.ClosedChannelUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setClosedHeight(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ClosedChannelUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ClosedChannelUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getClosedHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ClosedChannelUpdate.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 capacity = 2;\n * @return {number}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ClosedChannelUpdate.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 closed_height = 3;\n * @return {number}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.getClosedHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ClosedChannelUpdate.prototype.setClosedHeight = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional ChannelPoint chan_point = 4;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 4));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ClosedChannelUpdate.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.lnrpc.ClosedChannelUpdate.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.HopHint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.HopHint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.HopHint.displayName = 'proto.lnrpc.HopHint';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.HopHint.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.HopHint.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.HopHint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HopHint.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodeId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    chanId: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\n    feeBaseMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    feeProportionalMillionths: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    cltvExpiryDelta: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.HopHint}\n */\nproto.lnrpc.HopHint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.HopHint;\n  return proto.lnrpc.HopHint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.HopHint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.HopHint}\n */\nproto.lnrpc.HopHint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodeId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFeeBaseMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFeeProportionalMillionths(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCltvExpiryDelta(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.HopHint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.HopHint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.HopHint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HopHint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodeId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      2,\n      f\n    );\n  }\n  f = message.getFeeBaseMsat();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getFeeProportionalMillionths();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getCltvExpiryDelta();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string node_id = 1;\n * @return {string}\n */\nproto.lnrpc.HopHint.prototype.getNodeId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.HopHint.prototype.setNodeId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.HopHint.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.HopHint.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 fee_base_msat = 3;\n * @return {number}\n */\nproto.lnrpc.HopHint.prototype.getFeeBaseMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HopHint.prototype.setFeeBaseMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 fee_proportional_millionths = 4;\n * @return {number}\n */\nproto.lnrpc.HopHint.prototype.getFeeProportionalMillionths = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HopHint.prototype.setFeeProportionalMillionths = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 cltv_expiry_delta = 5;\n * @return {number}\n */\nproto.lnrpc.HopHint.prototype.getCltvExpiryDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HopHint.prototype.setCltvExpiryDelta = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RouteHint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.RouteHint.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.RouteHint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RouteHint.displayName = 'proto.lnrpc.RouteHint';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.RouteHint.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RouteHint.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RouteHint.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RouteHint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RouteHint.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hopHintsList: jspb.Message.toObjectList(msg.getHopHintsList(),\n    proto.lnrpc.HopHint.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.RouteHint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RouteHint;\n  return proto.lnrpc.RouteHint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RouteHint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.RouteHint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.HopHint;\n      reader.readMessage(value,proto.lnrpc.HopHint.deserializeBinaryFromReader);\n      msg.addHopHints(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RouteHint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RouteHint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RouteHint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RouteHint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHopHintsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.HopHint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated HopHint hop_hints = 1;\n * @return {!Array.<!proto.lnrpc.HopHint>}\n */\nproto.lnrpc.RouteHint.prototype.getHopHintsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.HopHint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.HopHint, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.HopHint>} value */\nproto.lnrpc.RouteHint.prototype.setHopHintsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.HopHint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.HopHint}\n */\nproto.lnrpc.RouteHint.prototype.addHopHints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.HopHint, opt_index);\n};\n\n\nproto.lnrpc.RouteHint.prototype.clearHopHintsList = function() {\n  this.setHopHintsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Invoice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Invoice.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Invoice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Invoice.displayName = 'proto.lnrpc.Invoice';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Invoice.repeatedFields_ = [14,22];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Invoice.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Invoice.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Invoice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Invoice.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    memo: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    rPreimage: msg.getRPreimage_asB64(),\n    rHash: msg.getRHash_asB64(),\n    value: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    valueMsat: jspb.Message.getFieldWithDefault(msg, 23, 0),\n    settled: jspb.Message.getFieldWithDefault(msg, 6, false),\n    creationDate: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    settleDate: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    paymentRequest: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    descriptionHash: msg.getDescriptionHash_asB64(),\n    expiry: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    fallbackAddr: jspb.Message.getFieldWithDefault(msg, 12, \"\"),\n    cltvExpiry: jspb.Message.getFieldWithDefault(msg, 13, 0),\n    routeHintsList: jspb.Message.toObjectList(msg.getRouteHintsList(),\n    proto.lnrpc.RouteHint.toObject, includeInstance),\n    pb_private: jspb.Message.getFieldWithDefault(msg, 15, false),\n    addIndex: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    settleIndex: jspb.Message.getFieldWithDefault(msg, 17, 0),\n    amtPaid: jspb.Message.getFieldWithDefault(msg, 18, 0),\n    amtPaidSat: jspb.Message.getFieldWithDefault(msg, 19, 0),\n    amtPaidMsat: jspb.Message.getFieldWithDefault(msg, 20, 0),\n    state: jspb.Message.getFieldWithDefault(msg, 21, 0),\n    htlcsList: jspb.Message.toObjectList(msg.getHtlcsList(),\n    proto.lnrpc.InvoiceHTLC.toObject, includeInstance),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : [],\n    isKeysend: jspb.Message.getFieldWithDefault(msg, 25, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Invoice}\n */\nproto.lnrpc.Invoice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Invoice;\n  return proto.lnrpc.Invoice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Invoice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Invoice}\n */\nproto.lnrpc.Invoice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMemo(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRPreimage(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRHash(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValue(value);\n      break;\n    case 23:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValueMsat(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSettled(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreationDate(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSettleDate(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentRequest(value);\n      break;\n    case 10:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDescriptionHash(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpiry(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFallbackAddr(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setCltvExpiry(value);\n      break;\n    case 14:\n      var value = new proto.lnrpc.RouteHint;\n      reader.readMessage(value,proto.lnrpc.RouteHint.deserializeBinaryFromReader);\n      msg.addRouteHints(value);\n      break;\n    case 15:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivate(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAddIndex(value);\n      break;\n    case 17:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSettleIndex(value);\n      break;\n    case 18:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtPaid(value);\n      break;\n    case 19:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtPaidSat(value);\n      break;\n    case 20:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtPaidMsat(value);\n      break;\n    case 21:\n      var value = /** @type {!proto.lnrpc.Invoice.InvoiceState} */ (reader.readEnum());\n      msg.setState(value);\n      break;\n    case 22:\n      var value = new proto.lnrpc.InvoiceHTLC;\n      reader.readMessage(value,proto.lnrpc.InvoiceHTLC.deserializeBinaryFromReader);\n      msg.addHtlcs(value);\n      break;\n    case 24:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    case 25:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsKeysend(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Invoice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Invoice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Invoice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Invoice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMemo();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRPreimage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getRHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getValueMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      23,\n      f\n    );\n  }\n  f = message.getSettled();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = message.getCreationDate();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getSettleDate();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getPaymentRequest();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getDescriptionHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      10,\n      f\n    );\n  }\n  f = message.getExpiry();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getFallbackAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = message.getCltvExpiry();\n  if (f !== 0) {\n    writer.writeUint64(\n      13,\n      f\n    );\n  }\n  f = message.getRouteHintsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      14,\n      f,\n      proto.lnrpc.RouteHint.serializeBinaryToWriter\n    );\n  }\n  f = message.getPrivate();\n  if (f) {\n    writer.writeBool(\n      15,\n      f\n    );\n  }\n  f = message.getAddIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      16,\n      f\n    );\n  }\n  f = message.getSettleIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      17,\n      f\n    );\n  }\n  f = message.getAmtPaid();\n  if (f !== 0) {\n    writer.writeInt64(\n      18,\n      f\n    );\n  }\n  f = message.getAmtPaidSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      19,\n      f\n    );\n  }\n  f = message.getAmtPaidMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      20,\n      f\n    );\n  }\n  f = message.getState();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      21,\n      f\n    );\n  }\n  f = message.getHtlcsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      22,\n      f,\n      proto.lnrpc.InvoiceHTLC.serializeBinaryToWriter\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(24, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n  f = message.getIsKeysend();\n  if (f) {\n    writer.writeBool(\n      25,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Invoice.InvoiceState = {\n  OPEN: 0,\n  SETTLED: 1,\n  CANCELED: 2,\n  ACCEPTED: 3\n};\n\n/**\n * optional string memo = 1;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getMemo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Invoice.prototype.setMemo = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes r_preimage = 3;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getRPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes r_preimage = 3;\n * This is a type-conversion wrapper around `getRPreimage()`\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getRPreimage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRPreimage()));\n};\n\n\n/**\n * optional bytes r_preimage = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRPreimage()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.Invoice.prototype.getRPreimage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRPreimage()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.Invoice.prototype.setRPreimage = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bytes r_hash = 4;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getRHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes r_hash = 4;\n * This is a type-conversion wrapper around `getRHash()`\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getRHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRHash()));\n};\n\n\n/**\n * optional bytes r_hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.Invoice.prototype.getRHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.Invoice.prototype.setRHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 value = 5;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setValue = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 value_msat = 23;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getValueMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setValueMsat = function(value) {\n  jspb.Message.setField(this, 23, value);\n};\n\n\n/**\n * optional bool settled = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Invoice.prototype.getSettled = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Invoice.prototype.setSettled = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 creation_date = 7;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getCreationDate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setCreationDate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 settle_date = 8;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getSettleDate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setSettleDate = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string payment_request = 9;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getPaymentRequest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Invoice.prototype.setPaymentRequest = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional bytes description_hash = 10;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getDescriptionHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * optional bytes description_hash = 10;\n * This is a type-conversion wrapper around `getDescriptionHash()`\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getDescriptionHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDescriptionHash()));\n};\n\n\n/**\n * optional bytes description_hash = 10;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDescriptionHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.Invoice.prototype.getDescriptionHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDescriptionHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.Invoice.prototype.setDescriptionHash = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional int64 expiry = 11;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setExpiry = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string fallback_addr = 12;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getFallbackAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Invoice.prototype.setFallbackAddr = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional uint64 cltv_expiry = 13;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getCltvExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setCltvExpiry = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * repeated RouteHint route_hints = 14;\n * @return {!Array.<!proto.lnrpc.RouteHint>}\n */\nproto.lnrpc.Invoice.prototype.getRouteHintsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.RouteHint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.RouteHint, 14));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.RouteHint>} value */\nproto.lnrpc.Invoice.prototype.setRouteHintsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 14, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.RouteHint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.Invoice.prototype.addRouteHints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.lnrpc.RouteHint, opt_index);\n};\n\n\nproto.lnrpc.Invoice.prototype.clearRouteHintsList = function() {\n  this.setRouteHintsList([]);\n};\n\n\n/**\n * optional bool private = 15;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Invoice.prototype.getPrivate = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Invoice.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * optional uint64 add_index = 16;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getAddIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setAddIndex = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n/**\n * optional uint64 settle_index = 17;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getSettleIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setSettleIndex = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\n/**\n * optional int64 amt_paid = 18;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getAmtPaid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setAmtPaid = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\n/**\n * optional int64 amt_paid_sat = 19;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getAmtPaidSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setAmtPaidSat = function(value) {\n  jspb.Message.setField(this, 19, value);\n};\n\n\n/**\n * optional int64 amt_paid_msat = 20;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getAmtPaidMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setAmtPaidMsat = function(value) {\n  jspb.Message.setField(this, 20, value);\n};\n\n\n/**\n * optional InvoiceState state = 21;\n * @return {!proto.lnrpc.Invoice.InvoiceState}\n */\nproto.lnrpc.Invoice.prototype.getState = function() {\n  return /** @type {!proto.lnrpc.Invoice.InvoiceState} */ (jspb.Message.getFieldWithDefault(this, 21, 0));\n};\n\n\n/** @param {!proto.lnrpc.Invoice.InvoiceState} value */\nproto.lnrpc.Invoice.prototype.setState = function(value) {\n  jspb.Message.setField(this, 21, value);\n};\n\n\n/**\n * repeated InvoiceHTLC htlcs = 22;\n * @return {!Array.<!proto.lnrpc.InvoiceHTLC>}\n */\nproto.lnrpc.Invoice.prototype.getHtlcsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.InvoiceHTLC>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.InvoiceHTLC, 22));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.InvoiceHTLC>} value */\nproto.lnrpc.Invoice.prototype.setHtlcsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 22, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.InvoiceHTLC=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.InvoiceHTLC}\n */\nproto.lnrpc.Invoice.prototype.addHtlcs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.lnrpc.InvoiceHTLC, opt_index);\n};\n\n\nproto.lnrpc.Invoice.prototype.clearHtlcsList = function() {\n  this.setHtlcsList([]);\n};\n\n\n/**\n * map<uint32, Feature> features = 24;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.Invoice.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 24, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.Invoice.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n/**\n * optional bool is_keysend = 25;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Invoice.prototype.getIsKeysend = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 25, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Invoice.prototype.setIsKeysend = function(value) {\n  jspb.Message.setField(this, 25, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.InvoiceHTLC = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.InvoiceHTLC, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.InvoiceHTLC.displayName = 'proto.lnrpc.InvoiceHTLC';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.InvoiceHTLC.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.InvoiceHTLC.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.InvoiceHTLC} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.InvoiceHTLC.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    htlcIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    amtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    acceptHeight: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    acceptTime: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    resolveTime: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    expiryHeight: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    state: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    customRecordsMap: (f = msg.getCustomRecordsMap()) ? f.toObject(includeInstance, undefined) : [],\n    mppTotalAmtMsat: jspb.Message.getFieldWithDefault(msg, 10, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.InvoiceHTLC}\n */\nproto.lnrpc.InvoiceHTLC.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.InvoiceHTLC;\n  return proto.lnrpc.InvoiceHTLC.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.InvoiceHTLC} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.InvoiceHTLC}\n */\nproto.lnrpc.InvoiceHTLC.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHtlcIndex(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setAcceptHeight(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAcceptTime(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setResolveTime(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setExpiryHeight(value);\n      break;\n    case 8:\n      var value = /** @type {!proto.lnrpc.InvoiceHTLCState} */ (reader.readEnum());\n      msg.setState(value);\n      break;\n    case 9:\n      var value = msg.getCustomRecordsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readBytes);\n         });\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMppTotalAmtMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.InvoiceHTLC.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.InvoiceHTLC.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.InvoiceHTLC} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.InvoiceHTLC.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getHtlcIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getAcceptHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getAcceptTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getResolveTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getExpiryHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n  f = message.getState();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      8,\n      f\n    );\n  }\n  f = message.getCustomRecordsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getMppTotalAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.InvoiceHTLC.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 htlc_index = 2;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getHtlcIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setHtlcIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 amt_msat = 3;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setAmtMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int32 accept_height = 4;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getAcceptHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setAcceptHeight = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 accept_time = 5;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getAcceptTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setAcceptTime = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 resolve_time = 6;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getResolveTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setResolveTime = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int32 expiry_height = 7;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getExpiryHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setExpiryHeight = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional InvoiceHTLCState state = 8;\n * @return {!proto.lnrpc.InvoiceHTLCState}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getState = function() {\n  return /** @type {!proto.lnrpc.InvoiceHTLCState} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {!proto.lnrpc.InvoiceHTLCState} value */\nproto.lnrpc.InvoiceHTLC.prototype.setState = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * map<uint64, bytes> custom_records = 9;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!(string|Uint8Array)>}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getCustomRecordsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 9, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.InvoiceHTLC.prototype.clearCustomRecordsMap = function() {\n  this.getCustomRecordsMap().clear();\n};\n\n\n/**\n * optional uint64 mpp_total_amt_msat = 10;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getMppTotalAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setMppTotalAmtMsat = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.AddInvoiceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.AddInvoiceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.AddInvoiceResponse.displayName = 'proto.lnrpc.AddInvoiceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.AddInvoiceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.AddInvoiceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AddInvoiceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rHash: msg.getRHash_asB64(),\n    paymentRequest: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    addIndex: jspb.Message.getFieldWithDefault(msg, 16, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.AddInvoiceResponse}\n */\nproto.lnrpc.AddInvoiceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.AddInvoiceResponse;\n  return proto.lnrpc.AddInvoiceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.AddInvoiceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.AddInvoiceResponse}\n */\nproto.lnrpc.AddInvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRHash(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentRequest(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAddIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.AddInvoiceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.AddInvoiceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AddInvoiceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPaymentRequest();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAddIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      16,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes r_hash = 1;\n * @return {string}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getRHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes r_hash = 1;\n * This is a type-conversion wrapper around `getRHash()`\n * @return {string}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getRHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRHash()));\n};\n\n\n/**\n * optional bytes r_hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getRHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.AddInvoiceResponse.prototype.setRHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string payment_request = 2;\n * @return {string}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getPaymentRequest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.AddInvoiceResponse.prototype.setPaymentRequest = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 add_index = 16;\n * @return {number}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getAddIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.AddInvoiceResponse.prototype.setAddIndex = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PaymentHash = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PaymentHash, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PaymentHash.displayName = 'proto.lnrpc.PaymentHash';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PaymentHash.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PaymentHash.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PaymentHash} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PaymentHash.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rHashStr: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    rHash: msg.getRHash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PaymentHash}\n */\nproto.lnrpc.PaymentHash.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PaymentHash;\n  return proto.lnrpc.PaymentHash.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PaymentHash} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PaymentHash}\n */\nproto.lnrpc.PaymentHash.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRHashStr(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PaymentHash.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PaymentHash.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PaymentHash} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PaymentHash.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRHashStr();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string r_hash_str = 1;\n * @return {string}\n */\nproto.lnrpc.PaymentHash.prototype.getRHashStr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PaymentHash.prototype.setRHashStr = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes r_hash = 2;\n * @return {string}\n */\nproto.lnrpc.PaymentHash.prototype.getRHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes r_hash = 2;\n * This is a type-conversion wrapper around `getRHash()`\n * @return {string}\n */\nproto.lnrpc.PaymentHash.prototype.getRHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRHash()));\n};\n\n\n/**\n * optional bytes r_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PaymentHash.prototype.getRHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PaymentHash.prototype.setRHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListInvoiceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListInvoiceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListInvoiceRequest.displayName = 'proto.lnrpc.ListInvoiceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListInvoiceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListInvoiceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListInvoiceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pendingOnly: jspb.Message.getFieldWithDefault(msg, 1, false),\n    indexOffset: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    numMaxInvoices: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    reversed: jspb.Message.getFieldWithDefault(msg, 6, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListInvoiceRequest}\n */\nproto.lnrpc.ListInvoiceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListInvoiceRequest;\n  return proto.lnrpc.ListInvoiceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListInvoiceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListInvoiceRequest}\n */\nproto.lnrpc.ListInvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPendingOnly(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setIndexOffset(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNumMaxInvoices(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setReversed(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListInvoiceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListInvoiceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListInvoiceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPendingOnly();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getNumMaxInvoices();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getReversed();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool pending_only = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.getPendingOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListInvoiceRequest.prototype.setPendingOnly = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 index_offset = 4;\n * @return {number}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.getIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListInvoiceRequest.prototype.setIndexOffset = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 num_max_invoices = 5;\n * @return {number}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.getNumMaxInvoices = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListInvoiceRequest.prototype.setNumMaxInvoices = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional bool reversed = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.getReversed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListInvoiceRequest.prototype.setReversed = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListInvoiceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListInvoiceResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListInvoiceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListInvoiceResponse.displayName = 'proto.lnrpc.ListInvoiceResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListInvoiceResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListInvoiceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListInvoiceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListInvoiceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    invoicesList: jspb.Message.toObjectList(msg.getInvoicesList(),\n    proto.lnrpc.Invoice.toObject, includeInstance),\n    lastIndexOffset: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    firstIndexOffset: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListInvoiceResponse}\n */\nproto.lnrpc.ListInvoiceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListInvoiceResponse;\n  return proto.lnrpc.ListInvoiceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListInvoiceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListInvoiceResponse}\n */\nproto.lnrpc.ListInvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Invoice;\n      reader.readMessage(value,proto.lnrpc.Invoice.deserializeBinaryFromReader);\n      msg.addInvoices(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastIndexOffset(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFirstIndexOffset(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListInvoiceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListInvoiceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListInvoiceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInvoicesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Invoice.serializeBinaryToWriter\n    );\n  }\n  f = message.getLastIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getFirstIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated Invoice invoices = 1;\n * @return {!Array.<!proto.lnrpc.Invoice>}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.getInvoicesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Invoice>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Invoice, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Invoice>} value */\nproto.lnrpc.ListInvoiceResponse.prototype.setInvoicesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Invoice=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Invoice}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.addInvoices = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Invoice, opt_index);\n};\n\n\nproto.lnrpc.ListInvoiceResponse.prototype.clearInvoicesList = function() {\n  this.setInvoicesList([]);\n};\n\n\n/**\n * optional uint64 last_index_offset = 2;\n * @return {number}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.getLastIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListInvoiceResponse.prototype.setLastIndexOffset = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 first_index_offset = 3;\n * @return {number}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.getFirstIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListInvoiceResponse.prototype.setFirstIndexOffset = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.InvoiceSubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.InvoiceSubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.InvoiceSubscription.displayName = 'proto.lnrpc.InvoiceSubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.InvoiceSubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.InvoiceSubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.InvoiceSubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.InvoiceSubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addIndex: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    settleIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.InvoiceSubscription}\n */\nproto.lnrpc.InvoiceSubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.InvoiceSubscription;\n  return proto.lnrpc.InvoiceSubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.InvoiceSubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.InvoiceSubscription}\n */\nproto.lnrpc.InvoiceSubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAddIndex(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSettleIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.InvoiceSubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.InvoiceSubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.InvoiceSubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.InvoiceSubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getSettleIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 add_index = 1;\n * @return {number}\n */\nproto.lnrpc.InvoiceSubscription.prototype.getAddIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceSubscription.prototype.setAddIndex = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 settle_index = 2;\n * @return {number}\n */\nproto.lnrpc.InvoiceSubscription.prototype.getSettleIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceSubscription.prototype.setSettleIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Payment = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Payment.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Payment, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Payment.displayName = 'proto.lnrpc.Payment';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Payment.repeatedFields_ = [14];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Payment.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Payment.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Payment} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Payment.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    value: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    creationDate: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    fee: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    paymentPreimage: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    valueSat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    valueMsat: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    paymentRequest: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    status: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    feeSat: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    feeMsat: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    creationTimeNs: jspb.Message.getFieldWithDefault(msg, 13, 0),\n    htlcsList: jspb.Message.toObjectList(msg.getHtlcsList(),\n    proto.lnrpc.HTLCAttempt.toObject, includeInstance),\n    paymentIndex: jspb.Message.getFieldWithDefault(msg, 15, 0),\n    failureReason: jspb.Message.getFieldWithDefault(msg, 16, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Payment}\n */\nproto.lnrpc.Payment.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Payment;\n  return proto.lnrpc.Payment.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Payment} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Payment}\n */\nproto.lnrpc.Payment.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValue(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreationDate(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFee(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentPreimage(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValueSat(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValueMsat(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentRequest(value);\n      break;\n    case 10:\n      var value = /** @type {!proto.lnrpc.Payment.PaymentStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeSat(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeMsat(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreationTimeNs(value);\n      break;\n    case 14:\n      var value = new proto.lnrpc.HTLCAttempt;\n      reader.readMessage(value,proto.lnrpc.HTLCAttempt.deserializeBinaryFromReader);\n      msg.addHtlcs(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPaymentIndex(value);\n      break;\n    case 16:\n      var value = /** @type {!proto.lnrpc.PaymentFailureReason} */ (reader.readEnum());\n      msg.setFailureReason(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Payment.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Payment.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Payment} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Payment.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getCreationDate();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getPaymentPreimage();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getValueSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getValueMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getPaymentRequest();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getFeeSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getCreationTimeNs();\n  if (f !== 0) {\n    writer.writeInt64(\n      13,\n      f\n    );\n  }\n  f = message.getHtlcsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      14,\n      f,\n      proto.lnrpc.HTLCAttempt.serializeBinaryToWriter\n    );\n  }\n  f = message.getPaymentIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      15,\n      f\n    );\n  }\n  f = message.getFailureReason();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      16,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Payment.PaymentStatus = {\n  UNKNOWN: 0,\n  IN_FLIGHT: 1,\n  SUCCEEDED: 2,\n  FAILED: 3\n};\n\n/**\n * optional string payment_hash = 1;\n * @return {string}\n */\nproto.lnrpc.Payment.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Payment.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 value = 2;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setValue = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 creation_date = 3;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getCreationDate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setCreationDate = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 fee = 5;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setFee = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string payment_preimage = 6;\n * @return {string}\n */\nproto.lnrpc.Payment.prototype.getPaymentPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Payment.prototype.setPaymentPreimage = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 value_sat = 7;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getValueSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setValueSat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 value_msat = 8;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getValueMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setValueMsat = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string payment_request = 9;\n * @return {string}\n */\nproto.lnrpc.Payment.prototype.getPaymentRequest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Payment.prototype.setPaymentRequest = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional PaymentStatus status = 10;\n * @return {!proto.lnrpc.Payment.PaymentStatus}\n */\nproto.lnrpc.Payment.prototype.getStatus = function() {\n  return /** @type {!proto.lnrpc.Payment.PaymentStatus} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {!proto.lnrpc.Payment.PaymentStatus} value */\nproto.lnrpc.Payment.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional int64 fee_sat = 11;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setFeeSat = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional int64 fee_msat = 12;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setFeeMsat = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional int64 creation_time_ns = 13;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getCreationTimeNs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setCreationTimeNs = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * repeated HTLCAttempt htlcs = 14;\n * @return {!Array.<!proto.lnrpc.HTLCAttempt>}\n */\nproto.lnrpc.Payment.prototype.getHtlcsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.HTLCAttempt>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.HTLCAttempt, 14));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.HTLCAttempt>} value */\nproto.lnrpc.Payment.prototype.setHtlcsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 14, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.HTLCAttempt=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.HTLCAttempt}\n */\nproto.lnrpc.Payment.prototype.addHtlcs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.lnrpc.HTLCAttempt, opt_index);\n};\n\n\nproto.lnrpc.Payment.prototype.clearHtlcsList = function() {\n  this.setHtlcsList([]);\n};\n\n\n/**\n * optional uint64 payment_index = 15;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getPaymentIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setPaymentIndex = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * optional PaymentFailureReason failure_reason = 16;\n * @return {!proto.lnrpc.PaymentFailureReason}\n */\nproto.lnrpc.Payment.prototype.getFailureReason = function() {\n  return /** @type {!proto.lnrpc.PaymentFailureReason} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {!proto.lnrpc.PaymentFailureReason} value */\nproto.lnrpc.Payment.prototype.setFailureReason = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.HTLCAttempt = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.HTLCAttempt, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.HTLCAttempt.displayName = 'proto.lnrpc.HTLCAttempt';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.HTLCAttempt.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.HTLCAttempt.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.HTLCAttempt} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HTLCAttempt.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    route: (f = msg.getRoute()) && proto.lnrpc.Route.toObject(includeInstance, f),\n    attemptTimeNs: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    resolveTimeNs: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    failure: (f = msg.getFailure()) && proto.lnrpc.Failure.toObject(includeInstance, f),\n    preimage: msg.getPreimage_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.HTLCAttempt}\n */\nproto.lnrpc.HTLCAttempt.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.HTLCAttempt;\n  return proto.lnrpc.HTLCAttempt.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.HTLCAttempt} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.HTLCAttempt}\n */\nproto.lnrpc.HTLCAttempt.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lnrpc.HTLCAttempt.HTLCStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.Route;\n      reader.readMessage(value,proto.lnrpc.Route.deserializeBinaryFromReader);\n      msg.setRoute(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAttemptTimeNs(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setResolveTimeNs(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.Failure;\n      reader.readMessage(value,proto.lnrpc.Failure.deserializeBinaryFromReader);\n      msg.setFailure(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPreimage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.HTLCAttempt.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.HTLCAttempt.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.HTLCAttempt} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HTLCAttempt.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getRoute();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.Route.serializeBinaryToWriter\n    );\n  }\n  f = message.getAttemptTimeNs();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getResolveTimeNs();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getFailure();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.lnrpc.Failure.serializeBinaryToWriter\n    );\n  }\n  f = message.getPreimage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.HTLCAttempt.HTLCStatus = {\n  IN_FLIGHT: 0,\n  SUCCEEDED: 1,\n  FAILED: 2\n};\n\n/**\n * optional HTLCStatus status = 1;\n * @return {!proto.lnrpc.HTLCAttempt.HTLCStatus}\n */\nproto.lnrpc.HTLCAttempt.prototype.getStatus = function() {\n  return /** @type {!proto.lnrpc.HTLCAttempt.HTLCStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.HTLCAttempt.HTLCStatus} value */\nproto.lnrpc.HTLCAttempt.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional Route route = 2;\n * @return {?proto.lnrpc.Route}\n */\nproto.lnrpc.HTLCAttempt.prototype.getRoute = function() {\n  return /** @type{?proto.lnrpc.Route} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Route, 2));\n};\n\n\n/** @param {?proto.lnrpc.Route|undefined} value */\nproto.lnrpc.HTLCAttempt.prototype.setRoute = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.HTLCAttempt.prototype.clearRoute = function() {\n  this.setRoute(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.HTLCAttempt.prototype.hasRoute = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 attempt_time_ns = 3;\n * @return {number}\n */\nproto.lnrpc.HTLCAttempt.prototype.getAttemptTimeNs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLCAttempt.prototype.setAttemptTimeNs = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 resolve_time_ns = 4;\n * @return {number}\n */\nproto.lnrpc.HTLCAttempt.prototype.getResolveTimeNs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLCAttempt.prototype.setResolveTimeNs = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional Failure failure = 5;\n * @return {?proto.lnrpc.Failure}\n */\nproto.lnrpc.HTLCAttempt.prototype.getFailure = function() {\n  return /** @type{?proto.lnrpc.Failure} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Failure, 5));\n};\n\n\n/** @param {?proto.lnrpc.Failure|undefined} value */\nproto.lnrpc.HTLCAttempt.prototype.setFailure = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.lnrpc.HTLCAttempt.prototype.clearFailure = function() {\n  this.setFailure(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.HTLCAttempt.prototype.hasFailure = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bytes preimage = 6;\n * @return {string}\n */\nproto.lnrpc.HTLCAttempt.prototype.getPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes preimage = 6;\n * This is a type-conversion wrapper around `getPreimage()`\n * @return {string}\n */\nproto.lnrpc.HTLCAttempt.prototype.getPreimage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPreimage()));\n};\n\n\n/**\n * optional bytes preimage = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPreimage()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.HTLCAttempt.prototype.getPreimage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPreimage()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.HTLCAttempt.prototype.setPreimage = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListPaymentsRequest.displayName = 'proto.lnrpc.ListPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    includeIncomplete: jspb.Message.getFieldWithDefault(msg, 1, false),\n    indexOffset: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    maxPayments: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    reversed: jspb.Message.getFieldWithDefault(msg, 4, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListPaymentsRequest}\n */\nproto.lnrpc.ListPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListPaymentsRequest;\n  return proto.lnrpc.ListPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListPaymentsRequest}\n */\nproto.lnrpc.ListPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeIncomplete(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setIndexOffset(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxPayments(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setReversed(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIncludeIncomplete();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getMaxPayments();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getReversed();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool include_incomplete = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.getIncludeIncomplete = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListPaymentsRequest.prototype.setIncludeIncomplete = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 index_offset = 2;\n * @return {number}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.getIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListPaymentsRequest.prototype.setIndexOffset = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 max_payments = 3;\n * @return {number}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.getMaxPayments = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListPaymentsRequest.prototype.setMaxPayments = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool reversed = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.getReversed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListPaymentsRequest.prototype.setReversed = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListPaymentsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListPaymentsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListPaymentsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListPaymentsResponse.displayName = 'proto.lnrpc.ListPaymentsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListPaymentsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListPaymentsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListPaymentsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPaymentsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentsList: jspb.Message.toObjectList(msg.getPaymentsList(),\n    proto.lnrpc.Payment.toObject, includeInstance),\n    firstIndexOffset: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    lastIndexOffset: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListPaymentsResponse}\n */\nproto.lnrpc.ListPaymentsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListPaymentsResponse;\n  return proto.lnrpc.ListPaymentsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListPaymentsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListPaymentsResponse}\n */\nproto.lnrpc.ListPaymentsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Payment;\n      reader.readMessage(value,proto.lnrpc.Payment.deserializeBinaryFromReader);\n      msg.addPayments(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFirstIndexOffset(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastIndexOffset(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListPaymentsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListPaymentsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPaymentsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Payment.serializeBinaryToWriter\n    );\n  }\n  f = message.getFirstIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getLastIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated Payment payments = 1;\n * @return {!Array.<!proto.lnrpc.Payment>}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.getPaymentsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Payment>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Payment, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Payment>} value */\nproto.lnrpc.ListPaymentsResponse.prototype.setPaymentsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Payment=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Payment}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.addPayments = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Payment, opt_index);\n};\n\n\nproto.lnrpc.ListPaymentsResponse.prototype.clearPaymentsList = function() {\n  this.setPaymentsList([]);\n};\n\n\n/**\n * optional uint64 first_index_offset = 2;\n * @return {number}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.getFirstIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListPaymentsResponse.prototype.setFirstIndexOffset = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 last_index_offset = 3;\n * @return {number}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.getLastIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListPaymentsResponse.prototype.setLastIndexOffset = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DeleteAllPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DeleteAllPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DeleteAllPaymentsRequest.displayName = 'proto.lnrpc.DeleteAllPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DeleteAllPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DeleteAllPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DeleteAllPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteAllPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DeleteAllPaymentsRequest}\n */\nproto.lnrpc.DeleteAllPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DeleteAllPaymentsRequest;\n  return proto.lnrpc.DeleteAllPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DeleteAllPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DeleteAllPaymentsRequest}\n */\nproto.lnrpc.DeleteAllPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DeleteAllPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DeleteAllPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DeleteAllPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteAllPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DeleteAllPaymentsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DeleteAllPaymentsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DeleteAllPaymentsResponse.displayName = 'proto.lnrpc.DeleteAllPaymentsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DeleteAllPaymentsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DeleteAllPaymentsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DeleteAllPaymentsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteAllPaymentsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DeleteAllPaymentsResponse}\n */\nproto.lnrpc.DeleteAllPaymentsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DeleteAllPaymentsResponse;\n  return proto.lnrpc.DeleteAllPaymentsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DeleteAllPaymentsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DeleteAllPaymentsResponse}\n */\nproto.lnrpc.DeleteAllPaymentsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DeleteAllPaymentsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DeleteAllPaymentsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DeleteAllPaymentsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteAllPaymentsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.AbandonChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.AbandonChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.AbandonChannelRequest.displayName = 'proto.lnrpc.AbandonChannelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.AbandonChannelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.AbandonChannelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.AbandonChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AbandonChannelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelPoint: (f = msg.getChannelPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.AbandonChannelRequest}\n */\nproto.lnrpc.AbandonChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.AbandonChannelRequest;\n  return proto.lnrpc.AbandonChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.AbandonChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.AbandonChannelRequest}\n */\nproto.lnrpc.AbandonChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChannelPoint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.AbandonChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.AbandonChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.AbandonChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AbandonChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint channel_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.AbandonChannelRequest.prototype.getChannelPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.AbandonChannelRequest.prototype.setChannelPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.AbandonChannelRequest.prototype.clearChannelPoint = function() {\n  this.setChannelPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.AbandonChannelRequest.prototype.hasChannelPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.AbandonChannelResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.AbandonChannelResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.AbandonChannelResponse.displayName = 'proto.lnrpc.AbandonChannelResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.AbandonChannelResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.AbandonChannelResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.AbandonChannelResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AbandonChannelResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.AbandonChannelResponse}\n */\nproto.lnrpc.AbandonChannelResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.AbandonChannelResponse;\n  return proto.lnrpc.AbandonChannelResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.AbandonChannelResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.AbandonChannelResponse}\n */\nproto.lnrpc.AbandonChannelResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.AbandonChannelResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.AbandonChannelResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.AbandonChannelResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AbandonChannelResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DebugLevelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DebugLevelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DebugLevelRequest.displayName = 'proto.lnrpc.DebugLevelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DebugLevelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DebugLevelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DebugLevelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DebugLevelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    show: jspb.Message.getFieldWithDefault(msg, 1, false),\n    levelSpec: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DebugLevelRequest}\n */\nproto.lnrpc.DebugLevelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DebugLevelRequest;\n  return proto.lnrpc.DebugLevelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DebugLevelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DebugLevelRequest}\n */\nproto.lnrpc.DebugLevelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setShow(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLevelSpec(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DebugLevelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DebugLevelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DebugLevelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DebugLevelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getShow();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getLevelSpec();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool show = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.DebugLevelRequest.prototype.getShow = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.DebugLevelRequest.prototype.setShow = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string level_spec = 2;\n * @return {string}\n */\nproto.lnrpc.DebugLevelRequest.prototype.getLevelSpec = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.DebugLevelRequest.prototype.setLevelSpec = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DebugLevelResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DebugLevelResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DebugLevelResponse.displayName = 'proto.lnrpc.DebugLevelResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DebugLevelResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DebugLevelResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DebugLevelResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DebugLevelResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    subSystems: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DebugLevelResponse}\n */\nproto.lnrpc.DebugLevelResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DebugLevelResponse;\n  return proto.lnrpc.DebugLevelResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DebugLevelResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DebugLevelResponse}\n */\nproto.lnrpc.DebugLevelResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSubSystems(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DebugLevelResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DebugLevelResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DebugLevelResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DebugLevelResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSubSystems();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string sub_systems = 1;\n * @return {string}\n */\nproto.lnrpc.DebugLevelResponse.prototype.getSubSystems = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.DebugLevelResponse.prototype.setSubSystems = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PayReqString = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PayReqString, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PayReqString.displayName = 'proto.lnrpc.PayReqString';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PayReqString.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PayReqString.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PayReqString} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PayReqString.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    payReq: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PayReqString}\n */\nproto.lnrpc.PayReqString.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PayReqString;\n  return proto.lnrpc.PayReqString.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PayReqString} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PayReqString}\n */\nproto.lnrpc.PayReqString.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayReq(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PayReqString.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PayReqString.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PayReqString} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PayReqString.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPayReq();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pay_req = 1;\n * @return {string}\n */\nproto.lnrpc.PayReqString.prototype.getPayReq = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReqString.prototype.setPayReq = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PayReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.PayReq.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.PayReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PayReq.displayName = 'proto.lnrpc.PayReq';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.PayReq.repeatedFields_ = [10];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PayReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PayReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PayReq} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PayReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    destination: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    numSatoshis: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    expiry: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    description: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    descriptionHash: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    fallbackAddr: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    cltvExpiry: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    routeHintsList: jspb.Message.toObjectList(msg.getRouteHintsList(),\n    proto.lnrpc.RouteHint.toObject, includeInstance),\n    paymentAddr: msg.getPaymentAddr_asB64(),\n    numMsat: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PayReq}\n */\nproto.lnrpc.PayReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PayReq;\n  return proto.lnrpc.PayReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PayReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PayReq}\n */\nproto.lnrpc.PayReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDestination(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumSatoshis(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpiry(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescriptionHash(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFallbackAddr(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCltvExpiry(value);\n      break;\n    case 10:\n      var value = new proto.lnrpc.RouteHint;\n      reader.readMessage(value,proto.lnrpc.RouteHint.deserializeBinaryFromReader);\n      msg.addRouteHints(value);\n      break;\n    case 11:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentAddr(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumMsat(value);\n      break;\n    case 13:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PayReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PayReq.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PayReq} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PayReq.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDestination();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getNumSatoshis();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getExpiry();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getDescriptionHash();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getFallbackAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getCltvExpiry();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getRouteHintsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      10,\n      f,\n      proto.lnrpc.RouteHint.serializeBinaryToWriter\n    );\n  }\n  f = message.getPaymentAddr_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      11,\n      f\n    );\n  }\n  f = message.getNumMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * optional string destination = 1;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getDestination = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setDestination = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string payment_hash = 2;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 num_satoshis = 3;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getNumSatoshis = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setNumSatoshis = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 timestamp = 4;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setTimestamp = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 expiry = 5;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setExpiry = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string description = 6;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string description_hash = 7;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getDescriptionHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setDescriptionHash = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string fallback_addr = 8;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getFallbackAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setFallbackAddr = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 cltv_expiry = 9;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getCltvExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setCltvExpiry = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * repeated RouteHint route_hints = 10;\n * @return {!Array.<!proto.lnrpc.RouteHint>}\n */\nproto.lnrpc.PayReq.prototype.getRouteHintsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.RouteHint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.RouteHint, 10));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.RouteHint>} value */\nproto.lnrpc.PayReq.prototype.setRouteHintsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 10, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.RouteHint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.PayReq.prototype.addRouteHints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.lnrpc.RouteHint, opt_index);\n};\n\n\nproto.lnrpc.PayReq.prototype.clearRouteHintsList = function() {\n  this.setRouteHintsList([]);\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getPaymentAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getPaymentAddr_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentAddr()));\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PayReq.prototype.getPaymentAddr_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentAddr()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PayReq.prototype.setPaymentAddr = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional int64 num_msat = 12;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getNumMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setNumMsat = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * map<uint32, Feature> features = 13;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.PayReq.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 13, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.PayReq.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Feature = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Feature, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Feature.displayName = 'proto.lnrpc.Feature';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Feature.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Feature.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Feature} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Feature.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    isRequired: jspb.Message.getFieldWithDefault(msg, 3, false),\n    isKnown: jspb.Message.getFieldWithDefault(msg, 4, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Feature}\n */\nproto.lnrpc.Feature.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Feature;\n  return proto.lnrpc.Feature.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Feature} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Feature}\n */\nproto.lnrpc.Feature.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsRequired(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsKnown(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Feature.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Feature.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Feature} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Feature.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getIsRequired();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getIsKnown();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.lnrpc.Feature.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Feature.prototype.setName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool is_required = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Feature.prototype.getIsRequired = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Feature.prototype.setIsRequired = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool is_known = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Feature.prototype.getIsKnown = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Feature.prototype.setIsKnown = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FeeReportRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FeeReportRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FeeReportRequest.displayName = 'proto.lnrpc.FeeReportRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FeeReportRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FeeReportRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FeeReportRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeReportRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FeeReportRequest}\n */\nproto.lnrpc.FeeReportRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FeeReportRequest;\n  return proto.lnrpc.FeeReportRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FeeReportRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FeeReportRequest}\n */\nproto.lnrpc.FeeReportRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FeeReportRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FeeReportRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FeeReportRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeReportRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelFeeReport = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelFeeReport, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelFeeReport.displayName = 'proto.lnrpc.ChannelFeeReport';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelFeeReport.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelFeeReport.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelFeeReport} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelFeeReport.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 5, \"0\"),\n    channelPoint: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    baseFeeMsat: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    feePerMil: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    feeRate: +jspb.Message.getFieldWithDefault(msg, 4, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelFeeReport}\n */\nproto.lnrpc.ChannelFeeReport.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelFeeReport;\n  return proto.lnrpc.ChannelFeeReport.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelFeeReport} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelFeeReport}\n */\nproto.lnrpc.ChannelFeeReport.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 5:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelPoint(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBaseFeeMsat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeePerMil(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFeeRate(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelFeeReport.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelFeeReport.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelFeeReport} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelFeeReport.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      5,\n      f\n    );\n  }\n  f = message.getChannelPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getBaseFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getFeePerMil();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFeeRate();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 5;\n * @return {string}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelFeeReport.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string channel_point = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getChannelPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelFeeReport.prototype.setChannelPoint = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 base_fee_msat = 2;\n * @return {number}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getBaseFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelFeeReport.prototype.setBaseFeeMsat = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 fee_per_mil = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getFeePerMil = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelFeeReport.prototype.setFeePerMil = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional double fee_rate = 4;\n * @return {number}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getFeeRate = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelFeeReport.prototype.setFeeRate = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FeeReportResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.FeeReportResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.FeeReportResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FeeReportResponse.displayName = 'proto.lnrpc.FeeReportResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.FeeReportResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FeeReportResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FeeReportResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FeeReportResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeReportResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelFeesList: jspb.Message.toObjectList(msg.getChannelFeesList(),\n    proto.lnrpc.ChannelFeeReport.toObject, includeInstance),\n    dayFeeSum: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    weekFeeSum: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    monthFeeSum: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FeeReportResponse}\n */\nproto.lnrpc.FeeReportResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FeeReportResponse;\n  return proto.lnrpc.FeeReportResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FeeReportResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FeeReportResponse}\n */\nproto.lnrpc.FeeReportResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelFeeReport;\n      reader.readMessage(value,proto.lnrpc.ChannelFeeReport.deserializeBinaryFromReader);\n      msg.addChannelFees(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDayFeeSum(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setWeekFeeSum(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMonthFeeSum(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FeeReportResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FeeReportResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FeeReportResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeReportResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelFeesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelFeeReport.serializeBinaryToWriter\n    );\n  }\n  f = message.getDayFeeSum();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getWeekFeeSum();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getMonthFeeSum();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated ChannelFeeReport channel_fees = 1;\n * @return {!Array.<!proto.lnrpc.ChannelFeeReport>}\n */\nproto.lnrpc.FeeReportResponse.prototype.getChannelFeesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelFeeReport>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelFeeReport, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelFeeReport>} value */\nproto.lnrpc.FeeReportResponse.prototype.setChannelFeesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelFeeReport=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelFeeReport}\n */\nproto.lnrpc.FeeReportResponse.prototype.addChannelFees = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ChannelFeeReport, opt_index);\n};\n\n\nproto.lnrpc.FeeReportResponse.prototype.clearChannelFeesList = function() {\n  this.setChannelFeesList([]);\n};\n\n\n/**\n * optional uint64 day_fee_sum = 2;\n * @return {number}\n */\nproto.lnrpc.FeeReportResponse.prototype.getDayFeeSum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeReportResponse.prototype.setDayFeeSum = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 week_fee_sum = 3;\n * @return {number}\n */\nproto.lnrpc.FeeReportResponse.prototype.getWeekFeeSum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeReportResponse.prototype.setWeekFeeSum = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 month_fee_sum = 4;\n * @return {number}\n */\nproto.lnrpc.FeeReportResponse.prototype.getMonthFeeSum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeReportResponse.prototype.setMonthFeeSum = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PolicyUpdateRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.PolicyUpdateRequest.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.PolicyUpdateRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PolicyUpdateRequest.displayName = 'proto.lnrpc.PolicyUpdateRequest';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.PolicyUpdateRequest.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.PolicyUpdateRequest.ScopeCase = {\n  SCOPE_NOT_SET: 0,\n  GLOBAL: 1,\n  CHAN_POINT: 2\n};\n\n/**\n * @return {proto.lnrpc.PolicyUpdateRequest.ScopeCase}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getScopeCase = function() {\n  return /** @type {proto.lnrpc.PolicyUpdateRequest.ScopeCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.PolicyUpdateRequest.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PolicyUpdateRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PolicyUpdateRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PolicyUpdateRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    global: jspb.Message.getFieldWithDefault(msg, 1, false),\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    baseFeeMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    feeRate: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),\n    timeLockDelta: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    maxHtlcMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    minHtlcMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    minHtlcMsatSpecified: jspb.Message.getFieldWithDefault(msg, 8, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PolicyUpdateRequest}\n */\nproto.lnrpc.PolicyUpdateRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PolicyUpdateRequest;\n  return proto.lnrpc.PolicyUpdateRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PolicyUpdateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PolicyUpdateRequest}\n */\nproto.lnrpc.PolicyUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setGlobal(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBaseFeeMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFeeRate(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTimeLockDelta(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxHtlcMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMinHtlcMsat(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setMinHtlcMsatSpecified(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PolicyUpdateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PolicyUpdateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PolicyUpdateRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getBaseFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFeeRate();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      4,\n      f\n    );\n  }\n  f = message.getTimeLockDelta();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getMaxHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getMinHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getMinHtlcMsatSpecified();\n  if (f) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool global = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getGlobal = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setGlobal = function(value) {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.PolicyUpdateRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.PolicyUpdateRequest.prototype.clearGlobal = function() {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.PolicyUpdateRequest.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.hasGlobal = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ChannelPoint chan_point = 2;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 2));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setChanPoint = function(value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.lnrpc.PolicyUpdateRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.PolicyUpdateRequest.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 base_fee_msat = 3;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getBaseFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setBaseFeeMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional double fee_rate = 4;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getFeeRate = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setFeeRate = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 time_lock_delta = 5;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getTimeLockDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setTimeLockDelta = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 max_htlc_msat = 6;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getMaxHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setMaxHtlcMsat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 min_htlc_msat = 7;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getMinHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setMinHtlcMsat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional bool min_htlc_msat_specified = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getMinHtlcMsatSpecified = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setMinHtlcMsatSpecified = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PolicyUpdateResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PolicyUpdateResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PolicyUpdateResponse.displayName = 'proto.lnrpc.PolicyUpdateResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PolicyUpdateResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PolicyUpdateResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PolicyUpdateResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PolicyUpdateResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PolicyUpdateResponse}\n */\nproto.lnrpc.PolicyUpdateResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PolicyUpdateResponse;\n  return proto.lnrpc.PolicyUpdateResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PolicyUpdateResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PolicyUpdateResponse}\n */\nproto.lnrpc.PolicyUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PolicyUpdateResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PolicyUpdateResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PolicyUpdateResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PolicyUpdateResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ForwardingHistoryRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ForwardingHistoryRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ForwardingHistoryRequest.displayName = 'proto.lnrpc.ForwardingHistoryRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ForwardingHistoryRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ForwardingHistoryRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingHistoryRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    startTime: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    endTime: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    indexOffset: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    numMaxEvents: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ForwardingHistoryRequest}\n */\nproto.lnrpc.ForwardingHistoryRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ForwardingHistoryRequest;\n  return proto.lnrpc.ForwardingHistoryRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ForwardingHistoryRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ForwardingHistoryRequest}\n */\nproto.lnrpc.ForwardingHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setStartTime(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setEndTime(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setIndexOffset(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumMaxEvents(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ForwardingHistoryRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ForwardingHistoryRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingHistoryRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStartTime();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getEndTime();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getIndexOffset();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getNumMaxEvents();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 start_time = 1;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.getStartTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryRequest.prototype.setStartTime = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 end_time = 2;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.getEndTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryRequest.prototype.setEndTime = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 index_offset = 3;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.getIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryRequest.prototype.setIndexOffset = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 num_max_events = 4;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.getNumMaxEvents = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryRequest.prototype.setNumMaxEvents = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ForwardingEvent = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ForwardingEvent, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ForwardingEvent.displayName = 'proto.lnrpc.ForwardingEvent';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ForwardingEvent.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ForwardingEvent.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ForwardingEvent} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingEvent.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    chanIdIn: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\n    chanIdOut: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\n    amtIn: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    amtOut: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    fee: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    feeMsat: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    amtInMsat: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    amtOutMsat: jspb.Message.getFieldWithDefault(msg, 10, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ForwardingEvent}\n */\nproto.lnrpc.ForwardingEvent.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ForwardingEvent;\n  return proto.lnrpc.ForwardingEvent.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ForwardingEvent} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ForwardingEvent}\n */\nproto.lnrpc.ForwardingEvent.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setTimestamp(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanIdIn(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanIdOut(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtIn(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtOut(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFee(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFeeMsat(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtInMsat(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtOutMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ForwardingEvent.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ForwardingEvent.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ForwardingEvent} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingEvent.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getChanIdIn();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      2,\n      f\n    );\n  }\n  f = message.getChanIdOut();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      4,\n      f\n    );\n  }\n  f = message.getAmtIn();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getAmtOut();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getFee();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getFeeMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n  f = message.getAmtInMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      9,\n      f\n    );\n  }\n  f = message.getAmtOutMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 timestamp = 1;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setTimestamp = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 chan_id_in = 2;\n * @return {string}\n */\nproto.lnrpc.ForwardingEvent.prototype.getChanIdIn = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ForwardingEvent.prototype.setChanIdIn = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 chan_id_out = 4;\n * @return {string}\n */\nproto.lnrpc.ForwardingEvent.prototype.getChanIdOut = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ForwardingEvent.prototype.setChanIdOut = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 amt_in = 5;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getAmtIn = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setAmtIn = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 amt_out = 6;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getAmtOut = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setAmtOut = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 fee = 7;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setFee = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional uint64 fee_msat = 8;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setFeeMsat = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional uint64 amt_in_msat = 9;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getAmtInMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setAmtInMsat = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional uint64 amt_out_msat = 10;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getAmtOutMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setAmtOutMsat = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ForwardingHistoryResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ForwardingHistoryResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ForwardingHistoryResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ForwardingHistoryResponse.displayName = 'proto.lnrpc.ForwardingHistoryResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ForwardingHistoryResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ForwardingHistoryResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ForwardingHistoryResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingHistoryResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    forwardingEventsList: jspb.Message.toObjectList(msg.getForwardingEventsList(),\n    proto.lnrpc.ForwardingEvent.toObject, includeInstance),\n    lastOffsetIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ForwardingHistoryResponse}\n */\nproto.lnrpc.ForwardingHistoryResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ForwardingHistoryResponse;\n  return proto.lnrpc.ForwardingHistoryResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ForwardingHistoryResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ForwardingHistoryResponse}\n */\nproto.lnrpc.ForwardingHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ForwardingEvent;\n      reader.readMessage(value,proto.lnrpc.ForwardingEvent.deserializeBinaryFromReader);\n      msg.addForwardingEvents(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLastOffsetIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ForwardingHistoryResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ForwardingHistoryResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingHistoryResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getForwardingEventsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ForwardingEvent.serializeBinaryToWriter\n    );\n  }\n  f = message.getLastOffsetIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated ForwardingEvent forwarding_events = 1;\n * @return {!Array.<!proto.lnrpc.ForwardingEvent>}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.getForwardingEventsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ForwardingEvent>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ForwardingEvent, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ForwardingEvent>} value */\nproto.lnrpc.ForwardingHistoryResponse.prototype.setForwardingEventsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ForwardingEvent=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ForwardingEvent}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.addForwardingEvents = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ForwardingEvent, opt_index);\n};\n\n\nproto.lnrpc.ForwardingHistoryResponse.prototype.clearForwardingEventsList = function() {\n  this.setForwardingEventsList([]);\n};\n\n\n/**\n * optional uint32 last_offset_index = 2;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.getLastOffsetIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryResponse.prototype.setLastOffsetIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ExportChannelBackupRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ExportChannelBackupRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ExportChannelBackupRequest.displayName = 'proto.lnrpc.ExportChannelBackupRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ExportChannelBackupRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ExportChannelBackupRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ExportChannelBackupRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ExportChannelBackupRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ExportChannelBackupRequest}\n */\nproto.lnrpc.ExportChannelBackupRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ExportChannelBackupRequest;\n  return proto.lnrpc.ExportChannelBackupRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ExportChannelBackupRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ExportChannelBackupRequest}\n */\nproto.lnrpc.ExportChannelBackupRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ExportChannelBackupRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ExportChannelBackupRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ExportChannelBackupRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ExportChannelBackupRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint chan_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ExportChannelBackupRequest.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ExportChannelBackupRequest.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ExportChannelBackupRequest.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ExportChannelBackupRequest.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBackup = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBackup, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBackup.displayName = 'proto.lnrpc.ChannelBackup';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBackup.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBackup.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBackup} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackup.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    chanBackup: msg.getChanBackup_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBackup}\n */\nproto.lnrpc.ChannelBackup.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBackup;\n  return proto.lnrpc.ChannelBackup.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBackup} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBackup}\n */\nproto.lnrpc.ChannelBackup.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChanBackup(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBackup.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBackup.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBackup} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackup.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getChanBackup_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint chan_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelBackup.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelBackup.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ChannelBackup.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelBackup.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes chan_backup = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelBackup.prototype.getChanBackup = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes chan_backup = 2;\n * This is a type-conversion wrapper around `getChanBackup()`\n * @return {string}\n */\nproto.lnrpc.ChannelBackup.prototype.getChanBackup_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChanBackup()));\n};\n\n\n/**\n * optional bytes chan_backup = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChanBackup()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBackup.prototype.getChanBackup_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChanBackup()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelBackup.prototype.setChanBackup = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.MultiChanBackup = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.MultiChanBackup.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.MultiChanBackup, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.MultiChanBackup.displayName = 'proto.lnrpc.MultiChanBackup';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.MultiChanBackup.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.MultiChanBackup.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.MultiChanBackup.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.MultiChanBackup} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MultiChanBackup.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPointsList: jspb.Message.toObjectList(msg.getChanPointsList(),\n    proto.lnrpc.ChannelPoint.toObject, includeInstance),\n    multiChanBackup: msg.getMultiChanBackup_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.MultiChanBackup}\n */\nproto.lnrpc.MultiChanBackup.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.MultiChanBackup;\n  return proto.lnrpc.MultiChanBackup.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.MultiChanBackup} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.MultiChanBackup}\n */\nproto.lnrpc.MultiChanBackup.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.addChanPoints(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMultiChanBackup(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.MultiChanBackup.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.MultiChanBackup.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.MultiChanBackup} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MultiChanBackup.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPointsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getMultiChanBackup_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated ChannelPoint chan_points = 1;\n * @return {!Array.<!proto.lnrpc.ChannelPoint>}\n */\nproto.lnrpc.MultiChanBackup.prototype.getChanPointsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelPoint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelPoint>} value */\nproto.lnrpc.MultiChanBackup.prototype.setChanPointsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelPoint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.MultiChanBackup.prototype.addChanPoints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ChannelPoint, opt_index);\n};\n\n\nproto.lnrpc.MultiChanBackup.prototype.clearChanPointsList = function() {\n  this.setChanPointsList([]);\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * @return {string}\n */\nproto.lnrpc.MultiChanBackup.prototype.getMultiChanBackup = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * This is a type-conversion wrapper around `getMultiChanBackup()`\n * @return {string}\n */\nproto.lnrpc.MultiChanBackup.prototype.getMultiChanBackup_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMultiChanBackup()));\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMultiChanBackup()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.MultiChanBackup.prototype.getMultiChanBackup_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMultiChanBackup()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.MultiChanBackup.prototype.setMultiChanBackup = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChanBackupExportRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChanBackupExportRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChanBackupExportRequest.displayName = 'proto.lnrpc.ChanBackupExportRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChanBackupExportRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChanBackupExportRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChanBackupExportRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanBackupExportRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChanBackupExportRequest}\n */\nproto.lnrpc.ChanBackupExportRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChanBackupExportRequest;\n  return proto.lnrpc.ChanBackupExportRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChanBackupExportRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChanBackupExportRequest}\n */\nproto.lnrpc.ChanBackupExportRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanBackupExportRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChanBackupExportRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChanBackupExportRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanBackupExportRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChanBackupSnapshot = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChanBackupSnapshot, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChanBackupSnapshot.displayName = 'proto.lnrpc.ChanBackupSnapshot';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChanBackupSnapshot.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChanBackupSnapshot} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanBackupSnapshot.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    singleChanBackups: (f = msg.getSingleChanBackups()) && proto.lnrpc.ChannelBackups.toObject(includeInstance, f),\n    multiChanBackup: (f = msg.getMultiChanBackup()) && proto.lnrpc.MultiChanBackup.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChanBackupSnapshot}\n */\nproto.lnrpc.ChanBackupSnapshot.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChanBackupSnapshot;\n  return proto.lnrpc.ChanBackupSnapshot.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChanBackupSnapshot} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChanBackupSnapshot}\n */\nproto.lnrpc.ChanBackupSnapshot.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelBackups;\n      reader.readMessage(value,proto.lnrpc.ChannelBackups.deserializeBinaryFromReader);\n      msg.setSingleChanBackups(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.MultiChanBackup;\n      reader.readMessage(value,proto.lnrpc.MultiChanBackup.deserializeBinaryFromReader);\n      msg.setMultiChanBackup(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChanBackupSnapshot.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChanBackupSnapshot} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanBackupSnapshot.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSingleChanBackups();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelBackups.serializeBinaryToWriter\n    );\n  }\n  f = message.getMultiChanBackup();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.MultiChanBackup.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ChannelBackups single_chan_backups = 1;\n * @return {?proto.lnrpc.ChannelBackups}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.getSingleChanBackups = function() {\n  return /** @type{?proto.lnrpc.ChannelBackups} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelBackups, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelBackups|undefined} value */\nproto.lnrpc.ChanBackupSnapshot.prototype.setSingleChanBackups = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ChanBackupSnapshot.prototype.clearSingleChanBackups = function() {\n  this.setSingleChanBackups(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.hasSingleChanBackups = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional MultiChanBackup multi_chan_backup = 2;\n * @return {?proto.lnrpc.MultiChanBackup}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.getMultiChanBackup = function() {\n  return /** @type{?proto.lnrpc.MultiChanBackup} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.MultiChanBackup, 2));\n};\n\n\n/** @param {?proto.lnrpc.MultiChanBackup|undefined} value */\nproto.lnrpc.ChanBackupSnapshot.prototype.setMultiChanBackup = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.ChanBackupSnapshot.prototype.clearMultiChanBackup = function() {\n  this.setMultiChanBackup(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.hasMultiChanBackup = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBackups = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ChannelBackups.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBackups, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBackups.displayName = 'proto.lnrpc.ChannelBackups';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ChannelBackups.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBackups.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBackups.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBackups} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackups.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanBackupsList: jspb.Message.toObjectList(msg.getChanBackupsList(),\n    proto.lnrpc.ChannelBackup.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBackups}\n */\nproto.lnrpc.ChannelBackups.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBackups;\n  return proto.lnrpc.ChannelBackups.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBackups} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBackups}\n */\nproto.lnrpc.ChannelBackups.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelBackup;\n      reader.readMessage(value,proto.lnrpc.ChannelBackup.deserializeBinaryFromReader);\n      msg.addChanBackups(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBackups.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBackups.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBackups} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackups.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanBackupsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelBackup.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ChannelBackup chan_backups = 1;\n * @return {!Array.<!proto.lnrpc.ChannelBackup>}\n */\nproto.lnrpc.ChannelBackups.prototype.getChanBackupsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelBackup>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelBackup, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelBackup>} value */\nproto.lnrpc.ChannelBackups.prototype.setChanBackupsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelBackup=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelBackup}\n */\nproto.lnrpc.ChannelBackups.prototype.addChanBackups = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ChannelBackup, opt_index);\n};\n\n\nproto.lnrpc.ChannelBackups.prototype.clearChanBackupsList = function() {\n  this.setChanBackupsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RestoreChanBackupRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.RestoreChanBackupRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RestoreChanBackupRequest.displayName = 'proto.lnrpc.RestoreChanBackupRequest';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.RestoreChanBackupRequest.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.RestoreChanBackupRequest.BackupCase = {\n  BACKUP_NOT_SET: 0,\n  CHAN_BACKUPS: 1,\n  MULTI_CHAN_BACKUP: 2\n};\n\n/**\n * @return {proto.lnrpc.RestoreChanBackupRequest.BackupCase}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getBackupCase = function() {\n  return /** @type {proto.lnrpc.RestoreChanBackupRequest.BackupCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RestoreChanBackupRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RestoreChanBackupRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RestoreChanBackupRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanBackups: (f = msg.getChanBackups()) && proto.lnrpc.ChannelBackups.toObject(includeInstance, f),\n    multiChanBackup: msg.getMultiChanBackup_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RestoreChanBackupRequest}\n */\nproto.lnrpc.RestoreChanBackupRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RestoreChanBackupRequest;\n  return proto.lnrpc.RestoreChanBackupRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RestoreChanBackupRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RestoreChanBackupRequest}\n */\nproto.lnrpc.RestoreChanBackupRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelBackups;\n      reader.readMessage(value,proto.lnrpc.ChannelBackups.deserializeBinaryFromReader);\n      msg.setChanBackups(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMultiChanBackup(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RestoreChanBackupRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RestoreChanBackupRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RestoreChanBackupRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanBackups();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelBackups.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ChannelBackups chan_backups = 1;\n * @return {?proto.lnrpc.ChannelBackups}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getChanBackups = function() {\n  return /** @type{?proto.lnrpc.ChannelBackups} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelBackups, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelBackups|undefined} value */\nproto.lnrpc.RestoreChanBackupRequest.prototype.setChanBackups = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.RestoreChanBackupRequest.prototype.clearChanBackups = function() {\n  this.setChanBackups(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.hasChanBackups = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * @return {string}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getMultiChanBackup = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * This is a type-conversion wrapper around `getMultiChanBackup()`\n * @return {string}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getMultiChanBackup_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMultiChanBackup()));\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMultiChanBackup()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getMultiChanBackup_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMultiChanBackup()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.RestoreChanBackupRequest.prototype.setMultiChanBackup = function(value) {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.RestoreChanBackupRequest.prototype.clearMultiChanBackup = function() {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.hasMultiChanBackup = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RestoreBackupResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.RestoreBackupResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RestoreBackupResponse.displayName = 'proto.lnrpc.RestoreBackupResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RestoreBackupResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RestoreBackupResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RestoreBackupResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RestoreBackupResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RestoreBackupResponse}\n */\nproto.lnrpc.RestoreBackupResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RestoreBackupResponse;\n  return proto.lnrpc.RestoreBackupResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RestoreBackupResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RestoreBackupResponse}\n */\nproto.lnrpc.RestoreBackupResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RestoreBackupResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RestoreBackupResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RestoreBackupResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RestoreBackupResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBackupSubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBackupSubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBackupSubscription.displayName = 'proto.lnrpc.ChannelBackupSubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBackupSubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBackupSubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBackupSubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackupSubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBackupSubscription}\n */\nproto.lnrpc.ChannelBackupSubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBackupSubscription;\n  return proto.lnrpc.ChannelBackupSubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBackupSubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBackupSubscription}\n */\nproto.lnrpc.ChannelBackupSubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBackupSubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBackupSubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBackupSubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackupSubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.VerifyChanBackupResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.VerifyChanBackupResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.VerifyChanBackupResponse.displayName = 'proto.lnrpc.VerifyChanBackupResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.VerifyChanBackupResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.VerifyChanBackupResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.VerifyChanBackupResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyChanBackupResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.VerifyChanBackupResponse}\n */\nproto.lnrpc.VerifyChanBackupResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.VerifyChanBackupResponse;\n  return proto.lnrpc.VerifyChanBackupResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.VerifyChanBackupResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.VerifyChanBackupResponse}\n */\nproto.lnrpc.VerifyChanBackupResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.VerifyChanBackupResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.VerifyChanBackupResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.VerifyChanBackupResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyChanBackupResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.MacaroonPermission = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.MacaroonPermission, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.MacaroonPermission.displayName = 'proto.lnrpc.MacaroonPermission';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.MacaroonPermission.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.MacaroonPermission.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.MacaroonPermission} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MacaroonPermission.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    entity: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    action: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.MacaroonPermission}\n */\nproto.lnrpc.MacaroonPermission.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.MacaroonPermission;\n  return proto.lnrpc.MacaroonPermission.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.MacaroonPermission} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.MacaroonPermission}\n */\nproto.lnrpc.MacaroonPermission.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEntity(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAction(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.MacaroonPermission.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.MacaroonPermission.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.MacaroonPermission} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MacaroonPermission.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEntity();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAction();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string entity = 1;\n * @return {string}\n */\nproto.lnrpc.MacaroonPermission.prototype.getEntity = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.MacaroonPermission.prototype.setEntity = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string action = 2;\n * @return {string}\n */\nproto.lnrpc.MacaroonPermission.prototype.getAction = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.MacaroonPermission.prototype.setAction = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.BakeMacaroonRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.BakeMacaroonRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.BakeMacaroonRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.BakeMacaroonRequest.displayName = 'proto.lnrpc.BakeMacaroonRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.BakeMacaroonRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.BakeMacaroonRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.BakeMacaroonRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.BakeMacaroonRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BakeMacaroonRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    permissionsList: jspb.Message.toObjectList(msg.getPermissionsList(),\n    proto.lnrpc.MacaroonPermission.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.BakeMacaroonRequest}\n */\nproto.lnrpc.BakeMacaroonRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.BakeMacaroonRequest;\n  return proto.lnrpc.BakeMacaroonRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.BakeMacaroonRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.BakeMacaroonRequest}\n */\nproto.lnrpc.BakeMacaroonRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.MacaroonPermission;\n      reader.readMessage(value,proto.lnrpc.MacaroonPermission.deserializeBinaryFromReader);\n      msg.addPermissions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.BakeMacaroonRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.BakeMacaroonRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.BakeMacaroonRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BakeMacaroonRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPermissionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.MacaroonPermission.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated MacaroonPermission permissions = 1;\n * @return {!Array.<!proto.lnrpc.MacaroonPermission>}\n */\nproto.lnrpc.BakeMacaroonRequest.prototype.getPermissionsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.MacaroonPermission>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.MacaroonPermission, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.MacaroonPermission>} value */\nproto.lnrpc.BakeMacaroonRequest.prototype.setPermissionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.MacaroonPermission=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.MacaroonPermission}\n */\nproto.lnrpc.BakeMacaroonRequest.prototype.addPermissions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.MacaroonPermission, opt_index);\n};\n\n\nproto.lnrpc.BakeMacaroonRequest.prototype.clearPermissionsList = function() {\n  this.setPermissionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.BakeMacaroonResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.BakeMacaroonResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.BakeMacaroonResponse.displayName = 'proto.lnrpc.BakeMacaroonResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.BakeMacaroonResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.BakeMacaroonResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.BakeMacaroonResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BakeMacaroonResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    macaroon: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.BakeMacaroonResponse}\n */\nproto.lnrpc.BakeMacaroonResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.BakeMacaroonResponse;\n  return proto.lnrpc.BakeMacaroonResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.BakeMacaroonResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.BakeMacaroonResponse}\n */\nproto.lnrpc.BakeMacaroonResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMacaroon(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.BakeMacaroonResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.BakeMacaroonResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.BakeMacaroonResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BakeMacaroonResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMacaroon();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string macaroon = 1;\n * @return {string}\n */\nproto.lnrpc.BakeMacaroonResponse.prototype.getMacaroon = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.BakeMacaroonResponse.prototype.setMacaroon = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Failure = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Failure, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Failure.displayName = 'proto.lnrpc.Failure';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Failure.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Failure.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Failure} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Failure.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    channelUpdate: (f = msg.getChannelUpdate()) && proto.lnrpc.ChannelUpdate.toObject(includeInstance, f),\n    htlcMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    onionSha256: msg.getOnionSha256_asB64(),\n    cltvExpiry: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    flags: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    failureSourceIndex: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    height: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Failure}\n */\nproto.lnrpc.Failure.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Failure;\n  return proto.lnrpc.Failure.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Failure} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Failure}\n */\nproto.lnrpc.Failure.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lnrpc.Failure.FailureCode} */ (reader.readEnum());\n      msg.setCode(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ChannelUpdate;\n      reader.readMessage(value,proto.lnrpc.ChannelUpdate.deserializeBinaryFromReader);\n      msg.setChannelUpdate(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHtlcMsat(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOnionSha256(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCltvExpiry(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFlags(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFailureSourceIndex(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Failure.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Failure.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Failure} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Failure.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getChannelUpdate();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.ChannelUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getOnionSha256_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getCltvExpiry();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n  f = message.getFlags();\n  if (f !== 0) {\n    writer.writeUint32(\n      7,\n      f\n    );\n  }\n  f = message.getFailureSourceIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      8,\n      f\n    );\n  }\n  f = message.getHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Failure.FailureCode = {\n  RESERVED: 0,\n  INCORRECT_OR_UNKNOWN_PAYMENT_DETAILS: 1,\n  INCORRECT_PAYMENT_AMOUNT: 2,\n  FINAL_INCORRECT_CLTV_EXPIRY: 3,\n  FINAL_INCORRECT_HTLC_AMOUNT: 4,\n  FINAL_EXPIRY_TOO_SOON: 5,\n  INVALID_REALM: 6,\n  EXPIRY_TOO_SOON: 7,\n  INVALID_ONION_VERSION: 8,\n  INVALID_ONION_HMAC: 9,\n  INVALID_ONION_KEY: 10,\n  AMOUNT_BELOW_MINIMUM: 11,\n  FEE_INSUFFICIENT: 12,\n  INCORRECT_CLTV_EXPIRY: 13,\n  CHANNEL_DISABLED: 14,\n  TEMPORARY_CHANNEL_FAILURE: 15,\n  REQUIRED_NODE_FEATURE_MISSING: 16,\n  REQUIRED_CHANNEL_FEATURE_MISSING: 17,\n  UNKNOWN_NEXT_PEER: 18,\n  TEMPORARY_NODE_FAILURE: 19,\n  PERMANENT_NODE_FAILURE: 20,\n  PERMANENT_CHANNEL_FAILURE: 21,\n  EXPIRY_TOO_FAR: 22,\n  MPP_TIMEOUT: 23,\n  INTERNAL_FAILURE: 997,\n  UNKNOWN_FAILURE: 998,\n  UNREADABLE_FAILURE: 999\n};\n\n/**\n * optional FailureCode code = 1;\n * @return {!proto.lnrpc.Failure.FailureCode}\n */\nproto.lnrpc.Failure.prototype.getCode = function() {\n  return /** @type {!proto.lnrpc.Failure.FailureCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.Failure.FailureCode} value */\nproto.lnrpc.Failure.prototype.setCode = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional ChannelUpdate channel_update = 3;\n * @return {?proto.lnrpc.ChannelUpdate}\n */\nproto.lnrpc.Failure.prototype.getChannelUpdate = function() {\n  return /** @type{?proto.lnrpc.ChannelUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelUpdate, 3));\n};\n\n\n/** @param {?proto.lnrpc.ChannelUpdate|undefined} value */\nproto.lnrpc.Failure.prototype.setChannelUpdate = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.Failure.prototype.clearChannelUpdate = function() {\n  this.setChannelUpdate(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Failure.prototype.hasChannelUpdate = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint64 htlc_msat = 4;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setHtlcMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bytes onion_sha_256 = 5;\n * @return {string}\n */\nproto.lnrpc.Failure.prototype.getOnionSha256 = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes onion_sha_256 = 5;\n * This is a type-conversion wrapper around `getOnionSha256()`\n * @return {string}\n */\nproto.lnrpc.Failure.prototype.getOnionSha256_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOnionSha256()));\n};\n\n\n/**\n * optional bytes onion_sha_256 = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOnionSha256()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.Failure.prototype.getOnionSha256_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOnionSha256()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.Failure.prototype.setOnionSha256 = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 cltv_expiry = 6;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getCltvExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setCltvExpiry = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint32 flags = 7;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getFlags = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setFlags = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional uint32 failure_source_index = 8;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getFailureSourceIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setFailureSourceIndex = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional uint32 height = 9;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setHeight = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelUpdate.displayName = 'proto.lnrpc.ChannelUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    signature: msg.getSignature_asB64(),\n    chainHash: msg.getChainHash_asB64(),\n    chanId: jspb.Message.getFieldWithDefault(msg, 3, \"0\"),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    messageFlags: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    channelFlags: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    timeLockDelta: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    htlcMinimumMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    baseFee: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    feeRate: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    htlcMaximumMsat: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    extraOpaqueData: msg.getExtraOpaqueData_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelUpdate}\n */\nproto.lnrpc.ChannelUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelUpdate;\n  return proto.lnrpc.ChannelUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelUpdate}\n */\nproto.lnrpc.ChannelUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChainHash(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTimestamp(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMessageFlags(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setChannelFlags(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTimeLockDelta(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHtlcMinimumMsat(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setBaseFee(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFeeRate(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHtlcMaximumMsat(value);\n      break;\n    case 12:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setExtraOpaqueData(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getChainHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      3,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getMessageFlags();\n  if (f !== 0) {\n    writer.writeUint32(\n      10,\n      f\n    );\n  }\n  f = message.getChannelFlags();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getTimeLockDelta();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n  f = message.getHtlcMinimumMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getBaseFee();\n  if (f !== 0) {\n    writer.writeUint32(\n      8,\n      f\n    );\n  }\n  f = message.getFeeRate();\n  if (f !== 0) {\n    writer.writeUint32(\n      9,\n      f\n    );\n  }\n  f = message.getHtlcMaximumMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      11,\n      f\n    );\n  }\n  f = message.getExtraOpaqueData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      12,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes signature = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes signature = 1;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelUpdate.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelUpdate.prototype.setSignature = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChainHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * This is a type-conversion wrapper around `getChainHash()`\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChainHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChainHash()));\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChainHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChainHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChainHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelUpdate.prototype.setChainHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 chan_id = 3;\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelUpdate.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 timestamp = 4;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setTimestamp = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 message_flags = 10;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getMessageFlags = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setMessageFlags = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional uint32 channel_flags = 5;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChannelFlags = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setChannelFlags = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 time_lock_delta = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getTimeLockDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setTimeLockDelta = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 htlc_minimum_msat = 7;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getHtlcMinimumMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setHtlcMinimumMsat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional uint32 base_fee = 8;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getBaseFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setBaseFee = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional uint32 fee_rate = 9;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getFeeRate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setFeeRate = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional uint64 htlc_maximum_msat = 11;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getHtlcMaximumMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setHtlcMaximumMsat = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional bytes extra_opaque_data = 12;\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getExtraOpaqueData = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * optional bytes extra_opaque_data = 12;\n * This is a type-conversion wrapper around `getExtraOpaqueData()`\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getExtraOpaqueData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getExtraOpaqueData()));\n};\n\n\n/**\n * optional bytes extra_opaque_data = 12;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getExtraOpaqueData()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelUpdate.prototype.getExtraOpaqueData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getExtraOpaqueData()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelUpdate.prototype.setExtraOpaqueData = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.AddressType = {\n  WITNESS_PUBKEY_HASH: 0,\n  NESTED_PUBKEY_HASH: 1,\n  UNUSED_WITNESS_PUBKEY_HASH: 2,\n  UNUSED_NESTED_PUBKEY_HASH: 3\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.CommitmentType = {\n  LEGACY: 0,\n  STATIC_REMOTE_KEY: 1,\n  ANCHORS: 2,\n  UNKNOWN_COMMITMENT_TYPE: 999\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Initiator = {\n  INITIATOR_UNKNOWN: 0,\n  INITIATOR_LOCAL: 1,\n  INITIATOR_REMOTE: 2,\n  INITIATOR_BOTH: 3\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ResolutionType = {\n  TYPE_UNKNOWN: 0,\n  ANCHOR: 1,\n  INCOMING_HTLC: 2,\n  OUTGOING_HTLC: 3,\n  COMMIT: 4\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ResolutionOutcome = {\n  OUTCOME_UNKNOWN: 0,\n  CLAIMED: 1,\n  UNCLAIMED: 2,\n  ABANDONED: 3,\n  FIRST_STAGE: 4,\n  TIMEOUT: 5\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.NodeMetricType = {\n  UNKNOWN: 0,\n  BETWEENNESS_CENTRALITY: 1\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.InvoiceHTLCState = {\n  ACCEPTED: 0,\n  SETTLED: 1,\n  CANCELED: 2\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.PaymentFailureReason = {\n  FAILURE_REASON_NONE: 0,\n  FAILURE_REASON_TIMEOUT: 1,\n  FAILURE_REASON_NO_ROUTE: 2,\n  FAILURE_REASON_ERROR: 3,\n  FAILURE_REASON_INCORRECT_PAYMENT_DETAILS: 4,\n  FAILURE_REASON_INSUFFICIENT_BALANCE: 5\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.FeatureBit = {\n  DATALOSS_PROTECT_REQ: 0,\n  DATALOSS_PROTECT_OPT: 1,\n  INITIAL_ROUING_SYNC: 3,\n  UPFRONT_SHUTDOWN_SCRIPT_REQ: 4,\n  UPFRONT_SHUTDOWN_SCRIPT_OPT: 5,\n  GOSSIP_QUERIES_REQ: 6,\n  GOSSIP_QUERIES_OPT: 7,\n  TLV_ONION_REQ: 8,\n  TLV_ONION_OPT: 9,\n  EXT_GOSSIP_QUERIES_REQ: 10,\n  EXT_GOSSIP_QUERIES_OPT: 11,\n  STATIC_REMOTE_KEY_REQ: 12,\n  STATIC_REMOTE_KEY_OPT: 13,\n  PAYMENT_ADDR_REQ: 14,\n  PAYMENT_ADDR_OPT: 15,\n  MPP_REQ: 16,\n  MPP_OPT: 17\n};\n\ngoog.object.extend(exports, proto.lnrpc);\n","import tinycolor from 'tinycolor2';\n\nconst primary = '#536DFE';\nconst secondary = '#FF5C93';\nconst warning = '#FFC260';\nconst success = '#3CD4A0';\nconst info = '#9013FE';\n\nconst lightenRate = 7.5;\nconst darkenRate = 15;\n\nexport default {\n  palette: {\n    primary: {\n      main: primary,\n      light: tinycolor(primary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(primary)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    secondary: {\n      main: secondary,\n      light: tinycolor(secondary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(secondary)\n        .darken(darkenRate)\n        .toHexString(),\n      contrastText: '#FFFFFF',\n    },\n    warning: {\n      main: warning,\n      light: tinycolor(warning)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(warning)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    success: {\n      main: success,\n      light: tinycolor(success)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(success)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    info: {\n      main: info,\n      light: tinycolor(info)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(info)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    text: {\n      primary: '#4A4A4A',\n      secondary: '#6E6E6E',\n      hint: '#B9B9B9',\n    },\n    background: {\n      default: '#F6F7FF',\n      light: '#F3F5FF',\n    },\n  },\n  customShadows: {\n    widget:\n      '0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A',\n    widgetDark:\n      '0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A',\n    widgetWide:\n      '0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A',\n  },\n  overrides: {\n    MuiBackdrop: {\n      root: {\n        backgroundColor: '#4A4A4A1A',\n      },\n    },\n    MuiMenu: {\n      paper: {\n        boxShadow:\n          '0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A',\n      },\n    },\n    MuiSelect: {\n      icon: {\n        color: '#B9B9B9',\n      },\n    },\n    MuiListItem: {\n      root: {\n        '&$selected': {\n          backgroundColor: '#F3F5FF !important',\n          '&:focus': {\n            backgroundColor: '#F3F5FF',\n          },\n        },\n      },\n      button: {\n        '&:hover, &:focus': {\n          backgroundColor: '#F3F5FF',\n        },\n      },\n    },\n    MuiTouchRipple: {\n      child: {\n        backgroundColor: 'white',\n      },\n    },\n    MuiTableRow: {\n      root: {\n        height: 56,\n      },\n    },\n    MuiTableCell: {\n      root: {\n        borderBottom: '1px solid rgba(224, 224, 224, .5)',\n      },\n      head: {\n        fontSize: '0.95rem',\n      },\n      body: {\n        fontSize: '0.95rem',\n      },\n    },\n  },\n};\n","import { createMuiTheme } from '@material-ui/core';\nimport defaultTheme from './default';\n\nconst overrides = {\n  typography: {\n    h1: {\n      fontSize: '3rem',\n    },\n    h2: {\n      fontSize: '2rem',\n    },\n    h3: {\n      fontSize: '1.64rem',\n    },\n    h4: {\n      fontSize: '1.5rem',\n    },\n    h5: {\n      fontSize: '1.285rem',\n    },\n    h6: {\n      fontSize: '1.142rem',\n    },\n  },\n};\n\nexport default {\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\n};\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    maxWidth: '100vw',\n    overflowX: 'hidden',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    width: 'calc(100vw - 240px)',\n    minHeight: '100vh',\n  },\n  contentShift: {\n    width: `calc(100vw - ${240 + theme.spacing(6)}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  fakeToolbar: {\n    ...theme.mixins.toolbar,\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\nexport default makeStyles((theme) => ({\n  logotype: {\n    color: 'white',\n    marginLeft: theme.spacing(2.5),\n    marginRight: theme.spacing(2.5),\n    fontWeight: 500,\n    fontSize: 18,\n    whiteSpace: 'nowrap',\n    [theme.breakpoints.down('xs')]: {\n      display: 'none',\n    },\n  },\n  appBar: {\n    width: '100vw',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  toolbar: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  search: {\n    position: 'relative',\n    borderRadius: 25,\n    paddingLeft: theme.spacing(2.5),\n    width: 36,\n    backgroundColor: fade(theme.palette.common.black, 0),\n    transition: theme.transitions.create(['background-color', 'width']),\n    '&:hover': {\n      cursor: 'pointer',\n      backgroundColor: fade(theme.palette.common.black, 0.08),\n    },\n  },\n  searchFocused: {\n    backgroundColor: fade(theme.palette.common.black, 0.08),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 250,\n    },\n  },\n  searchIcon: {\n    width: 36,\n    right: 0,\n    height: '100%',\n    position: 'absolute',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transition: theme.transitions.create('right'),\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  searchIconOpened: {\n    right: theme.spacing(1.25),\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    height: 36,\n    padding: 0,\n    paddingRight: 36 + theme.spacing(1.25),\n    width: '100%',\n  },\n  messageContent: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  headerMenu: {\n    marginTop: theme.spacing(7),\n  },\n  headerMenuList: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  headerMenuItem: {\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'white',\n    },\n  },\n  headerMenuButton: {\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(0.5),\n  },\n  headerMenuButtonCollapse: {\n    marginRight: theme.spacing(2),\n  },\n  headerIcon: {\n    fontSize: 28,\n    color: 'rgba(255, 255, 255, 0.35)',\n  },\n  headerIconCollapse: {\n    color: 'white',\n  },\n  profileMenu: {\n    minWidth: 265,\n  },\n  profileMenuUser: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: theme.spacing(2),\n  },\n  profileMenuItem: {\n    color: theme.palette.text.hint,\n  },\n  profileMenuIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.text.hint,\n  },\n  profileMenuLink: {\n    fontSize: 16,\n    textDecoration: 'none',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  messageNotification: {\n    height: 'auto',\n    display: 'flex',\n    alignItems: 'center',\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.background.light,\n    },\n  },\n  messageNotificationSide: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginRight: theme.spacing(2),\n  },\n  messageNotificationBodySide: {\n    alignItems: 'flex-start',\n    marginRight: 0,\n  },\n  sendMessageButton: {\n    margin: theme.spacing(4),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    textTransform: 'none',\n  },\n  sendButtonIcon: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n","import React from 'react';\nimport {\n  withStyles,\n  Badge as BadgeBase,\n  Typography as TypographyBase,\n  Button as ButtonBase,\n} from '@material-ui/core';\nimport { useTheme, makeStyles } from '@material-ui/styles';\nimport classnames from 'classnames';\n\n// styles\nconst useStyles = makeStyles((theme) => ({\n  badge: {\n    fontWeight: 600,\n    height: 16,\n    minWidth: 16,\n  },\n}));\n\nfunction Badge({\n  children, colorBrightness, color, ...props\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const Styled = createStyled({\n    badge: {\n      backgroundColor: getColor(color, theme, colorBrightness),\n    },\n  });\n\n  return (\n    <Styled>\n      {(styledProps) => (\n        <BadgeBase\n          classes={{\n            badge: classnames(classes.badge, styledProps.classes.badge),\n          }}\n          {...props}\n        >\n          {children}\n        </BadgeBase>\n      )}\n    </Styled>\n  );\n}\n\nfunction Typography({\n  children,\n  weight,\n  size,\n  colorBrightness,\n  color,\n  ...props\n}) {\n  const theme = useTheme();\n\n  return (\n    <TypographyBase\n      style={{\n        color: getColor(color, theme, colorBrightness),\n        fontWeight: getFontWeight(weight),\n        fontSize: getFontSize(size, props.variant, theme),\n      }}\n      {...props}\n    >\n      {children}\n    </TypographyBase>\n  );\n}\n\nfunction Button({\n  children, color, className, ...props\n}) {\n  const theme = useTheme();\n\n  const Styled = createStyled({\n    root: {\n      color: getColor(color, theme),\n    },\n    contained: {\n      backgroundColor: getColor(color, theme),\n      boxShadow: theme.customShadows.widget,\n      color: `${color ? 'white' : theme.palette.text.primary} !important`,\n      '&:hover': {\n        backgroundColor: getColor(color, theme, 'light'),\n        boxShadow: theme.customShadows.widgetWide,\n      },\n      '&:active': {\n        boxShadow: theme.customShadows.widgetWide,\n      },\n    },\n    outlined: {\n      color: getColor(color, theme),\n      borderColor: getColor(color, theme),\n    },\n    select: {\n      backgroundColor: theme.palette.primary.main,\n      color: '#fff',\n    },\n  });\n\n  return (\n    <Styled>\n      {({ classes }) => (\n        <ButtonBase\n          classes={{\n            contained: classes.contained,\n            root: classes.root,\n            outlined: classes.outlined,\n          }}\n          {...props}\n          className={classnames(\n            {\n              [classes.select]: props.select,\n            },\n            className,\n          )}\n        >\n          {children}\n        </ButtonBase>\n      )}\n    </Styled>\n  );\n}\n\nexport { Badge, Typography, Button };\n\n// ########################################################################\n\nfunction getColor(color, theme, brigtness = 'main') {\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\n    return theme.palette[color][brigtness];\n  }\n}\n\nfunction getFontWeight(style) {\n  switch (style) {\n    case 'light':\n      return 300;\n    case 'medium':\n      return 500;\n    case 'bold':\n      return 600;\n    default:\n      return 400;\n  }\n}\n\nfunction getFontSize(size, variant = '', theme) {\n  let multiplier;\n\n  switch (size) {\n    case 'sm':\n      multiplier = 0.8;\n      break;\n    case 'md':\n      multiplier = 1.5;\n      break;\n    case 'xl':\n      multiplier = 2;\n      break;\n    case 'xxl':\n      multiplier = 3;\n      break;\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  const defaultSize = variant && theme.typography[variant]\n    ? theme.typography[variant].fontSize\n    : `${theme.typography.fontSize}px`;\n\n  return `calc(${defaultSize} * ${multiplier})`;\n}\n\nfunction createStyled(styles, options) {\n  const Styled = function (props) {\n    const { children, ...other } = props;\n    return children(other);\n  };\n\n  return withStyles(styles, options)(Styled);\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  notificationContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  notificationContained: {\n    borderRadius: 45,\n    height: 45,\n    boxShadow: theme.customShadows.widgetDark,\n  },\n  notificationContainedShadowless: {\n    boxShadow: 'none',\n  },\n  notificationIconContainer: {\n    minWidth: 45,\n    height: 45,\n    borderRadius: 45,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 24,\n  },\n  notificationIconContainerContained: {\n    fontSize: 18,\n    color: '#FFFFFF80',\n  },\n  notificationIconContainerRounded: {\n    marginRight: theme.spacing(2),\n  },\n  containedTypography: {\n    color: 'white',\n  },\n  messageContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexGrow: 1,\n  },\n  extraButton: {\n    color: 'white',\n    '&:hover, &:focus': {\n      background: 'transparent',\n    },\n  },\n}));\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport {\n  NotificationsNone as NotificationsIcon,\n  ThumbUp as ThumbUpIcon,\n  ShoppingCart as ShoppingCartIcon,\n  LocalOffer as TicketIcon,\n  BusinessCenter as DeliveredIcon,\n  SmsFailed as FeedbackIcon,\n  DiscFull as DiscIcon,\n  Email as MessageIcon,\n  Report as ReportIcon,\n  Error as DefenceIcon,\n  AccountBox as CustomerIcon,\n  Done as ShippedIcon,\n  Publish as UploadIcon,\n} from '@material-ui/icons';\nimport { useTheme } from '@material-ui/styles';\nimport classnames from 'classnames';\nimport tinycolor from 'tinycolor2';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport { Typography } from '../Wrappers';\n\nconst typesIcons = {\n  'e-commerce': <ShoppingCartIcon />,\n  notification: <NotificationsIcon />,\n  offer: <TicketIcon />,\n  info: <ThumbUpIcon />,\n  message: <MessageIcon />,\n  feedback: <FeedbackIcon />,\n  customer: <CustomerIcon />,\n  shipped: <ShippedIcon />,\n  delivered: <DeliveredIcon />,\n  defence: <DefenceIcon />,\n  report: <ReportIcon />,\n  upload: <UploadIcon />,\n  disc: <DiscIcon />,\n};\n\nexport default function Notification({ variant, ...props }) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const icon = getIconByType(props.type);\n  const iconWithStyles = React.cloneElement(icon, {\n    classes: {\n      root: classes.notificationIcon,\n    },\n    style: {\n      color:\n        variant !== 'contained'\n        && theme.palette[props.color]\n        && theme.palette[props.color].main,\n    },\n  });\n\n  return (\n    <div\n      className={classnames(classes.notificationContainer, props.className, {\n        [classes.notificationContained]: variant === 'contained',\n        [classes.notificationContainedShadowless]: props.shadowless,\n      })}\n      style={{\n        backgroundColor:\n          variant === 'contained'\n          && theme.palette[props.color]\n          && theme.palette[props.color].main,\n      }}\n    >\n      <div\n        className={classnames(classes.notificationIconContainer, {\n          [classes.notificationIconContainerContained]: variant === 'contained',\n          [classes.notificationIconContainerRounded]: variant === 'rounded',\n        })}\n        style={{\n          backgroundColor:\n            variant === 'rounded'\n            && theme.palette[props.color]\n            && tinycolor(theme.palette[props.color].main)\n              .setAlpha(0.15)\n              .toRgbString(),\n        }}\n      >\n        {iconWithStyles}\n      </div>\n      <div className={classes.messageContainer}>\n        <Typography\n          className={classnames({\n            [classes.containedTypography]: variant === 'contained',\n          })}\n          variant={props.typographyVariant}\n          size={variant !== 'contained' && !props.typographyVariant && 'md'}\n        >\n          {props.message}\n        </Typography>\n        {props.extraButton && props.extraButtonClick && (\n          <Button\n            onClick={props.extraButtonClick}\n            disableRipple\n            className={classes.extraButton}\n          >\n            {props.extraButton}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// ####################################################################\nfunction getIconByType(type = 'offer') {\n  return typesIcons[type];\n}\n","import React from 'react';\n\nconst LayoutStateContext = React.createContext();\nconst LayoutDispatchContext = React.createContext();\n\nfunction layoutReducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE_SIDEBAR':\n      return { ...state, isSidebarOpened: !state.isSidebarOpened };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction LayoutProvider({ children }) {\n  const [state, dispatch] = React.useReducer(layoutReducer, {\n    isSidebarOpened: true,\n  });\n  return (\n    <LayoutStateContext.Provider value={state}>\n      <LayoutDispatchContext.Provider value={dispatch}>\n        {children}\n      </LayoutDispatchContext.Provider>\n    </LayoutStateContext.Provider>\n  );\n}\n\nfunction useLayoutState() {\n  const context = React.useContext(LayoutStateContext);\n  if (context === undefined) {\n    throw new Error('useLayoutState must be used within a LayoutProvider');\n  }\n  return context;\n}\n\nfunction useLayoutDispatch() {\n  const context = React.useContext(LayoutDispatchContext);\n  if (context === undefined) {\n    throw new Error('useLayoutDispatch must be used within a LayoutProvider');\n  }\n  return context;\n}\n\nexport {\n  LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar,\n};\n\n// ###########################################################\nfunction toggleSidebar(dispatch) {\n  dispatch({\n    type: 'TOGGLE_SIDEBAR',\n  });\n}\n","import {\n  GetInfoRequest,\n  WalletBalanceRequest,\n  GetTransactionsRequest,\n  ListPeersRequest,\n  ListChannelsRequest,\n  PendingChannelsRequest,\n  ConnectPeerRequest,\n  LightningAddress,\n  DisconnectPeerRequest,\n  OpenChannelRequest,\n  CloseChannelRequest,\n  ChannelPoint,\n  NewAddressRequest,\n  SendCoinsRequest,\n} from '../proto/lnd_pb';\nimport {\n  GetSqueakProfileRequest,\n  GetTimelineSqueakDisplaysRequest,\n  SetSqueakProfileFollowingRequest,\n  SetSqueakProfileUseCustomPriceRequest,\n  SetSqueakProfileCustomPriceRequest,\n  GetPeersRequest,\n  PayOfferRequest,\n  GetBuyOffersRequest,\n  GetBuyOfferRequest,\n  GetPeerRequest,\n  SetPeerAutoconnectRequest,\n  GetSigningProfilesRequest,\n  GetProfilesRequest,\n  GetContactProfilesRequest,\n  MakeSqueakRequest,\n  GetSqueakDisplayRequest,\n  SubscribeSqueakDisplayRequest,\n  GetAncestorSqueakDisplaysRequest,\n  GetReplySqueakDisplaysRequest,\n  GetSqueakProfileByAddressRequest,\n  GetAddressSqueakDisplaysRequest,\n  CreateContactProfileRequest,\n  CreateSigningProfileRequest,\n  ImportSigningProfileRequest,\n  CreatePeerRequest,\n  DeletePeerRequest,\n  DeleteSqueakProfileRequest,\n  DeleteSqueakRequest,\n  DownloadSqueakRequest,\n  GetSqueakDetailsRequest,\n  GetSentPaymentsRequest,\n  GetReceivedPaymentsRequest,\n  GetNetworkRequest,\n  GetSqueakProfilePrivateKeyRequest,\n  GetPaymentSummaryRequest,\n  RenameSqueakProfileRequest,\n  SetSqueakProfileImageRequest,\n  ClearSqueakProfileImageRequest,\n  ReprocessReceivedPaymentsRequest,\n  LikeSqueakRequest,\n  UnlikeSqueakRequest,\n  GetLikedSqueakDisplaysRequest,\n  GetConnectedPeersRequest,\n  GetConnectedPeerRequest,\n  ConnectPeerRequest as ConnectSqueakPeerRequest,\n  DisconnectPeerRequest as DisconnectSqueakPeerRequest,\n  DownloadOffersRequest,\n  DownloadRepliesRequest,\n  DownloadAddressSqueaksRequest,\n  SubscribeConnectedPeersRequest,\n  SubscribeConnectedPeerRequest,\n  PeerAddress,\n  SubscribeBuyOffersRequest,\n  SubscribeReplySqueakDisplaysRequest,\n  SubscribeAddressSqueakDisplaysRequest,\n  SubscribeAncestorSqueakDisplaysRequest,\n  SubscribeSqueakDisplaysRequest,\n  SubscribeTimelineSqueakDisplaysRequest,\n} from '../proto/squeak_admin_pb';\n\nimport { SqueakAdminClient } from '../proto/squeak_admin_grpc_web_pb';\n\nconsole.log('Using SqueakAdminClient');\n\nconsole.log('The value of REACT_APP_DEV_MODE_ENABLED is:', Boolean(process.env.REACT_APP_DEV_MODE_ENABLED));\nconst DEV_MODE_ENABLED = process.env.REACT_APP_DEV_MODE_ENABLED;\n\nconst RPC_PROXY_PORT = 15081;\n\nconst clientUrl = `http://${window.location.hostname}:${RPC_PROXY_PORT}`;\nconsole.log(`Using clientUrl: ${clientUrl}`);\nconst client = new SqueakAdminClient(clientUrl);\n\nconsole.log('The value of REACT_APP_SERVER_PORT is:', process.env.REACT_APP_SERVER_PORT);\nconst SERVER_PORT = process.env.REACT_APP_SERVER_PORT || window.location.port;\n\nexport const web_host_port = `${window.location.protocol}//${window.location.hostname}:${SERVER_PORT}`;\n\nexport function logoutRequest(handleResponse) {\n  fetch(`${web_host_port}/logout`, {\n    method: 'get',\n  }).then((response) => response.arrayBuffer()).then((data) => {\n    handleResponse(data);\n  });\n}\n\nexport function getUserRequest(handleResponse) {\n  if (DEV_MODE_ENABLED) {\n    handleResponse('DEV_MODE');\n    return;\n  }\n  fetch(`${web_host_port}/user`, {\n    method: 'get',\n  }).then((response) => response.text()).then((data) => {\n    handleResponse(data);\n  });\n}\n\nexport function getTimelineSqueakDisplaysRequest(limit, lastEntry, handleResponse, handleErr) {\n  const request = new GetTimelineSqueakDisplaysRequest();\n  request.setLimit(limit);\n  request.setLastEntry(lastEntry);\n  client.getTimelineSqueakDisplays(request, {}, (err, response) => {\n    if (err) {\n      handleErr(err);\n    } else {\n      handleResponse(response.getSqueakDisplayEntriesList());\n    }\n  });\n}\n\nexport function lndGetInfoRequest(handleResponse, handleErr) {\n  const request = new GetInfoRequest();\n  client.lndGetInfo(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function lndWalletBalanceRequest(handleResponse) {\n  const request = new WalletBalanceRequest();\n  client.lndWalletBalance(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function lndGetTransactionsRequest(handleResponse) {\n  const request = new GetTransactionsRequest();\n  client.lndGetTransactions(request, {}, (err, response) => {\n    handleResponse(response.getTransactionsList());\n  });\n}\n\nexport function lndListPeersRequest(handleResponse) {\n  const request = new ListPeersRequest();\n  client.lndListPeers(request, {}, (err, response) => {\n    handleResponse(response.getPeersList());\n  });\n}\n\nexport function lndListChannelsRequest(handleResponse) {\n  const request = new ListChannelsRequest();\n  client.lndListChannels(request, {}, (err, response) => {\n    handleResponse(response.getChannelsList());\n  });\n}\n\nexport function lndPendingChannelsRequest(handleResponse) {\n  const request = new PendingChannelsRequest();\n  client.lndPendingChannels(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function getSqueakProfileRequest(id, handleResponse, handleErr) {\n  const request = new GetSqueakProfileRequest();\n  request.setProfileId(id);\n  client.getSqueakProfile(request, {}, (err, response) => {\n    handleResponse(response.getSqueakProfile());\n  });\n}\n\nexport function setSqueakProfileFollowingRequest(id, following, handleResponse) {\n  const request = new SetSqueakProfileFollowingRequest();\n  request.setProfileId(id);\n  request.setFollowing(following);\n  client.setSqueakProfileFollowing(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function setSqueakProfileUseCustomPriceRequest(id, useCustomPrice, handleResponse) {\n  const request = new SetSqueakProfileUseCustomPriceRequest();\n  request.setProfileId(id);\n  request.setUseCustomPrice(useCustomPrice);\n  client.setSqueakProfileUseCustomPrice(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function setSqueakProfileCustomPriceRequest(id, customPriceMsat, handleResponse) {\n  const request = new SetSqueakProfileCustomPriceRequest();\n  request.setProfileId(id);\n  request.setCustomPriceMsat(customPriceMsat);\n  client.setSqueakProfileCustomPrice(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function renameSqueakProfileRequest(id, profileName, handleResponse) {\n  const request = new RenameSqueakProfileRequest();\n  request.setProfileId(id);\n  request.setProfileName(profileName);\n  client.renameSqueakProfile(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function setSqueakProfileImageRequest(id, profileImage, handleResponse) {\n  const request = new SetSqueakProfileImageRequest();\n  request.setProfileId(id);\n  request.setProfileImage(profileImage);\n  client.setSqueakProfileImage(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function clearSqueakProfileImageRequest(id, handleResponse) {\n  const request = new ClearSqueakProfileImageRequest();\n  request.setProfileId(id);\n  client.clearSqueakProfileImage(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function lndConnectPeerRequest(pubkey, host, handleResponse, handleErr) {\n  const request = new ConnectPeerRequest();\n  const address = new LightningAddress();\n  address.setPubkey(pubkey);\n  address.setHost(host);\n  request.setAddr(address);\n  client.lndConnectPeer(request, {}, (err, response) => {\n    if (err) {\n      handleErr(err);\n    }\n    if (response) {\n      handleResponse(response);\n    }\n  });\n}\n\nexport function lndDisconnectPeerRequest(pubkey, handleResponse) {\n  const request = new DisconnectPeerRequest();\n  request.setPubKey(pubkey);\n  client.lndDisconnectPeer(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function getPeersRequest(handleResponse) {\n  const request = new GetPeersRequest();\n  client.getPeers(request, {}, (err, response) => {\n    handleResponse(response.getSqueakPeersList());\n  });\n}\n\nexport function payOfferRequest(offerId, handleResponse, handleErr) {\n  const request = new PayOfferRequest();\n  request.setOfferId(offerId);\n  client.payOffer(request, {}, (err, response) => {\n    if (err) {\n      handleErr(err);\n    }\n    if (response) {\n      handleResponse(response);\n    }\n  });\n}\n\nexport function lndOpenChannelSyncRequest(pubkey, amount, satperbyte, handleResponse, handleErr) {\n  const request = new OpenChannelRequest();\n  request.setNodePubkeyString(pubkey);\n  request.setLocalFundingAmount(amount);\n  request.setSatPerByte(satperbyte);\n  client.lndOpenChannelSync(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function lndCloseChannelRequest(txId, outputIndex, handleResponse, handleErr) {\n  const request = new CloseChannelRequest();\n  const channelPoint = new ChannelPoint();\n  channelPoint.setFundingTxidStr(txId);\n  channelPoint.setOutputIndex(outputIndex);\n  request.setChannelPoint(channelPoint);\n  client.lndCloseChannel(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function getBuyOffersRequest(hash, handleResponse) {\n  const request = new GetBuyOffersRequest();\n  request.setSqueakHash(hash);\n  client.getBuyOffers(request, {}, (err, response) => {\n    handleResponse(response.getOffersList());\n  });\n}\n\nexport function getBuyOfferRequest(offerId, handleResponse) {\n  const request = new GetBuyOfferRequest();\n  request.setOfferId(offerId);\n  client.getBuyOffer(request, {}, (err, response) => {\n    handleResponse(response.getOffer());\n  });\n}\n\nexport function getPeerRequest(id, handleResponse) {\n  const request = new GetPeerRequest();\n  request.setPeerId(id);\n  client.getPeer(request, {}, (err, response) => {\n    handleResponse(response.getSqueakPeer());\n  });\n}\n\nexport function setPeerAutoconnectRequest(id, autoconnect, handleResponse) {\n  const request = new SetPeerAutoconnectRequest();\n  request.setPeerId(id);\n  request.setAutoconnect(autoconnect);\n  client.setPeerAutoconnect(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function getProfilesRequest(handleResponse) {\n  const request = new GetProfilesRequest();\n  client.getProfiles(request, {}, (err, response) => {\n    handleResponse(response.getSqueakProfilesList());\n  });\n}\n\nexport function getSigningProfilesRequest(handleResponse) {\n  const request = new GetSigningProfilesRequest();\n  client.getSigningProfiles(request, {}, (err, response) => {\n    handleResponse(response.getSqueakProfilesList());\n  });\n}\n\nexport function getContactProfilesRequest(handleResponse) {\n  const request = new GetContactProfilesRequest();\n  client.getContactProfiles(request, {}, (err, response) => {\n    handleResponse(response.getSqueakProfilesList());\n  });\n}\n\nexport function makeSqueakRequest(profileId, content, replyto, handleResponse, handleErr) {\n  const request = new MakeSqueakRequest();\n  request.setProfileId(profileId);\n  request.setContent(content);\n  request.setReplyto(replyto);\n  client.makeSqueak(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function getSqueakDisplayRequest(hash, handleResponse) {\n  const request = new GetSqueakDisplayRequest();\n  request.setSqueakHash(hash);\n  client.getSqueakDisplay(request, {}, (err, response) => {\n    handleResponse(response.getSqueakDisplayEntry());\n  });\n}\n\nexport function getAncestorSqueakDisplaysRequest(hash, handleResponse) {\n  const request = new GetAncestorSqueakDisplaysRequest();\n  request.setSqueakHash(hash);\n  client.getAncestorSqueakDisplays(request, {}, (err, response) => {\n    handleResponse(response.getSqueakDisplayEntriesList());\n  });\n}\n\nexport function getReplySqueakDisplaysRequest(hash, limit, lastEntry, handleResponse) {\n  const request = new GetReplySqueakDisplaysRequest();\n  request.setSqueakHash(hash);\n  request.setLimit(limit);\n  request.setLastEntry(lastEntry);\n  client.getReplySqueakDisplays(request, {}, (err, response) => {\n    handleResponse(response.getSqueakDisplayEntriesList());\n  });\n}\n\nexport function getSqueakProfileByAddressRequest(address, handleResponse) {\n  const request = new GetSqueakProfileByAddressRequest();\n  request.setAddress(address);\n  client.getSqueakProfileByAddress(request, {}, (err, response) => {\n    handleResponse(response.getSqueakProfile());\n  });\n}\n\nexport function getAddressSqueakDisplaysRequest(address, limit, lastEntry, handleResponse) {\n  const request = new GetAddressSqueakDisplaysRequest();\n  request.setAddress(address);\n  request.setLimit(limit);\n  request.setLastEntry(lastEntry);\n  client.getAddressSqueakDisplays(request, {}, (err, response) => {\n    handleResponse(response.getSqueakDisplayEntriesList());\n  });\n}\n\nexport function createContactProfileRequest(profileName, squeakAddress, handleResponse, handleErr) {\n  const request = new CreateContactProfileRequest();\n  request.setProfileName(profileName);\n  request.setAddress(squeakAddress);\n  client.createContactProfile(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function createSigningProfileRequest(profileName, handleResponse, handleErr) {\n  const request = new CreateSigningProfileRequest();\n  request.setProfileName(profileName);\n  client.createSigningProfile(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function importSigningProfileRequest(profileName, privateKey, handleResponse, handleErr) {\n  const request = new ImportSigningProfileRequest();\n  request.setProfileName(profileName);\n  request.setPrivateKey(privateKey);\n  client.importSigningProfile(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function createPeerRequest(peerName, host, port, handleResponse) {\n  const request = new CreatePeerRequest();\n  const peerAddress = new PeerAddress();\n  peerAddress.setHost(host);\n  peerAddress.setPort(port);\n  request.setPeerName(peerName);\n  request.setPeerAddress(peerAddress);\n  client.createPeer(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function deletePeerRequest(peerId, handleResponse) {\n  const request = new DeletePeerRequest();\n  request.setPeerId(peerId);\n  client.deletePeer(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function deleteProfileRequest(profileId, handleResponse) {\n  const request = new DeleteSqueakProfileRequest();\n  request.setProfileId(profileId);\n  client.deleteSqueakProfile(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function deleteSqueakRequest(squeakHash, handleResponse) {\n  const request = new DeleteSqueakRequest();\n  request.setSqueakHash(squeakHash);\n  client.deleteSqueak(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function lndNewAddressRequest(handleResponse) {\n  const request = new NewAddressRequest();\n  client.lndNewAddress(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function lndSendCoins(address, amount, satperbyte, sendall, handleResponse) {\n  const request = new SendCoinsRequest();\n  request.setAddr(address);\n  request.setAmount(amount);\n  request.setSatPerByte(satperbyte);\n  request.setSendAll(sendall);\n  client.lndSendCoins(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function downloadSqueakRequest(squeakHash, handleResponse) {\n  const request = new DownloadSqueakRequest();\n  request.setSqueakHash(squeakHash);\n  client.downloadSqueak(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function downloadOffersRequest(squeakHash, handleResponse) {\n  const request = new DownloadOffersRequest();\n  request.setSqueakHash(squeakHash);\n  client.downloadOffers(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function downloadRepliesRequest(squeakHash, handleResponse) {\n  const request = new DownloadRepliesRequest();\n  request.setSqueakHash(squeakHash);\n  client.downloadReplies(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function downloadAddressSqueaksRequest(address, handleResponse) {\n  const request = new DownloadAddressSqueaksRequest();\n  request.setAddress(address);\n  client.downloadAddressSqueaks(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function getSqueakDetailsRequest(hash, handleResponse) {\n  const request = new GetSqueakDetailsRequest();\n  request.setSqueakHash(hash);\n  client.getSqueakDetails(request, {}, (err, response) => {\n    handleResponse(response.getSqueakDetailEntry());\n  });\n}\n\nexport function getSentPaymentsRequest(limit, lastSentPayment, handleResponse) {\n  const request = new GetSentPaymentsRequest();\n  request.setLimit(limit);\n  request.setLastSentPayment(lastSentPayment);\n  client.getSentPayments(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function getReceivedPaymentsRequest(handleResponse) {\n  const request = new GetReceivedPaymentsRequest();\n  client.getReceivedPayments(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function getNetworkRequest(handleResponse) {\n  const request = new GetNetworkRequest();\n  client.getNetwork(request, {}, (err, response) => {\n    handleResponse(response.getNetwork());\n  });\n}\n\nexport function getSqueakProfilePrivateKey(id, handleResponse) {\n  const request = new GetSqueakProfilePrivateKeyRequest();\n  request.setProfileId(id);\n  client.getSqueakProfilePrivateKey(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function getPaymentSummaryRequest(handleResponse) {\n  const request = new GetPaymentSummaryRequest();\n  client.getPaymentSummary(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function reprocessReceivedPaymentsRequest(handleResponse) {\n  const request = new ReprocessReceivedPaymentsRequest();\n  client.reprocessReceivedPayments(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function likeSqueakRequest(hash, handleResponse) {\n  const request = new LikeSqueakRequest();\n  request.setSqueakHash(hash);\n  client.likeSqueak(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function unlikeSqueakRequest(hash, handleResponse) {\n  const request = new UnlikeSqueakRequest();\n  request.setSqueakHash(hash);\n  client.unlikeSqueak(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function getLikedSqueakDisplaysRequest(limit, lastEntry, handleResponse, handleErr) {\n  const request = new GetLikedSqueakDisplaysRequest();\n  request.setLimit(limit);\n  request.setLastEntry(lastEntry);\n  client.getLikedSqueakDisplays(request, {}, (err, response) => {\n    handleResponse(response.getSqueakDisplayEntriesList());\n  });\n}\n\nexport function getConnectedPeersRequest(handleResponse) {\n  const request = new GetConnectedPeersRequest();\n  client.getConnectedPeers(request, {}, (err, response) => {\n    handleResponse(response.getConnectedPeersList());\n  });\n}\n\nexport function getConnectedPeerRequest(host, port, handleResponse) {\n  const request = new GetConnectedPeerRequest();\n  const peerAddress = new PeerAddress();\n  peerAddress.setHost(host);\n  peerAddress.setPort(port);\n  request.setPeerAddress(peerAddress);\n  client.getConnectedPeer(request, {}, (err, response) => {\n    handleResponse(response.getConnectedPeer());\n  });\n}\n\nexport function connectSqueakPeerRequest(host, port, handleResponse) {\n  const request = new ConnectSqueakPeerRequest();\n  const peerAddress = new PeerAddress();\n  peerAddress.setHost(host);\n  peerAddress.setPort(port);\n  request.setPeerAddress(peerAddress);\n  client.connectPeer(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function disconnectSqueakPeerRequest(host, port, handleResponse) {\n  const request = new DisconnectSqueakPeerRequest();\n  const peerAddress = new PeerAddress();\n  peerAddress.setHost(host);\n  peerAddress.setPort(port);\n  request.setPeerAddress(peerAddress);\n  client.disconnectPeer(request, {}, (err, response) => {\n    handleResponse(response);\n  });\n}\n\nexport function subscribeConnectedPeersRequest(handleResponse) {\n  const request = new SubscribeConnectedPeersRequest();\n  const stream = client.subscribeConnectedPeers(request);\n  stream.on('data', (response) => {\n    // handleResponse(response.getConnectedPeersList());\n    handleResponse(response.getConnectedPeersList());\n  });\n  stream.on('end', (end) => {\n    // stream end signal\n    alert(`Stream ended: ${end}`);\n  });\n  return stream;\n}\n\nexport function subscribeConnectedPeerRequest(host, port, handleResponse) {\n  const request = new SubscribeConnectedPeerRequest();\n  const peerAddress = new PeerAddress();\n  peerAddress.setHost(host);\n  peerAddress.setPort(port);\n  request.setPeerAddress(peerAddress);\n  const stream = client.subscribeConnectedPeer(request);\n  stream.on('data', (response) => {\n    handleResponse(response.getConnectedPeer());\n  });\n  stream.on('end', (end) => {\n    // stream end signal\n    alert(`Stream ended: ${end}`);\n  });\n  return stream;\n}\n\nexport function subscribeBuyOffersRequest(hash, handleResponse) {\n  const request = new SubscribeBuyOffersRequest();\n  request.setSqueakHash(hash);\n  const stream = client.subscribeBuyOffers(request);\n  stream.on('data', (response) => {\n    handleResponse(response.getOffer());\n  });\n  stream.on('end', (end) => {\n    // stream end signal\n    alert(`Stream ended: ${end}`);\n  });\n  return stream;\n}\n\nexport function subscribeSqueakDisplayRequest(hash, handleResponse) {\n  const request = new SubscribeSqueakDisplayRequest();\n  request.setSqueakHash(hash);\n  const stream = client.subscribeSqueakDisplay(request);\n  stream.on('data', (response) => {\n    handleResponse(response.getSqueakDisplayEntry());\n  });\n  stream.on('end', (end) => {\n    // stream end signal\n    alert(`Stream ended: ${end}`);\n  });\n  return stream;\n}\n\nexport function subscribeReplySqueakDisplaysRequest(hash, handleResponse) {\n  const request = new SubscribeReplySqueakDisplaysRequest();\n  request.setSqueakHash(hash);\n  const stream = client.subscribeReplySqueakDisplays(request);\n  stream.on('data', (response) => {\n    handleResponse(response.getSqueakDisplayEntry());\n  });\n  stream.on('end', (end) => {\n    // stream end signal\n    alert(`Stream ended: ${end}`);\n  });\n  return stream;\n}\n\nexport function subscribeAddressSqueakDisplaysRequest(address, handleResponse) {\n  const request = new SubscribeAddressSqueakDisplaysRequest();\n  request.setAddress(address);\n  const stream = client.subscribeAddressSqueakDisplays(request);\n  stream.on('data', (response) => {\n    handleResponse(response.getSqueakDisplayEntry());\n  });\n  stream.on('end', (end) => {\n    // stream end signal\n    alert(`Stream ended: ${end}`);\n  });\n  return stream;\n}\n\nexport function subscribeAncestorSqueakDisplaysRequest(hash, handleResponse) {\n  const request = new SubscribeAncestorSqueakDisplaysRequest();\n  request.setSqueakHash(hash);\n  const stream = client.subscribeAncestorSqueakDisplays(request);\n  stream.on('data', (response) => {\n    handleResponse(response.getSqueakDisplayEntriesList());\n  });\n  stream.on('end', (end) => {\n    // stream end signal\n    alert(`Stream ended: ${end}`);\n  });\n  return stream;\n}\n\nexport function subscribeSqueakDisplaysRequest(handleResponse) {\n  const request = new SubscribeSqueakDisplaysRequest();\n  const stream = client.subscribeSqueakDisplays(request);\n  stream.on('data', (response) => {\n    handleResponse(response.getSqueakDisplayEntry());\n  });\n  stream.on('end', (end) => {\n    // stream end signal\n    alert(`Stream ended: ${end}`);\n  });\n  return stream;\n}\n\nexport function subscribeTimelineSqueakDisplaysRequest(handleResponse) {\n  const request = new SubscribeTimelineSqueakDisplaysRequest();\n  const stream = client.subscribeSqueakDisplays(request);\n  stream.on('data', (response) => {\n    handleResponse(response.getSqueakDisplayEntry());\n  });\n  stream.on('end', (end) => {\n    // stream end signal\n    alert(`Stream ended: ${end}`);\n  });\n  return stream;\n}\n","export const reloadRoute = (history) => {\n  history.go(0);\n};\n\nexport const goToPeerPage = (history, peerId) => {\n  history.push(`/app/peer/${peerId}`);\n};\n\nexport const goToPeerAddressPage = (history, host, port) => {\n  history.push(`/app/peeraddress/${host}/${port}`);\n};\n\nexport const goToLightningNodePage = (history, pubkey, host, port) => {\n  console.log(`Go to lightning node for pubkey: ${pubkey}`);\n  if (pubkey && host && port) {\n    history.push(`/app/lightningnode/${pubkey}/${host}/${port}`);\n  } else if (pubkey && host) {\n    history.push(`/app/lightningnode/${pubkey}/${host}`);\n  } else {\n    history.push(`/app/lightningnode/${pubkey}`);\n  }\n};\n\nexport const goToSqueakPage = (history, squeakHash) => {\n  history.push(`/app/squeak/${squeakHash}`);\n};\n\nexport const goToSqueakAddressPage = (history, squeakAddress) => {\n  history.push(`/app/squeakaddress/${squeakAddress}`);\n};\n\nexport const goToChannelPage = (history, txId, outputIndex) => {\n  history.push(`/app/channel/${txId}/${outputIndex}`);\n};\n\nexport const goToProfilePage = (history, profileId) => {\n  history.push(`/app/profile/${profileId}`);\n};\n\nexport const goToWalletPage = (history) => {\n  history.push('/app/wallet/');\n};\n\nexport const goToSentPaymentsPage = (history) => {\n  history.push('/app/sentpayments/');\n};\n\nexport const goToReceivedPaymentsPage = (history) => {\n  history.push('/app/receivedpayments/');\n};\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n} from '@material-ui/core';\nimport {\n  Menu as MenuIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  ArrowBack as ArrowBackIcon,\n} from '@material-ui/icons';\nimport classNames from 'classnames';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport { Badge, Typography } from '../Wrappers/Wrappers';\nimport Notification from '../Notification/Notification';\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from '../../context/LayoutContext';\n// import { useUserDispatch } from '../../context/UserContext';\n\nimport {\n  logoutRequest,\n  getUserRequest,\n} from '../../squeakclient/requests';\nimport {\n  reloadRoute,\n} from '../../navigation/navigation';\n\nconst notifications = [];\n\nexport default function Header(props) {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  // global\n  const layoutState = useLayoutState();\n  const layoutDispatch = useLayoutDispatch();\n  // const userDispatch = useUserDispatch();\n\n  // local\n  const [notificationsMenu, setNotificationsMenu] = useState(null);\n  const [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  const [profileMenu, setProfileMenu] = useState(null);\n  const [isSearchOpen, setSearchOpen] = useState(false);\n  const [username, setUsername] = useState('bob smith');\n\n  const getUser = () => {\n    getUserRequest(setUsername);\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButton,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          Squeak Node\n        </Typography>\n        <div className={classes.grow} />\n        <div\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={(e) => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={(e) => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map((notification) => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              {username}\n            </Typography>\n          </div>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => logoutRequest(\n                () => {\n                  reloadRoute(history);\n                },\n              )}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nconst drawerWidth = 240;\n\nexport default makeStyles((theme) => ({\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 40,\n    [theme.breakpoints.down('sm')]: {\n      width: drawerWidth,\n    },\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  /* sidebarList: {\n    marginTop: theme.spacing(6),\n  }, */\n  mobileBackButton: {\n    marginTop: theme.spacing(0.5),\n    marginLeft: theme.spacing(3),\n    [theme.breakpoints.only('sm')]: {\n      marginTop: theme.spacing(0.625),\n    },\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  link: {\n    textDecoration: 'none',\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.background.light,\n    },\n  },\n  linkActive: {\n    backgroundColor: theme.palette.background.light,\n  },\n  linkNested: {\n    paddingLeft: 0,\n    '&:hover, &:focus': {\n      backgroundColor: '#FFFFFF',\n    },\n  },\n  linkIcon: {\n    marginRight: theme.spacing(1),\n    color: `${theme.palette.text.secondary}99`,\n    transition: theme.transitions.create('color'),\n    width: 24,\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  linkIconActive: {\n    color: theme.palette.primary.main,\n  },\n  linkText: {\n    padding: 0,\n    color: `${theme.palette.text.secondary}CC`,\n    transition: theme.transitions.create(['opacity', 'color']),\n    fontSize: 16,\n  },\n  linkTextActive: {\n    color: theme.palette.text.primary,\n  },\n  linkTextHidden: {\n    opacity: 0,\n  },\n  nestedList: {\n    paddingLeft: theme.spacing(2) + 30,\n  },\n  sectionTitle: {\n    marginLeft: theme.spacing(4.5),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    height: 1,\n    backgroundColor: '#D8D8D880',\n  },\n}));\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport classnames from 'classnames';\n\n// styles\nconst useStyles = makeStyles((theme) => ({\n  dotBase: {\n    width: 8,\n    height: 8,\n    backgroundColor: theme.palette.text.hint,\n    borderRadius: '50%',\n    transition: theme.transitions.create('background-color'),\n  },\n  dotSmall: {\n    width: 5,\n    height: 5,\n  },\n  dotLarge: {\n    width: 11,\n    height: 11,\n  },\n}));\n\nexport default function Dot({ size, color }) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <div\n      className={classnames(classes.dotBase, {\n        [classes.dotLarge]: size === 'large',\n        [classes.dotSmall]: size === 'small',\n      })}\n      style={{\n        backgroundColor:\n          color && theme.palette[color] && theme.palette[color].main,\n      }}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport { Inbox as InboxIcon } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport Dot from '../Dot';\n\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n}) {\n  const classes = useStyles();\n\n  // local\n  const [isOpen, setIsOpen] = useState(false);\n  const isLinkActive = link\n    && (location.pathname === link || location.pathname.indexOf(link) !== -1);\n\n  if (type === 'title') {\n    return (\n      <Typography\n        className={classnames(classes.linkText, classes.sectionTitle, {\n          [classes.linkTextHidden]: !isSidebarOpened,\n        })}\n      >\n        {label}\n      </Typography>\n    );\n  }\n\n  if (type === 'divider') return <Divider className={classes.divider} />;\n\n  if (!children) {\n    return (\n      <ListItem\n        button\n        component={link && Link}\n        to={link}\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n          }),\n        }}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {nested ? <Dot color={isLinkActive && 'primary'} /> : icon}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n    );\n  }\n\n  return (\n    <>\n      <ListItem\n        button\n        component={link && Link}\n        onClick={toggleCollapse}\n        className={classes.link}\n        to={link}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {icon || <InboxIcon />}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n      {children && (\n        <Collapse\n          in={isOpen && isSidebarOpened}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classes.nestedList}\n        >\n          <List component=\"div\" disablePadding>\n            {children.map((childrenLink) => (\n              <SidebarLink\n                key={childrenLink && childrenLink.link}\n                location={location}\n                isSidebarOpened={isSidebarOpened}\n                classes={classes}\n                nested\n                {...childrenLink}\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  );\n\n  // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { Drawer, IconButton, List } from '@material-ui/core';\nimport {\n  Home as HomeIcon,\n  People as ProfilesIcon,\n  AttachMoney as MoneyIcon,\n  ArrowBack as ArrowBackIcon,\n  CloudDownload as PeerIcon,\n  History as HistoryIcon,\n  Favorite as LikedIcon,\n} from '@material-ui/icons';\nimport { useTheme } from '@material-ui/styles';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport SidebarLink from './components/SidebarLink/SidebarLink';\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from '../../context/LayoutContext';\n\nconst structure = [\n  {\n    id: 0, label: 'Timeline', link: '/app/timeline', icon: <HomeIcon />,\n  },\n  {\n    id: 1, label: 'Profiles', link: '/app/profiles', icon: <ProfilesIcon />,\n  },\n  {\n    id: 2, label: 'Liked', link: '/app/liked', icon: <LikedIcon />,\n  },\n  {\n    id: 3, label: 'Wallet', link: '/app/wallet', icon: <MoneyIcon />,\n  },\n  {\n    id: 4, label: 'Peers', link: '/app/peers', icon: <PeerIcon />,\n  },\n  {\n    id: 5, label: 'Payments', link: '/app/payments', icon: <HistoryIcon />,\n  },\n];\n\nfunction Sidebar({ location }) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // global\n  const { isSidebarOpened } = useLayoutState();\n  const layoutDispatch = useLayoutDispatch();\n\n  // local\n  const [isPermanent, setPermanent] = useState(true);\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener('resize', handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? 'permanent' : 'temporary'}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map((link) => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    const windowWidth = window.innerWidth;\n    const breakpointWidth = theme.breakpoints.values.md;\n    const isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","import { makeStyles } from '@material-ui/styles';\nimport { green } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  dashedBorder: {\n    border: '1px dashed',\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  },\n  refreshFab: {\n    position: 'fixed',\n    top: theme.spacing(14),\n    margin: 'auto',\n    justifyContent: 'center',\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    padding: '6px 12px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  deleteSqueakRequest,\n} from '../../squeakclient/requests';\nimport {\n  reloadRoute,\n} from '../../navigation/navigation';\n\nexport default function DeleteSqueakDialog({\n  open,\n  handleClose,\n  squeakToDelete,\n  ...props\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const deleteSqueak = (squeakHash) => {\n    deleteSqueakRequest(squeakHash, (response) => {\n      reloadRoute(history);\n    });\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log('squeakToDelete:', squeakToDelete);\n    const squeakHash = squeakToDelete.getSqueakHash();\n    console.log('squeakHash:', squeakHash);\n    deleteSqueak(squeakHash);\n    handleClose();\n  }\n\n  function cancel(event) {\n    event.stopPropagation();\n    handleClose();\n  }\n\n  function ignore(event) {\n    event.stopPropagation();\n  }\n\n  function MakeCancelButton() {\n    return (\n      <Button\n        onClick={cancel}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function DeleteSqueakButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Delete Squeak\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onClose={cancel} onBackdropClick={cancel} onClick={ignore} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Delete Squeak</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          Are you sure you want to delete this squeak?\n        </DialogContent>\n        <DialogActions>\n          {MakeCancelButton()}\n          {DeleteSqueakButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    // boxShadow: theme.customShadows.widget,\n    backgroundColor: '#fafafa',\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React, { useState } from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n} from '@material-ui/core';\nimport { MoreVert as MoreIcon } from '@material-ui/icons';\nimport classnames from 'classnames';\n\n// styles\nimport useStyles from './styles';\n\nexport default function Widget({\n  children,\n  title,\n  noBodyPadding,\n  bodyClass,\n  disableWidgetMenu,\n  header,\n  ...props\n}) {\n  const classes = useStyles();\n\n  // local\n  const [moreButtonRef, setMoreButtonRef] = useState(null);\n  const [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\n\n  return (\n    <div className={classes.widgetWrapper}>\n      <Paper className={classes.paper} classes={{ root: classes.widgetRoot }} elevation={3} square>\n        <div className={classes.widgetHeader}>\n          {header || (\n            <>\n              <Typography variant=\"h5\" color=\"textSecondary\">\n                {title}\n              </Typography>\n              {!disableWidgetMenu && (\n                <IconButton\n                  color=\"primary\"\n                  classes={{ root: classes.moreButton }}\n                  aria-owns=\"widget-menu\"\n                  aria-haspopup=\"true\"\n                  onClick={() => setMoreMenuOpen(true)}\n                  buttonRef={setMoreButtonRef}\n                >\n                  <MoreIcon />\n                </IconButton>\n              )}\n            </>\n          )}\n        </div>\n        <div\n          className={classnames(classes.widgetBody, {\n            [classes.noPadding]: noBodyPadding,\n            [bodyClass]: bodyClass,\n          })}\n        >\n          {children}\n        </div>\n      </Paper>\n      <Menu\n        id=\"widget-menu\"\n        open={isMoreMenuOpen}\n        anchorEl={moreButtonRef}\n        onClose={() => setMoreMenuOpen(false)}\n        disableAutoFocusItem\n      >\n        <MenuItem>\n          <Typography>Edit</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Copy</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Delete</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Print</Typography>\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Typography,\n  Grid,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\nimport Widget from '../Widget';\n\nimport {\n  getSqueakDetailsRequest,\n} from '../../squeakclient/requests';\n\nexport default function SqueakDetailsDialog({\n  open,\n  handleClose,\n  hash,\n  squeak,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const [squeakDetails, setSqueakDetails] = useState(null);\n\n  const getSqueakDetails = (hash) => {\n    getSqueakDetailsRequest(hash, setSqueakDetails);\n  };\n\n  function load(event) {\n    getSqueakDetails(hash);\n  }\n\n  function cancel(event) {\n    event.stopPropagation();\n    handleClose();\n  }\n\n  function ignore(event) {\n    event.stopPropagation();\n  }\n\n  // useEffect(()=>{\n  //   getSqueakDetails(hash)\n  // },[hash]);\n\n  function MakeCancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function SqueakDetailsContent() {\n    return (\n      <>\n        <Widget disableWidgetMenu>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <div>\n                <div key=\"hash\" className={classes.legendItemContainer}>\n\n                  <Typography color=\"text\" colorBrightness=\"secondary\">\n                    Hash\n                  </Typography>\n                  <Typography color=\"text\">\n                    {squeak.getSqueakHash()}\n                  </Typography>\n                </div>\n\n                <div key=\"address\" className={classes.legendItemContainer}>\n\n                  <Typography color=\"text\" colorBrightness=\"secondary\">\n                    Address\n                  </Typography>\n                  <Typography color=\"text\">\n                    {squeak.getAuthorAddress()}\n                  </Typography>\n                </div>\n\n                <div key=\"rawdata\" className={classes.legendItemContainer}>\n                  <Typography color=\"text\" colorBrightness=\"secondary\">\n                    Raw Data\n                  </Typography>\n                  <TextField\n                    id=\"standard-textarea\"\n                    placeholder=\"Placeholder\"\n                    value={squeakDetails.getSerializedSqueakHex()}\n                    fullWidth=\"true\"\n                    variant=\"outlined\"\n                    multiline\n                  />\n                </div>\n\n              </div>\n            </Grid>\n          </Grid>\n        </Widget>\n      </>\n    );\n  }\n\n  return (\n    <Dialog open={open} onRendered={load} onClose={cancel} onClick={ignore} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">View Squeak Details</DialogTitle>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <DialogContent>\n          {(squeak && squeakDetails)\n      && SqueakDetailsContent()}\n        </DialogContent>\n        <DialogActions>\n          {MakeCancelButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  IconButton,\n  Grid,\n  Divider,\n} from '@material-ui/core';\n\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\n\nimport MakeSqueakDialog from '../MakeSqueakDialog';\nimport DeleteSqueakDialog from '../DeleteSqueakDialog';\nimport SqueakDetailsDialog from '../SqueakDetailsDialog';\n\nimport {\n  likeSqueakRequest,\n  unlikeSqueakRequest,\n} from '../../squeakclient/requests';\n\nexport default function SqueakActionBar({\n  hash,\n  squeak,\n  network,\n  reloadSqueak,\n  ...props\n}) {\n  const [replyDialogOpen, setReplyDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [viewDetailsDialogOpen, setViewDetailsDialogOpen] = useState(false);\n\n  const handleClickOpenReplyDialog = () => {\n    setReplyDialogOpen(true);\n  };\n\n  const handleCloseReplyDialog = () => {\n    setReplyDialogOpen(false);\n  };\n\n  const handleClickOpenDeleteDialog = () => {\n    setDeleteDialogOpen(true);\n    console.log(`deleteDialogOpen: ${deleteDialogOpen}`);\n  };\n\n  const handleCloseDeleteDialog = () => {\n    setDeleteDialogOpen(false);\n  };\n\n  const handleClickOpenViewDetailsDialog = () => {\n    setViewDetailsDialogOpen(true);\n  };\n\n  const handleCloseViewDetailsDialog = () => {\n    setViewDetailsDialogOpen(false);\n  };\n\n  const handleLikeSqueak = () => {\n    console.log('liked.');\n    likeSqueakRequest(hash, (response) => {\n      reloadSqueak();\n    });\n  };\n\n  const handleUnlikeSqueak = () => {\n    console.log('unliked.');\n    unlikeSqueakRequest(hash, (response) => {\n      reloadSqueak();\n    });\n  };\n\n  const onReplyClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log('Handling reply click...');\n    if (!squeak) {\n      return;\n    }\n    handleClickOpenReplyDialog();\n  };\n\n  const onResqueakClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log('Handling resqueak click...');\n    if (!squeak) {\n\n    }\n    // TODO: handleClickOpenReplyDialog();\n  };\n\n  const onLikeClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log('Handling like click...');\n    if (!squeak) {\n      return;\n    }\n    handleLikeSqueak();\n  };\n\n  const onUnlikeClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log('Handling like click...');\n    if (!squeak) {\n      return;\n    }\n    handleUnlikeSqueak();\n  };\n\n  const onDeleteClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log('Handling delete click...');\n    if (!squeak) {\n      return;\n    }\n    handleClickOpenDeleteDialog();\n    event.stopPropagation();\n  };\n\n  const onZoomInClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log('Handling zoomin click...');\n    if (!squeak) {\n      return;\n    }\n    handleClickOpenViewDetailsDialog();\n  };\n\n  function MakeSqueakDialogContent() {\n    return (\n      <>\n        <MakeSqueakDialog\n          open={replyDialogOpen}\n          handleClose={handleCloseReplyDialog}\n          replytoSqueak={squeak}\n        />\n      </>\n    );\n  }\n\n  function DeleteSqueakDialogContent() {\n    return (\n      <>\n        <DeleteSqueakDialog\n          open={deleteDialogOpen}\n          handleClose={handleCloseDeleteDialog}\n          squeakToDelete={squeak}\n        />\n      </>\n    );\n  }\n\n  function ViewDetailsDialogContent() {\n    return (\n      <>\n        {squeak\n            && (\n            <SqueakDetailsDialog\n              open={viewDetailsDialogOpen}\n              handleClose={handleCloseViewDetailsDialog}\n              hash={hash}\n              squeak={squeak}\n            />\n            )}\n      </>\n    );\n  }\n\n  function ActionBarContent() {\n    return (\n      <>\n        <Divider />\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item xs={3} sm={1}>\n            {ReplyIconContent()}\n          </Grid>\n          <Grid item xs={3} sm={1}>\n            {ResqueakIconContent()}\n          </Grid>\n          <Grid item xs={3} sm={1}>\n            {LikeIconContent()}\n          </Grid>\n          <Grid item xs={3} sm={1}>\n            {DeleteIconContent()}\n          </Grid>\n          <Grid item xs={3} sm={1}>\n            {DetailsIconContent()}\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n\n  function ReplyIconContent() {\n    return (\n      <IconButton\n        aria-label=\"reply\"\n        onClick={onReplyClick}\n      >\n        <ReplyIcon />\n      </IconButton>\n    );\n  }\n\n  function ResqueakIconContent() {\n    return (\n      <IconButton\n        aria-label=\"resqueak\"\n        onClick={onResqueakClick}\n      >\n        <RepeatIcon />\n      </IconButton>\n    );\n  }\n\n  function LikeIconContent() {\n    if (squeak && !squeak.getLikedTimeMs()) {\n      return (\n        <IconButton\n          aria-label=\"like\"\n          onClick={onLikeClick}\n        >\n          <FavoriteIcon />\n        </IconButton>\n      );\n    }\n    return (\n      <IconButton\n        aria-label=\"unlike\"\n        onClick={onUnlikeClick}\n      >\n        <FavoriteIcon\n          color=\"secondary\"\n        />\n      </IconButton>\n    );\n  }\n\n  function DeleteIconContent() {\n    return (\n      <IconButton\n        aria-label=\"delete\"\n        onClick={onDeleteClick}\n      >\n        <DeleteIcon />\n      </IconButton>\n    );\n  }\n\n  function DetailsIconContent() {\n    return (\n      <IconButton\n        aria-label=\"details\"\n        onClick={onZoomInClick}\n      >\n        <ZoomInIcon />\n      </IconButton>\n    );\n  }\n\n  return (\n    <>\n      {ActionBarContent()}\n      {MakeSqueakDialogContent()}\n      {DeleteSqueakDialogContent()}\n      {ViewDetailsDialogContent()}\n    </>\n  );\n}\n","export function getBlockDetailUrl(blockHash, network) {\n  switch (network) {\n    case 'mainnet':\n      return `https://blockstream.info/block/${blockHash}`;\n    case 'testnet':\n      return `https://blockstream.info/testnet/block/${blockHash}`;\n    default:\n      return '';\n  }\n}\n","import React from 'react';\nimport {\n  Paper,\n  Typography,\n  Grid,\n  Box,\n  Link,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nimport LockIcon from '@material-ui/icons/Lock';\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\n\n// styles\nimport moment from 'moment';\nimport useStyles from './styles';\n\nimport SqueakActionBar from '../SqueakActionBar';\n\nimport {\n  getBlockDetailUrl,\n} from '../../bitcoin/blockexplorer';\n\nimport {\n  goToSqueakPage,\n  goToSqueakAddressPage,\n} from '../../navigation/navigation';\n\nexport default function SqueakThreadItem({\n  hash,\n  squeak,\n  network,\n  reloadSqueak,\n  showActionBar,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const blockDetailUrl = () =>\n    // return \"https://blockstream.info/testnet/block/\" + squeak.getBlockHash();\n    getBlockDetailUrl(squeak.getBlockHash(), network);\n  const onAddressClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log('Handling address click...');\n    if (!squeak) {\n      return;\n    }\n    goToSqueakAddressPage(history, squeak.getAuthorAddress());\n  };\n\n  const onSqueakClick = (event) => {\n    event.preventDefault();\n    console.log(`Handling squeak click for hash: ${hash}`);\n    goToSqueakPage(history, hash);\n  };\n\n  function SqueakUnlockedContent() {\n    return (\n      <Typography\n        size=\"md\"\n        style={{\n          whiteSpace: 'pre-line', overflow: 'hidden', textOverflow: 'ellipsis', height: '6rem',\n        }}\n      >\n        {squeak.getContentStr()}\n      </Typography>\n    );\n  }\n\n  function SqueakLockedContent() {\n    return (\n      <>\n        <LockIcon />\n      </>\n    );\n  }\n\n  function SqueakMissingContent() {\n    return (\n      <>\n        <DownloadIcon />\n      </>\n    );\n  }\n\n  function SqueakContent() {\n    if (!squeak) {\n      return (\n        <>\n          {SqueakMissingContent()}\n        </>\n      );\n    }\n\n    return (\n      <>\n        {squeak.getIsUnlocked()\n          ? SqueakUnlockedContent()\n          : SqueakLockedContent()}\n      </>\n    );\n  }\n\n  function SqueakTime() {\n    if (!squeak) {\n      return (\n        <Box color=\"secondary.main\" fontWeight=\"fontWeightBold\">\n          Unknown time\n        </Box>\n      );\n    }\n\n    return (\n      <Box color=\"secondary.main\" fontWeight=\"fontWeightBold\">\n        {moment(squeak.getBlockTime() * 1000).fromNow()}\n        <span> </span>\n        (Block\n        <Link\n          href={blockDetailUrl()}\n          target=\"_blank\"\n          rel=\"noopener\"\n          onClick={(event) => event.stopPropagation()}\n        >\n          <span> </span>\n          #\n          {squeak.getBlockHeight()}\n        </Link>\n        )\n      </Box>\n    );\n  }\n\n  function SqueakLockedBackgroundColor() {\n    return { backgroundColor: 'lightgray' };\n  }\n\n  function SqueakUnlockedBackgroundColor() {\n    return { backgroundColor: 'white' };\n  }\n\n  function getAddressDisplay() {\n    if (!squeak) {\n      return 'Author unknown';\n    }\n    return squeak.getIsAuthorKnown()\n      ? squeak.getAuthor().getProfileName()\n      : squeak.getAuthorAddress();\n  }\n\n  function SqueakBackgroundColor() {\n    if (!squeak) {\n      return SqueakLockedBackgroundColor();\n    }\n    return squeak.getIsUnlocked()\n      ? SqueakUnlockedBackgroundColor()\n      : SqueakLockedBackgroundColor();\n  }\n\n  return (\n    <Paper\n      elevation={3}\n      className={classes.paper}\n      p={1}\n      m={0}\n      style={SqueakBackgroundColor()}\n      onClick={onSqueakClick}\n    >\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          <Box fontWeight=\"fontWeightBold\">\n            <Link\n              href=\"#\"\n              onClick={onAddressClick}\n            >\n              {getAddressDisplay()}\n            </Link>\n          </Box>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          {SqueakContent()}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          {SqueakTime()}\n        </Grid>\n      </Grid>\n      {showActionBar\n            && (\n            <SqueakActionBar\n              hash={hash}\n              squeak={squeak}\n              network={network}\n              reloadSqueak={reloadSqueak}\n            />\n            )}\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  MenuItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from '@material-ui/core';\n\nimport { useHistory } from 'react-router-dom';\n\n// styles\nimport useStyles from './styles';\n\nimport SqueakThreadItem from '../SqueakThreadItem';\n\nimport {\n  makeSqueakRequest,\n  getSigningProfilesRequest,\n} from '../../squeakclient/requests';\nimport {\n  goToSqueakPage,\n} from '../../navigation/navigation';\n\nexport default function MakeSqueakDialog({\n  open,\n  handleClose,\n  replytoSqueak,\n  ...props\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [profileId, setProfileId] = useState(-1);\n  const [content, setContent] = useState('');\n  const [signingProfiles, setSigningProfiles] = useState([]);\n\n  const resetFields = () => {\n    setProfileId(-1);\n    setContent('');\n  };\n\n  const handleChange = (event) => {\n    setProfileId(event.target.value);\n  };\n\n  const handleChangeContent = (event) => {\n    setContent(event.target.value);\n  };\n\n  const handleResponse = (response) => {\n    goToSqueakPage(history, response.getSqueakHash());\n  };\n\n  const handleErr = (err) => {\n    alert(`Error making squeak: ${err}`);\n  };\n\n  const createSqueak = (profileId, content, replyto) => {\n    makeSqueakRequest(profileId, content, replyto, handleResponse, handleErr);\n  };\n  const loadSigningProfiles = () => {\n    getSigningProfilesRequest(setSigningProfiles);\n  };\n\n  // useEffect(() => {\n  //   loadSigningProfiles()\n  // }, []);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log('profileId:', profileId);\n    console.log('content:', content);\n    const replyto = (replytoSqueak ? replytoSqueak.getSqueakHash() : null);\n    console.log('replyto:', replyto);\n    if (profileId === -1) {\n      alert('Signing profile must be selected.');\n      return;\n    }\n    if (!content) {\n      alert('Content cannot be empty.');\n      return;\n    }\n    createSqueak(profileId, content, replyto);\n    handleClose();\n  }\n\n  function load(event) {\n    loadSigningProfiles();\n  }\n\n  function cancel(event) {\n    event.stopPropagation();\n    handleClose();\n  }\n\n  function ignore(event) {\n    event.stopPropagation();\n  }\n\n  function ReplySqueakContent() {\n    return (\n      <>\n        <SqueakThreadItem\n          hash={replytoSqueak.getSqueakHash()}\n          squeak={replytoSqueak}\n        />\n      </>\n    );\n  }\n\n  function MakeSelectSigningProfile() {\n    return (\n      <FormControl className={classes.formControl} required style={{ minWidth: 120 }}>\n        <InputLabel id=\"demo-simple-select-label\">Signing Profile</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={profileId}\n          onChange={handleChange}\n        >\n          {signingProfiles.map((p) => <MenuItem key={p.getProfileId()} value={p.getProfileId()}>{p.getProfileName()}</MenuItem>)}\n        </Select>\n      </FormControl>\n    );\n  }\n\n  function MakeSqueakContentInput() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Squeak content\"\n        placeholder=\"Enter squeak content here...\"\n        required\n        autoFocus\n        value={content}\n        onChange={handleChangeContent}\n        multiline\n        rows={8}\n        fullWidth\n        inputProps={{ maxLength: 280 }}\n      />\n    );\n  }\n\n  function MakeCancelButton() {\n    return (\n      <Button\n        onClick={cancel}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function MakeSqueakButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Make Squeak\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onRendered={load} onEnter={resetFields} onClose={cancel} onClick={ignore} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Make Squeak</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          {replytoSqueak\n            ? ReplySqueakContent() : <></>}\n          {MakeSelectSigningProfile()}\n          {MakeSqueakContentInput()}\n        </DialogContent>\n        <DialogActions>\n          {MakeCancelButton()}\n          {MakeSqueakButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  oppositeContent: {\n    // TODO: adjust this value accordingly\n    flex: 0.0,\n    padding: 0,\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  large: {\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n  },\n}));\n","function getImageSrcString(imageBase64) {\n  return `data:image/jpeg;base64,${imageBase64}`;\n}\n\nexport function getProfileImageSrcString(squeakProfile) {\n  const profileImage = squeakProfile.getProfileImage();\n  return getImageSrcString(profileImage);\n}\n","import React from 'react';\n\nimport HelpIcon from '@material-ui/icons/Help';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './styles';\n\nimport {\n  getProfileImageSrcString,\n} from '../../squeakimages/images';\nimport {\n  goToSqueakAddressPage,\n} from '../../navigation/navigation';\n\nexport default function SqueakUserAvatar({\n  squeakAddress,\n  squeakProfile,\n  ...props\n}) {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const onAvatarClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log('Handling avatar click...');\n    if (squeakAddress) {\n      goToSqueakAddressPage(history, squeakAddress);\n    }\n  };\n\n  function AvatarImage() {\n    return (\n      <Avatar className={classes.large} src={`${getProfileImageSrcString(squeakProfile)}`} />\n    );\n  }\n\n  return (\n    <div\n      onClick={onAvatarClick}\n      style={{ cursor: 'pointer' }}\n    >\n      {squeakProfile\n        ? AvatarImage()\n        : <HelpIcon className={classes.large} fontSize=\"large\" />}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\n\n// styles\nimport useStyles from './styles';\n\nimport SqueakThreadItem from '../SqueakThreadItem';\nimport SqueakUserAvatar from '../SqueakUserAvatar';\n\nimport {\n  getSqueakDisplayRequest,\n} from '../../squeakclient/requests';\n\nexport default function SqueakList({\n  squeaks,\n  network,\n  setSqueaksFn,\n  ...props\n}) {\n  const classes = useStyles();\n\n  function reloadSqueakItem(itemHash) {\n    // Get the new squeak.\n    getSqueakDisplayRequest(itemHash, (newSqueak) => {\n      const newSqueaks = squeaks.map((item) => {\n        // TODO: .hash or .getHash() ?\n        if (item.getSqueakHash() === itemHash) {\n          return newSqueak;\n        }\n        return item;\n      });\n      setSqueaksFn(newSqueaks);\n    });\n  }\n\n  const handleReloadSqueakItem = (itemHash) => {\n    const innerFunc = () => {\n      reloadSqueakItem(itemHash);\n    };\n    return innerFunc;\n  };\n\n  return (\n    <div>\n      {squeaks.map((squeak) => (\n        <Timeline\n          align=\"left\"\n          key={squeak.getSqueakHash()}\n        >\n\n          <TimelineItem>\n            <TimelineOppositeContent\n              className={classes.oppositeContent}\n              color=\"textSecondary\"\n            />\n            <TimelineSeparator>\n              <SqueakUserAvatar\n                squeakAddress={squeak.getAuthorAddress()}\n                squeakProfile={squeak.getAuthor()}\n              />\n            </TimelineSeparator>\n            <TimelineContent>\n              <SqueakThreadItem\n                key={squeak.getSqueakHash()}\n                hash={squeak.getSqueakHash()}\n                squeak={squeak}\n                network={network}\n                reloadSqueak={handleReloadSqueakItem(squeak.getSqueakHash())}\n                showActionBar\n              />\n            </TimelineContent>\n          </TimelineItem>\n\n        </Timeline>\n      ))}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Grid,\n  Button,\n  Fab,\n  CircularProgress,\n  CardHeader,\n  Card,\n  Box,\n} from '@material-ui/core';\n\nimport EditIcon from '@material-ui/icons/Edit';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport Paper from '@material-ui/core/Paper';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport MakeSqueakDialog from '../../components/MakeSqueakDialog';\nimport SqueakList from '../../components/SqueakList';\n\nimport {\n  getTimelineSqueakDisplaysRequest,\n  getNetworkRequest,\n  subscribeTimelineSqueakDisplaysRequest,\n} from '../../squeakclient/requests';\n\nconst SQUEAKS_PER_PAGE = 10;\n\nexport default function TimelinePage() {\n  const classes = useStyles();\n  const [squeaks, setSqueaks] = useState(null);\n  const [newSqueaks, setNewSqueaks] = useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [network, setNetwork] = useState('');\n  const [waitingForTimeline, setWaitingForTimeline] = React.useState(false);\n\n  const getSqueaks = useCallback((limit, lastEntry) => {\n    setWaitingForTimeline(true);\n    getTimelineSqueakDisplaysRequest(limit, lastEntry, handleLoadedTimeline, alertFailedRequest);\n  },\n  []);\n  const subscribeNewSqueaks = useCallback(() => subscribeTimelineSqueakDisplaysRequest(handleLoadedNewSqueak),\n    []);\n\n  const getNetwork = () => {\n    getNetworkRequest(setNetwork);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const alertFailedRequest = () => {\n    alert('Failed to load timeline.');\n  };\n\n  const handleClickRefresh = () => {\n    setSqueaks(null);\n    setNewSqueaks(null);\n    getSqueaks(SQUEAKS_PER_PAGE, null);\n  };\n\n  const handleLoadedTimeline = (loadedSqueaks) => {\n    setWaitingForTimeline(false);\n    setSqueaks((prevSqueaks) => {\n      if (!prevSqueaks) {\n        return loadedSqueaks;\n      }\n      return prevSqueaks.concat(loadedSqueaks);\n    });\n  };\n\n  const handleLoadedNewSqueak = (newSqueak) => {\n    setNewSqueaks((prevNewSqueaks) => {\n      if (!prevNewSqueaks) {\n        return [newSqueak];\n      }\n      return prevNewSqueaks.concat(newSqueak);\n    });\n  };\n\n  useEffect(() => {\n    getSqueaks(SQUEAKS_PER_PAGE, null);\n  }, [getSqueaks]);\n  useEffect(() => {\n    const stream = subscribeNewSqueaks();\n    return () => stream.cancel();\n  }, [subscribeNewSqueaks]);\n  useEffect(() => {\n    getNetwork();\n  }, []);\n\n  function NoSqueaksContent() {\n    return (\n      <Card\n        className={classes.root}\n      >\n        <CardHeader\n          subheader=\"No squeaks found in timeline. Try following your friends or add your own squeaks.\"\n        />\n      </Card>\n    );\n  }\n\n  function MakeSqueakDialogContent() {\n    return (\n      <>\n        <MakeSqueakDialog\n          open={open}\n          handleClose={handleClose}\n        />\n      </>\n    );\n  }\n\n  function SqueaksContent() {\n    return (\n      <>\n        <SqueakList\n          squeaks={squeaks}\n          network={network}\n          setSqueaksFn={setSqueaks}\n        />\n      </>\n    );\n  }\n\n  function ViewMoreSqueaksButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.wrapper}>\n            {!waitingForTimeline\n            && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={waitingForTimeline}\n              onClick={() => {\n                const latestSqueak = squeaks.slice(-1).pop();\n                getSqueaks(SQUEAKS_PER_PAGE, latestSqueak);\n              }}\n            >\n              <ReplayIcon />\n              View more squeaks\n            </Button>\n            )}\n            {waitingForTimeline && <CircularProgress size={48} className={classes.buttonProgress} />}\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function GridContent() {\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={9}>\n          {squeaks\n            && (\n            <Paper className={classes.paper}>\n              {(squeaks.length > 0)\n                ? SqueaksContent()\n                : NoSqueaksContent()}\n            </Paper>\n            )}\n          {ViewMoreSqueaksButton()}\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <Paper className={classes.paper} />\n        </Grid>\n      </Grid>\n    );\n  }\n\n  function MakeSqueakContent() {\n    return (\n      <>\n        <Fab color=\"secondary\" aria-label=\"edit\" className={classes.fab} onClick={handleClickOpen}>\n          <EditIcon />\n        </Fab>\n        {MakeSqueakDialogContent()}\n      </>\n    );\n  }\n\n  function LoadNewSqueaksContent() {\n    return (\n      <>\n        <Box\n          display=\"flex\"\n          width={600}\n          height={0}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Fab variant=\"extended\" color=\"secondary\" aria-label=\"edit\" className={classes.refreshFab} onClick={handleClickRefresh}>\n            <RefreshIcon />\n            Refresh (\n            {newSqueaks.length}\n            {' '}\n            new squeaks)\n          </Fab>\n        </Box>\n\n      </>\n    );\n  }\n\n  return (\n    <>\n      {GridContent()}\n      {MakeSqueakContent()}\n      {(newSqueaks) && LoadNewSqueaksContent()}\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  card: {\n    minHeight: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  visitsNumberContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexGrow: 1,\n    paddingBottom: theme.spacing(1),\n  },\n  progressSection: {\n    marginBottom: theme.spacing(1),\n  },\n  progressTitle: {\n    marginBottom: theme.spacing(2),\n  },\n  progress: {\n    marginBottom: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  pieChartLegendWrapper: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    marginRight: theme.spacing(1),\n  },\n  legendItemContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: theme.spacing(1),\n  },\n  fullHeightBody: {\n    display: 'flex',\n    flexGrow: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n  },\n  tableWidget: {\n    overflowX: 'auto',\n  },\n  progressBar: {\n    backgroundColor: theme.palette.warning.main,\n  },\n  performanceLegendWrapper: {\n    display: 'flex',\n    flexGrow: 1,\n    alignItems: 'center',\n    marginBottom: theme.spacing(1),\n  },\n  legendElement: {\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: theme.spacing(2),\n  },\n  legendElementText: {\n    marginLeft: theme.spacing(1),\n  },\n  serverOverviewElement: {\n    display: 'flex',\n    alignItems: 'center',\n    maxWidth: '100%',\n  },\n  serverOverviewElementText: {\n    minWidth: 145,\n    paddingRight: theme.spacing(2),\n  },\n  serverOverviewElementChartWrapper: {\n    width: '100%',\n  },\n  mainChartBody: {\n    overflowX: 'auto',\n  },\n  mainChartHeader: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    [theme.breakpoints.only('xs')]: {\n      flexWrap: 'wrap',\n    },\n  },\n  mainChartHeaderLabels: {\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.only('xs')]: {\n      order: 3,\n      width: '100%',\n      justifyContent: 'center',\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(2),\n    },\n  },\n  mainChartHeaderLabel: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: theme.spacing(3),\n  },\n  mainChartSelectRoot: {\n    borderColor: `${theme.palette.text.hint}80 !important`,\n  },\n  mainChartSelect: {\n    padding: 10,\n    paddingRight: 25,\n  },\n  mainChartLegentElement: {\n    fontSize: '18px !important',\n    marginLeft: theme.spacing(1),\n  },\n}));\n","export default {\n  tasks: [\n    {\n      id: 0,\n      type: 'Meeting',\n      title: 'Meeting with Andrew Piker',\n      time: '9:00',\n    },\n    {\n      id: 1,\n      type: 'Call',\n      title: 'Call with HT Company',\n      time: '12:00',\n    },\n    {\n      id: 2,\n      type: 'Meeting',\n      title: 'Meeting with Zoe Alison',\n      time: '14:00',\n    },\n    {\n      id: 3,\n      type: 'Interview',\n      title: 'Interview with HR',\n      time: '15:00',\n    },\n  ],\n  bigStat: [\n    {\n      product: 'Light Blue',\n      total: {\n        monthly: 4232,\n        weekly: 1465,\n        daily: 199,\n        percent: { value: 3.7, profit: false },\n      },\n      color: 'primary',\n      registrations: {\n        monthly: { value: 830, profit: false },\n        weekly: { value: 215, profit: true },\n        daily: { value: 33, profit: true },\n      },\n      bounce: {\n        monthly: { value: 4.5, profit: false },\n        weekly: { value: 3, profit: true },\n        daily: { value: 3.25, profit: true },\n      },\n    },\n    {\n      product: 'Sing App',\n      total: {\n        monthly: 754,\n        weekly: 180,\n        daily: 27,\n        percent: { value: 2.5, profit: true },\n      },\n      color: 'warning',\n      registrations: {\n        monthly: { value: 32, profit: true },\n        weekly: { value: 8, profit: true },\n        daily: { value: 2, profit: false },\n      },\n      bounce: {\n        monthly: { value: 2.5, profit: true },\n        weekly: { value: 4, profit: false },\n        daily: { value: 4.5, profit: false },\n      },\n    },\n    {\n      product: 'RNS',\n      total: {\n        monthly: 1025,\n        weekly: 301,\n        daily: 44,\n        percent: { value: 3.1, profit: true },\n      },\n      color: 'secondary',\n      registrations: {\n        monthly: { value: 230, profit: true },\n        weekly: { value: 58, profit: false },\n        daily: { value: 15, profit: false },\n      },\n      bounce: {\n        monthly: { value: 21.5, profit: false },\n        weekly: { value: 19.35, profit: false },\n        daily: { value: 10.1, profit: true },\n      },\n    },\n  ],\n  notifications: [\n    {\n      id: 0,\n      icon: 'thumbs-up',\n      color: 'primary',\n      content:\n        'Ken <span className=\"fw-semi-bold\">accepts</span> your invitation',\n    },\n    {\n      id: 1,\n      icon: 'file',\n      color: 'success',\n      content: 'Report from LT Company',\n    },\n    {\n      id: 2,\n      icon: 'envelope',\n      color: 'danger',\n      content: '4 <span className=\"fw-semi-bold\">Private</span> Mails',\n    },\n    {\n      id: 3,\n      icon: 'comment',\n      color: 'success',\n      content: '3 <span className=\"fw-semi-bold\">Comments</span> to your Post',\n    },\n    {\n      id: 4,\n      icon: 'cog',\n      color: 'light',\n      content: 'New <span className=\"fw-semi-bold\">Version</span> of RNS app',\n    },\n    {\n      id: 5,\n      icon: 'bell',\n      color: 'info',\n      content:\n        '15 <span className=\"fw-semi-bold\">Notifications</span> from Social Apps',\n    },\n  ],\n  table: [\n    {\n      id: 0,\n      name: 'Mark Otto',\n      email: 'ottoto@wxample.com',\n      product: 'ON the Road',\n      price: '$25 224.2',\n      date: '11 May 2017',\n      city: 'Otsego',\n      status: 'Sent',\n    },\n    {\n      id: 1,\n      name: 'Jacob Thornton',\n      email: 'thornton@wxample.com',\n      product: 'HP Core i7',\n      price: '$1 254.2',\n      date: '4 Jun 2017',\n      city: 'Fivepointville',\n      status: 'Sent',\n    },\n    {\n      id: 2,\n      name: 'Larry the Bird',\n      email: 'bird@wxample.com',\n      product: 'Air Pro',\n      price: '$1 570.0',\n      date: '27 Aug 2017',\n      city: 'Leadville North',\n      status: 'Pending',\n    },\n    {\n      id: 3,\n      name: 'Joseph May',\n      email: 'josephmay@wxample.com',\n      product: 'Version Control',\n      price: '$5 224.5',\n      date: '19 Feb 2018',\n      city: 'Seaforth',\n      status: 'Declined',\n    },\n    {\n      id: 4,\n      name: 'Peter Horadnia',\n      email: 'horadnia@wxample.com',\n      product: \"Let's Dance\",\n      price: '$43 594.7',\n      date: '1 Mar 2018',\n      city: 'Hanoverton',\n      status: 'Sent',\n    },\n  ],\n};\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  pageTitleContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: theme.spacing(4),\n    marginTop: theme.spacing(5),\n  },\n  typo: {\n    color: theme.palette.text.hint,\n  },\n  button: {\n    boxShadow: theme.customShadows.widget,\n    textTransform: 'none',\n    '&:active': {\n      boxShadow: theme.customShadows.widgetWide,\n    },\n  },\n}));\n","import React from 'react';\nimport { Button } from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport { Typography } from '../Wrappers';\n\nexport default function PageTitle(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.pageTitleContainer}>\n      <Typography className={classes.typo} variant=\"h1\" size=\"sm\">\n        {props.title}\n      </Typography>\n      {props.button && (\n        <Button\n          classes={{ root: classes.button }}\n          variant=\"contained\"\n          size=\"large\"\n          color=\"secondary\"\n        >\n          {props.button}\n        </Button>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n} from '@material-ui/core';\n\n// components\nimport { Button } from '../../../../components/Wrappers';\n\nconst states = {\n  sent: 'success',\n  pending: 'warning',\n  declined: 'secondary',\n};\n\nexport default function TableComponent({ data }) {\n  const keys = Object.keys(data[0]).map((i) => i.toUpperCase());\n  keys.shift(); // delete \"id\" key\n\n  return (\n    <Table className=\"mb-0\">\n      <TableHead>\n        <TableRow>\n          {keys.map((key) => (\n            <TableCell key={key}>{key}</TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {data.map(({\n          id, name, email, product, price, date, city, status,\n        }) => (\n          <TableRow key={id}>\n            <TableCell className=\"pl-3 fw-normal\">{name}</TableCell>\n            <TableCell>{email}</TableCell>\n            <TableCell>{product}</TableCell>\n            <TableCell>{price}</TableCell>\n            <TableCell>{date}</TableCell>\n            <TableCell>{city}</TableCell>\n            <TableCell>\n              <Button\n                color={states[status.toLowerCase()]}\n                size=\"small\"\n                className=\"px-2\"\n                variant=\"contained\"\n              >\n                {status}\n              </Button>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  title: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: theme.spacing(1),\n  },\n  bottomStatsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: theme.spacing(1) * -2,\n    marginTop: theme.spacing(1),\n  },\n  statCell: {\n    padding: theme.spacing(2),\n  },\n  totalValueContainer: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    justifyContent: 'space-between',\n  },\n  totalValue: {\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  profitArrow: {\n    transform: 'rotate(-45deg)',\n    fill: theme.palette.success.main,\n  },\n  profitArrowDanger: {\n    transform: 'rotate(45deg)',\n    fill: theme.palette.secondary.main,\n  },\n  selectInput: {\n    padding: 10,\n    paddingRight: 25,\n    '&:focus': {\n      backgroundColor: 'white',\n    },\n  },\n}));\n","import React, { useState } from 'react';\nimport {\n  Grid, Select, MenuItem, Input,\n} from '@material-ui/core';\nimport { ArrowForward as ArrowForwardIcon } from '@material-ui/icons';\nimport { useTheme } from '@material-ui/styles';\nimport { BarChart, Bar } from 'recharts';\nimport classnames from 'classnames';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport Widget from '../../../../components/Widget';\nimport { Typography } from '../../../../components/Wrappers';\n\nexport default function BigStat(props) {\n  const {\n    product, total, color, registrations, bounce,\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // local\n  const [value, setValue] = useState('daily');\n\n  return (\n    <Widget\n      header={(\n        <div className={classes.title}>\n          <Typography variant=\"h5\">{product}</Typography>\n\n          <Select\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n            input={(\n              <Input\n                disableUnderline\n                classes={{ input: classes.selectInput }}\n              />\n            )}\n            className={classes.select}\n          >\n            <MenuItem value=\"daily\">Daily</MenuItem>\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n          </Select>\n        </div>\n      )}\n      upperTitle\n    >\n      <div className={classes.totalValueContainer}>\n        <div className={classes.totalValue}>\n          <Typography size=\"xxl\" color=\"text\" colorBrightness=\"secondary\">\n            {total[value]}\n          </Typography>\n          <Typography color={total.percent.profit ? 'success' : 'secondary'}>\n            &nbsp;\n            {total.percent.profit ? '+' : '-'}\n            {total.percent.value}\n            %\n          </Typography>\n        </div>\n        <BarChart width={150} height={70} data={getRandomData()}>\n          <Bar\n            dataKey=\"value\"\n            fill={theme.palette[color].main}\n            radius={10}\n            barSize={10}\n          />\n        </BarChart>\n      </div>\n      <div className={classes.bottomStatsContainer}>\n        <div className={classnames(classes.statCell, classes.borderRight)}>\n          <Grid container alignItems=\"center\">\n            <Typography variant=\"h6\">{registrations[value].value}</Typography>\n            <ArrowForwardIcon\n              className={classnames(classes.profitArrow, {\n                [!registrations[value].profit]: classes.profitArrowDanger,\n              })}\n            />\n          </Grid>\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n            Registrations\n          </Typography>\n        </div>\n        <div className={classes.statCell}>\n          <Grid container alignItems=\"center\">\n            <Typography variant=\"h6\">\n              {bounce[value].value}\n              %\n            </Typography>\n            <ArrowForwardIcon\n              className={classnames(classes.profitArrow, {\n                [!registrations[value].profit]: classes.profitArrowDanger,\n              })}\n            />\n          </Grid>\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n            Bounce Rate\n          </Typography>\n        </div>\n        <div className={classnames(classes.statCell, classes.borderRight)}>\n          <Grid container alignItems=\"center\">\n            <Typography variant=\"h6\">\n              {registrations[value].value * 10}\n            </Typography>\n            <ArrowForwardIcon\n              className={classnames(classes.profitArrow, {\n                [classes.profitArrowDanger]: !registrations[value].profit,\n              })}\n            />\n          </Grid>\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n            Views\n          </Typography>\n        </div>\n      </div>\n    </Widget>\n  );\n}\n\n// #######################################################################\n\nfunction getRandomData() {\n  return Array(7)\n    .fill()\n    .map(() => ({ value: Math.floor(Math.random() * 10) + 1 }));\n}\n","import React, { useState } from 'react';\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/styles';\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from 'recharts';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport mock from './mock';\nimport Widget from '../../components/Widget';\nimport PageTitle from '../../components/PageTitle';\nimport { Typography } from '../../components/Wrappers';\nimport Dot from '../../components/Sidebar/components/Dot';\nimport Table from './components/Table/Table';\nimport BigStat from './components/BigStat/BigStat';\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: 'Group A', value: 400, color: 'primary' },\n  { name: 'Group B', value: 300, color: 'secondary' },\n  { name: 'Group C', value: 300, color: 'warning' },\n  { name: 'Group D', value: 200, color: 'success' },\n];\n\nexport default function Dashboard(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // local\n  const [mainChartState, setMainChartState] = useState('monthly');\n\n  return (\n    <>\n      <PageTitle title=\"Dashboard\" button=\"Latest Reports\" />\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Visits Today\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Typography size=\"xl\" weight=\"medium\">\n                12, 678\n              </Typography>\n              <LineChart\n                width={55}\n                height={30}\n                data={[\n                  { value: 10 },\n                  { value: 15 },\n                  { value: 10 },\n                  { value: 17 },\n                  { value: 18 },\n                ]}\n                margin={{ left: theme.spacing(2) }}\n              >\n                <Line\n                  type=\"natural\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.success.main}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  Registrations\n                </Typography>\n                <Typography size=\"md\">860</Typography>\n              </Grid>\n              <Grid item>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  Sign Out\n                </Typography>\n                <Typography size=\"md\">32</Typography>\n              </Grid>\n              <Grid item>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  Rate\n                </Typography>\n                <Typography size=\"md\">3.25%</Typography>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"App Performance\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Integration\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  SDK\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Integration\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={30}\n                classes={{ barColorPrimary: classes.progressBar }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                SDK\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={55}\n                classes={{ barColorPrimary: classes.progressBar }}\n                className={classes.progress}\n              />\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Server Overview\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                60% / 37°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.secondary.main}\n                      fill={theme.palette.secondary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                54% / 31°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.primary.main}\n                      fill={theme.palette.primary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                57% / 21°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.warning.main}\n                      fill={theme.palette.warning.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart margin={{ left: theme.spacing(2) }}>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={45}\n                      outerRadius={60}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }, index) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: 'nowrap' }}>\n                        &nbsp;\n                        {name}\n&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;\n                        {value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={(\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Daily Line Chart\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Tablet\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Mobile\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Desktop\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={(e) => setMainChartState(e.target.value)}\n                  input={(\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  )}\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Daily</MenuItem>\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\n                </Select>\n              </div>\n            )}\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{\n                  top: 0, right: -15, left: -15, bottom: 0,\n                }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: `${theme.palette.text.hint}80`, fontSize: 14 }}\n                  stroke={`${theme.palette.text.hint}80`}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={(i) => i + 1}\n                  tick={{ fill: `${theme.palette.text.hint}80`, fontSize: 14 }}\n                  stroke={`${theme.palette.text.hint}80`}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        {mock.bigStat.map((stat) => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))}\n        <Grid item xs={12}>\n          <Widget\n            title=\"Support Requests\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  const array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min\n      || randomValue >= max\n      || (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  const resultArray = [];\n  const tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  const desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  const mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  createContactProfileRequest,\n} from '../../squeakclient/requests';\nimport {\n  goToProfilePage,\n} from '../../navigation/navigation';\n\nexport default function CreateContactProfileDialog({\n  open,\n  handleClose,\n  initialAddress = '',\n  ...props\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [profileName, setProfileName] = useState('');\n  const [address, setAddress] = useState(initialAddress);\n\n  const resetFields = () => {\n    setProfileName('');\n    setAddress(initialAddress);\n  };\n\n  const handleChangeProfileName = (event) => {\n    setProfileName(event.target.value);\n  };\n\n  const handleChangeAddress = (event) => {\n    setAddress(event.target.value);\n  };\n\n  const handleResponse = (response) => {\n    goToProfilePage(history, response.getProfileId());\n  };\n\n  const handleErr = (err) => {\n    alert(`Error creating contact profile: ${err}`);\n  };\n\n  const createContactProfile = (profileName, squeakAddress) => {\n    createContactProfileRequest(profileName, squeakAddress, handleResponse, handleErr);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log('profileName:', profileName);\n    console.log('address:', address);\n    if (!profileName) {\n      alert('Profile Name cannot be empty.');\n      return;\n    }\n    if (!address) {\n      alert('Address Name cannot be empty.');\n      return;\n    }\n    createContactProfile(profileName, address);\n    handleClose();\n  }\n\n  function CreateContactProfileNameInput() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Profile Name\"\n        required\n        autoFocus\n        value={profileName}\n        onChange={handleChangeProfileName}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n      />\n    );\n  }\n\n  function CreateContactAddressInput() {\n    return (\n      <TextField\n        required\n        id=\"standard-textarea\"\n        label=\"Address\"\n        value={address}\n        onChange={handleChangeAddress}\n        inputProps={{ maxLength: 35 }}\n      />\n    );\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function CreateContactProfilButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Create Contact Profile\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Create Contact Profile</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          {CreateContactProfileNameInput()}\n          {CreateContactAddressInput()}\n        </DialogContent>\n        <DialogActions>\n          {CancelButton()}\n          {CreateContactProfilButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\nimport { green } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  dashedBorder: {\n    border: '1px dashed',\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  },\n  refreshFab: {\n    position: 'fixed',\n    top: theme.spacing(14),\n    margin: 'auto',\n    justifyContent: 'center',\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n  Grid,\n  Button,\n  Box,\n  CircularProgress,\n} from '@material-ui/core';\n\n// styles\n\n// components\n\nimport Paper from '@material-ui/core/Paper';\n\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ReplayIcon from '@material-ui/icons/Replay';\n\nimport CreateContactProfileDialog from '../../components/CreateContactProfileDialog';\nimport SqueakList from '../../components/SqueakList';\nimport useStyles from './styles';\n\nimport {\n  getSqueakProfileByAddressRequest,\n  getAddressSqueakDisplaysRequest,\n  getNetworkRequest,\n  subscribeAddressSqueakDisplaysRequest,\n  downloadAddressSqueaksRequest,\n} from '../../squeakclient/requests';\nimport {\n  goToProfilePage,\n} from '../../navigation/navigation';\n\nconst SQUEAKS_PER_PAGE = 10;\n\nexport default function SqueakAddressPage() {\n  const classes = useStyles();\n  const history = useHistory();\n  const { address } = useParams();\n  const [squeakProfile, setSqueakProfile] = useState(null);\n  const [squeaks, setSqueaks] = useState([]);\n  const [createContactProfileDialogOpen, setCreateContactProfileDialogOpen] = useState(false);\n  const [network, setNetwork] = useState('');\n  const [waitingForSqueaks, setWaitingForSqueaks] = useState(false);\n\n  const getSqueakProfile = (address) => {\n    getSqueakProfileByAddressRequest(address, setSqueakProfile);\n  };\n  const getSqueaks = useCallback((address, limit, lastEntry) => {\n    setWaitingForSqueaks(true);\n    getAddressSqueakDisplaysRequest(address, limit, lastEntry, handleLoadedAddressSqueaks);\n  },\n  []);\n  const subscribeSqueaks = (address) => subscribeAddressSqueakDisplaysRequest(address, (resp) => {\n    setSqueaks((prevSqueaks) => [resp].concat(prevSqueaks));\n  });\n  const getNetwork = () => {\n    getNetworkRequest(setNetwork);\n  };\n\n  const handleLoadedAddressSqueaks = (loadedAddressSqueaks) => {\n    setWaitingForSqueaks(false);\n    setSqueaks((prevSqueaks) => {\n      if (!prevSqueaks) {\n        return loadedAddressSqueaks;\n      }\n      return prevSqueaks.concat(loadedAddressSqueaks);\n    });\n  };\n\n  const handleClickOpenCreateContactProfileDialog = () => {\n    setCreateContactProfileDialogOpen(true);\n  };\n\n  const handleCloseCreateContactProfileDialog = () => {\n    setCreateContactProfileDialogOpen(false);\n  };\n\n  const onDownloadSqueaksClick = (event) => {\n    event.preventDefault();\n    console.log('Handling download address squeaks click...');\n    downloadAddressSqueaksRequest(address, (response) => {\n      // Do nothing.\n    });\n  };\n\n  useEffect(() => {\n    getSqueakProfile(address);\n  }, [address]);\n  useEffect(() => {\n    getSqueaks(address, SQUEAKS_PER_PAGE, null);\n  }, [getSqueaks, address]);\n  useEffect(() => {\n    const stream = subscribeSqueaks(address);\n    return () => stream.cancel();\n  }, [address]);\n  useEffect(() => {\n    getNetwork();\n  }, []);\n\n  function NoProfileContent() {\n    return (\n      <div>\n        No profile for address.\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            handleClickOpenCreateContactProfileDialog();\n          }}\n        >\n          Create Profile\n        </Button>\n      </div>\n    );\n  }\n\n  function ProfileContent() {\n    return (\n      <div className={classes.root}>\n        Profile:\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            goToProfilePage(history, squeakProfile.getProfileId());\n          }}\n        >\n          {squeakProfile.getProfileName()}\n        </Button>\n      </div>\n    );\n  }\n\n  function NoSqueaksContent() {\n    return (\n      <div>\n        Unable to load squeaks.\n      </div>\n    );\n  }\n\n  function SqueaksContent() {\n    return (\n      <SqueakList\n        squeaks={squeaks}\n        network={network}\n        setSqueaksFn={setSqueaks}\n      />\n    );\n  }\n\n  function CreateContactProfileDialogContent() {\n    return (\n      <>\n        <CreateContactProfileDialog\n          open={createContactProfileDialogOpen}\n          handleClose={handleCloseCreateContactProfileDialog}\n          initialAddress={address}\n        />\n      </>\n    );\n  }\n\n  function GridContent() {\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={9}>\n          <Paper className={classes.paper}>\n            {(squeaks)\n              ? SqueaksContent()\n              : NoSqueaksContent()}\n          </Paper>\n          {ViewMoreSqueaksButton()}\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <Paper className={classes.paper} />\n        </Grid>\n      </Grid>\n    );\n  }\n\n  function DownloadSqueaksButtonContent() {\n    return (\n      <>\n        <Box p={1}>\n          <Button\n            variant=\"contained\"\n            onClick={onDownloadSqueaksClick}\n          >\n            <GetAppIcon />\n            Download squeaks\n          </Button>\n        </Box>\n      </>\n    );\n  }\n\n  function SqueakProfileContent() {\n    return (\n      <>\n        {squeakProfile\n          ? ProfileContent()\n          : NoProfileContent()}\n        {CreateContactProfileDialogContent()}\n      </>\n\n    );\n  }\n\n  function AddressSqueaksContent() {\n    return (\n      <>\n        {DownloadSqueaksButtonContent()}\n        {GridContent()}\n        {waitingForSqueaks && <CircularProgress size={24} className={classes.buttonProgress} />}\n      </>\n\n    );\n  }\n\n  function ViewMoreSqueaksButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.wrapper}>\n            {!waitingForSqueaks\n            && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={waitingForSqueaks}\n              onClick={() => {\n                const latestSqueak = squeaks.slice(-1).pop();\n                getSqueaks(address, SQUEAKS_PER_PAGE, latestSqueak);\n              }}\n            >\n              <ReplayIcon />\n              View more squeaks\n            </Button>\n            )}\n            {waitingForSqueaks && <CircularProgress size={48} className={classes.buttonProgress} />}\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {SqueakProfileContent()}\n      {AddressSqueaksContent()}\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  dashedBorder: {\n    border: '1px dashed',\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  oppositeContent: {\n  // TODO: adjust this value accordingly\n    flex: 0.0,\n    padding: 0,\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    padding: '6px 12px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\nimport { green } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n","import React from 'react';\nimport {\n  Typography,\n  Grid,\n  Box,\n  Link,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\n// styles\nimport moment from 'moment';\n\nimport {\n  goToPeerAddressPage,\n  goToLightningNodePage,\n} from '../../navigation/navigation';\n\nexport default function BuyOfferDetailItem({\n  offer,\n  ...props\n}) {\n  const history = useHistory();\n\n  const onPeerClick = (event) => {\n    event.preventDefault();\n    goToPeerAddressPage(\n      history,\n      offer.getPeerAddress().getHost(),\n      offer.getPeerAddress().getPort(),\n    );\n  };\n\n  const onLightningNodeClick = (event) => {\n    event.preventDefault();\n    goToLightningNodePage(\n      history,\n      offer.getNodePubkey(),\n      offer.getNodeHost(),\n      offer.getNodePort(),\n    );\n  };\n\n  function OfferContent() {\n    return (\n      <Typography\n        size=\"md\"\n      >\n        Squeak hash:\n        {' '}\n        {offer.getSqueakHash()}\n        Price:\n        {' '}\n        {offer.getPriceMsat() / 1000}\n        {' '}\n        sats\n      </Typography>\n    );\n  }\n\n  function PeerInfoContent() {\n    console.log(offer);\n    const peerAddress = offer.getPeerAddress();\n    const peerAddressText = `${peerAddress.getHost()}:${peerAddress.getPort()}`;\n    return (\n      <Box>\n        <Typography\n          size=\"md\"\n        >\n          Peer:\n          {' '}\n          <Link href=\"#\" onClick={onPeerClick}>\n            {peerAddressText}\n          </Link>\n        </Typography>\n      </Box>\n    );\n  }\n\n  function ExpiresInfoContent(offer) {\n    const invoiceTime = offer.getInvoiceTimestamp();\n    const invoiceExpiry = offer.getInvoiceExpiry();\n    const expireTime = invoiceTime + invoiceExpiry;\n    return (\n      <Box>\n        <Typography\n          size=\"md\"\n        >\n          Expires:\n          {' '}\n          {moment(expireTime * 1000).fromNow()}\n        </Typography>\n      </Box>\n    );\n  }\n\n  function LightningPeerInfoContent(offer) {\n    const lightningAddress = `${offer.getNodeHost()}:${offer.getNodePort()}`;\n    const lightningPubkey = offer.getNodePubkey();\n    return (\n      <Box>\n        <Typography\n          size=\"md\"\n        >\n          Lightning Node:\n          {' '}\n          <Link href=\"#\" onClick={onLightningNodeClick}>\n            {`${lightningPubkey}@${lightningAddress}`}\n          </Link>\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <Box\n        p={1}\n        m={0}\n        style={{ backgroundColor: 'white' }}\n      >\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item>\n            {OfferContent()}\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item>\n            {PeerInfoContent()}\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item>\n            {LightningPeerInfoContent(offer)}\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item>\n            {ExpiresInfoContent(offer)}\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  );\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  MenuItem,\n  Typography,\n  Box,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  CircularProgress,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\nimport BuyOfferDetailItem from '../BuyOfferDetailItem';\n\nimport {\n  downloadOffersRequest,\n  getBuyOffersRequest,\n  subscribeBuyOffersRequest,\n  payOfferRequest,\n} from '../../squeakclient/requests';\n\nexport default function BuySqueakDialog({\n  open,\n  handleClose,\n  handlePaymentComplete,\n  hash,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const [selectedOfferId, setSelectedOfferId] = useState('');\n  const [offers, setOffers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const resetFields = () => {\n    setSelectedOfferId('');\n  };\n\n  const handleChange = (event) => {\n    setSelectedOfferId(event.target.value);\n  };\n\n  // const payOffer = (offerID) => {\n  //   alert('Pay offer ID here: ' + offerID);\n  //   pay(offer.getOfferId());\n  // };\n\n  const loadOffers = useCallback(() => {\n    getBuyOffersRequest(hash, setOffers);\n  },\n  [hash, setOffers]);\n  const subscribeOffers = useCallback(() => subscribeBuyOffersRequest(hash, (offer) => {\n    setOffers((prevOffers) => prevOffers.concat([offer]));\n  }),\n  [hash, setOffers]);\n  const downloadOffers = () => {\n    console.log(`downloadOffersRequest with hash: ${hash}`);\n    downloadOffersRequest(hash, (response) => {\n      // Do nothing.\n    });\n  };\n\n  const handlePayResponse = (response) => {\n    handlePaymentComplete();\n    setLoading(false);\n    handleClose();\n  };\n\n  const handlePayErr = (err) => {\n    alert(`Payment failure: ${err.message}`);\n    setLoading(false);\n    handleClose();\n  };\n\n  const pay = (offerId) => {\n    setLoading(true);\n    payOfferRequest(offerId, handlePayResponse, handlePayErr);\n  };\n\n  const onDownloadClick = (event) => {\n    event.preventDefault();\n    console.log('Handling download click...');\n    console.log(`downloadOffersRequest with hash: ${hash}`);\n    downloadOffers();\n  };\n\n  const getSelectedOffer = () => {\n    let offer;\n    for (offer of offers) {\n      if (offer.getOfferId() === selectedOfferId) {\n        return offer;\n      }\n    }\n    return null;\n  };\n\n  const getPeerAddressText = (offer) => {\n    const peerAddress = offer.getPeerAddress();\n    return `${peerAddress.getHost()}:${peerAddress.getPort()}`;\n  };\n\n  useEffect(() => {\n    loadOffers();\n  }, [loadOffers]);\n  useEffect(() => {\n    const stream = subscribeOffers();\n    return () => stream.cancel();\n  }, [subscribeOffers, hash]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log('selectedOfferId:', selectedOfferId);\n    if (selectedOfferId === '') {\n      alert('Offer must be selected.');\n      return;\n    }\n    pay(selectedOfferId);\n    // handleClose();\n  }\n\n  function load(event) {\n    // loadOffers();\n    // subscribeOffers();\n    downloadOffers();\n  }\n\n  function cancel(event) {\n    event.stopPropagation();\n    handleClose();\n  }\n\n  function ignore(event) {\n    event.stopPropagation();\n  }\n\n  function SelectOfferContent() {\n    return (\n      <FormControl className={classes.formControl} required style={{ minWidth: 120 }}>\n        <InputLabel id=\"offer-select-label\">Offer</InputLabel>\n        <Select\n          labelId=\"offer-select-label\"\n          id=\"offer-select\"\n          value={selectedOfferId}\n          onChange={handleChange}\n        >\n          {offers.map((offer) => (\n            <MenuItem key={offer.getOfferId()} value={offer.getOfferId()}>\n              {getPeerAddressText(offer)}\n              {' '}\n              (\n              {offer.getPriceMsat() / 1000}\n              {' '}\n              sats)\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    );\n  }\n\n  function LoadOffersButton() {\n    return (\n      <Button\n        variant=\"contained\"\n        onClick={onDownloadClick}\n      >\n        Re-download offers\n      </Button>\n    );\n  }\n\n  function SelectedOfferContentInput() {\n    const selectedOffer = getSelectedOffer();\n    if (selectedOffer == null) {\n      return <></>;\n    }\n    return (\n      <Box\n        p={1}\n      >\n        <BuyOfferDetailItem\n          offer={selectedOffer}\n        />\n      </Box>\n    );\n  }\n\n  function CancelBuyButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function BuySqueakButton() {\n    return (\n      <div className={classes.wrapper}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={loading}\n        >\n          Buy Squeak\n        </Button>\n        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n      </div>\n    );\n  }\n\n  return (\n    <Dialog open={open} onRendered={load} onEnter={resetFields} onClose={cancel} onClick={ignore} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">\n        Buy Squeak for hash\n        {hash}\n      </DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          <Box>\n            {LoadOffersButton()}\n          </Box>\n          <Box>\n            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n              {offers.length}\n              {' '}\n              offers\n            </Typography>\n          </Box>\n          <Box>\n            {SelectOfferContent()}\n          </Box>\n          {SelectedOfferContentInput()}\n        </DialogContent>\n        <DialogActions>\n          {CancelBuyButton()}\n          {BuySqueakButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Paper,\n  Typography,\n  Snackbar,\n  Grid,\n  Box,\n  Link,\n  Button,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n// styles\nimport moment from 'moment';\nimport useStyles from './styles';\n\nimport BuySqueakDialog from '../BuySqueakDialog';\nimport SqueakActionBar from '../SqueakActionBar';\nimport SqueakUserAvatar from '../SqueakUserAvatar';\n\nimport {\n  downloadSqueakRequest,\n} from '../../squeakclient/requests';\n\nimport {\n  getBlockDetailUrl,\n} from '../../bitcoin/blockexplorer';\n\nimport {\n  goToSqueakAddressPage,\n} from '../../navigation/navigation';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function SqueakDetailItem({\n  hash,\n  squeak,\n  network,\n  reloadSqueak,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const [buyDialogOpen, setBuyDialogOpen] = useState(false);\n  const [unlockedSnackbarOpen, setUnlockedSnackbarOpen] = useState(false);\n\n  const blockDetailUrl = () => getBlockDetailUrl(squeak.getBlockHash(), network);\n\n  const handleClickOpenBuyDialog = () => {\n    setBuyDialogOpen(true);\n  };\n\n  const handleCloseBuyDialog = () => {\n    setBuyDialogOpen(false);\n  };\n\n  const onAddressClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log('Handling address click...');\n    if (!squeak) {\n      return;\n    }\n    goToSqueakAddressPage(history, squeak.getAuthorAddress());\n  };\n\n  const onUnlockClick = (event) => {\n    event.preventDefault();\n    console.log('Handling unlock click...');\n    if (!squeak) {\n      return;\n    }\n    handleClickOpenBuyDialog();\n  };\n\n  const onDownloadClick = (event) => {\n    event.preventDefault();\n    console.log('Handling download click...');\n    downloadSqueakRequest(hash, (response) => {\n      // TODO: Nothing for now. This will eventually show something\n      // when downloadSqueakRequest becomes a streaming method.\n      // reloadSqueak();\n    });\n  };\n\n  const handleCloseUnlockedSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setUnlockedSnackbarOpen(false);\n  };\n\n  const handlePaymentComplete = () => {\n    reloadSqueak();\n    setUnlockedSnackbarOpen(true);\n  };\n\n  function SqueakUnlockedContent() {\n    return (\n      <Typography\n        variant=\"h4\"\n        style={{ whiteSpace: 'pre-line' }}\n      >\n        {squeak.getContentStr()}\n      </Typography>\n    );\n  }\n\n  function SqueakLockedContent() {\n    return (\n      <>\n        <LockIcon />\n        <Button\n          variant=\"contained\"\n          onClick={onUnlockClick}\n        >\n          Buy to unlock\n        </Button>\n\n      </>\n    );\n  }\n\n  function SqueakMissingContent() {\n    return (\n      <>\n        <DownloadIcon />\n        <Button\n          variant=\"contained\"\n          onClick={onDownloadClick}\n        >\n          Download\n        </Button>\n      </>\n    );\n  }\n\n  function SqueakContent() {\n    if (!squeak) {\n      return (\n        <>\n          {SqueakMissingContent()}\n        </>\n      );\n    }\n    return (\n      <>\n        {squeak.getIsUnlocked()\n          ? SqueakUnlockedContent()\n          : SqueakLockedContent()}\n      </>\n    );\n  }\n\n  function SqueakLockedBackgroundColor() {\n    return { backgroundColor: 'lightgray' };\n  }\n\n  function SqueakUnlockedBackgroundColor() {\n    return { backgroundColor: 'white' };\n  }\n\n  function SqueakBackgroundColor() {\n    if (!squeak) {\n      return SqueakLockedBackgroundColor();\n    }\n    return squeak.getIsUnlocked()\n      ? SqueakUnlockedBackgroundColor()\n      : SqueakLockedBackgroundColor();\n  }\n\n  function getAddressDisplay() {\n    if (!squeak) {\n      return 'Author unknown';\n    }\n    return squeak.getIsAuthorKnown()\n      ? squeak.getAuthor().getProfileName()\n      : squeak.getAuthorAddress();\n  }\n\n  function SqueakTime() {\n    if (!squeak) {\n      return (\n        <Box color=\"secondary.main\" fontWeight=\"fontWeightBold\">\n          Unknown time\n        </Box>\n      );\n    }\n\n    return (\n      <Box color=\"secondary.main\" fontWeight=\"fontWeightBold\">\n        {moment(squeak.getBlockTime() * 1000).fromNow()}\n        <span> </span>\n        (Block\n        <Link\n          href={blockDetailUrl()}\n          target=\"_blank\"\n          rel=\"noopener\"\n          onClick={(event) => event.stopPropagation()}\n        >\n          <span> </span>\n          #\n          {squeak.getBlockHeight()}\n        </Link>\n        )\n      </Box>\n    );\n  }\n\n  function BuyDialogContent() {\n    return (\n      <>\n        <BuySqueakDialog\n          key={hash}\n          open={buyDialogOpen}\n          handleClose={handleCloseBuyDialog}\n          handlePaymentComplete={handlePaymentComplete}\n          hash={hash}\n        />\n      </>\n    );\n  }\n\n  function SqueakUnlockedActionContent() {\n    return (\n      <Snackbar open={unlockedSnackbarOpen} autoHideDuration={6000} onClose={handleCloseUnlockedSnackbar}>\n        <Alert onClose={handleCloseUnlockedSnackbar} severity=\"success\">\n          Squeak unlocked!\n        </Alert>\n      </Snackbar>\n    );\n  }\n\n  return (\n    <>\n      <Paper\n        elevation={3}\n        className={classes.paper}\n        p={1}\n        m={0}\n        style={SqueakBackgroundColor()}\n      >\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item>\n            <Box fontWeight=\"fontWeightBold\">\n              {squeak\n                ? (\n                  <SqueakUserAvatar\n                    squeakAddress={squeak.getAuthorAddress()}\n                    squeakProfile={squeak.getAuthor()}\n                  />\n                ) : (\n                  <SqueakUserAvatar\n                    squeakAddress={null}\n                    squeakProfile={null}\n                  />\n                )}\n            </Box>\n          </Grid>\n          <Grid item>\n            <Box p={2} fontWeight=\"fontWeightBold\">\n              <Link\n                href=\"#\"\n                onClick={onAddressClick}\n              >\n                <Typography\n                  variant=\"h3\"\n                  style={{ whiteSpace: 'pre-line' }}\n                >\n                  {getAddressDisplay()}\n                </Typography>\n              </Link>\n            </Box>\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item>\n            {SqueakContent()}\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item>\n            {SqueakTime()}\n          </Grid>\n        </Grid>\n        {squeak\n          && (\n          <SqueakActionBar\n            hash={hash}\n            squeak={squeak}\n            network={network}\n            reloadSqueak={reloadSqueak}\n          />\n          )}\n      </Paper>\n      {BuyDialogContent()}\n      {SqueakUnlockedActionContent()}\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  oppositeContent: {\n    // TODO: adjust this value accordingly\n    flex: 0.0,\n    padding: 0,\n  },\n}));\n","import React from 'react';\nimport {\n  Box,\n} from '@material-ui/core';\n\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\n\n// styles\nimport useStyles from './styles';\n\nimport SqueakThreadItem from '../SqueakThreadItem';\nimport SqueakUserAvatar from '../SqueakUserAvatar';\n\nimport {\n  getSqueakDisplayRequest,\n} from '../../squeakclient/requests';\n\nexport default function SqueakThread({\n  squeaks,\n  network,\n  setSqueaksFn,\n  ...props\n}) {\n  const classes = useStyles();\n\n  function reloadSqueakItem(itemHash) {\n    // Get the new squeak.\n    getSqueakDisplayRequest(itemHash, (newSqueak) => {\n      const newSqueaks = squeaks.map((item) => {\n        // TODO: .hash or .getHash() ?\n        if (item.getSqueakHash() === itemHash) {\n          return newSqueak;\n        }\n        return item;\n      });\n      setSqueaksFn(newSqueaks);\n    });\n  }\n\n  const handleReloadSqueakItem = (itemHash) => {\n    const innerFunc = () => {\n      reloadSqueakItem(itemHash);\n    };\n    return innerFunc;\n  };\n\n  const unknownAncestorHash = () => {\n    if (!squeaks) {\n      return null;\n    }\n    const oldestKnownAncestor = squeaks[0];\n    if (!oldestKnownAncestor) {\n      return null;\n    }\n    return oldestKnownAncestor.getReplyTo();\n  };\n\n  function UnkownReplyToContent() {\n    const squeakHash = unknownAncestorHash();\n    if (!squeakHash) {\n      return (\n        <></>\n      );\n    }\n    return (\n      <TimelineItem>\n        <TimelineOppositeContent\n          className={classes.oppositeContent}\n          color=\"textSecondary\"\n        />\n        <TimelineSeparator>\n          <SqueakUserAvatar\n            squeakAddress={null}\n            squeakProfile={null}\n          />\n          <TimelineConnector />\n        </TimelineSeparator>\n        <TimelineContent>\n          <SqueakThreadItem\n            hash={squeakHash}\n            key={squeakHash}\n            squeak={null}\n          />\n        </TimelineContent>\n      </TimelineItem>\n    );\n  }\n\n  return (\n    <>\n      {UnkownReplyToContent()}\n      {squeaks\n        .slice(0, -1)\n        // .reverse()\n        .map((squeak) => (\n          <TimelineItem\n            key={squeak.getSqueakHash()}\n          >\n            <TimelineOppositeContent\n              className={classes.oppositeContent}\n              color=\"textSecondary\"\n            />\n            <TimelineSeparator>\n              <SqueakUserAvatar\n                squeakAddress={squeak.getAuthorAddress()}\n                squeakProfile={squeak.getAuthor()}\n              />\n              <TimelineConnector />\n            </TimelineSeparator>\n            <TimelineContent>\n              <Box\n                key={squeak.getSqueakHash()}\n              >\n                <SqueakThreadItem\n                  hash={squeak.getSqueakHash()}\n                  key={squeak.getSqueakHash()}\n                  squeak={squeak}\n                  network={network}\n                  reloadSqueak={handleReloadSqueakItem(squeak.getSqueakHash())}\n                  showActionBar\n                />\n              </Box>\n            </TimelineContent>\n          </TimelineItem>\n        ))}\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  oppositeContent: {\n    // TODO: adjust this value accordingly\n    flex: 0.0,\n    padding: 0,\n  },\n}));\n","import React from 'react';\nimport {\n  Box,\n} from '@material-ui/core';\n\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\n\n// styles\nimport useStyles from './styles';\n\nimport SqueakThreadItem from '../SqueakThreadItem';\nimport SqueakUserAvatar from '../SqueakUserAvatar';\n\nimport {\n  getSqueakDisplayRequest,\n} from '../../squeakclient/requests';\n\nexport default function SqueakReplies({\n  squeaks,\n  network,\n  setSqueaksFn,\n  ...props\n}) {\n  const classes = useStyles();\n\n  function reloadSqueakItem(itemHash) {\n    // Get the new squeak.\n    getSqueakDisplayRequest(itemHash, (newSqueak) => {\n      const newSqueaks = squeaks.map((item) => {\n        // TODO: .hash or .getHash() ?\n        if (item.getSqueakHash() === itemHash) {\n          return newSqueak;\n        }\n        return item;\n      });\n      setSqueaksFn(newSqueaks);\n    });\n  }\n\n  const handleReloadSqueakItem = (itemHash) => {\n    const innerFunc = () => {\n      reloadSqueakItem(itemHash);\n    };\n    return innerFunc;\n  };\n\n  return (\n    <Timeline align=\"left\">\n\n      {squeaks\n        .map((squeak) => (\n          <TimelineItem\n            key={squeak.getSqueakHash()}\n          >\n            <TimelineOppositeContent\n              className={classes.oppositeContent}\n              color=\"textSecondary\"\n            />\n            <TimelineSeparator>\n              <SqueakUserAvatar\n                squeakAddress={squeak.getAuthorAddress()}\n                squeakProfile={squeak.getAuthor()}\n              />\n            </TimelineSeparator>\n            <TimelineContent>\n              <Box\n                p={1}\n                key={squeak.getSqueakHash()}\n              >\n                <SqueakThreadItem\n                  hash={squeak.getSqueakHash()}\n                  key={squeak.getSqueakHash()}\n                  squeak={squeak}\n                  network={network}\n                  reloadSqueak={handleReloadSqueakItem(squeak.getSqueakHash())}\n                  showActionBar\n                />\n              </Box>\n            </TimelineContent>\n          </TimelineItem>\n        ))}\n\n    </Timeline>\n  );\n}\n","import React, {\n  useState, useEffect, useMemo, useCallback,\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Grid,\n  Button,\n  Box,\n  CircularProgress,\n} from '@material-ui/core';\n\nimport Timeline from '@material-ui/lab/Timeline';\nimport Paper from '@material-ui/core/Paper';\n\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ReplayIcon from '@material-ui/icons/Replay';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport SqueakDetailItem from '../../components/SqueakDetailItem';\nimport SqueakThread from '../../components/SqueakThread';\nimport SqueakReplies from '../../components/SqueakReplies';\n\nimport {\n  getAncestorSqueakDisplaysRequest,\n  getReplySqueakDisplaysRequest,\n  getNetworkRequest,\n  downloadRepliesRequest,\n  subscribeReplySqueakDisplaysRequest,\n  subscribeAncestorSqueakDisplaysRequest,\n} from '../../squeakclient/requests';\n\nconst SQUEAKS_PER_PAGE = 10;\n\nexport default function SqueakPage() {\n  const classes = useStyles();\n  const { hash } = useParams();\n  const [ancestorSqueaks, setAncestorSqueaks] = useState(null);\n  const [replySqueaks, setReplySqueaks] = useState(null);\n  const [network, setNetwork] = useState('');\n  const [waitingForSqueak, setWaitingForSqueak] = useState(false);\n  const [waitingForReplySqueaks, setWaitingForReplySqueaks] = useState(false);\n\n  const getAncestorSqueaks = useCallback((hash) => {\n    setWaitingForSqueak(true);\n    getAncestorSqueakDisplaysRequest(hash, handleLoadedAncestorSqueaks);\n  },\n  []);\n  const subscribeAncestorSqueaks = (hash) => subscribeAncestorSqueakDisplaysRequest(hash, setAncestorSqueaks);\n  const getReplySqueaks = useCallback((hash, limit, lastEntry) => {\n    setWaitingForReplySqueaks(true);\n    getReplySqueakDisplaysRequest(hash, limit, lastEntry, handleLoadedReplySqueaks);\n  },\n  []);\n  const subscribeReplySqueaks = (hash) => subscribeReplySqueakDisplaysRequest(hash, (resp) => {\n    setReplySqueaks((prevReplySqueaks) => prevReplySqueaks.concat(resp));\n  });\n  const getNetwork = () => {\n    getNetworkRequest(setNetwork);\n  };\n\n  const getCurrentSqueak = () => {\n    getAncestorSqueaks(hash);\n  };\n\n  const handleLoadedAncestorSqueaks = (loadedAncestorSqueaks) => {\n    setWaitingForSqueak(false);\n    setAncestorSqueaks(loadedAncestorSqueaks);\n  };\n\n  const handleLoadedReplySqueaks = (loadedReplySqueaks) => {\n    setWaitingForReplySqueaks(false);\n    setReplySqueaks((prevSqueaks) => {\n      if (!prevSqueaks) {\n        return loadedReplySqueaks;\n      }\n      return prevSqueaks.concat(loadedReplySqueaks);\n    });\n  };\n\n  const onDownloadRepliesClick = (event) => {\n    event.preventDefault();\n    console.log('Handling download replies click...');\n    downloadRepliesRequest(hash, (response) => {\n      // Do nothing.\n    });\n  };\n\n  const calculateCurrentSqueak = (ancestorSqueaks) => {\n    if (ancestorSqueaks == null) {\n      return null;\n    } if (ancestorSqueaks.length === 0) {\n      return null;\n    }\n    return ancestorSqueaks.slice(-1)[0];\n  };\n\n  useEffect(() => {\n    setAncestorSqueaks(null); // Temporary fix until component unmounts correcyly\n    getAncestorSqueaks(hash);\n  }, [getAncestorSqueaks, hash]);\n  useEffect(() => {\n    const stream = subscribeAncestorSqueaks(hash);\n    return () => stream.cancel();\n  }, [hash]);\n  useEffect(() => {\n    setReplySqueaks(null); // Temporary fix until component unmounts correcyly\n    getReplySqueaks(hash, SQUEAKS_PER_PAGE, null);\n  }, [getReplySqueaks, hash]);\n  useEffect(() => {\n    const stream = subscribeReplySqueaks(hash);\n    return () => stream.cancel();\n  }, [hash]);\n  useEffect(() => {\n    getNetwork();\n  }, []);\n\n  const currentSqueak = useMemo(() => calculateCurrentSqueak(ancestorSqueaks), [ancestorSqueaks]);\n\n  function AncestorsContent() {\n    return (\n      <SqueakThread\n        squeaks={ancestorSqueaks}\n        network={network}\n        setSqueaksFn={setAncestorSqueaks}\n      />\n    );\n  }\n\n  function CurrentSqueakContent() {\n    return (\n      <SqueakDetailItem\n        hash={hash}\n        squeak={currentSqueak}\n        reloadSqueak={getCurrentSqueak}\n        network={network}\n      />\n    );\n  }\n\n  function RepliesContent() {\n    return (\n      <SqueakReplies\n        squeaks={replySqueaks}\n        network={network}\n        setSqueaksFn={setReplySqueaks}\n      />\n    );\n  }\n\n  function SqueakContent() {\n    return (\n      <>\n        <Timeline align=\"left\">\n          {AncestorsContent()}\n        </Timeline>\n        {CurrentSqueakContent()}\n        {DownloadRepliesButtonContent()}\n        {replySqueaks && RepliesContent()}\n        {ViewMoreSqueaksButton()}\n      </>\n    );\n  }\n\n  function GridContent() {\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={9}>\n          <Paper className={classes.paper}>\n            {ancestorSqueaks && SqueakContent()}\n          </Paper>\n          {waitingForSqueak && <CircularProgress size={48} className={classes.buttonProgress} />}\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <Paper className={classes.paper} />\n        </Grid>\n      </Grid>\n    );\n  }\n\n  function DownloadRepliesButtonContent() {\n    return (\n      <>\n        <Box p={1}>\n          <Button\n            variant=\"contained\"\n            onClick={onDownloadRepliesClick}\n          >\n            <GetAppIcon />\n            Download replies\n          </Button>\n        </Box>\n      </>\n    );\n  }\n\n  function ViewMoreSqueaksButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.wrapper}>\n            {!waitingForReplySqueaks\n            && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={waitingForReplySqueaks}\n              onClick={() => {\n                const latestSqueak = replySqueaks.slice(-1).pop();\n                getReplySqueaks(hash, SQUEAKS_PER_PAGE, latestSqueak);\n              }}\n            >\n              <ReplayIcon />\n              View more replies\n            </Button>\n            )}\n            {waitingForReplySqueaks && <CircularProgress size={48} className={classes.buttonProgress} />}\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {GridContent()}\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    padding: '6px 12px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 180,\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  deleteProfileRequest,\n} from '../../squeakclient/requests';\n\nexport default function DeleteProfileDialog({\n  open,\n  handleClose,\n  profile,\n  reloadProfile,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const deleteProfile = (profileId) => {\n    deleteProfileRequest(profileId, (response) => {\n      reloadProfile();\n    });\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log('profile:', profile);\n    const profileId = profile.getProfileId();\n    console.log('profileId:', profileId);\n    deleteProfile(profileId);\n    handleClose();\n  }\n\n  function MakeCancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function DeleteProfileButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Delete Profile\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Delete Profile</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          Are you sure you want to delete this profile?\n        </DialogContent>\n        <DialogActions>\n          {MakeCancelButton()}\n          {DeleteProfileButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  renameSqueakProfileRequest,\n} from '../../squeakclient/requests';\n\nexport default function RenameProfileDialog({\n  open,\n  handleClose,\n  profile,\n  reloadProfile,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const [profileName, setProfileName] = useState('');\n\n  const resetFields = () => {\n    setProfileName('');\n  };\n\n  const handleChangeProfileName = (event) => {\n    setProfileName(event.target.value);\n  };\n\n  const handleResponse = (response) => {\n    reloadProfile();\n  };\n\n  const handleErr = (err) => {\n    alert(`Error renaming signing profile: ${err}`);\n  };\n\n  const renameSqueakProfile = (profileId, profileName) => {\n    renameSqueakProfileRequest(profileId, profileName, handleResponse, handleErr);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const profileId = profile.getProfileId();\n    console.log('profileId:', profileId);\n    console.log('profileName:', profileName);\n    if (!profileName) {\n      alert('Profile Name cannot be empty.');\n      return;\n    }\n    renameSqueakProfile(profileId, profileName);\n    handleClose();\n  }\n\n  function RenameProfileNameInput() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Profile Name\"\n        required\n        autoFocus\n        value={profileName}\n        onChange={handleChangeProfileName}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n      />\n    );\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function RenameProfilButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Rename Profile\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Rename Profile</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          {RenameProfileNameInput()}\n        </DialogContent>\n        <DialogActions>\n          {CancelButton()}\n          {RenameProfilButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  getSqueakProfilePrivateKey,\n} from '../../squeakclient/requests';\n\nexport default function ExportPrivateKeyDialog({\n  open,\n  handleClose,\n  profile,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const [privateKey, setPrivateKey] = useState('');\n\n  const resetFields = () => {\n    setPrivateKey('');\n  };\n\n  const getPrivateKey = () => {\n    const profileId = profile.getProfileId();\n    getSqueakProfilePrivateKey(profileId, (response) => {\n      setPrivateKey(response.getPrivateKey());\n    });\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    getPrivateKey();\n  }\n\n  function DisplayPrivateKey() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"private-key\"\n        required\n        autoFocus\n        value={privateKey}\n        fullWidth\n        inputProps={{\n          readOnly: true,\n        }}\n      />\n    );\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function ShowPrivateKeyButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Show private key\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Export Private Key</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          {DisplayPrivateKey()}\n        </DialogContent>\n        <DialogActions>\n          {CancelButton()}\n          {ShowPrivateKeyButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  FormControl,\n  FormLabel,\n  FormGroup,\n  FormControlLabel,\n  Switch,\n  TextField,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  setSqueakProfileFollowingRequest,\n  setSqueakProfileUseCustomPriceRequest,\n  setSqueakProfileCustomPriceRequest,\n} from '../../squeakclient/requests';\n\nexport default function ConfigureProfileDialog({\n  open,\n  handleClose,\n  squeakProfile,\n  reloadProfile,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const setFollowing = (id, following) => {\n    setSqueakProfileFollowingRequest(id, following, () => {\n      reloadProfile();\n    });\n  };\n\n  const setUseCustomPrice = (id, useCustomPrice) => {\n    setSqueakProfileUseCustomPriceRequest(id, useCustomPrice, () => {\n      reloadProfile();\n    });\n  };\n\n  const setCustomPriceMsat = (id, customPriceMsat) => {\n    setSqueakProfileCustomPriceRequest(id, customPriceMsat, () => {\n      reloadProfile();\n    });\n  };\n\n  const handleSettingsFollowingChange = (event) => {\n    console.log(`Following changed for profile id: ${squeakProfile.getProfileId()}`);\n    console.log(`Following changed to: ${event.target.checked}`);\n    setFollowing(squeakProfile.getProfileId(), event.target.checked);\n  };\n\n  const handleSettingsUseCustomPriceChange = (event) => {\n    console.log(`UseCustomPrice changed for profile id: ${squeakProfile.getProfileId()}`);\n    console.log(`UseCustomPrice changed to: ${event.target.checked}`);\n    setUseCustomPrice(squeakProfile.getProfileId(), event.target.checked);\n  };\n\n  const handleSettingsCustomPriceMsatChange = (event) => {\n    console.log(`Custom Price changed for profile id: ${squeakProfile.getProfileId()}`);\n    const newPriceMsat = event.target.value;\n    console.log(`Custom Price changed to: ${newPriceMsat}`);\n    if (newPriceMsat < 0) {\n      return;\n    }\n    setCustomPriceMsat(squeakProfile.getProfileId(), event.target.value);\n  };\n\n  function MakeCancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function ProfileSettingsForm() {\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Profile settings</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Switch checked={squeakProfile.getFollowing()} onChange={handleSettingsFollowingChange} />}\n            label=\"Following\"\n          />\n          <FormControlLabel\n            control={<Switch checked={squeakProfile.getUseCustomPrice()} onChange={handleSettingsUseCustomPriceChange} />}\n            label=\"Use Custom Price\"\n          />\n        </FormGroup>\n        {squeakProfile.getUseCustomPrice()\n          ? (\n            <TextField\n              required\n              id=\"standard-required\"\n              label=\"Price (msats)\"\n              type=\"number\"\n              defaultValue={squeakProfile.getCustomPriceMsat()}\n              onChange={handleSettingsCustomPriceMsatChange}\n            />\n          ) : (\n            <TextField\n              disabled\n              id=\"standard-disabled\"\n              label=\"Disabled\"\n              defaultValue={squeakProfile.getCustomPriceMsat()}\n            />\n          )}\n      </FormControl>\n    );\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Configure Profile</DialogTitle>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <DialogContent>\n          {squeakProfile\n      && ProfileSettingsForm()}\n        </DialogContent>\n        <DialogActions>\n          {MakeCancelButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  setSqueakProfileImageRequest,\n} from '../../squeakclient/requests';\n\nexport default function UpdateProfileImageDialog({\n  open,\n  handleClose,\n  squeakProfile,\n  reloadProfile,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imageBase64, setImageBase64] = useState(null);\n\n  const resetFields = () => {\n    setSelectedFile(null);\n    setImageBase64(null);\n  };\n\n  const handleResponse = (response) => {\n    reloadProfile();\n  };\n\n  const handleErr = (err) => {\n    alert(`Error creating signing profile: ${err}`);\n  };\n\n  const updateProfileImage = (imageStr) => {\n    setSqueakProfileImageRequest(\n      squeakProfile.getProfileId(),\n      imageStr,\n      handleResponse,\n      handleErr,\n    );\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (imageBase64 == null) {\n      alert('Invalid image data.');\n      return;\n    }\n    const imageBase64Stripped = imageBase64.split(',')[1];\n    updateProfileImage(imageBase64Stripped);\n    handleClose();\n  }\n\n  const handleChangeSelectedImage = (event) => {\n    // alert(\"selected image changed.\");\n    if (event.target.files.length < 1) {\n      alert('Invalid file selected');\n      setSelectedFile(null);\n    }\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    getFileAsBase64(file);\n  };\n\n  const getFileAsBase64 = (file) => {\n    if (file == null) {\n      setImageBase64(null);\n    }\n    const reader = new FileReader();\n    reader.addEventListener('load', () => {\n      // convert image file to base64 string\n      // preview.src = reader.result;\n      setImageBase64(reader.result);\n    }, false);\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  function FileInput() {\n    return (\n      <>\n        <Button\n          variant=\"contained\"\n          component=\"label\"\n        >\n          Select File\n          <input\n            type=\"file\"\n            hidden\n            onChange={handleChangeSelectedImage}\n          />\n        </Button>\n      </>\n    );\n  }\n\n  function DisplaySelectedImageFileName() {\n    const fileName = selectedFile ? selectedFile.name : '';\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"selected-file\"\n        required\n        autoFocus\n        value={fileName}\n        fullWidth\n        inputProps={{\n          readOnly: true,\n        }}\n      />\n    );\n  }\n\n  function DisplaySelectedImageFile() {\n    const imageStr = imageBase64 || '';\n    return (\n      <img src={imageStr} height=\"200\" alt=\"\" />\n    );\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function SetProfileImageButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Set Profile Image\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Set Profile Image</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          {FileInput()}\n        </DialogContent>\n        <DialogContent>\n          {DisplaySelectedImageFile()}\n        </DialogContent>\n        <DialogContent>\n          {DisplaySelectedImageFileName()}\n        </DialogContent>\n        <DialogActions>\n          {CancelButton()}\n          {SetProfileImageButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  clearSqueakProfileImageRequest,\n} from '../../squeakclient/requests';\n\nexport default function ClearProfileImageDialog({\n  open,\n  handleClose,\n  squeakProfile,\n  reloadProfile,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const handleResponse = (response) => {\n    reloadProfile();\n  };\n\n  const handleErr = (err) => {\n    alert(`Error clearing profile image: ${err}`);\n  };\n\n  const clearProfileImage = () => {\n    clearSqueakProfileImageRequest(\n      squeakProfile.getProfileId(),\n      handleResponse,\n      handleErr,\n    );\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    clearProfileImage();\n    handleClose();\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function ClearProfileImageButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Clear Profile Image\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Clear Profile Image</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          Are you sure you want to clear the image for this profile?\n        </DialogContent>\n        <DialogActions>\n          {CancelButton()}\n          {ClearProfileImageButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport {\n  Typography,\n} from '@material-ui/core';\n\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\n\nexport default function SqueakProfileFollowingIndicator({\n  squeakProfile,\n  ...props\n}) {\n  function FollowingIndicator() {\n    return (\n      <>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          <NotificationsActiveIcon />\n          {' '}\n          Following\n        </Typography>\n      </>\n    );\n  }\n\n  function NotFollowingIndicator() {\n    return (\n      <>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          <NotificationsNoneIcon />\n          {' '}\n          Not Following\n        </Typography>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {(squeakProfile.getFollowing())\n        ? FollowingIndicator()\n        : NotFollowingIndicator()}\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Button,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nimport CardHeader from '@material-ui/core/CardHeader';\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\n\n// styles\nimport useStyles from './styles';\n\nimport DeleteProfileDialog from '../DeleteProfileDialog';\nimport RenameProfileDialog from '../RenameProfileDialog';\nimport ExportPrivateKeyDialog from '../ExportPrivateKeyDialog';\nimport ConfigureProfileDialog from '../ConfigureProfileDialog';\nimport UpdateProfileImageDialog from '../UpdateProfileImageDialog';\nimport ClearProfileImageDialog from '../ClearProfileImageDialog';\nimport SqueakProfileFollowingIndicator from '../SqueakProfileFollowingIndicator';\n\nimport {\n  getProfileImageSrcString,\n} from '../../squeakimages/images';\nimport {\n  goToSqueakAddressPage,\n} from '../../navigation/navigation';\n\nexport default function SqueakProfileDetailItem({\n  squeakProfile,\n  handleReloadProfile,\n  ...props\n}) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [renameDialogOpen, setRenameDialogOpen] = useState(false);\n  const [exportPrivateKeyDialogOpen, setExportPrivateKeyDialogOpen] = useState(false);\n  const [configureDialogOpen, setConfigureDialogOpen] = useState(false);\n  const [updateImageDialogOpen, setUpdateImageDialogOpen] = useState(false);\n  const [clearImageDialogOpen, setClearImageDialogOpen] = useState(false);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const history = useHistory();\n\n  const onViewSqueaksClick = () => {\n    console.log('Handling view squeaks click...');\n    handleClose();\n    if (!squeakProfile) {\n      return;\n    }\n    goToSqueakAddressPage(history, squeakProfile.getAddress());\n  };\n\n  const onConfigureClick = () => {\n    console.log('Handling configure click...');\n    handleClose();\n    if (!squeakProfile) {\n      return;\n    }\n    setConfigureDialogOpen(true);\n  };\n\n  const onRenameClick = () => {\n    console.log('Handling rename click...');\n    handleClose();\n    if (!squeakProfile) {\n      return;\n    }\n    setRenameDialogOpen(true);\n  };\n\n  const onChangeImageClick = () => {\n    console.log('Handling change image click...');\n    handleClose();\n    if (!squeakProfile) {\n      return;\n    }\n    setUpdateImageDialogOpen(true);\n  };\n\n  const onClearImageClick = () => {\n    console.log('Handling clear image click...');\n    handleClose();\n    if (!squeakProfile) {\n      return;\n    }\n    setClearImageDialogOpen(true);\n  };\n\n  const onExportClick = () => {\n    console.log('Handling export click...');\n    handleClose();\n    if (!squeakProfile) {\n      return;\n    }\n    setExportPrivateKeyDialogOpen(true);\n  };\n\n  const onDeleteClick = () => {\n    console.log('Handling delete click...');\n    handleClose();\n    if (!squeakProfile) {\n      return;\n    }\n    setDeleteDialogOpen(true);\n  };\n\n  const handleCloseDeleteDialog = () => {\n    setDeleteDialogOpen(false);\n  };\n\n  const handleCloseRenameDialog = () => {\n    setRenameDialogOpen(false);\n  };\n\n  const handleCloseExportPrivateKeyDialog = () => {\n    setExportPrivateKeyDialogOpen(false);\n  };\n\n  const handleCloseConfigureDialog = () => {\n    setConfigureDialogOpen(false);\n  };\n\n  const handleCloseUpdateImageDialog = () => {\n    setUpdateImageDialogOpen(false);\n  };\n\n  const handleCloseClearImageDialog = () => {\n    setClearImageDialogOpen(false);\n  };\n\n  function DeleteProfileDialogContent() {\n    return (\n      <>\n        <DeleteProfileDialog\n          open={deleteDialogOpen}\n          handleClose={handleCloseDeleteDialog}\n          profile={squeakProfile}\n          reloadProfile={handleReloadProfile}\n        />\n      </>\n    );\n  }\n\n  function RenameProfileDialogContent() {\n    return (\n      <>\n        <RenameProfileDialog\n          open={renameDialogOpen}\n          handleClose={handleCloseRenameDialog}\n          profile={squeakProfile}\n          reloadProfile={handleReloadProfile}\n        />\n      </>\n    );\n  }\n\n  function ExportPrivateKeyDialogContent() {\n    return (\n      <>\n        <ExportPrivateKeyDialog\n          open={exportPrivateKeyDialogOpen}\n          handleClose={handleCloseExportPrivateKeyDialog}\n          profile={squeakProfile}\n        />\n      </>\n    );\n  }\n\n  function ConfigureProfileDialogContent() {\n    return (\n      <>\n        <ConfigureProfileDialog\n          open={configureDialogOpen}\n          handleClose={handleCloseConfigureDialog}\n          squeakProfile={squeakProfile}\n          reloadProfile={handleReloadProfile}\n        />\n      </>\n    );\n  }\n\n  function UpdateImageDialogContent() {\n    return (\n      <>\n        <UpdateProfileImageDialog\n          open={updateImageDialogOpen}\n          handleClose={handleCloseUpdateImageDialog}\n          squeakProfile={squeakProfile}\n          reloadProfile={handleReloadProfile}\n        />\n      </>\n    );\n  }\n\n  function ClearImageDialogContent() {\n    return (\n      <>\n        <ClearProfileImageDialog\n          open={clearImageDialogOpen}\n          handleClose={handleCloseClearImageDialog}\n          squeakProfile={squeakProfile}\n          reloadProfile={handleReloadProfile}\n        />\n      </>\n    );\n  }\n\n  function CustomPriceContent() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        <LocalOfferIcon />\n        {' '}\n        {(squeakProfile.getUseCustomPrice())\n          ? (\n            <>\n              Selling with custom price:\n              {' '}\n              {squeakProfile.getCustomPriceMsat()}\n              {' '}\n              msats\n            </>\n          )\n          : <>Selling with default price</>}\n      </Typography>\n    );\n  }\n\n  return (\n    <>\n      <Card className={classes.root}>\n\n        <CardHeader\n          action={(\n            <>\n              <IconButton aria-label=\"settings\" onClick={handleClick}>\n                <MoreVertIcon />\n              </IconButton>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={onConfigureClick}>Configure</MenuItem>\n                <MenuItem onClick={onRenameClick}>Rename</MenuItem>\n                <MenuItem onClick={onChangeImageClick}>Change Image</MenuItem>\n                <MenuItem onClick={onClearImageClick}>Clear Image</MenuItem>\n                {squeakProfile.getHasPrivateKey()\n        && <MenuItem onClick={onExportClick}>Export</MenuItem>}\n                <MenuItem onClick={onDeleteClick}>Delete</MenuItem>\n              </Menu>\n            </>\n  )}\n          title={squeakProfile.getProfileName()}\n        />\n\n        <CardMedia\n          component=\"img\"\n          className={classes.media}\n          image={`${getProfileImageSrcString(squeakProfile)}`}\n          title=\"Profile Image\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {squeakProfile.getHasPrivateKey() && <VpnKeyIcon />}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {squeakProfile.getAddress()}\n          </Typography>\n          <SqueakProfileFollowingIndicator\n            squeakProfile={squeakProfile}\n          />\n          <CustomPriceContent />\n        </CardContent>\n        <CardActions>\n          <Button\n            onClick={() => {\n              onViewSqueaksClick();\n            }}\n            size=\"small\"\n            color=\"primary\"\n          >\n            View Squeaks\n          </Button>\n        </CardActions>\n      </Card>\n      {DeleteProfileDialogContent()}\n      {RenameProfileDialogContent()}\n      {ExportPrivateKeyDialogContent()}\n      {ConfigureProfileDialogContent()}\n      {UpdateImageDialogContent()}\n      {ClearImageDialogContent()}\n    </>\n  );\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\n// components\nimport SqueakProfileDetailItem from '../../components/SqueakProfileDetailItem';\n\nimport {\n  getSqueakProfileRequest,\n} from '../../squeakclient/requests';\n\nexport default function ProfilePage() {\n  const { id } = useParams();\n  const [squeakProfile, setSqueakProfile] = useState(null);\n\n  const handleGetSqueakProfileErr = (err) => {\n    setSqueakProfile(null);\n  };\n\n  const getSqueakProfile = useCallback(() => {\n    getSqueakProfileRequest(id, setSqueakProfile, handleGetSqueakProfileErr);\n  },\n  [id]);\n\n  useEffect(() => {\n    getSqueakProfile(id);\n  }, [getSqueakProfile, id]);\n\n  const handleReloadProfile = () => {\n    getSqueakProfile(id);\n  };\n\n  function ProfileContent() {\n    return (\n      <>\n        {SqueakProfileImageDisplay()}\n      </>\n    );\n  }\n\n  function SqueakProfileImageDisplay() {\n    return (\n      <SqueakProfileDetailItem\n        squeakProfile={squeakProfile}\n        handleReloadProfile={handleReloadProfile}\n      />\n    );\n  }\n\n  return (\n    <>\n      {squeakProfile\n        && ProfileContent()}\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    border: '1px solid #e8e8e8',\n    '&:hover': {\n      boxShadow: ({ clickable }) => (clickable\n        ? '0px 4px 3px -1px rgba(0,0,0,0.2), 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A'\n        : null),\n      cursor: ({ clickable }) => (clickable ? 'pointer' : 'default'),\n    },\n  },\n  cardContentContainer: {\n    padding: '1rem',\n  },\n  cardContentContainerVertical: {\n    display: 'flex',\n  },\n  cardHeaderContainer: {\n    // padding: '1.5rem 1rem 0rem 1rem',\n    flex: 1,\n  },\n  cardContentFlexColumn: {\n    // flex: 1,\n    width: '50%',\n    alignSelf: 'center',\n    padding: '1.5rem',\n  },\n  cardContentSection: {\n    // alignSelf: 'center',\n    // padding: '0 1rem',\n    display: 'block',\n  },\n  cardHeaderRow: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  cardSubheaderText: {\n    fontSize: '0.8rem',\n    color: '#727272',\n  },\n  cardSubheaderTextLabel: {\n    fontSize: '0.8rem',\n    color: '#a5a5a5',\n    fontWeight: '600',\n    marginRight: '0.3rem',\n  },\n  cardSubheaderTextValue: {\n    fontSize: '0.8rem',\n    color: '#404040',\n  },\n  cardContent: {\n    whiteSpace: 'pre-line',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    paddingTop: '0.5rem',\n    backgroundColor: '#f5f5f5',\n  },\n  cardContentColumns: {\n    whiteSpace: 'pre-line',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    paddingTop: '0.5rem',\n    backgroundColor: '#f5f5f5',\n    display: 'block',\n  },\n\n  // card detail item\n  detailItem: {\n    display: 'flex',\n  },\n\n  detailItemVertical: {\n    flex: 1,\n    // marginRight: '3rem',\n    // position: 'absolute',\n  },\n  detailItemLabel: {\n    // flex: 1,\n    color: '#9a9a9a',\n    fontSize: '0.8rem',\n    fontWeight: '600',\n    width: '8rem',\n    // paddingBottom: '0'\n\n  },\n  detailItemValue: {\n    flex: 1,\n    paddingLeft: '0.5rem',\n    fontSize: '0.8rem',\n    display: 'table-cell',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n\n  // Balance grid\n  balanceGridItemLabel: { // BalanceGridItem\n    fontWeight: 'bolder',\n    color: '#6e6e6e',\n  },\n\n  // buttons\n  button: { // ReceiveBitcoinButton\n    marginTop: '1rem',\n  },\n  expandBtn: {\n    padding: 0,\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  collapseBtn: {\n    padding: 0,\n    transform: 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n\n  // ChannelItem.js\n  channelIcon: {\n    marginRight: '0.5rem',\n    fontSize: '1rem',\n    color: ({ channelStatus }) => {\n      if (channelStatus === 'open') {\n        return '#00cd8a';\n      } if (channelStatus === 'pending-open') {\n        // return '#febc50'\n        return '#eae300';\n      } if (channelStatus === 'pending-closed') {\n        return '#ef5a6b';\n      }\n    },\n  },\n  channelStatusChip: {\n    // minWidth: '83px',\n    height: '20px',\n    padding: '0 0.5rem',\n    marginBottom: '0.5rem',\n    color: 'white',\n    borderRadius: '4px',\n    fontSize: 'smaller',\n    backgroundColor: ({ channelStatus }) => {\n      if (channelStatus === 'open') {\n        return '#00cd8a';\n      } if (channelStatus === 'pending-open') {\n        // return '#febc50'\n        return '#eae300';\n      } if (channelStatus === 'pending-closed') {\n        return '#ef5a6b';\n      }\n    },\n  },\n  channelStatusText: {\n    color: ({ channelStatus }) => {\n      if (channelStatus === 'open') {\n        return '#00cd8a';\n      } if (channelStatus === 'pending-open') {\n        // return '#febc50'\n        return '#eae300';\n      } if (channelStatus === 'pending-closed') {\n        return '#ef5a6b';\n      }\n    },\n  },\n\n  // ChannelBalanceBar\n  channelBalanceBarContainer: {\n    justifySelf: 'center',\n  },\n  // balance details\n  channelBalanceDetailsContainer: {\n    // position: 'relative',\n    // height: '2rem',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  balanceContainerLocal: {\n    textAlign: 'center',\n    color: '#2f2fad',\n    // color: '#4949bf',\n  },\n  balanceContainerRemote: {\n    textAlign: 'center',\n    color: '#c74040',\n    // color: '#ff3434',\n  },\n  balanceContainerCapacity: {\n    textAlign: 'center',\n    color: '#444',\n  },\n  channelBalanceBarRow: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  balanceLabel: {\n    fontSize: '0.6rem',\n    textTransform: 'uppercase',\n    opacity: '70%',\n  },\n  balanceValue: {\n    fontSize: '0.85rem',\n    fontWeight: '600',\n  },\n  // balance bar\n  channelBalanceProgressBar: {\n    flex: 1,\n    margin: '0 1rem',\n    height: '10px',\n    borderRadius: 5,\n  },\n  channelBalanceBuffer: {\n    color: 'orange',\n  },\n  channelBalanceBar: {\n  },\n  channelBalanceBar1Buffer: {\n    // backgroundImage: 'linear-gradient(90deg, #020024 0%, #2b2bbd 35%, #7894ff 100%)'\n    backgroundImage: 'linear-gradient(90deg, #2f2fad 0%, #4949bf 35%, #6f6fda 100%)',\n  },\n  channelBalanceBar2Buffer: {\n    backgroundImage: 'linear-gradient(90deg, #ff3434 0%, #c74040 80%, #ff5a5a 100%)',\n  },\n  channelBalanceDashed: {\n    backgroundSize: 'auto',\n    animation: 'none',\n    backgroundImage: 'linear-gradient(90deg, #cccccc 0%, #cccccc 90%, #dddddd 100%)',\n  },\n\n  // TransactionItem.js\n  transactionIcon: {\n    marginRight: '0.35rem',\n    fontSize: '1rem',\n    color: ({ amount }) => (amount > 0\n      ? 'green'\n      : 'red'),\n  },\n  transactionAmt: {\n    color: ({ amount }) => (amount > 0\n      ? 'green'\n      : 'red'),\n  },\n  inlineTimestamp: {\n    marginLeft: '0.5rem',\n    color: 'gray',\n  },\n\n  // Widget.js\n  widgetRoot: {\n    backgroundColor: '#fafafa',\n  },\n\n  // LightningPeerListItem.js\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  lndNewAddressRequest,\n} from '../../squeakclient/requests';\n\nexport default function ReceiveBitcoinDialog({\n  open,\n  handleClose,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const [address, setAddress] = useState('');\n\n  const resetFields = () => {\n    setAddress('');\n  };\n\n  const handleChangeAddress = (event) => {\n    setAddress(event.target.value);\n  };\n\n  const getNewAddress = () => {\n    lndNewAddressRequest((response) => {\n      setAddress(response.getAddress());\n    });\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    getNewAddress(address);\n    // handleClose();\n  }\n\n  function ReceiveBitcoinAddess() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Address\"\n        required\n        autoFocus\n        value={address}\n        onChange={handleChangeAddress}\n        fullWidth\n        inputProps={{\n          readOnly: true,\n        }}\n      />\n    );\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function RenewAddressButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Get New Address\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Receive Bitcoin</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          {ReceiveBitcoinAddess()}\n        </DialogContent>\n        <DialogActions>\n          {CancelButton()}\n          {RenewAddressButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n  FormControlLabel,\n  Switch,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  lndSendCoins,\n} from '../../squeakclient/requests';\nimport {\n  reloadRoute,\n} from '../../navigation/navigation';\n\nexport default function SendBitcoinDialog({\n  open,\n  handleClose,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const [address, setAddress] = useState('');\n  const [amount, setAmount] = useState('');\n  const [satperbyte, setSatperbyte] = useState('');\n  const [sendall, setSendall] = useState(false);\n\n  const resetFields = () => {\n    setAddress('');\n    setAmount('');\n    setSatperbyte('');\n    setSendall(false);\n  };\n\n  const handleChangeAddress = (event) => {\n    setAddress(event.target.value);\n  };\n\n  const handleChangeAmount = (event) => {\n    setAmount(event.target.value);\n  };\n\n  const handleChangeSatperbyte = (event) => {\n    setSatperbyte(event.target.value);\n  };\n\n  const handleChangeSendall = (event) => {\n    setSendall(event.target.checked);\n  };\n\n  const sendBitcoin = (address, amount, satperbyte, sendall) => {\n    lndSendCoins(address, amount, satperbyte, sendall, (response) => {\n      // setAddress(response.getAddress());\n      // goToWalletPage(history);\n      reloadRoute();\n    });\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log('address:', address);\n    console.log('amount:', amount);\n    console.log('satperbyte:', satperbyte);\n    console.log('satperbyte number:', parseInt(satperbyte));\n    console.log('sendall:', sendall);\n    sendBitcoin(address, amount, parseInt(satperbyte), sendall);\n    handleClose();\n  }\n\n  function SendBitcoinAddess() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Address\"\n        required\n        autoFocus\n        value={address}\n        onChange={handleChangeAddress}\n        fullWidth\n      />\n    );\n  }\n\n  function SendBitcoinAmount() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Amount\"\n        required\n        autoFocus\n        value={amount}\n        onChange={handleChangeAmount}\n        disabled={sendall}\n        fullWidth\n      />\n    );\n  }\n\n  function SendBitcoinSatperbyte() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Satperbyte\"\n        required\n        autoFocus\n        value={satperbyte}\n        onChange={handleChangeSatperbyte}\n        fullWidth\n      />\n    );\n  }\n\n  function SendBitcoinSendall() {\n    return (\n      <FormControlLabel\n        className={classes.formControlLabel}\n        control={(\n          <Switch\n            checked={sendall}\n            onChange={handleChangeSendall}\n            name=\"send-all\"\n            size=\"small\"\n          />\n        )}\n        label=\"Send all\"\n      />\n    );\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function SendBitcoinButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Send Bitcoin\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Send Bitcoin</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          {SendBitcoinAddess()}\n        </DialogContent>\n        <DialogContent>\n          {SendBitcoinAmount()}\n        </DialogContent>\n        <DialogContent>\n          {SendBitcoinSatperbyte()}\n        </DialogContent>\n        <DialogContent>\n          {SendBitcoinSendall()}\n        </DialogContent>\n        <DialogActions>\n          {CancelButton()}\n          {SendBitcoinButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\n\n// icons\nimport CallMadeIcon from '@material-ui/icons/CallMade';\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\n\n// styles\n\nimport moment from 'moment';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from '../../pages/wallet/styles';\n\nexport default function TransactionItem({\n  transaction,\n  handleTransactionClick,\n  ...props\n}) {\n  const [expanded, setExpanded] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const onTransactionClick = (event) => {\n    event.preventDefault();\n    console.log('Handling transaction click...');\n    // if (handleTransactionClick) {\n    //   handleTransactionClick();\n    // }\n    handleExpandClick();\n  };\n\n  function TransactionDetailItem(label, value) {\n    return (\n      <Box display=\"flex\">\n        <Typography className={classes.detailItemLabel}>\n          {label}\n        </Typography>\n        <Typography className={classes.detailItemValue}>\n          {value}\n        </Typography>\n      </Box>\n    );\n  }\n\n  function TransactionMoreDetails() {\n    return (\n      <CardContent className={classes.cardContent}>\n        {TransactionDetailItem('Tx Hash', transaction.getTxHash())}\n        {TransactionDetailItem('Timestamp', moment.unix(transaction.getTimeStamp()).format('lll'))}\n        {TransactionDetailItem('Block Height', transaction.getBlockHeight())}\n        {TransactionDetailItem('Total Fees', transaction.getTotalFees())}\n        {/* {TransactionDetailItem(\"Dest Addresses\", transaction.getDestAddressesList().length)} */}\n        {TransactionDetailItem('Confirmations', transaction.getNumConfirmations())}\n      </CardContent>\n    );\n  }\n\n  const classes = useStyles({\n    amount: transaction.getAmount(),\n    clickable: false,\n  });\n\n  const amountGtZero = transaction.getAmount() >= 0;\n\n  function PlusMinusSymbol() {\n    if (transaction.getAmount() > 0) {\n      return '+';\n    } if (transaction.getAmount() < 0) {\n      return '-';\n    }\n  }\n\n  function TransactionIcon() {\n    if (amountGtZero) {\n      return <CallReceivedIcon className={classes.transactionIcon} />;\n    }\n    return <CallMadeIcon className={classes.transactionIcon} />;\n  }\n\n  return (\n    <Card\n      className={classes.root}\n      onClick={onTransactionClick}\n    >\n      <Box className={classes.cardContentContainer}>\n        <Box className={classes.cardHeaderContainer}>\n          <Box className={classes.cardHeaderRow}>\n            {TransactionIcon()}\n            <Typography className={classes.transactionAmt}>\n              {PlusMinusSymbol()}\n              {Math.abs(transaction.getAmount())}\n              {' '}\n              sats\n            </Typography>\n          </Box>\n          <Box className={classes.cardHeaderRow}>\n            <Typography className={classes.cardSubheaderText}>\n              {moment.unix(transaction.getTimeStamp()).fromNow()}\n            </Typography>\n          </Box>\n        </Box>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          {TransactionMoreDetails()}\n        </Collapse>\n      </Box>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n\n// icons\nimport ComputerIcon from '@material-ui/icons/Computer';\n\nimport useStyles from '../../pages/wallet/styles';\n\nimport {\n  goToLightningNodePage,\n} from '../../navigation/navigation';\n\nexport default function LightningPeerListItem({\n  peer,\n  ...props\n}) {\n  const classes = useStyles({\n    clickable: true,\n  });\n\n  const history = useHistory();\n\n  const onPeerClick = (event) => {\n    event.preventDefault();\n    console.log('Handling peer click...');\n    const pubkey = peer.getPubKey();\n    const host = getPeerHost();\n    const port = getPeerPort();\n    goToLightningNodePage(history, pubkey, host, port);\n  };\n\n  const getPeerHost = () => {\n    const address = peer.getAddress();\n    if (address == null) {\n      return null;\n    }\n    const pieces = address.split(':');\n    return pieces[0];\n  };\n\n  const getPeerPort = () => {\n    const address = peer.getAddress();\n    if (address == null) {\n      return null;\n    }\n    const pieces = address.split(':');\n    if (pieces.length < 2) {\n      return null;\n    }\n    return pieces[1];\n  };\n\n  return (\n    <Card\n      className={classes.root}\n      onClick={onPeerClick}\n    >\n      <CardHeader\n        avatar={<ComputerIcon />}\n        title={`Pubkey: ${peer.getPubKey()}`}\n        subheader={`Address: ${peer.getAddress()}`}\n      />\n    </Card>\n  );\n}\n","import React from 'react';\nimport {\n  Box,\n  LinearProgress,\n  Typography,\n} from '@material-ui/core';\nimport useStyles from '../../pages/wallet/styles';\n\nexport default function ChannelBalanceBar({\n  channel,\n  ...props\n}) {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.channelBalanceBarContainer}>\n      <Box className={classes.channelBalanceDetailsContainer}>\n        <Box className={classes.balanceContainerCapacity}>\n          <Typography className={classes.balanceLabel}>Capacity</Typography>\n          <Typography className={classes.balanceValue}>{channel.getCapacity()}</Typography>\n        </Box>\n      </Box>\n      <Box className={classes.channelBalanceBarRow}>\n        <Box className={classes.balanceContainerLocal}>\n          <Typography className={classes.balanceLabel}>Local</Typography>\n          <Typography className={classes.balanceValue} style={{ color: 'darkblue' }}>{channel.getLocalBalance()}</Typography>\n        </Box>\n        <LinearProgress\n          variant=\"buffer\"\n          value={channel.getLocalBalance() / channel.getCapacity() * 100}\n          valueBuffer={channel.getRemoteBalance() / channel.getCapacity() * 100}\n          className={classes.channelBalanceProgressBar}\n          classes={{\n            buffer: classes.channelBalanceBuffer,\n            dashed: classes.channelBalanceDashed,\n            bar: classes.channelBalanceBar,\n            bar1Buffer: classes.channelBalanceBar1Buffer,\n            bar2Buffer: classes.channelBalanceBar2Buffer,\n          }}\n        />\n        <Box className={classes.balanceContainerRemote}>\n          <Typography className={classes.balanceLabel}>Remote</Typography>\n          <Typography className={classes.balanceValue} style={{ color: 'darkred' }}>{channel.getRemoteBalance()}</Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\nimport {\n  Typography,\n  Box,\n  Chip,\n  Card,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport moment from 'moment';\nimport useStyles from '../../pages/wallet/styles';\nimport ChannelBalanceBar from './ChannelBalanceBar';\n\nimport {\n  goToChannelPage,\n} from '../../navigation/navigation';\n\nexport default function ChannelItem({\n  channel,\n  ...props\n}) {\n  const classes = useStyles({\n    channelStatus: 'open',\n    clickable: true,\n  });\n\n  const history = useHistory();\n\n  const getTxId = (channel) => {\n    const channelPoint = channel.getChannelPoint();\n    if (channelPoint == null) {\n      return null;\n    }\n    const pieces = channelPoint.split(':');\n    return pieces[0];\n  };\n\n  const getOutputIndex = (channel) => {\n    const channelPoint = channel.getChannelPoint();\n    if (channelPoint == null) {\n      return null;\n    }\n    const pieces = channelPoint.split(':');\n    if (pieces.length < 2) {\n      return null;\n    }\n    return pieces[1];\n  };\n\n  const onChannelClick = (event) => {\n    event.preventDefault();\n    console.log('Handling channel click...');\n    const txId = getTxId(channel);\n    const outputIndex = getOutputIndex(channel);\n    goToChannelPage(history, txId, outputIndex);\n  };\n\n  function ChannelDetailItem(label, value) {\n    return (\n      <Box className={classes.detailItem}>\n        <Typography className={classes.detailItemLabel}>\n          {label}\n        </Typography>\n        <Typography className={classes.detailItemValue}>\n          {value}\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Card\n      className={classes.root}\n      onClick={onChannelClick}\n    >\n      <Box className={classes.cardContentContainerVertical}>\n        <Box className={classes.cardContentFlexColumn}>\n          <Box className={classes.cardHeaderContainer}>\n            <Box className={classes.cardHeaderRow}>\n              <Chip\n                label=\"Open\"\n                size=\"small\"\n                className={classes.channelStatusChip}\n              />\n            </Box>\n          </Box>\n          <Box className={classes.cardContentSection}>\n            {ChannelDetailItem('Pubkey', `${channel.getRemotePubkey()}`)}\n            {ChannelDetailItem('Channel Point', `${channel.getChannelPoint()}`)}\n            {/* {ChannelDetailItem(\"Total sats sent\", `${channel.getTotalSatoshisSent()}`)} */}\n            {/* {ChannelDetailItem(\"Total sats received\", `${channel.getTotalSatoshisReceived()}`)} */}\n            {ChannelDetailItem('Lifetime', `${moment.duration(channel.getLifetime(), 'seconds').humanize()}`)}\n            {ChannelDetailItem('Uptime', `${moment.duration(channel.getUptime(), 'seconds').humanize()}`)}\n          </Box>\n        </Box>\n        <Box className={classes.cardContentFlexColumn}>\n          <ChannelBalanceBar\n            channel={channel}\n          />\n        </Box>\n      </Box>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Box, Chip, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\n// styles\n\nimport Card from '@material-ui/core/Card';\nimport useStyles from '../../pages/wallet/styles';\nimport ChannelBalanceBar from '../ChannelItem/ChannelBalanceBar';\n\nimport {\n  goToChannelPage,\n} from '../../navigation/navigation';\n\nexport default function PendingOpenChannelItem({\n  pendingOpenChannel,\n  ...props\n}) {\n  const classes = useStyles({\n    channelStatus: 'pending-open',\n    clickable: true,\n  });\n\n  const history = useHistory();\n\n  const getTxId = (channel) => {\n    const channelPoint = channel.getChannelPoint();\n    if (channelPoint == null) {\n      return null;\n    }\n    const pieces = channelPoint.split(':');\n    return pieces[0];\n  };\n\n  const getOutputIndex = (channel) => {\n    const channelPoint = channel.getChannelPoint();\n    if (channelPoint == null) {\n      return null;\n    }\n    const pieces = channelPoint.split(':');\n    if (pieces.length < 2) {\n      return null;\n    }\n    return pieces[1];\n  };\n\n  const onChannelClick = (event) => {\n    event.preventDefault();\n    console.log('Handling channel click...');\n    const channel = pendingOpenChannel.getChannel();\n    const txId = getTxId(channel);\n    const outputIndex = getOutputIndex(channel);\n    goToChannelPage(history, txId, outputIndex);\n  };\n\n  function ChannelDetailItem(label, value) {\n    return (\n      <Box className={classes.detailItem}>\n        <Typography className={classes.detailItemLabel}>\n          {label}\n        </Typography>\n        <Typography className={classes.detailItemValue}>\n          {value}\n        </Typography>\n      </Box>\n    );\n  }\n\n  const channel = pendingOpenChannel.getChannel();\n  return (\n    <Card\n      className={classes.root}\n      onClick={onChannelClick}\n    >\n      <Box className={classes.cardContentContainerVertical}>\n        <Box className={classes.cardContentFlexColumn}>\n          <Box className={classes.cardHeaderContainer}>\n            <Box className={classes.cardHeaderRow}>\n              <Chip\n                label=\"Opening\"\n                size=\"small\"\n                className={classes.channelStatusChip}\n              />\n            </Box>\n          </Box>\n          <Box className={classes.cardContentSection}>\n            {ChannelDetailItem('Pubkey', `${channel.getRemoteNodePub()}`)}\n            {ChannelDetailItem('Channel Point', `${channel.getChannelPoint()}`)}\n            {/* {ChannelDetailItem(\"Lifetime\", `${moment.duration(channel.getLifetime(), 'seconds').humanize()}`)} */}\n            {/* {ChannelDetailItem(\"Uptime\", `${moment.duration(channel.getUptime(), 'seconds').humanize()}`)} */}\n          </Box>\n        </Box>\n        <Box className={classes.cardContentFlexColumn}>\n          <ChannelBalanceBar\n            channel={channel}\n          />\n        </Box>\n      </Box>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import {useHistory} from \"react-router-dom\";\nimport {\n  Grid,\n  Button,\n  AppBar,\n  Tabs,\n  Tab,\n  Box,\n} from '@material-ui/core';\n// import { useTheme } from \"@material-ui/styles\";\n\n// styles\nimport FormLabel from '@material-ui/core/FormLabel';\nimport useStyles from './styles';\n\n// components\nimport Widget from '../../components/Widget';\nimport { Typography } from '../../components/Wrappers';\nimport ReceiveBitcoinDialog from '../../components/ReceiveBitcoinDialog';\nimport SendBitcoinDialog from '../../components/SendBitcoinDialog';\nimport TransactionItem from '../../components/TransactionItem';\nimport LightningPeerListItem from '../../components/LightningPeerListItem';\nimport ChannelItem from '../../components/ChannelItem';\nimport PendingOpenChannelItem from '../../components/PendingOpenChannelItem';\n\nimport {\n  lndGetInfoRequest,\n  lndWalletBalanceRequest,\n  lndGetTransactionsRequest,\n  lndListPeersRequest,\n  lndListChannelsRequest,\n  lndPendingChannelsRequest,\n} from '../../squeakclient/requests';\n\nexport default function WalletPage() {\n  const classes = useStyles();\n\n  const [lndInfo, setLndInfo] = useState(null);\n  const [walletBalance, setWalletBalance] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [peers, setPeers] = useState(null);\n  const [channels, setChannels] = useState(null);\n  const [pendingChannels, setPendingChannels] = useState(null);\n  const [value, setValue] = useState(0);\n  const [receiveBitcoinDialogOpen, setReceiveBitcoinDialogOpen] = useState(false);\n  const [sendBitcoinDialogOpen, setSendBitcoinDialogOpen] = useState(false);\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleClickOpenReceiveBitcoinDialog = () => {\n    setReceiveBitcoinDialogOpen(true);\n  };\n\n  const handleCloseReceiveBitcoinDialog = () => {\n    setReceiveBitcoinDialogOpen(false);\n  };\n\n  const handleClickOpenSendBitcoinDialog = () => {\n    setSendBitcoinDialogOpen(true);\n  };\n\n  const handleCloseSendBitcoinDialog = () => {\n    setSendBitcoinDialogOpen(false);\n  };\n\n  const getLndInfo = () => {\n    lndGetInfoRequest(setLndInfo);\n  };\n  const getWalletBalance = () => {\n    lndWalletBalanceRequest(setWalletBalance);\n  };\n  const getTransactions = () => {\n    lndGetTransactionsRequest(setTransactions);\n  };\n  const listPeers = () => {\n    lndListPeersRequest(setPeers);\n  };\n  const listChannels = () => {\n    lndListChannelsRequest(setChannels);\n  };\n  const getPendingChannels = () => {\n    lndPendingChannelsRequest(setPendingChannels);\n  };\n\n  const lndAvailable = () => lndInfo\n      && walletBalance\n      && transactions\n      && peers\n      && channels\n      && pendingChannels;\n\n  useEffect(() => {\n    getLndInfo();\n  }, []);\n  useEffect(() => {\n    getWalletBalance();\n  }, []);\n  useEffect(() => {\n    getTransactions();\n  }, []);\n  useEffect(() => {\n    listPeers();\n  }, []);\n  useEffect(() => {\n    listChannels();\n  }, []);\n  useEffect(() => {\n    getPendingChannels();\n  }, []);\n\n  function ReceiveBitcoinButton() {\n    return (\n      <Button\n        variant=\"contained\"\n        className={classes.button}\n        onClick={() => {\n          handleClickOpenReceiveBitcoinDialog();\n        }}\n      >\n        Receive Bitcoin\n      </Button>\n    );\n  }\n\n  function SendBitcoinButton() {\n    return (\n      <Button\n        variant=\"contained\"\n        className={classes.button}\n        onClick={() => {\n          handleClickOpenSendBitcoinDialog();\n        }}\n      >\n        Send Bitcoin\n      </Button>\n    );\n  }\n\n  function NoBalanceContent() {\n    return (\n      <div>\n        Unable to connect to lightning node. Make sure that lnd is running and reload the page.\n      </div>\n    );\n  }\n\n  function BalanceContent() {\n    return (\n      <>\n        <Grid container spacing={4}>\n          {BalanceGridItem()}\n        </Grid>\n      </>\n    );\n  }\n\n  function NodeInfoContent() {\n    return (\n      <>\n        <Grid container spacing={4}>\n          {StatusGridItem()}\n        </Grid>\n      </>\n    );\n  }\n\n  function TransactionsContent() {\n    return (\n      <>\n        <Grid container spacing={4}>\n          {TransactionsGridItem()}\n        </Grid>\n      </>\n    );\n  }\n\n  function PeersContent() {\n    return (\n      <>\n        <Grid container spacing={4}>\n          {PeersGridItem()}\n        </Grid>\n      </>\n    );\n  }\n\n  function BalanceGridItem() {\n    return (\n      <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            spacing={2}\n          >\n            <Grid item>\n              <Typography variant=\"h1\">\n                {walletBalance.getTotalBalance()}\n                {' '}\n                sats\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormLabel>\n                Unconfirmed Balance (sats)\n              </FormLabel>\n              <Typography size=\"md\">\n                {walletBalance.getUnconfirmedBalance()}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormLabel>\n                Confirmed Balance (sats)\n              </FormLabel>\n              <Typography size=\"md\">\n                {walletBalance.getConfirmedBalance()}\n              </Typography>\n            </Grid>\n          </Grid>\n          {ReceiveBitcoinButton()}\n          {SendBitcoinButton()}\n        </Widget>\n      </Grid>\n    );\n  }\n\n  function StatusGridItem() {\n    return (\n      <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-start\"\n            spacing={2}\n          >\n            <Grid item>\n              <FormLabel>\n                Node Pubkey\n              </FormLabel>\n              <Typography size=\"md\">{lndInfo.getIdentityPubkey()}</Typography>\n            </Grid>\n            <Grid item>\n              <FormLabel>\n                Synced to Chain\n              </FormLabel>\n              <Typography size=\"md\">{lndInfo.getSyncedToChain().toString()}</Typography>\n            </Grid>\n            <Grid item>\n              <FormLabel>\n                Synced to Graph\n              </FormLabel>\n              <Typography size=\"md\">{lndInfo.getSyncedToGraph().toString()}</Typography>\n            </Grid>\n            <Grid item>\n              <FormLabel>\n                Block Height\n              </FormLabel>\n              <Typography size=\"md\">{lndInfo.getBlockHeight()}</Typography>\n            </Grid>\n          </Grid>\n        </Widget>\n      </Grid>\n    );\n  }\n\n  function TransactionsGridItem() {\n    return (\n      <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={12}>\n              {transactions.map((transaction) => (\n                <Box\n                  p={1}\n                  key={transaction.getTxHash()}\n                >\n                  <TransactionItem\n                    key={transaction.getTxHash()}\n                       // handleTransactionClick={() => goToSqueakPage(transaction.getSqueakHash())}\n                    handleTransactionClick={() => console.log('clicked transaction')}\n                    transaction={transaction}\n                  />\n                </Box>\n              ))}\n            </Grid>\n          </Grid>\n        </Widget>\n      </Grid>\n    );\n  }\n\n  function PeersGridItem() {\n    return (\n      <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={12}>\n              {peers.map((peer) => (\n                <Box\n                  p={1}\n                  key={peer.getPubKey()}\n                >\n                  <LightningPeerListItem\n                    key={peer.getPubKey()}\n                       // handleTransactionClick={() => goToSqueakPage(transaction.getSqueakHash())}\n                    handlePeerClick={() => console.log('clicked peer')}\n                    peer={peer}\n                  />\n                </Box>\n              ))}\n            </Grid>\n          </Grid>\n        </Widget>\n      </Grid>\n    );\n  }\n\n  function ChannelsGridItem() {\n    return (\n      <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={12}>\n              {pendingChannels.getPendingOpenChannelsList().map((pendingOpenChannel) => (\n                <Box p={1} key={pendingOpenChannel.getChannel().getChannelPoint()}>\n                  <PendingOpenChannelItem pendingOpenChannel={pendingOpenChannel} />\n                </Box>\n              ))}\n              {channels.map((channel) => (\n                <Box p={1} key={channel.getChannelPoint()}>\n                  <ChannelItem channel={channel} />\n                </Box>\n              ))}\n            </Grid>\n          </Grid>\n        </Widget>\n      </Grid>\n    );\n  }\n\n  function TabPanel(props) {\n    const {\n      children, value, index, ...other\n    } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <div>{children}</div>\n        )}\n      </div>\n    );\n  }\n\n  function LightningTabs() {\n    return (\n      <>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Balance\" {...a11yProps(0)} />\n            <Tab label=\"Node Info\" {...a11yProps(1)} />\n            <Tab label=\"Transactions\" {...a11yProps(2)} />\n            <Tab label=\"Peers\" {...a11yProps(3)} />\n            <Tab label=\"Channels\" {...a11yProps(4)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          {BalanceContent()}\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          {NodeInfoContent()}\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          {TransactionsContent()}\n        </TabPanel>\n        <TabPanel value={value} index={3}>\n          {PeersContent()}\n        </TabPanel>\n        <TabPanel value={value} index={4}>\n          {ChannelsGridItem()}\n        </TabPanel>\n      </>\n    );\n  }\n\n  function ReceiveBitcoinDialogContent() {\n    return (\n      <>\n        <ReceiveBitcoinDialog\n          open={receiveBitcoinDialogOpen}\n          handleClose={handleCloseReceiveBitcoinDialog}\n        />\n      </>\n    );\n  }\n\n  function SendBitcoinDialogContent() {\n    return (\n      <>\n        <SendBitcoinDialog\n          open={sendBitcoinDialogOpen}\n          handleClose={handleCloseSendBitcoinDialog}\n        />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {lndAvailable()\n        ? LightningTabs()\n        : NoBalanceContent()}\n      {ReceiveBitcoinDialogContent()}\n      {SendBitcoinDialogContent()}\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  dashedBorder: {\n    border: '1px dashed',\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  lndOpenChannelSyncRequest,\n} from '../../squeakclient/requests';\n\nexport default function OpenChannelDialog({\n  open,\n  pubkey,\n  handleClose,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const [amount, setAmount] = useState('');\n  const [satperbyte, setSatperbyte] = useState('');\n\n  const resetFields = () => {\n    setAmount('');\n    setSatperbyte('');\n  };\n\n  const handleChangeAmount = (event) => {\n    setAmount(event.target.value);\n  };\n\n  const handleChangeSatPerBytes = (event) => {\n    setSatperbyte(event.target.value);\n  };\n\n  const handleResponse = (response) => {\n    // TODO: go to channel page instead of showing alert.\n    alert('Open channel pending.');\n  };\n\n  const handleErr = (err) => {\n    alert(`Error opening channel: ${err}`);\n  };\n\n  const openChannel = (pubkey, amount) => {\n    lndOpenChannelSyncRequest(pubkey, amount, satperbyte, handleResponse, handleErr);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log('pubkey:', pubkey);\n    console.log('amount:', amount);\n    console.log('satperbyte:', satperbyte);\n    if (!amount) {\n      alert('Amount cannot be empty.');\n      return;\n    }\n    openChannel(pubkey, amount, satperbyte);\n    handleClose();\n  }\n\n  function PubKeyInput() {\n    return (\n      <TextField\n        id=\"pubkey-textarea\"\n        label=\"Node Pub Key\"\n        required\n        autoFocus\n        value={pubkey}\n        fullWidth\n        inputProps={{\n          readOnly: true,\n        }}\n      />\n    );\n  }\n\n  function LocalFundingAmountInput() {\n    return (\n      <TextField\n        id=\"amount-textarea\"\n        label=\"Local Funding Amount\"\n        required\n        autoFocus\n        value={amount}\n        onChange={handleChangeAmount}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n      />\n    );\n  }\n\n  function SatPerByteInput() {\n    return (\n      <TextField\n        id=\"satperbyte-textarea\"\n        label=\"Sats Per Byte\"\n        required\n        autoFocus\n        value={satperbyte}\n        onChange={handleChangeSatPerBytes}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n      />\n    );\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function OpenChannelButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Open Channel\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Open Channel</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          {PubKeyInput()}\n        </DialogContent>\n        <DialogContent>\n          {LocalFundingAmountInput()}\n        </DialogContent>\n        <DialogContent>\n          {SatPerByteInput()}\n        </DialogContent>\n        <DialogActions>\n          {CancelButton()}\n          {OpenChannelButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n  Grid,\n  Button,\n  AppBar,\n  Tabs,\n  Tab,\n  Box,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport Widget from '../../components/Widget';\nimport { Typography } from '../../components/Wrappers';\nimport OpenChannelDialog from '../../components/OpenChannelDialog';\nimport ChannelItem from '../../components/ChannelItem';\nimport PendingOpenChannelItem from '../../components/PendingOpenChannelItem';\n\nimport {\n  lndListPeersRequest,\n  lndListChannelsRequest,\n  lndPendingChannelsRequest,\n  lndConnectPeerRequest,\n  lndDisconnectPeerRequest,\n} from '../../squeakclient/requests';\nimport {\n  reloadRoute,\n} from '../../navigation/navigation';\n\nexport default function LightningNodePage() {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const { pubkey, host, port } = useParams();\n  const [value, setValue] = useState(0);\n  const [peers, setPeers] = useState(null);\n  const [channels, setChannels] = useState(null);\n  const [pendingChannels, setPendingChannels] = useState(null);\n  const [openChannelDialogOpen, setOpenChannelDialogOpen] = useState(false);\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleClickConnectPeer = () => {\n    const lightningHost = `${host}:${port}`;\n    connectPeer(pubkey, lightningHost);\n  };\n\n  const handleClickOpenChannel = () => {\n    console.log('Handle click open channel.');\n    setOpenChannelDialogOpen(true);\n  };\n\n  const handleCloseOpenChannelDialog = () => {\n    setOpenChannelDialogOpen(false);\n  };\n\n  const handleClickDisconnectPeer = () => {\n    disconnectPeer(pubkey);\n  };\n\n  const isConnected = () => {\n    if (peers == null) {\n      return false;\n    }\n    let i;\n    for (i = 0; i < peers.length; i++) {\n      if (pubkey === peers[i].getPubKey()) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const hasChannelToPeer = () => {\n    if (channels == null) {\n      return false;\n    }\n    let i;\n    for (i = 0; i < channels.length; i++) {\n      if (pubkey === channels[i].getRemotePubkey()) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const listPeers = () => {\n    lndListPeersRequest(setPeers);\n  };\n  const listChannels = () => {\n    lndListChannelsRequest(setChannels);\n  };\n  const getPendingChannels = () => {\n    lndPendingChannelsRequest(setPendingChannels);\n  };\n  const connectPeer = (pubkey, host) => {\n    lndConnectPeerRequest(pubkey, host,\n      () => {\n        reloadRoute(history);\n      },\n      (err) => {\n        alert(err.message);\n      });\n  };\n  const disconnectPeer = (pubkey) => {\n    lndDisconnectPeerRequest(pubkey, () => {\n      reloadRoute(history);\n    });\n  };\n\n  useEffect(() => {\n    listPeers();\n  }, []);\n  useEffect(() => {\n    listChannels();\n  }, []);\n  useEffect(() => {\n    getPendingChannels();\n  }, []);\n\n  function ConnectPeerButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                handleClickConnectPeer();\n              }}\n            >\n              Connect Peer\n            </Button>\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function DisconnectPeerButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                handleClickDisconnectPeer();\n              }}\n            >\n              Disconnect Peer\n            </Button>\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function OpenChannelButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                handleClickOpenChannel();\n              }}\n            >\n              Open Channel\n            </Button>\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function NodeInfoGridItem() {\n    return (\n      <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Typography color=\"text\" colorBrightness=\"secondary\">\n                pubkey\n              </Typography>\n              <Typography size=\"md\">{pubkey}</Typography>\n            </Grid>\n          </Grid>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Typography color=\"text\" colorBrightness=\"secondary\">\n                host\n              </Typography>\n              <Typography size=\"md\">{host}</Typography>\n            </Grid>\n          </Grid>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Typography color=\"text\" colorBrightness=\"secondary\">\n                port\n              </Typography>\n              <Typography size=\"md\">{port}</Typography>\n            </Grid>\n          </Grid>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Typography color=\"text\" colorBrightness=\"secondary\">\n                connected\n              </Typography>\n              <Typography size=\"md\">\n                {IsConnected()}\n              </Typography>\n              {isConnected()\n                ? DisconnectPeerButton()\n                : ConnectPeerButton()}\n            </Grid>\n          </Grid>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Typography color=\"text\" colorBrightness=\"secondary\">\n                channel to peer\n              </Typography>\n              <Typography size=\"md\">\n                {HasChannelToPeer()}\n              </Typography>\n              {!hasChannelToPeer()\n            && OpenChannelButton()}\n            </Grid>\n          </Grid>\n\n        </Widget>\n      </Grid>\n    );\n  }\n\n  function ChannelsGridItem() {\n    const nodeChannels = channels.filter((channel) => channel.getRemotePubkey() === pubkey);\n    const nodePendingOpenChannels = pendingChannels.getPendingOpenChannelsList().filter((pendingOpenChannel) => pendingOpenChannel.getChannel().getRemoteNodePub() === pubkey);\n    return (\n      <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={12}>\n              {nodePendingOpenChannels.map((pendingOpenChannel) => (\n                <Box\n                  p={1}\n                  key={pendingOpenChannel.getChannel().getChannelPoint()}\n                >\n                  <PendingOpenChannelItem\n                    key={pendingOpenChannel.getChannel().getChannelPoint()}\n                    pendingOpenChannel={pendingOpenChannel}\n                  />\n                </Box>\n              ))}\n              {nodeChannels.map((channel) => (\n                <Box\n                  p={1}\n                  key={channel.getChannelPoint()}\n                >\n                  <ChannelItem\n                    key={channel.getChannelPoint()}\n                    channel={channel}\n                  />\n                </Box>\n              ))}\n            </Grid>\n          </Grid>\n        </Widget>\n      </Grid>\n    );\n  }\n\n  function IsConnected() {\n    return (\n      isConnected().toString()\n    );\n  }\n\n  function HasChannelToPeer() {\n    return (\n      hasChannelToPeer().toString()\n    );\n  }\n\n  function NoPubkeyContent() {\n    return (\n      <div>\n        No pubkey.\n      </div>\n    );\n  }\n\n  function PubkeyContent() {\n    return (\n      <>\n        <Grid container spacing={4}>\n          {NodeInfoGridItem()}\n        </Grid>\n      </>\n    );\n  }\n\n  function ChannelsContent() {\n    if (channels == null || pendingChannels == null) {\n      return (\n        <>\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Widget disableWidgetMenu>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"center\"\n                >\n                  <Grid item xs={12}>\n                    Unable to load channels\n                  </Grid>\n                </Grid>\n              </Widget>\n            </Grid>\n          </Grid>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <Grid container spacing={4}>\n          {ChannelsGridItem()}\n        </Grid>\n      </>\n    );\n  }\n\n  function TabPanel(props) {\n    const {\n      children, value, index, ...other\n    } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <div>{children}</div>\n        )}\n      </div>\n    );\n  }\n\n  function LightningNodeTabs() {\n    return (\n      <>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Node Info\" {...a11yProps(0)} />\n            <Tab label=\"Channels\" {...a11yProps(1)} />\n            <Tab label=\"Routes\" {...a11yProps(2)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          {PubkeyContent()}\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          {ChannelsContent()}\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          Show routes here\n        </TabPanel>\n      </>\n    );\n  }\n\n  function OpenChannelDialogContent() {\n    return (\n      <>\n        <OpenChannelDialog\n          open={openChannelDialogOpen}\n          pubkey={pubkey}\n          handleClose={handleCloseOpenChannelDialog}\n        />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {pubkey\n        ? LightningNodeTabs()\n        : NoPubkeyContent()}\n      {OpenChannelDialogContent()}\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  dashedBorder: {\n    border: '1px dashed',\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  lndCloseChannelRequest,\n} from '../../squeakclient/requests';\n\nexport default function CloseChannelDialog({\n  open,\n  txId,\n  outputIndex,\n  handleClose,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const resetFields = () => {\n    // TODO\n  };\n\n  const handleResponse = (response) => {\n    // TODO: handle streaming response.\n    // TODO: go to channel page instead of showing alert.\n  };\n\n  const handleErr = (err) => {\n    alert(`Error closing channel: ${err}`);\n  };\n\n  const closeChannel = (txId, outputIndex) => {\n    lndCloseChannelRequest(txId, outputIndex, handleResponse, handleErr);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log('txId:', txId);\n    console.log('outputIndex:', outputIndex);\n    closeChannel(txId, outputIndex);\n    handleClose();\n  }\n\n  function TxIdInput() {\n    return (\n      <TextField\n        id=\"txid-textarea\"\n        label=\"TxId\"\n        required\n        autoFocus\n        value={txId}\n        fullWidth\n        inputProps={{\n          readOnly: true,\n        }}\n      />\n    );\n  }\n\n  function OutputIndexInput() {\n    return (\n      <TextField\n        id=\"outputindex-textarea\"\n        label=\"Output Index\"\n        required\n        autoFocus\n        value={outputIndex}\n        fullWidth\n        inputProps={{\n          readOnly: true,\n        }}\n      />\n    );\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function CloseChannelButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Close Channel\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Close Channel</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          {TxIdInput()}\n        </DialogContent>\n        <DialogContent>\n          {OutputIndexInput()}\n        </DialogContent>\n        <DialogActions>\n          {CancelButton()}\n          {CloseChannelButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Grid,\n  Button,\n  AppBar,\n  Tabs,\n  Tab,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport Widget from '../../components/Widget';\nimport { Typography } from '../../components/Wrappers';\nimport CloseChannelDialog from '../../components/CloseChannelDialog';\n\nimport {\n  lndListChannelsRequest,\n} from '../../squeakclient/requests';\n\nexport default function LightningNodePage() {\n  const classes = useStyles();\n\n  const { txId, outputIndex } = useParams();\n  const [value, setValue] = useState(0);\n  const [channels, setChannels] = useState(null);\n  const [closeChannelDialogOpen, setCloseChannelDialogOpen] = useState(false);\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const getChannelPoint = () => `${txId}:${outputIndex}`;\n\n  const handleCloseCloseChannelDialog = () => {\n    setCloseChannelDialogOpen(false);\n  };\n\n  const isChannelOpen = () => {\n    if (channels == null) {\n      return false;\n    }\n    let i;\n    for (i = 0; i < channels.length; i++) {\n      if (getChannelPoint() === channels[i].getChannelPoint()) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const listChannels = () => {\n    lndListChannelsRequest(setChannels);\n  };\n\n  const handleClickCloseChannel = () => {\n    console.log('Handle click close channel.');\n    setCloseChannelDialogOpen(true);\n  };\n\n  useEffect(() => {\n    listChannels();\n  }, []);\n\n  function CloseChannelButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                handleClickCloseChannel();\n              }}\n            >\n              Close Channel\n            </Button>\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function ChannelInfoGridItem() {\n    return (\n      <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Typography color=\"text\" colorBrightness=\"secondary\">\n                channel point\n              </Typography>\n              <Typography size=\"md\">{`${txId}:${outputIndex}`}</Typography>\n            </Grid>\n          </Grid>\n\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Typography color=\"text\" colorBrightness=\"secondary\">\n                channel status\n              </Typography>\n              <Typography size=\"md\">\n                {isChannelOpen()\n                  ? 'open'\n                  : 'closed'}\n              </Typography>\n              {isChannelOpen()\n                ? CloseChannelButton()\n                : 'no'}\n            </Grid>\n          </Grid>\n\n        </Widget>\n      </Grid>\n    );\n  }\n\n  function TabPanel(props) {\n    const {\n      children, value, index, ...other\n    } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <div>{children}</div>\n        )}\n      </div>\n    );\n  }\n\n  function ChannelTabs() {\n    return (\n      <>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Channel Info\" {...a11yProps(0)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          {ChannelInfoGridItem()}\n        </TabPanel>\n      </>\n    );\n  }\n\n  function CloseChannelDialogContent() {\n    return (\n      <>\n        <CloseChannelDialog\n          open={closeChannelDialogOpen}\n          txId={txId}\n          outputIndex={outputIndex}\n          handleClose={handleCloseCloseChannelDialog}\n        />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {ChannelTabs()}\n      {CloseChannelDialogContent()}\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\nimport tinycolor from 'tinycolor2';\n\nexport default makeStyles((theme) => ({\n  layoutContainer: {\n    height: 200,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: theme.spacing(2),\n    border: '1px dashed',\n    borderColor: theme.palette.primary.main,\n    position: 'relative',\n  },\n  layoutText: {\n    color: tinycolor(theme.palette.background.light)\n      .darken()\n      .toHexString(),\n  },\n  layoutButtonsRow: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  layoutButton: {\n    backgroundColor: theme.palette.background.light,\n    width: 125,\n    height: 50,\n    outline: 'none',\n    border: 'none',\n  },\n  layoutButtonActive: {\n    backgroundColor: tinycolor(theme.palette.background.light)\n      .darken()\n      .toHexString(),\n  },\n  buttonsContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    marginTop: theme.spacing(2),\n  },\n  notificationCallButton: {\n    color: 'white',\n    marginBottom: theme.spacing(1),\n    textTransform: 'none',\n  },\n  codeContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: theme.spacing(2),\n  },\n  codeComponent: {\n    flexGrow: 1,\n  },\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: 'absolute',\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: 'hidden',\n  },\n  notification: {\n    display: 'flex',\n    alignItems: 'center',\n    background: 'transparent',\n    boxShadow: 'none',\n    overflow: 'visible',\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n}));\n","import React, { useState } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Close as CloseIcon } from '@material-ui/icons';\nimport { ToastContainer, toast } from 'react-toastify';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport classnames from 'classnames';\n\n// styles\nimport 'react-toastify/dist/ReactToastify.css';\nimport useStyles from './styles';\n\n// components\nimport Widget from '../../components/Widget/Widget';\nimport PageTitle from '../../components/PageTitle/PageTitle';\nimport Notification from '../../components/Notification';\nimport { Typography, Button } from '../../components/Wrappers/Wrappers';\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nexport default function NotificationsPage(props) {\n  const classes = useStyles();\n\n  // local\n  const [notificationsPosition, setNotificationPosition] = useState(2);\n  const [errorToastId, setErrorToastId] = useState(null);\n\n  return (\n    <>\n      <PageTitle title=\"Notifications\" />\n      <Grid container spacing={8}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Layout Options\" disableWidgetMenu>\n            <Typography>\n              There are few position options available for notifications. You\n              can click any of them to change notifications position:\n            </Typography>\n            <div className={classes.layoutContainer}>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(0)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 0,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(1)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 1,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(2)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 2,\n                  })}\n                />\n              </div>\n              <Typography className={classes.layoutText} size=\"md\">\n                Click any position\n              </Typography>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(3)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 3,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(4)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 4,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(5)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 5,\n                  })}\n                />\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notifications Types\" disableWidgetMenu>\n            <Typography>\n              Different types of notifications for lost of use cases. Custom\n              classes are also supported.\n            </Typography>\n            <div className={classes.buttonsContainer}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => handleNotificationCall('info')}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Info Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => handleNotificationCall('error')}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Error + Retry Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={() => handleNotificationCall('success')}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Success Message\n              </Button>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Usage\" disableWidgetMenu>\n            <Typography>\n              Notifications are created with the help of\n              {' '}\n              <a href=\"https://github.com/fkhadra/react-toastify\">\n                react-toastify\n              </a>\n            </Typography>\n            <div className={classes.codeContainer}>\n              <SyntaxHighlighter\n                className={classes.codeComponent}\n                language=\"javascript\"\n                style={docco}\n              >\n                {`\n  // import needed components, functions and styles\n  import { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\n\n  const Page = () => {\n    <div>\n      <ToastContainer />\n      <button onClick={() => toast('Toast Message')}>\n        show notification\n      </button>\n    </div>\n  };\n            `}\n              </SyntaxHighlighter>\n              <Typography variant=\"caption\">\n                For more API information refer to the library documentation\n              </Typography>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"message\"\n              message=\"Thanks for Checking out Messenger\"\n              variant=\"contained\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"customer\"\n              message=\"New customer is registered\"\n              variant=\"contained\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"shipped\"\n              message=\"The order was shipped\"\n              variant=\"contained\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"delivered\"\n              message=\"The order was delivered\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"defence\"\n              message=\"5 Defence alerts\"\n              variant=\"contained\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              variant=\"rounded\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              variant=\"rounded\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              variant=\"rounded\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              variant=\"rounded\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    const componentProps = {\n      type: 'message',\n      message: 'Message was sent successfully!',\n      variant: 'contained',\n      color: 'success',\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: 'success',\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    let componentProps;\n\n    if (errorToastId && notificationType === 'error') return;\n\n    switch (notificationType) {\n      case 'info':\n        componentProps = {\n          type: 'feedback',\n          message: 'New user feedback received',\n          variant: 'contained',\n          color: 'primary',\n        };\n        break;\n      case 'error':\n        componentProps = {\n          type: 'message',\n          message: 'Message was not sent!',\n          variant: 'contained',\n          color: 'secondary',\n          extraButton: 'Resend',\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: 'shipped',\n          message: 'The item was shipped',\n          variant: 'contained',\n          color: 'success',\n        };\n    }\n\n    const toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === 'error' && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === 'error') setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n}\n\n// #############################################################\nfunction CloseButton({ closeToast, className }) {\n  return <CloseIcon className={className} onClick={closeToast} />;\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  mapContainer: {\n    height: '100%',\n    margin: -theme.spacing(1) * 3,\n  },\n}));\n","import React from 'react';\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n} from 'react-google-maps';\n\n// styles\nimport useStyles from './styles';\n\nconst BasicMap = withScriptjs(\n  withGoogleMap(() => (\n    <GoogleMap\n      defaultZoom={12}\n      defaultCenter={{\n        lat: parseFloat(-37.813179),\n        lng: parseFloat(144.950259),\n      }}\n    >\n      <Marker position={{ lat: -37.813179, lng: 144.950259 }} />\n    </GoogleMap>\n  )),\n);\n\nexport default function Maps() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.mapContainer}>\n      <BasicMap\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyB7OXmzfQYua_1LEhRdqsoYzyJOPh9hGLg\"\n        loadingElement={<div style={{ height: 'inherit', width: 'inherit' }} />}\n        containerElement={<div style={{ height: '100%' }} />}\n        mapElement={<div style={{ height: '100%' }} />}\n      />\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  createSigningProfileRequest,\n} from '../../squeakclient/requests';\nimport {\n  goToProfilePage,\n} from '../../navigation/navigation';\n\nexport default function CreateSigningProfileDialog({\n  open,\n  handleClose,\n  ...props\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [profileName, setProfileName] = useState('');\n\n  const resetFields = () => {\n    setProfileName('');\n  };\n\n  const handleChangeProfileName = (event) => {\n    setProfileName(event.target.value);\n  };\n\n  const handleResponse = (response) => {\n    goToProfilePage(history, response.getProfileId());\n  };\n\n  const handleErr = (err) => {\n    alert(`Error creating signing profile: ${err}`);\n  };\n\n  const createSigningProfile = (profileName) => {\n    createSigningProfileRequest(profileName, handleResponse, handleErr);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log('profileName:', profileName);\n    if (!profileName) {\n      alert('Profile Name cannot be empty.');\n      return;\n    }\n    createSigningProfile(profileName);\n    handleClose();\n  }\n\n  function CreateSigningProfileNameInput() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Profile Name\"\n        required\n        autoFocus\n        value={profileName}\n        onChange={handleChangeProfileName}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n      />\n    );\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function CreateSigningProfilButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Create Signing Profile\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Create Signing Profile</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          {CreateSigningProfileNameInput()}\n        </DialogContent>\n        <DialogActions>\n          {CancelButton()}\n          {CreateSigningProfilButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  importSigningProfileRequest,\n} from '../../squeakclient/requests';\nimport {\n  goToProfilePage,\n} from '../../navigation/navigation';\n\nexport default function ImportSigningProfileDialog({\n  open,\n  handleClose,\n  ...props\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [profileName, setProfileName] = useState('');\n  const [privateKey, setPrivateKey] = useState('');\n\n  const resetFields = () => {\n    setProfileName('');\n  };\n\n  const handleChangeProfileName = (event) => {\n    setProfileName(event.target.value);\n  };\n\n  const handleChangePrivateKey = (event) => {\n    setPrivateKey(event.target.value);\n  };\n\n  const handleResponse = (response) => {\n    goToProfilePage(history, response.getProfileId());\n  };\n\n  const handleErr = (err) => {\n    alert(`Error creating contact profile: ${err}`);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log('profileName:', profileName);\n    console.log('privateKey:', privateKey);\n    if (!profileName) {\n      alert('Profile Name cannot be empty.');\n      return;\n    }\n    if (!privateKey) {\n      alert('Private Key cannot be empty.');\n      return;\n    }\n    importSigningProfileRequest(profileName, privateKey, handleResponse, handleErr);\n    handleClose();\n  }\n\n  function ImportSigningProfileNameInput() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Profile Name\"\n        required\n        autoFocus\n        value={profileName}\n        onChange={handleChangeProfileName}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n      />\n    );\n  }\n\n  function ImportSigningProfilePrivateKeyInput() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Private Key\"\n        required\n        autoFocus\n        value={privateKey}\n        onChange={handleChangePrivateKey}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n      />\n    );\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function ImportSigningProfilButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Import Signing Profile\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Import Signing Profile</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          {ImportSigningProfileNameInput()}\n        </DialogContent>\n        <DialogContent>\n          {ImportSigningProfilePrivateKeyInput()}\n        </DialogContent>\n        <DialogActions>\n          {CancelButton()}\n          {ImportSigningProfilButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport CardHeader from '@material-ui/core/CardHeader';\n\n// icons\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\nimport useStyles from '../../pages/wallet/styles';\nimport SqueakUserAvatar from '../SqueakUserAvatar';\nimport SqueakProfileFollowingIndicator from '../SqueakProfileFollowingIndicator';\n\nimport {\n  goToProfilePage,\n} from '../../navigation/navigation';\n\nexport default function ProfileListItem({\n  profile,\n  ...props\n}) {\n  const classes = useStyles({\n    clickable: true,\n  });\n\n  const history = useHistory();\n\n  const onProfileClick = (event) => {\n    event.preventDefault();\n    console.log('Handling profile click...');\n    const profileId = profile.getProfileId();\n    // const host = getPeerHost();\n    // const port = getPeerPort();\n    goToProfilePage(history, profileId);\n  };\n\n  // const getPeerHost = () => {\n  //   const address = peer.getAddress();\n  //   if (address == null) {\n  //     return null;\n  //   }\n  //   const pieces = address.split(\":\");\n  //   return pieces[0];\n  // }\n  //\n  // const getPeerPort = () => {\n  //   const address = peer.getAddress();\n  //   if (address == null) {\n  //     return null;\n  //   }\n  //   const pieces = address.split(\":\");\n  //   if (pieces.length < 2) {\n  //     return null;\n  //   }\n  //   return pieces[1];\n  // }\n\n  const name = profile.getProfileName();\n  const address = profile.getAddress();\n\n  function ProfileCardContent() {\n    return (\n      <>\n        <Box>\n          {profile.getHasPrivateKey() && <VpnKeyIcon />}\n        </Box>\n        <Box>\n          {`Address: ${address}`}\n        </Box>\n        <SqueakProfileFollowingIndicator\n          squeakProfile={profile}\n        />\n      </>\n    );\n  }\n\n  return (\n    <Card\n      className={classes.root}\n      onClick={onProfileClick}\n    >\n      <CardHeader\n        avatar={(\n          <SqueakUserAvatar\n            squeakAddress={profile.getAddress()}\n            squeakProfile={profile}\n          />\n)}\n        title={`Name: ${name}`}\n        subheader={ProfileCardContent()}\n      />\n    </Card>\n  );\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Grid,\n  Button,\n  Tabs,\n  Tab,\n  AppBar,\n  Box,\n  CircularProgress,\n} from '@material-ui/core';\n\n// styles\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport Widget from '../../components/Widget';\nimport CreateSigningProfileDialog from '../../components/CreateSigningProfileDialog';\nimport ImportSigningProfileDialog from '../../components/ImportSigningProfileDialog';\nimport CreateContactProfileDialog from '../../components/CreateContactProfileDialog';\nimport ProfileListItem from '../../components/ProfileListItem';\n\n// data\n\nimport {\n  getProfilesRequest,\n} from '../../squeakclient/requests';\n\nexport default function Profiles() {\n  const classes = useStyles();\n  const [profiles, setProfiles] = useState([]);\n  const [createSigningProfileDialogOpen, setCreateSigningProfileDialogOpen] = useState(false);\n  const [importSigningProfileDialogOpen, setImportSigningProfileDialogOpen] = useState(false);\n  const [createContactProfileDialogOpen, setCreateContactProfileDialogOpen] = useState(false);\n  const [value, setValue] = useState(0);\n  const [waitingForProfiles, setWaitingForProfiles] = useState(false);\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const loadProfiles = useCallback(() => {\n    setWaitingForProfiles(true);\n    getProfilesRequest(handleLoadedProfiles);\n  },\n  []);\n\n  const handleClickOpenCreateSigningProfileDialog = () => {\n    setCreateSigningProfileDialogOpen(true);\n  };\n\n  const handleCloseCreateSigningProfileDialog = () => {\n    setCreateSigningProfileDialogOpen(false);\n  };\n\n  const handleClickOpenCreateContactProfileDialog = () => {\n    setCreateContactProfileDialogOpen(true);\n  };\n\n  const handleCloseCreateContactProfileDialog = () => {\n    setCreateContactProfileDialogOpen(false);\n  };\n\n  const handleClickOpenImportSigningProfileDialog = () => {\n    setImportSigningProfileDialogOpen(true);\n  };\n\n  const handleCloseImportSigningProfileDialog = () => {\n    setImportSigningProfileDialogOpen(false);\n  };\n\n  const handleLoadedProfiles = (loadedProfiles) => {\n    setWaitingForProfiles(false);\n    setProfiles(loadedProfiles);\n  };\n\n  useEffect(() => {\n    loadProfiles();\n  }, [loadProfiles]);\n\n  function TabPanel(props) {\n    const {\n      children, value, index, ...other\n    } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <div>{children}</div>\n        )}\n      </div>\n    );\n  }\n\n  function ProfilesTabs() {\n    return (\n      <>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Profiles\" {...a11yProps(0)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          {ProfilesContent()}\n        </TabPanel>\n      </>\n    );\n  }\n\n  function ProfilesContent() {\n    return (\n      <>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <Widget disableWidgetMenu>\n              {CreateSigningProfileButton()}\n              {ImportSigningProfileButton()}\n              {CreateContactProfileButton()}\n              {ProfilesGridItem(profiles)}\n            </Widget>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n\n  function ProfilesGridItem(profiles) {\n    return (\n      <Grid item xs={12}>\n        {profiles.map((profile) => (\n          <Box\n            p={1}\n            key={profile.getProfileName()}\n          >\n            <ProfileListItem\n              key={profile.getProfileName()}\n              handlePeerClick={() => console.log('clicked profile')}\n              profile={profile}\n            />\n          </Box>\n        ))}\n      </Grid>\n    );\n  }\n\n  function CreateSigningProfileButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                handleClickOpenCreateSigningProfileDialog();\n              }}\n            >\n              Create Signing Profile\n            </Button>\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function ImportSigningProfileButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                handleClickOpenImportSigningProfileDialog();\n              }}\n            >\n              Import Signing Profile\n            </Button>\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function CreateContactProfileButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                handleClickOpenCreateContactProfileDialog();\n              }}\n            >\n              Add contact\n            </Button>\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function CreateSigningProfileDialogContent() {\n    return (\n      <>\n        <CreateSigningProfileDialog\n          open={createSigningProfileDialogOpen}\n          handleClose={handleCloseCreateSigningProfileDialog}\n        />\n      </>\n    );\n  }\n\n  function ImportSigningProfileDialogContent() {\n    return (\n      <>\n        <ImportSigningProfileDialog\n          open={importSigningProfileDialogOpen}\n          handleClose={handleCloseImportSigningProfileDialog}\n        />\n      </>\n    );\n  }\n\n  function CreateContactProfileDialogContent() {\n    return (\n      <>\n        <CreateContactProfileDialog\n          open={createContactProfileDialogOpen}\n          handleClose={handleCloseCreateContactProfileDialog}\n        />\n      </>\n    );\n  }\n\n  function GridContent() {\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={9}>\n          {ProfilesTabs()}\n        </Grid>\n        <Grid item xs={12} sm={3} />\n      </Grid>\n    );\n  }\n\n  return (\n    <>\n      {GridContent()}\n      {waitingForProfiles && <CircularProgress size={48} className={classes.buttonProgress} />}\n      {CreateSigningProfileDialogContent()}\n      {ImportSigningProfileDialogContent()}\n      {CreateContactProfileDialogContent()}\n    < />\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Grid,\n  Button,\n  Typography,\n} from '@material-ui/core';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n// styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// components\nimport Widget from '../../components/Widget';\n\n// data\n\nimport {\n  getPaymentSummaryRequest,\n} from '../../squeakclient/requests';\nimport {\n  goToSentPaymentsPage,\n  goToReceivedPaymentsPage,\n} from '../../navigation/navigation';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function Payments() {\n  const classes = useStyles();\n  const [paymentSummary, setPaymentSummary] = useState(null);\n  const history = useHistory();\n\n  const loadPaymentSummary = () => {\n    getPaymentSummaryRequest((paymentsSummaryReply) => {\n      setPaymentSummary(paymentsSummaryReply.getPaymentSummary());\n    });\n  };\n\n  useEffect(() => {\n    loadPaymentSummary();\n  }, []);\n\n  function PaymentSummaryContent() {\n    return (\n      <>\n        {SentPaymentContent()}\n        {ReceivedPaymentContent()}\n      </>\n    );\n  }\n\n  function SentPaymentContent() {\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Widget disableWidgetMenu>\n            <Grid item>\n              <FormLabel>\n                Total amount spent\n              </FormLabel>\n              <Typography size=\"md\">\n                {paymentSummary.getAmountSpentMsat() / 1000}\n                {' '}\n                sats\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormLabel>\n                Number of sent payments\n              </FormLabel>\n              <Typography size=\"md\">\n                {paymentSummary.getNumSentPayments()}\n              </Typography>\n              {ViewSentPaymentsButton()}\n            </Grid>\n          </Widget>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  function ReceivedPaymentContent() {\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Widget disableWidgetMenu>\n            <Grid item>\n              <FormLabel>\n                Total amount earned\n              </FormLabel>\n              <Typography size=\"md\">\n                {paymentSummary.getAmountEarnedMsat() / 1000}\n                {' '}\n                sats\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormLabel>\n                Number of received payments\n              </FormLabel>\n              <Typography size=\"md\">\n                {paymentSummary.getNumReceivedPayments()}\n              </Typography>\n              {ViewReceivedPaymentsButton()}\n            </Grid>\n          </Widget>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  function ViewSentPaymentsButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                goToSentPaymentsPage(history);\n              }}\n            >\n              View Sent Payments\n            </Button>\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function ViewReceivedPaymentsButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                goToReceivedPaymentsPage(history);\n              }}\n            >\n              View Received Payments\n            </Button>\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function GridContent() {\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={9}>\n          {paymentSummary && PaymentSummaryContent()}\n        </Grid>\n        <Grid item xs={12} sm={3} />\n      </Grid>\n    );\n  }\n\n  return (\n    <>\n      {GridContent()}\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Typography,\n  Grid,\n  Box,\n  Link,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\n// styles\nimport moment from 'moment';\n\nimport {\n  goToSqueakPage,\n  goToPeerAddressPage,\n  goToLightningNodePage,\n} from '../../navigation/navigation';\n\nexport default function SentPayment({\n  sentPayment,\n  ...props\n}) {\n  const history = useHistory();\n\n  const onSqueakClick = (event) => {\n    event.preventDefault();\n    const hash = sentPayment.getSqueakHash();\n    console.log(`Handling squeak click for hash: ${hash}`);\n    goToSqueakPage(history, hash);\n  };\n\n  const onPeerClick = (event) => {\n    event.preventDefault();\n    goToPeerAddressPage(\n      history,\n      sentPayment.getPeerAddress().getHost(),\n      sentPayment.getPeerAddress().getPort(),\n    );\n  };\n\n  const onLightningNodeClick = (event) => {\n    event.preventDefault();\n    const nodePubkey = sentPayment.getNodePubkey();\n    console.log(`Handling lightning node click for nodePubkey: ${nodePubkey}`);\n    goToLightningNodePage(history, nodePubkey);\n  };\n\n  function PeerDisplay() {\n    const peerAddress = sentPayment.getPeerAddress();\n    const peerAddressText = `${peerAddress.getHost()}:${peerAddress.getPort()}`;\n    return (\n      <Box>\n        <Typography\n          size=\"md\"\n        >\n          Peer:\n          {' '}\n          <Link href=\"#\" onClick={onPeerClick}>\n            {peerAddressText}\n          </Link>\n        </Typography>\n      </Box>\n    );\n  }\n\n  console.log(sentPayment);\n  return (\n    <Box\n      p={1}\n      m={0}\n      style={{ backgroundColor: 'lightgray' }}\n    >\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          <Box fontWeight=\"fontWeightBold\">\n            {sentPayment.getPriceMsat()}\n            {' '}\n            msats\n          </Box>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          {moment(sentPayment.getTimeMs()).format('DD MMM YYYY hh:mm a')}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          Squeak hash:\n          <Link\n            href=\"#\"\n            onClick={onSqueakClick}\n          >\n            <span> </span>\n            {sentPayment.getSqueakHash()}\n          </Link>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          Peer:\n          {' '}\n          {PeerDisplay()}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          Lightning node:\n          <Link\n            href=\"#\"\n            onClick={onLightningNodeClick}\n          >\n            <span> </span>\n            {sentPayment.getNodePubkey()}\n          </Link>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          Valid:\n          <span> </span>\n          {sentPayment.getValid().toString()}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\nimport { green } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  dashedBorder: {\n    border: '1px dashed',\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  },\n  refreshFab: {\n    position: 'fixed',\n    top: theme.spacing(14),\n    margin: 'auto',\n    justifyContent: 'center',\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Grid,\n  Tabs,\n  Tab,\n  AppBar,\n  Box,\n  Button,\n  CircularProgress,\n} from '@material-ui/core';\n\nimport ReplayIcon from '@material-ui/icons/Replay';\n\n// components\nimport Widget from '../../components/Widget';\nimport SentPayment from '../../components/SentPayment';\n\n// styles\nimport useStyles from './styles';\n\n// data\n\nimport {\n  getSentPaymentsRequest,\n} from '../../squeakclient/requests';\n\nconst SENT_PAYMENTS_PER_PAGE = 10;\n\n\nexport default function SentPayments() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [sentPayments, setSentPayments] = useState([]);\n  const [waitingForSentPayments, setWaitingForSentPayments] = React.useState(false);\n\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  // const loadSentPayments = () => {\n  //   getSentPaymentsRequest((sentPaymentsReply) => {\n  //     setSentPayments(sentPaymentsReply.getSentPaymentsList());\n  //   });\n  // };\n  const loadSentPayments = useCallback((limit, lastSentPayment) => {\n    setWaitingForSentPayments(true);\n    getSentPaymentsRequest(limit, lastSentPayment, handleLoadedSentPayments);\n  },\n  []);\n\n  const handleLoadedSentPayments = (reply) => {\n    const loadedSentPayments = reply.getSentPaymentsList();\n    setWaitingForSentPayments(false);\n    setSentPayments((prevSentPayments) => {\n      if (!prevSentPayments) {\n        return loadedSentPayments;\n      }\n      return prevSentPayments.concat(loadedSentPayments);\n    });\n  };\n\n  useEffect(() => {\n    loadSentPayments(SENT_PAYMENTS_PER_PAGE, null);\n  }, [loadSentPayments]);\n\n  function TabPanel(props) {\n    const {\n      children, value, index, ...other\n    } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <div>{children}</div>\n        )}\n      </div>\n    );\n  }\n\n  function PaymentsTabs() {\n    return (\n      <>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Sent Payments\" {...a11yProps(0)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          {SentPaymentsContent()}\n        </TabPanel>\n      </>\n    );\n  }\n\n  function SentPaymentsContent() {\n    return (\n      <>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <Widget disableWidgetMenu>\n              <div>\n                {sentPayments.map((sentPayment) => (\n                  <Box\n                    p={1}\n                    key={sentPayment.getSentPaymentId()}\n                  >\n                    <SentPayment\n                      sentPayment={sentPayment}\n                    />\n                  </Box>\n                ))}\n              </div>\n            </Widget>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n\n  function GridContent() {\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={9}>\n          {PaymentsTabs()}\n        </Grid>\n        <Grid item xs={12} sm={3} />\n        {ViewMoreSentPaymentsButton()}\n      </Grid>\n    );\n  }\n\n  function ViewMoreSentPaymentsButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.wrapper}>\n            {!waitingForSentPayments\n            && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={waitingForSentPayments}\n              onClick={() => {\n                const latestSentPayment = sentPayments.slice(-1).pop();\n                loadSentPayments(SENT_PAYMENTS_PER_PAGE, latestSentPayment);\n              }}\n            >\n              <ReplayIcon />\n              View more squeaks\n            </Button>\n            )}\n            {waitingForSentPayments && <CircularProgress size={48} className={classes.buttonProgress} />}\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {GridContent()}\n    < />\n  );\n}\n","import React from 'react';\nimport {\n  Typography,\n  Grid,\n  Box,\n  Link,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\n// styles\nimport moment from 'moment';\n\nimport {\n  goToSqueakPage,\n  goToPeerAddressPage,\n} from '../../navigation/navigation';\n\nexport default function ReceivedPayment({\n  receivedPayment,\n  ...props\n}) {\n  const history = useHistory();\n\n  const onSqueakClick = (event) => {\n    event.preventDefault();\n    const hash = receivedPayment.getSqueakHash();\n    console.log(`Handling squeak click for hash: ${hash}`);\n    goToSqueakPage(history, hash);\n  };\n\n  const onPeerClick = (event) => {\n    event.preventDefault();\n    goToPeerAddressPage(\n      history,\n      receivedPayment.getPeerAddress().getHost(),\n      receivedPayment.getPeerAddress().getPort(),\n    );\n  };\n\n  function PeerDisplay() {\n    const peerAddress = receivedPayment.getPeerAddress();\n    const peerAddressText = `${peerAddress.getHost()}:${peerAddress.getPort()}`;\n    return (\n      <Box>\n        <Typography\n          size=\"md\"\n        >\n          Peer:\n          {' '}\n          <Link href=\"#\" onClick={onPeerClick}>\n            {peerAddressText}\n          </Link>\n        </Typography>\n      </Box>\n    );\n  }\n\n  console.log('receivedPayment:');\n  console.log(receivedPayment);\n  return (\n    <Box\n      p={1}\n      m={0}\n      style={{ backgroundColor: 'lightgray' }}\n    >\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          <Box fontWeight=\"fontWeightBold\">\n            {receivedPayment.getPriceMsat()}\n            {' '}\n            msats\n          </Box>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          {moment(receivedPayment.getTimeMs()).format('DD MMM YYYY hh:mm a')}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          Squeak hash:\n          <Link\n            href=\"#\"\n            onClick={onSqueakClick}\n          >\n            <span> </span>\n            {receivedPayment.getSqueakHash()}\n          </Link>\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item>\n          {PeerDisplay()}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Button,\n  Tabs,\n  Tab,\n  AppBar,\n  Box,\n} from '@material-ui/core';\n\n// styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// components\nimport Widget from '../../components/Widget';\nimport ReceivedPayment from '../../components/ReceivedPayment';\n\n// data\n\nimport {\n  getReceivedPaymentsRequest,\n  reprocessReceivedPaymentsRequest,\n} from '../../squeakclient/requests';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function ReceivedPayments() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [receivedPayments, setReceivedPayments] = useState([]);\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const loadReceivedPayments = () => {\n    getReceivedPaymentsRequest((receivedPaymentsReply) => {\n      setReceivedPayments(receivedPaymentsReply.getReceivedPaymentsList());\n    });\n  };\n\n  const reprocessReceivedPayments = () => {\n    reprocessReceivedPaymentsRequest((response) => {\n      console.log('Successfully called reprocess received payments.');\n    });\n  };\n\n  useEffect(() => {\n    loadReceivedPayments();\n  }, []);\n\n  function TabPanel(props) {\n    const {\n      children, value, index, ...other\n    } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <div>{children}</div>\n        )}\n      </div>\n    );\n  }\n\n  function PaymentsTabs() {\n    return (\n      <>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Received Payments\" {...a11yProps(0)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          {ReceivedPaymentsContent()}\n        </TabPanel>\n      </>\n    );\n  }\n\n  function ReprocessReceivedPaymentsButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                reprocessReceivedPayments();\n              }}\n            >\n              Reprocess Received Payments\n            </Button>\n            This only needs to be used if the LND node is replaced.\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function ReceivedPaymentsContent() {\n    console.log(`receivedPayments: ${receivedPayments}`);\n    return (\n      <>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <Widget disableWidgetMenu>\n\n              {ReprocessReceivedPaymentsButton()}\n\n              <div>\n                {receivedPayments.map((receivedPayment) => (\n                  <Box\n                    p={1}\n                    key={receivedPayment.getReceivedPaymentId()}\n                  >\n                    <ReceivedPayment\n                      receivedPayment={receivedPayment}\n                    />\n                  </Box>\n                ))}\n              </div>\n            </Widget>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n\n  function GridContent() {\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={9}>\n          {PaymentsTabs()}\n        </Grid>\n        <Grid item xs={12} sm={3} />\n      </Grid>\n    );\n  }\n\n  return (\n    <>\n      {GridContent()}\n    < />\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  dashedBorder: {\n    border: '1px dashed',\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  },\n}));\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Grid,\n  Button,\n  CircularProgress,\n} from '@material-ui/core';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport ReplayIcon from '@material-ui/icons/Replay';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport SqueakList from '../../components/SqueakList';\n\nimport {\n  getLikedSqueakDisplaysRequest,\n  getNetworkRequest,\n} from '../../squeakclient/requests';\n\nconst SQUEAKS_PER_PAGE = 10;\n\nexport default function LikedPage() {\n  const classes = useStyles();\n  const [squeaks, setSqueaks] = useState([]);\n  const [network, setNetwork] = useState('');\n  const [waitingForLikedSqueaks, setWaitingForLikedSqueaks] = useState(false);\n\n  const getSqueaks = useCallback((limit, lastEntry) => {\n    setWaitingForLikedSqueaks(true);\n    getLikedSqueakDisplaysRequest(limit, lastEntry, handleLoadedTimeline);\n  },\n  []);\n  const getNetwork = () => {\n    getNetworkRequest(setNetwork);\n  };\n\n  const handleLoadedTimeline = (loadedSqueaks) => {\n    setWaitingForLikedSqueaks(false);\n    setSqueaks((prevSqueaks) => {\n      if (!prevSqueaks) {\n        return loadedSqueaks;\n      }\n      return prevSqueaks.concat(loadedSqueaks);\n    });\n  };\n\n  useEffect(() => {\n    getSqueaks(SQUEAKS_PER_PAGE, null);\n  }, [getSqueaks]);\n  useEffect(() => {\n    getNetwork();\n  }, []);\n\n  function NoSqueaksContent() {\n    return (\n      <div>\n        Unable to load squeaks.\n      </div>\n    );\n  }\n\n  function SqueaksContent() {\n    return (\n      <>\n        <SqueakList\n          squeaks={squeaks}\n          network={network}\n          setSqueaksFn={setSqueaks}\n        />\n      </>\n    );\n  }\n\n  function GridContent() {\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={9}>\n          <Paper className={classes.paper}>\n            {(squeaks)\n              ? SqueaksContent()\n              : NoSqueaksContent()}\n          </Paper>\n          {ViewMoreSqueaksButton()}\n        </Grid>\n        <Grid item xs={12} sm={3}>\n          <Paper className={classes.paper} />\n        </Grid>\n      </Grid>\n    );\n  }\n\n  function ViewMoreSqueaksButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.wrapper}>\n            {!waitingForLikedSqueaks\n            && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={waitingForLikedSqueaks}\n              onClick={() => {\n                const latestSqueak = squeaks.slice(-1).pop();\n                getSqueaks(SQUEAKS_PER_PAGE, latestSqueak);\n              }}\n            >\n              <ReplayIcon />\n              View more squeaks\n            </Button>\n            )}\n            {waitingForLikedSqueaks && <CircularProgress size={48} className={classes.buttonProgress} />}\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {GridContent()}\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  titleBold: {\n    fontWeight: 600,\n  },\n  iconsBar: {\n    marginBottom: theme.spacing(4),\n    borderBottom: '1px solid',\n    borderBottomColor: `${theme.palette.text.hint}80`,\n  },\n  tab: {\n    color: `${theme.palette.primary.light}CC`,\n  },\n  materailIcon: {\n    display: 'flex',\n    paddingLeft: `${theme.spacing(4)}px !important`,\n    paddingRight: `${theme.spacing(4)}px !important`,\n    color: theme.palette.text.secondary,\n    fontSize: 24,\n    overflowX: 'hidden',\n  },\n  materialIconText: {\n    marginLeft: theme.spacing(2),\n    fontSize: 14,\n  },\n  iconsContainer: {\n    boxShadow: theme.customShadows.widget,\n    overflow: 'hidden',\n    paddingBottom: theme.spacing(2),\n  },\n}));\n","import React, { useState } from 'react';\nimport {\n  Typography,\n  Grid,\n  Tabs,\n  Tab,\n  Paper,\n} from '@material-ui/core';\nimport * as Icons from '@material-ui/icons';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport PageTitle from '../../components/PageTitle/PageTitle';\n\n// icons sets\nimport 'font-awesome/css/font-awesome.min.css';\n\nexport default function IconsPage() {\n  const classes = useStyles();\n\n  // local\n  const [activeTabId, setActiveTabId] = useState(0);\n\n  return (\n    <>\n      <PageTitle title=\"Icons\" button=\"Action\" />\n      <Paper className={classes.iconsContainer}>\n        <Tabs\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          value={activeTabId}\n          onChange={(e, id) => setActiveTabId(id)}\n          className={classes.iconsBar}\n        >\n          <Tab label=\"Material Icons\" classes={{ root: classes.tab }} />\n          <Tab label=\"Font Awesome\" classes={{ root: classes.tab }} />\n        </Tabs>\n        {activeTabId === 0 && (\n        <div>\n          <Grid container spacing={2} className=\"icon-list\">\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccessAlarm />\n              <Typography className={classes.materialIconText}>\n                AccessAlarm\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccessAlarms />\n              <Typography className={classes.materialIconText}>\n                AccessAlarms\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Accessibility />\n              <Typography className={classes.materialIconText}>\n                Accessibility\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Accessible />\n              <Typography className={classes.materialIconText}>\n                Accessible\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccessibleForward />\n              <Typography className={classes.materialIconText}>\n                AccessibleForward\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccessTime />\n              <Typography className={classes.materialIconText}>\n                AccessTime\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccountBalance />\n              <Typography className={classes.materialIconText}>\n                AccountBalance\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccountBalanceWallet />\n              <Typography className={classes.materialIconText}>\n                AccountBalanceWallet\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccountBox />\n              <Typography className={classes.materialIconText}>\n                AccountBox\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccountCircle />\n              <Typography className={classes.materialIconText}>\n                AccountCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AcUnit />\n              <Typography className={classes.materialIconText}>\n                AcUnit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Adb />\n              <Typography className={classes.materialIconText}>Adb</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Adjust />\n              <Typography className={classes.materialIconText}>\n                Adjust\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatFlat />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatFlat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatFlatAngled />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatFlatAngled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatIndividualSuite />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatIndividualSuite\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatLegroomExtra />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatLegroomExtra\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatLegroomNormal />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatLegroomNormal\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatLegroomReduced />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatLegroomReduced\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatReclineExtra />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatReclineExtra\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatReclineNormal />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatReclineNormal\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirplanemodeActive />\n              <Typography className={classes.materialIconText}>\n                AirplanemodeActive\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirplanemodeInactive />\n              <Typography className={classes.materialIconText}>\n                AirplanemodeInactive\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Airplay />\n              <Typography className={classes.materialIconText}>\n                Airplay\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirportShuttle />\n              <Typography className={classes.materialIconText}>\n                AirportShuttle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Alarm />\n              <Typography className={classes.materialIconText}>\n                Alarm\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Album />\n              <Typography className={classes.materialIconText}>\n                Album\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AllInbox />\n              <Typography className={classes.materialIconText}>\n                AllInbox\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AllInclusive />\n              <Typography className={classes.materialIconText}>\n                AllInclusive\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AllOut />\n              <Typography className={classes.materialIconText}>\n                AllOut\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AlternateEmail />\n              <Typography className={classes.materialIconText}>\n                AlternateEmail\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Android />\n              <Typography className={classes.materialIconText}>\n                Android\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Announcement />\n              <Typography className={classes.materialIconText}>\n                Announcement\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Apps />\n              <Typography className={classes.materialIconText}>Apps</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Archive />\n              <Typography className={classes.materialIconText}>\n                Archive\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowBack />\n              <Typography className={classes.materialIconText}>\n                ArrowBack\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowBackIos />\n              <Typography className={classes.materialIconText}>\n                ArrowBackIos\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowDownward />\n              <Typography className={classes.materialIconText}>\n                ArrowDownward\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowDropDown />\n              <Typography className={classes.materialIconText}>\n                ArrowDropDown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowDropDownCircle />\n              <Typography className={classes.materialIconText}>\n                ArrowDropDownCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowDropUp />\n              <Typography className={classes.materialIconText}>\n                ArrowDropUp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowForward />\n              <Typography className={classes.materialIconText}>\n                ArrowForward\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowForwardIos />\n              <Typography className={classes.materialIconText}>\n                ArrowForwardIos\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowLeft />\n              <Typography className={classes.materialIconText}>\n                ArrowLeft\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowRight />\n              <Typography className={classes.materialIconText}>\n                ArrowRight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowRightAlt />\n              <Typography className={classes.materialIconText}>\n                ArrowRightAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowUpward />\n              <Typography className={classes.materialIconText}>\n                ArrowUpward\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArtTrack />\n              <Typography className={classes.materialIconText}>\n                ArtTrack\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AspectRatio />\n              <Typography className={classes.materialIconText}>\n                AspectRatio\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Assessment />\n              <Typography className={classes.materialIconText}>\n                Assessment\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Assignment />\n              <Typography className={classes.materialIconText}>\n                Assignment\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AssignmentInd />\n              <Typography className={classes.materialIconText}>\n                AssignmentInd\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AssignmentLate />\n              <Typography className={classes.materialIconText}>\n                AssignmentLate\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AssignmentReturn />\n              <Typography className={classes.materialIconText}>\n                AssignmentReturn\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AssignmentReturned />\n              <Typography className={classes.materialIconText}>\n                AssignmentReturned\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AssignmentTurnedIn />\n              <Typography className={classes.materialIconText}>\n                AssignmentTurnedIn\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Assistant />\n              <Typography className={classes.materialIconText}>\n                Assistant\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AssistantPhoto />\n              <Typography className={classes.materialIconText}>\n                AssistantPhoto\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Atm />\n              <Typography className={classes.materialIconText}>Atm</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AttachFile />\n              <Typography className={classes.materialIconText}>\n                AttachFile\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Attachment />\n              <Typography className={classes.materialIconText}>\n                Attachment\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AttachMoney />\n              <Typography className={classes.materialIconText}>\n                AttachMoney\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Audiotrack />\n              <Typography className={classes.materialIconText}>\n                Audiotrack\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Autorenew />\n              <Typography className={classes.materialIconText}>\n                Autorenew\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AvTimer />\n              <Typography className={classes.materialIconText}>\n                AvTimer\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Backspace />\n              <Typography className={classes.materialIconText}>\n                Backspace\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Backup />\n              <Typography className={classes.materialIconText}>\n                Backup\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Ballot />\n              <Typography className={classes.materialIconText}>\n                Ballot\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BarChart />\n              <Typography className={classes.materialIconText}>\n                BarChart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Battery20 />\n              <Typography className={classes.materialIconText}>\n                Battery20\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Battery30 />\n              <Typography className={classes.materialIconText}>\n                Battery30\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Battery50 />\n              <Typography className={classes.materialIconText}>\n                Battery50\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Battery60 />\n              <Typography className={classes.materialIconText}>\n                Battery60\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Battery80 />\n              <Typography className={classes.materialIconText}>\n                Battery80\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Battery90 />\n              <Typography className={classes.materialIconText}>\n                Battery90\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryAlert />\n              <Typography className={classes.materialIconText}>\n                BatteryAlert\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryCharging20 />\n              <Typography className={classes.materialIconText}>\n                BatteryCharging20\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryCharging30 />\n              <Typography className={classes.materialIconText}>\n                BatteryCharging30\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryCharging50 />\n              <Typography className={classes.materialIconText}>\n                BatteryCharging50\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryCharging60 />\n              <Typography className={classes.materialIconText}>\n                BatteryCharging60\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryCharging80 />\n              <Typography className={classes.materialIconText}>\n                BatteryCharging80\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryCharging90 />\n              <Typography className={classes.materialIconText}>\n                BatteryCharging90\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryChargingFull />\n              <Typography className={classes.materialIconText}>\n                BatteryChargingFull\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryFull />\n              <Typography className={classes.materialIconText}>\n                BatteryFull\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryStd />\n              <Typography className={classes.materialIconText}>\n                BatteryStd\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryUnknown />\n              <Typography className={classes.materialIconText}>\n                BatteryUnknown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BeachAccess />\n              <Typography className={classes.materialIconText}>\n                BeachAccess\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Beenhere />\n              <Typography className={classes.materialIconText}>\n                Beenhere\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Block />\n              <Typography className={classes.materialIconText}>\n                Block\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Bluetooth />\n              <Typography className={classes.materialIconText}>\n                Bluetooth\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BluetoothAudio />\n              <Typography className={classes.materialIconText}>\n                BluetoothAudio\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BluetoothConnected />\n              <Typography className={classes.materialIconText}>\n                BluetoothConnected\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BluetoothDisabled />\n              <Typography className={classes.materialIconText}>\n                BluetoothDisabled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BluetoothSearching />\n              <Typography className={classes.materialIconText}>\n                BluetoothSearching\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BlurCircular />\n              <Typography className={classes.materialIconText}>\n                BlurCircular\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BlurLinear />\n              <Typography className={classes.materialIconText}>\n                BlurLinear\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Book />\n              <Typography className={classes.materialIconText}>Book</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Bookmark />\n              <Typography className={classes.materialIconText}>\n                Bookmark\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BookmarkBorder />\n              <Typography className={classes.materialIconText}>\n                BookmarkBorder\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Bookmarks />\n              <Typography className={classes.materialIconText}>\n                Bookmarks\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderAll />\n              <Typography className={classes.materialIconText}>\n                BorderAll\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderBottom />\n              <Typography className={classes.materialIconText}>\n                BorderBottom\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderClear />\n              <Typography className={classes.materialIconText}>\n                BorderClear\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderColor />\n              <Typography className={classes.materialIconText}>\n                BorderColor\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderHorizontal />\n              <Typography className={classes.materialIconText}>\n                BorderHorizontal\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderInner />\n              <Typography className={classes.materialIconText}>\n                BorderInner\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderLeft />\n              <Typography className={classes.materialIconText}>\n                BorderLeft\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderOuter />\n              <Typography className={classes.materialIconText}>\n                BorderOuter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderRight />\n              <Typography className={classes.materialIconText}>\n                BorderRight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderStyle />\n              <Typography className={classes.materialIconText}>\n                BorderStyle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderTop />\n              <Typography className={classes.materialIconText}>\n                BorderTop\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderVertical />\n              <Typography className={classes.materialIconText}>\n                BorderVertical\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BrandingWatermark />\n              <Typography className={classes.materialIconText}>\n                BrandingWatermark\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brightness1 />\n              <Typography className={classes.materialIconText}>\n                Brightness1\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brightness2 />\n              <Typography className={classes.materialIconText}>\n                Brightness2\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brightness3 />\n              <Typography className={classes.materialIconText}>\n                Brightness3\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brightness4 />\n              <Typography className={classes.materialIconText}>\n                Brightness4\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brightness5 />\n              <Typography className={classes.materialIconText}>\n                Brightness5\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brightness6 />\n              <Typography className={classes.materialIconText}>\n                Brightness6\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brightness7 />\n              <Typography className={classes.materialIconText}>\n                Brightness7\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BrightnessAuto />\n              <Typography className={classes.materialIconText}>\n                BrightnessAuto\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BrightnessHigh />\n              <Typography className={classes.materialIconText}>\n                BrightnessHigh\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BrightnessLow />\n              <Typography className={classes.materialIconText}>\n                BrightnessLow\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BrightnessMedium />\n              <Typography className={classes.materialIconText}>\n                BrightnessMedium\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BrokenImage />\n              <Typography className={classes.materialIconText}>\n                BrokenImage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brush />\n              <Typography className={classes.materialIconText}>\n                Brush\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BubbleChart />\n              <Typography className={classes.materialIconText}>\n                BubbleChart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BugReport />\n              <Typography className={classes.materialIconText}>\n                BugReport\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Build />\n              <Typography className={classes.materialIconText}>\n                Build\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BurstMode />\n              <Typography className={classes.materialIconText}>\n                BurstMode\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Business />\n              <Typography className={classes.materialIconText}>\n                Business\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BusinessCenter />\n              <Typography className={classes.materialIconText}>\n                BusinessCenter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Cached />\n              <Typography className={classes.materialIconText}>\n                Cached\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Cake />\n              <Typography className={classes.materialIconText}>Cake</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CalendarToday />\n              <Typography className={classes.materialIconText}>\n                CalendarToday\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CalendarViewDay />\n              <Typography className={classes.materialIconText}>\n                CalendarViewDay\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Call />\n              <Typography className={classes.materialIconText}>Call</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallEnd />\n              <Typography className={classes.materialIconText}>\n                CallEnd\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallMade />\n              <Typography className={classes.materialIconText}>\n                CallMade\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallMerge />\n              <Typography className={classes.materialIconText}>\n                CallMerge\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallMissed />\n              <Typography className={classes.materialIconText}>\n                CallMissed\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallMissedOutgoing />\n              <Typography className={classes.materialIconText}>\n                CallMissedOutgoing\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallReceived />\n              <Typography className={classes.materialIconText}>\n                CallReceived\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallSplit />\n              <Typography className={classes.materialIconText}>\n                CallSplit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallToAction />\n              <Typography className={classes.materialIconText}>\n                CallToAction\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Camera />\n              <Typography className={classes.materialIconText}>\n                Camera\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CameraAlt />\n              <Typography className={classes.materialIconText}>\n                CameraAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CameraEnhance />\n              <Typography className={classes.materialIconText}>\n                CameraEnhance\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CameraFront />\n              <Typography className={classes.materialIconText}>\n                CameraFront\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CameraRear />\n              <Typography className={classes.materialIconText}>\n                CameraRear\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CameraRoll />\n              <Typography className={classes.materialIconText}>\n                CameraRoll\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Cancel />\n              <Typography className={classes.materialIconText}>\n                Cancel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CancelPresentation />\n              <Typography className={classes.materialIconText}>\n                CancelPresentation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CardGiftcard />\n              <Typography className={classes.materialIconText}>\n                CardGiftcard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CardMembership />\n              <Typography className={classes.materialIconText}>\n                CardMembership\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CardTravel />\n              <Typography className={classes.materialIconText}>\n                CardTravel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Casino />\n              <Typography className={classes.materialIconText}>\n                Casino\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Cast />\n              <Typography className={classes.materialIconText}>Cast</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CastConnected />\n              <Typography className={classes.materialIconText}>\n                CastConnected\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CastForEducation />\n              <Typography className={classes.materialIconText}>\n                CastForEducation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Category />\n              <Typography className={classes.materialIconText}>\n                Category\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CellWifi />\n              <Typography className={classes.materialIconText}>\n                CellWifi\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CenterFocusStrong />\n              <Typography className={classes.materialIconText}>\n                CenterFocusStrong\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CenterFocusWeak />\n              <Typography className={classes.materialIconText}>\n                CenterFocusWeak\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChangeHistory />\n              <Typography className={classes.materialIconText}>\n                ChangeHistory\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Chat />\n              <Typography className={classes.materialIconText}>Chat</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChatBubble />\n              <Typography className={classes.materialIconText}>\n                ChatBubble\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChatBubbleOutline />\n              <Typography className={classes.materialIconText}>\n                ChatBubbleOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Check />\n              <Typography className={classes.materialIconText}>\n                Check\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CheckBox />\n              <Typography className={classes.materialIconText}>\n                CheckBox\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CheckBoxOutlineBlank />\n              <Typography className={classes.materialIconText}>\n                CheckBoxOutlineBlank\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CheckCircle />\n              <Typography className={classes.materialIconText}>\n                CheckCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CheckCircleOutline />\n              <Typography className={classes.materialIconText}>\n                CheckCircleOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChevronLeft />\n              <Typography className={classes.materialIconText}>\n                ChevronLeft\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChevronRight />\n              <Typography className={classes.materialIconText}>\n                ChevronRight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChildCare />\n              <Typography className={classes.materialIconText}>\n                ChildCare\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChildFriendly />\n              <Typography className={classes.materialIconText}>\n                ChildFriendly\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChromeReaderMode />\n              <Typography className={classes.materialIconText}>\n                ChromeReaderMode\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Class />\n              <Typography className={classes.materialIconText}>\n                Class\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Clear />\n              <Typography className={classes.materialIconText}>\n                Clear\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ClearAll />\n              <Typography className={classes.materialIconText}>\n                ClearAll\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Close />\n              <Typography className={classes.materialIconText}>\n                Close\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ClosedCaption />\n              <Typography className={classes.materialIconText}>\n                ClosedCaption\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Cloud />\n              <Typography className={classes.materialIconText}>\n                Cloud\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CloudCircle />\n              <Typography className={classes.materialIconText}>\n                CloudCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CloudDone />\n              <Typography className={classes.materialIconText}>\n                CloudDone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CloudDownload />\n              <Typography className={classes.materialIconText}>\n                CloudDownload\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CloudQueue />\n              <Typography className={classes.materialIconText}>\n                CloudQueue\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CloudUpload />\n              <Typography className={classes.materialIconText}>\n                CloudUpload\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Code />\n              <Typography className={classes.materialIconText}>Code</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Collections />\n              <Typography className={classes.materialIconText}>\n                Collections\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CollectionsBookmark />\n              <Typography className={classes.materialIconText}>\n                CollectionsBookmark\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Colorize />\n              <Typography className={classes.materialIconText}>\n                Colorize\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ColorLens />\n              <Typography className={classes.materialIconText}>\n                ColorLens\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Comment />\n              <Typography className={classes.materialIconText}>\n                Comment\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Commute />\n              <Typography className={classes.materialIconText}>\n                Commute\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Compare />\n              <Typography className={classes.materialIconText}>\n                Compare\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CompareArrows />\n              <Typography className={classes.materialIconText}>\n                CompareArrows\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CompassCalibration />\n              <Typography className={classes.materialIconText}>\n                CompassCalibration\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Computer />\n              <Typography className={classes.materialIconText}>\n                Computer\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ConfirmationNumber />\n              <Typography className={classes.materialIconText}>\n                ConfirmationNumber\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ContactMail />\n              <Typography className={classes.materialIconText}>\n                ContactMail\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ContactPhone />\n              <Typography className={classes.materialIconText}>\n                ContactPhone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Contacts />\n              <Typography className={classes.materialIconText}>\n                Contacts\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ContactSupport />\n              <Typography className={classes.materialIconText}>\n                ContactSupport\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ControlCamera />\n              <Typography className={classes.materialIconText}>\n                ControlCamera\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ControlPoint />\n              <Typography className={classes.materialIconText}>\n                ControlPoint\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ControlPointDuplicate />\n              <Typography className={classes.materialIconText}>\n                ControlPointDuplicate\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Copyright />\n              <Typography className={classes.materialIconText}>\n                Copyright\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Create />\n              <Typography className={classes.materialIconText}>\n                Create\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CreditCard />\n              <Typography className={classes.materialIconText}>\n                CreditCard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Crop />\n              <Typography className={classes.materialIconText}>Crop</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Crop169 />\n              <Typography className={classes.materialIconText}>\n                Crop169\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Crop32 />\n              <Typography className={classes.materialIconText}>\n                Crop32\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Crop54 />\n              <Typography className={classes.materialIconText}>\n                Crop54\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Crop75 />\n              <Typography className={classes.materialIconText}>\n                Crop75\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CropDin />\n              <Typography className={classes.materialIconText}>\n                CropDin\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CropFree />\n              <Typography className={classes.materialIconText}>\n                CropFree\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CropLandscape />\n              <Typography className={classes.materialIconText}>\n                CropLandscape\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CropOriginal />\n              <Typography className={classes.materialIconText}>\n                CropOriginal\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CropPortrait />\n              <Typography className={classes.materialIconText}>\n                CropPortrait\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CropRotate />\n              <Typography className={classes.materialIconText}>\n                CropRotate\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CropSquare />\n              <Typography className={classes.materialIconText}>\n                CropSquare\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Dashboard />\n              <Typography className={classes.materialIconText}>\n                Dashboard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DataUsage />\n              <Typography className={classes.materialIconText}>\n                DataUsage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DateRange />\n              <Typography className={classes.materialIconText}>\n                DateRange\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Dehaze />\n              <Typography className={classes.materialIconText}>\n                Dehaze\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Delete />\n              <Typography className={classes.materialIconText}>\n                Delete\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DeleteForever />\n              <Typography className={classes.materialIconText}>\n                DeleteForever\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DeleteOutline />\n              <Typography className={classes.materialIconText}>\n                DeleteOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DeleteSweep />\n              <Typography className={classes.materialIconText}>\n                DeleteSweep\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DepartureBoard />\n              <Typography className={classes.materialIconText}>\n                DepartureBoard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Description />\n              <Typography className={classes.materialIconText}>\n                Description\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DesktopAccessDisabled />\n              <Typography className={classes.materialIconText}>\n                DesktopAccessDisabled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DesktopMac />\n              <Typography className={classes.materialIconText}>\n                DesktopMac\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DesktopWindows />\n              <Typography className={classes.materialIconText}>\n                DesktopWindows\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Details />\n              <Typography className={classes.materialIconText}>\n                Details\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DeveloperBoard />\n              <Typography className={classes.materialIconText}>\n                DeveloperBoard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DeveloperMode />\n              <Typography className={classes.materialIconText}>\n                DeveloperMode\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DeviceHub />\n              <Typography className={classes.materialIconText}>\n                DeviceHub\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Devices />\n              <Typography className={classes.materialIconText}>\n                Devices\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DevicesOther />\n              <Typography className={classes.materialIconText}>\n                DevicesOther\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DeviceUnknown />\n              <Typography className={classes.materialIconText}>\n                DeviceUnknown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DialerSip />\n              <Typography className={classes.materialIconText}>\n                DialerSip\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Dialpad />\n              <Typography className={classes.materialIconText}>\n                Dialpad\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Directions />\n              <Typography className={classes.materialIconText}>\n                Directions\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsBike />\n              <Typography className={classes.materialIconText}>\n                DirectionsBike\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsBoat />\n              <Typography className={classes.materialIconText}>\n                DirectionsBoat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsBus />\n              <Typography className={classes.materialIconText}>\n                DirectionsBus\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsCar />\n              <Typography className={classes.materialIconText}>\n                DirectionsCar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsRailway />\n              <Typography className={classes.materialIconText}>\n                DirectionsRailway\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsRun />\n              <Typography className={classes.materialIconText}>\n                DirectionsRun\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsSubway />\n              <Typography className={classes.materialIconText}>\n                DirectionsSubway\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsTransit />\n              <Typography className={classes.materialIconText}>\n                DirectionsTransit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsWalk />\n              <Typography className={classes.materialIconText}>\n                DirectionsWalk\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DiscFull />\n              <Typography className={classes.materialIconText}>\n                DiscFull\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Dns />\n              <Typography className={classes.materialIconText}>Dns</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Dock />\n              <Typography className={classes.materialIconText}>Dock</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Domain />\n              <Typography className={classes.materialIconText}>\n                Domain\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DomainDisabled />\n              <Typography className={classes.materialIconText}>\n                DomainDisabled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Done />\n              <Typography className={classes.materialIconText}>Done</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DoneAll />\n              <Typography className={classes.materialIconText}>\n                DoneAll\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DoneOutline />\n              <Typography className={classes.materialIconText}>\n                DoneOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DonutLarge />\n              <Typography className={classes.materialIconText}>\n                DonutLarge\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DonutSmall />\n              <Typography className={classes.materialIconText}>\n                DonutSmall\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Drafts />\n              <Typography className={classes.materialIconText}>\n                Drafts\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DragHandle />\n              <Typography className={classes.materialIconText}>\n                DragHandle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DragIndicator />\n              <Typography className={classes.materialIconText}>\n                DragIndicator\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DriveEta />\n              <Typography className={classes.materialIconText}>\n                DriveEta\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Duo />\n              <Typography className={classes.materialIconText}>Duo</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Dvr />\n              <Typography className={classes.materialIconText}>Dvr</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Edit />\n              <Typography className={classes.materialIconText}>Edit</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EditAttributes />\n              <Typography className={classes.materialIconText}>\n                EditAttributes\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EditLocation />\n              <Typography className={classes.materialIconText}>\n                EditLocation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Eject />\n              <Typography className={classes.materialIconText}>\n                Eject\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Email />\n              <Typography className={classes.materialIconText}>\n                Email\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EnhancedEncryption />\n              <Typography className={classes.materialIconText}>\n                EnhancedEncryption\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Equalizer />\n              <Typography className={classes.materialIconText}>\n                Equalizer\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Error />\n              <Typography className={classes.materialIconText}>\n                Error\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ErrorOutline />\n              <Typography className={classes.materialIconText}>\n                ErrorOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EuroSymbol />\n              <Typography className={classes.materialIconText}>\n                EuroSymbol\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Event />\n              <Typography className={classes.materialIconText}>\n                Event\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EventAvailable />\n              <Typography className={classes.materialIconText}>\n                EventAvailable\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EventBusy />\n              <Typography className={classes.materialIconText}>\n                EventBusy\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EventNote />\n              <Typography className={classes.materialIconText}>\n                EventNote\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EventSeat />\n              <Typography className={classes.materialIconText}>\n                EventSeat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EvStation />\n              <Typography className={classes.materialIconText}>\n                EvStation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExitToApp />\n              <Typography className={classes.materialIconText}>\n                ExitToApp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExpandLess />\n              <Typography className={classes.materialIconText}>\n                ExpandLess\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExpandMore />\n              <Typography className={classes.materialIconText}>\n                ExpandMore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Explicit />\n              <Typography className={classes.materialIconText}>\n                Explicit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Explore />\n              <Typography className={classes.materialIconText}>\n                Explore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Exposure />\n              <Typography className={classes.materialIconText}>\n                Exposure\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExposureNeg1 />\n              <Typography className={classes.materialIconText}>\n                ExposureNeg1\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExposureNeg2 />\n              <Typography className={classes.materialIconText}>\n                ExposureNeg2\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExposurePlus1 />\n              <Typography className={classes.materialIconText}>\n                ExposurePlus1\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExposurePlus2 />\n              <Typography className={classes.materialIconText}>\n                ExposurePlus2\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExposureZero />\n              <Typography className={classes.materialIconText}>\n                ExposureZero\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Extension />\n              <Typography className={classes.materialIconText}>\n                Extension\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Face />\n              <Typography className={classes.materialIconText}>Face</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Fastfood />\n              <Typography className={classes.materialIconText}>\n                Fastfood\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FastForward />\n              <Typography className={classes.materialIconText}>\n                FastForward\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FastRewind />\n              <Typography className={classes.materialIconText}>\n                FastRewind\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Favorite />\n              <Typography className={classes.materialIconText}>\n                Favorite\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FavoriteBorder />\n              <Typography className={classes.materialIconText}>\n                FavoriteBorder\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FeaturedPlayList />\n              <Typography className={classes.materialIconText}>\n                FeaturedPlayList\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FeaturedVideo />\n              <Typography className={classes.materialIconText}>\n                FeaturedVideo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Feedback />\n              <Typography className={classes.materialIconText}>\n                Feedback\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FiberDvr />\n              <Typography className={classes.materialIconText}>\n                FiberDvr\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FiberManualRecord />\n              <Typography className={classes.materialIconText}>\n                FiberManualRecord\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FiberPin />\n              <Typography className={classes.materialIconText}>\n                FiberPin\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FiberSmartRecord />\n              <Typography className={classes.materialIconText}>\n                FiberSmartRecord\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FileCopy />\n              <Typography className={classes.materialIconText}>\n                FileCopy\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter />\n              <Typography className={classes.materialIconText}>\n                Filter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter1 />\n              <Typography className={classes.materialIconText}>\n                Filter1\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter2 />\n              <Typography className={classes.materialIconText}>\n                Filter2\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter3 />\n              <Typography className={classes.materialIconText}>\n                Filter3\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter4 />\n              <Typography className={classes.materialIconText}>\n                Filter4\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter5 />\n              <Typography className={classes.materialIconText}>\n                Filter5\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter6 />\n              <Typography className={classes.materialIconText}>\n                Filter6\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter7 />\n              <Typography className={classes.materialIconText}>\n                Filter7\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter8 />\n              <Typography className={classes.materialIconText}>\n                Filter8\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter9 />\n              <Typography className={classes.materialIconText}>\n                Filter9\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter9Plus />\n              <Typography className={classes.materialIconText}>\n                Filter9Plus\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterBAndW />\n              <Typography className={classes.materialIconText}>\n                FilterBAndW\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterCenterFocus />\n              <Typography className={classes.materialIconText}>\n                FilterCenterFocus\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterDrama />\n              <Typography className={classes.materialIconText}>\n                FilterDrama\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterFrames />\n              <Typography className={classes.materialIconText}>\n                FilterFrames\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterHdr />\n              <Typography className={classes.materialIconText}>\n                FilterHdr\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterList />\n              <Typography className={classes.materialIconText}>\n                FilterList\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterNone />\n              <Typography className={classes.materialIconText}>\n                FilterNone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterTiltShift />\n              <Typography className={classes.materialIconText}>\n                FilterTiltShift\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterVintage />\n              <Typography className={classes.materialIconText}>\n                FilterVintage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FindInPage />\n              <Typography className={classes.materialIconText}>\n                FindInPage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FindReplace />\n              <Typography className={classes.materialIconText}>\n                FindReplace\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Fingerprint />\n              <Typography className={classes.materialIconText}>\n                Fingerprint\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FirstPage />\n              <Typography className={classes.materialIconText}>\n                FirstPage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FitnessCenter />\n              <Typography className={classes.materialIconText}>\n                FitnessCenter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Flag />\n              <Typography className={classes.materialIconText}>Flag</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Flare />\n              <Typography className={classes.materialIconText}>\n                Flare\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FlashAuto />\n              <Typography className={classes.materialIconText}>\n                FlashAuto\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Flight />\n              <Typography className={classes.materialIconText}>\n                Flight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FlightLand />\n              <Typography className={classes.materialIconText}>\n                FlightLand\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FlightTakeoff />\n              <Typography className={classes.materialIconText}>\n                FlightTakeoff\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Flip />\n              <Typography className={classes.materialIconText}>Flip</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FlipToBack />\n              <Typography className={classes.materialIconText}>\n                FlipToBack\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FlipToFront />\n              <Typography className={classes.materialIconText}>\n                FlipToFront\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Folder />\n              <Typography className={classes.materialIconText}>\n                Folder\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FolderOpen />\n              <Typography className={classes.materialIconText}>\n                FolderOpen\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FolderShared />\n              <Typography className={classes.materialIconText}>\n                FolderShared\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FolderSpecial />\n              <Typography className={classes.materialIconText}>\n                FolderSpecial\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FontDownload />\n              <Typography className={classes.materialIconText}>\n                FontDownload\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatAlignCenter />\n              <Typography className={classes.materialIconText}>\n                FormatAlignCenter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatAlignJustify />\n              <Typography className={classes.materialIconText}>\n                FormatAlignJustify\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatAlignLeft />\n              <Typography className={classes.materialIconText}>\n                FormatAlignLeft\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatAlignRight />\n              <Typography className={classes.materialIconText}>\n                FormatAlignRight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatBold />\n              <Typography className={classes.materialIconText}>\n                FormatBold\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatClear />\n              <Typography className={classes.materialIconText}>\n                FormatClear\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatColorFill />\n              <Typography className={classes.materialIconText}>\n                FormatColorFill\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatColorReset />\n              <Typography className={classes.materialIconText}>\n                FormatColorReset\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatColorText />\n              <Typography className={classes.materialIconText}>\n                FormatColorText\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatIndentDecrease />\n              <Typography className={classes.materialIconText}>\n                FormatIndentDecrease\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatIndentIncrease />\n              <Typography className={classes.materialIconText}>\n                FormatIndentIncrease\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatItalic />\n              <Typography className={classes.materialIconText}>\n                FormatItalic\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatLineSpacing />\n              <Typography className={classes.materialIconText}>\n                FormatLineSpacing\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatListBulleted />\n              <Typography className={classes.materialIconText}>\n                FormatListBulleted\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatListNumbered />\n              <Typography className={classes.materialIconText}>\n                FormatListNumbered\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatListNumberedRtl />\n              <Typography className={classes.materialIconText}>\n                FormatListNumberedRtl\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatPaint />\n              <Typography className={classes.materialIconText}>\n                FormatPaint\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatQuote />\n              <Typography className={classes.materialIconText}>\n                FormatQuote\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatShapes />\n              <Typography className={classes.materialIconText}>\n                FormatShapes\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatSize />\n              <Typography className={classes.materialIconText}>\n                FormatSize\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatStrikethrough />\n              <Typography className={classes.materialIconText}>\n                FormatStrikethrough\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatTextdirectionLToR />\n              <Typography className={classes.materialIconText}>\n                FormatTextdirectionLToR\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatTextdirectionRToL />\n              <Typography className={classes.materialIconText}>\n                FormatTextdirectionRToL\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatUnderlined />\n              <Typography className={classes.materialIconText}>\n                FormatUnderlined\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Forum />\n              <Typography className={classes.materialIconText}>\n                Forum\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Forward />\n              <Typography className={classes.materialIconText}>\n                Forward\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Forward10 />\n              <Typography className={classes.materialIconText}>\n                Forward10\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Forward30 />\n              <Typography className={classes.materialIconText}>\n                Forward30\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Forward5 />\n              <Typography className={classes.materialIconText}>\n                Forward5\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FourK />\n              <Typography className={classes.materialIconText}>\n                FourK\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FreeBreakfast />\n              <Typography className={classes.materialIconText}>\n                FreeBreakfast\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Fullscreen />\n              <Typography className={classes.materialIconText}>\n                Fullscreen\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FullscreenExit />\n              <Typography className={classes.materialIconText}>\n                FullscreenExit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Functions />\n              <Typography className={classes.materialIconText}>\n                Functions\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Gamepad />\n              <Typography className={classes.materialIconText}>\n                Gamepad\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Games />\n              <Typography className={classes.materialIconText}>\n                Games\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Gavel />\n              <Typography className={classes.materialIconText}>\n                Gavel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Gesture />\n              <Typography className={classes.materialIconText}>\n                Gesture\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.GetApp />\n              <Typography className={classes.materialIconText}>\n                GetApp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Gif />\n              <Typography className={classes.materialIconText}>Gif</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.GolfCourse />\n              <Typography className={classes.materialIconText}>\n                GolfCourse\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.GpsFixed />\n              <Typography className={classes.materialIconText}>\n                GpsFixed\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.GpsNotFixed />\n              <Typography className={classes.materialIconText}>\n                GpsNotFixed\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Grade />\n              <Typography className={classes.materialIconText}>\n                Grade\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Gradient />\n              <Typography className={classes.materialIconText}>\n                Gradient\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Grain />\n              <Typography className={classes.materialIconText}>\n                Grain\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.GraphicEq />\n              <Typography className={classes.materialIconText}>\n                GraphicEq\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Group />\n              <Typography className={classes.materialIconText}>\n                Group\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.GroupWork />\n              <Typography className={classes.materialIconText}>\n                GroupWork\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.GTranslate />\n              <Typography className={classes.materialIconText}>\n                GTranslate\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Hd />\n              <Typography className={classes.materialIconText}>Hd</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HdrStrong />\n              <Typography className={classes.materialIconText}>\n                HdrStrong\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HdrWeak />\n              <Typography className={classes.materialIconText}>\n                HdrWeak\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Headset />\n              <Typography className={classes.materialIconText}>\n                Headset\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HeadsetMic />\n              <Typography className={classes.materialIconText}>\n                HeadsetMic\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Healing />\n              <Typography className={classes.materialIconText}>\n                Healing\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Hearing />\n              <Typography className={classes.materialIconText}>\n                Hearing\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Help />\n              <Typography className={classes.materialIconText}>Help</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HelpOutline />\n              <Typography className={classes.materialIconText}>\n                HelpOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Highlight />\n              <Typography className={classes.materialIconText}>\n                Highlight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HighQuality />\n              <Typography className={classes.materialIconText}>\n                HighQuality\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.History />\n              <Typography className={classes.materialIconText}>\n                History\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Home />\n              <Typography className={classes.materialIconText}>Home</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HorizontalSplit />\n              <Typography className={classes.materialIconText}>\n                HorizontalSplit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Hotel />\n              <Typography className={classes.materialIconText}>\n                Hotel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HotTub />\n              <Typography className={classes.materialIconText}>\n                HotTub\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HourglassEmpty />\n              <Typography className={classes.materialIconText}>\n                HourglassEmpty\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HourglassFull />\n              <Typography className={classes.materialIconText}>\n                HourglassFull\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HowToReg />\n              <Typography className={classes.materialIconText}>\n                HowToReg\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HowToVote />\n              <Typography className={classes.materialIconText}>\n                HowToVote\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Http />\n              <Typography className={classes.materialIconText}>Http</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Https />\n              <Typography className={classes.materialIconText}>\n                Https\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Image />\n              <Typography className={classes.materialIconText}>\n                Image\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ImageAspectRatio />\n              <Typography className={classes.materialIconText}>\n                ImageAspectRatio\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ImageSearch />\n              <Typography className={classes.materialIconText}>\n                ImageSearch\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ImportantDevices />\n              <Typography className={classes.materialIconText}>\n                ImportantDevices\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ImportContacts />\n              <Typography className={classes.materialIconText}>\n                ImportContacts\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ImportExport />\n              <Typography className={classes.materialIconText}>\n                ImportExport\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Inbox />\n              <Typography className={classes.materialIconText}>\n                Inbox\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.IndeterminateCheckBox />\n              <Typography className={classes.materialIconText}>\n                IndeterminateCheckBox\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Info />\n              <Typography className={classes.materialIconText}>Info</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Input />\n              <Typography className={classes.materialIconText}>\n                Input\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InsertChart />\n              <Typography className={classes.materialIconText}>\n                InsertChart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InsertComment />\n              <Typography className={classes.materialIconText}>\n                InsertComment\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InsertDriveFile />\n              <Typography className={classes.materialIconText}>\n                InsertDriveFile\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InsertEmoticon />\n              <Typography className={classes.materialIconText}>\n                InsertEmoticon\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InsertInvitation />\n              <Typography className={classes.materialIconText}>\n                InsertInvitation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InsertLink />\n              <Typography className={classes.materialIconText}>\n                InsertLink\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InsertPhoto />\n              <Typography className={classes.materialIconText}>\n                InsertPhoto\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InvertColors />\n              <Typography className={classes.materialIconText}>\n                InvertColors\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Iso />\n              <Typography className={classes.materialIconText}>Iso</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Keyboard />\n              <Typography className={classes.materialIconText}>\n                Keyboard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardArrowDown />\n              <Typography className={classes.materialIconText}>\n                KeyboardArrowDown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardArrowLeft />\n              <Typography className={classes.materialIconText}>\n                KeyboardArrowLeft\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardArrowRight />\n              <Typography className={classes.materialIconText}>\n                KeyboardArrowRight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardArrowUp />\n              <Typography className={classes.materialIconText}>\n                KeyboardArrowUp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardBackspace />\n              <Typography className={classes.materialIconText}>\n                KeyboardBackspace\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardCapslock />\n              <Typography className={classes.materialIconText}>\n                KeyboardCapslock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardHide />\n              <Typography className={classes.materialIconText}>\n                KeyboardHide\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardReturn />\n              <Typography className={classes.materialIconText}>\n                KeyboardReturn\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardTab />\n              <Typography className={classes.materialIconText}>\n                KeyboardTab\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardVoice />\n              <Typography className={classes.materialIconText}>\n                KeyboardVoice\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Kitchen />\n              <Typography className={classes.materialIconText}>\n                Kitchen\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Label />\n              <Typography className={classes.materialIconText}>\n                Label\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LabelImportant />\n              <Typography className={classes.materialIconText}>\n                LabelImportant\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Landscape />\n              <Typography className={classes.materialIconText}>\n                Landscape\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Language />\n              <Typography className={classes.materialIconText}>\n                Language\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Laptop />\n              <Typography className={classes.materialIconText}>\n                Laptop\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LaptopChromebook />\n              <Typography className={classes.materialIconText}>\n                LaptopChromebook\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LaptopMac />\n              <Typography className={classes.materialIconText}>\n                LaptopMac\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LaptopWindows />\n              <Typography className={classes.materialIconText}>\n                LaptopWindows\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LastPage />\n              <Typography className={classes.materialIconText}>\n                LastPage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Launch />\n              <Typography className={classes.materialIconText}>\n                Launch\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Layers />\n              <Typography className={classes.materialIconText}>\n                Layers\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LayersClear />\n              <Typography className={classes.materialIconText}>\n                LayersClear\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LeakRemove />\n              <Typography className={classes.materialIconText}>\n                LeakRemove\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Lens />\n              <Typography className={classes.materialIconText}>Lens</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LibraryBooks />\n              <Typography className={classes.materialIconText}>\n                LibraryBooks\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LibraryMusic />\n              <Typography className={classes.materialIconText}>\n                LibraryMusic\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LinearScale />\n              <Typography className={classes.materialIconText}>\n                LinearScale\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LineStyle />\n              <Typography className={classes.materialIconText}>\n                LineStyle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LineWeight />\n              <Typography className={classes.materialIconText}>\n                LineWeight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Link />\n              <Typography className={classes.materialIconText}>Link</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LinkedCamera />\n              <Typography className={classes.materialIconText}>\n                LinkedCamera\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.List />\n              <Typography className={classes.materialIconText}>List</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ListAlt />\n              <Typography className={classes.materialIconText}>\n                ListAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LiveHelp />\n              <Typography className={classes.materialIconText}>\n                LiveHelp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LiveTv />\n              <Typography className={classes.materialIconText}>\n                LiveTv\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalActivity />\n              <Typography className={classes.materialIconText}>\n                LocalActivity\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalAirport />\n              <Typography className={classes.materialIconText}>\n                LocalAirport\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalAtm />\n              <Typography className={classes.materialIconText}>\n                LocalAtm\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalBar />\n              <Typography className={classes.materialIconText}>\n                LocalBar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalCafe />\n              <Typography className={classes.materialIconText}>\n                LocalCafe\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalCarWash />\n              <Typography className={classes.materialIconText}>\n                LocalCarWash\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalConvenienceStore />\n              <Typography className={classes.materialIconText}>\n                LocalConvenienceStore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalDining />\n              <Typography className={classes.materialIconText}>\n                LocalDining\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalDrink />\n              <Typography className={classes.materialIconText}>\n                LocalDrink\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalFlorist />\n              <Typography className={classes.materialIconText}>\n                LocalFlorist\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalGasStation />\n              <Typography className={classes.materialIconText}>\n                LocalGasStation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalGroceryStore />\n              <Typography className={classes.materialIconText}>\n                LocalGroceryStore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalHospital />\n              <Typography className={classes.materialIconText}>\n                LocalHospital\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalHotel />\n              <Typography className={classes.materialIconText}>\n                LocalHotel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalLaundryService />\n              <Typography className={classes.materialIconText}>\n                LocalLaundryService\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalLibrary />\n              <Typography className={classes.materialIconText}>\n                LocalLibrary\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalMall />\n              <Typography className={classes.materialIconText}>\n                LocalMall\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalMovies />\n              <Typography className={classes.materialIconText}>\n                LocalMovies\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalParking />\n              <Typography className={classes.materialIconText}>\n                LocalParking\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalPharmacy />\n              <Typography className={classes.materialIconText}>\n                LocalPharmacy\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalPhone />\n              <Typography className={classes.materialIconText}>\n                LocalPhone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalPizza />\n              <Typography className={classes.materialIconText}>\n                LocalPizza\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalPlay />\n              <Typography className={classes.materialIconText}>\n                LocalPlay\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalPrintshop />\n              <Typography className={classes.materialIconText}>\n                LocalPrintshop\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalSee />\n              <Typography className={classes.materialIconText}>\n                LocalSee\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalShipping />\n              <Typography className={classes.materialIconText}>\n                LocalShipping\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalTaxi />\n              <Typography className={classes.materialIconText}>\n                LocalTaxi\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocationCity />\n              <Typography className={classes.materialIconText}>\n                LocationCity\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocationDisabled />\n              <Typography className={classes.materialIconText}>\n                LocationDisabled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocationSearching />\n              <Typography className={classes.materialIconText}>\n                LocationSearching\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Lock />\n              <Typography className={classes.materialIconText}>Lock</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LockOpen />\n              <Typography className={classes.materialIconText}>\n                LockOpen\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Looks />\n              <Typography className={classes.materialIconText}>\n                Looks\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Looks3 />\n              <Typography className={classes.materialIconText}>\n                Looks3\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Looks4 />\n              <Typography className={classes.materialIconText}>\n                Looks4\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Looks5 />\n              <Typography className={classes.materialIconText}>\n                Looks5\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Looks6 />\n              <Typography className={classes.materialIconText}>\n                Looks6\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LooksTwo />\n              <Typography className={classes.materialIconText}>\n                LooksTwo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Loop />\n              <Typography className={classes.materialIconText}>Loop</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Loupe />\n              <Typography className={classes.materialIconText}>\n                Loupe\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LowPriority />\n              <Typography className={classes.materialIconText}>\n                LowPriority\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Loyalty />\n              <Typography className={classes.materialIconText}>\n                Loyalty\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Mail />\n              <Typography className={classes.materialIconText}>Mail</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MailOutline />\n              <Typography className={classes.materialIconText}>\n                MailOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Map />\n              <Typography className={classes.materialIconText}>Map</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Markunread />\n              <Typography className={classes.materialIconText}>\n                Markunread\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MarkunreadMailbox />\n              <Typography className={classes.materialIconText}>\n                MarkunreadMailbox\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Maximize />\n              <Typography className={classes.materialIconText}>\n                Maximize\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MeetingRoom />\n              <Typography className={classes.materialIconText}>\n                MeetingRoom\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Memory />\n              <Typography className={classes.materialIconText}>\n                Memory\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Menu />\n              <Typography className={classes.materialIconText}>Menu</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MergeType />\n              <Typography className={classes.materialIconText}>\n                MergeType\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Message />\n              <Typography className={classes.materialIconText}>\n                Message\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Mic />\n              <Typography className={classes.materialIconText}>Mic</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MicNone />\n              <Typography className={classes.materialIconText}>\n                MicNone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Minimize />\n              <Typography className={classes.materialIconText}>\n                Minimize\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MissedVideoCall />\n              <Typography className={classes.materialIconText}>\n                MissedVideoCall\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Mms />\n              <Typography className={classes.materialIconText}>Mms</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MobileFriendly />\n              <Typography className={classes.materialIconText}>\n                MobileFriendly\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MobileScreenShare />\n              <Typography className={classes.materialIconText}>\n                MobileScreenShare\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ModeComment />\n              <Typography className={classes.materialIconText}>\n                ModeComment\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Money />\n              <Typography className={classes.materialIconText}>\n                Money\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MonochromePhotos />\n              <Typography className={classes.materialIconText}>\n                MonochromePhotos\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Mood />\n              <Typography className={classes.materialIconText}>Mood</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MoodBad />\n              <Typography className={classes.materialIconText}>\n                MoodBad\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.More />\n              <Typography className={classes.materialIconText}>More</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MoreHoriz />\n              <Typography className={classes.materialIconText}>\n                MoreHoriz\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MoreVert />\n              <Typography className={classes.materialIconText}>\n                MoreVert\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Motorcycle />\n              <Typography className={classes.materialIconText}>\n                Motorcycle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Mouse />\n              <Typography className={classes.materialIconText}>\n                Mouse\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MoveToInbox />\n              <Typography className={classes.materialIconText}>\n                MoveToInbox\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Movie />\n              <Typography className={classes.materialIconText}>\n                Movie\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MovieCreation />\n              <Typography className={classes.materialIconText}>\n                MovieCreation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MovieFilter />\n              <Typography className={classes.materialIconText}>\n                MovieFilter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MultilineChart />\n              <Typography className={classes.materialIconText}>\n                MultilineChart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MusicNote />\n              <Typography className={classes.materialIconText}>\n                MusicNote\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MusicVideo />\n              <Typography className={classes.materialIconText}>\n                MusicVideo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MyLocation />\n              <Typography className={classes.materialIconText}>\n                MyLocation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Nature />\n              <Typography className={classes.materialIconText}>\n                Nature\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NaturePeople />\n              <Typography className={classes.materialIconText}>\n                NaturePeople\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NavigateBefore />\n              <Typography className={classes.materialIconText}>\n                NavigateBefore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NavigateNext />\n              <Typography className={classes.materialIconText}>\n                NavigateNext\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Navigation />\n              <Typography className={classes.materialIconText}>\n                Navigation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NearMe />\n              <Typography className={classes.materialIconText}>\n                NearMe\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NetworkCell />\n              <Typography className={classes.materialIconText}>\n                NetworkCell\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NetworkCheck />\n              <Typography className={classes.materialIconText}>\n                NetworkCheck\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NetworkLocked />\n              <Typography className={classes.materialIconText}>\n                NetworkLocked\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NetworkWifi />\n              <Typography className={classes.materialIconText}>\n                NetworkWifi\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NextWeek />\n              <Typography className={classes.materialIconText}>\n                NextWeek\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Nfc />\n              <Typography className={classes.materialIconText}>Nfc</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NoEncryption />\n              <Typography className={classes.materialIconText}>\n                NoEncryption\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NoMeetingRoom />\n              <Typography className={classes.materialIconText}>\n                NoMeetingRoom\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NoSim />\n              <Typography className={classes.materialIconText}>\n                NoSim\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Note />\n              <Typography className={classes.materialIconText}>Note</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Notes />\n              <Typography className={classes.materialIconText}>\n                Notes\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NotificationImportant />\n              <Typography className={classes.materialIconText}>\n                NotificationImportant\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Notifications />\n              <Typography className={classes.materialIconText}>\n                Notifications\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NotificationsActive />\n              <Typography className={classes.materialIconText}>\n                NotificationsActive\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NotificationsNone />\n              <Typography className={classes.materialIconText}>\n                NotificationsNone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NotificationsPaused />\n              <Typography className={classes.materialIconText}>\n                NotificationsPaused\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NotInterested />\n              <Typography className={classes.materialIconText}>\n                NotInterested\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NotListedLocation />\n              <Typography className={classes.materialIconText}>\n                NotListedLocation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Opacity />\n              <Typography className={classes.materialIconText}>\n                Opacity\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.OpenInBrowser />\n              <Typography className={classes.materialIconText}>\n                OpenInBrowser\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.OpenWith />\n              <Typography className={classes.materialIconText}>\n                OpenWith\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Pages />\n              <Typography className={classes.materialIconText}>\n                Pages\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Pageview />\n              <Typography className={classes.materialIconText}>\n                Pageview\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Palette />\n              <Typography className={classes.materialIconText}>\n                Palette\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Panorama />\n              <Typography className={classes.materialIconText}>\n                Panorama\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PanoramaFishEye />\n              <Typography className={classes.materialIconText}>\n                PanoramaFishEye\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PanoramaHorizontal />\n              <Typography className={classes.materialIconText}>\n                PanoramaHorizontal\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PanoramaVertical />\n              <Typography className={classes.materialIconText}>\n                PanoramaVertical\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PanoramaWideAngle />\n              <Typography className={classes.materialIconText}>\n                PanoramaWideAngle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PanTool />\n              <Typography className={classes.materialIconText}>\n                PanTool\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PartyMode />\n              <Typography className={classes.materialIconText}>\n                PartyMode\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Pause />\n              <Typography className={classes.materialIconText}>\n                Pause\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PauseCircleFilled />\n              <Typography className={classes.materialIconText}>\n                PauseCircleFilled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PauseCircleOutline />\n              <Typography className={classes.materialIconText}>\n                PauseCircleOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PausePresentation />\n              <Typography className={classes.materialIconText}>\n                PausePresentation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Payment />\n              <Typography className={classes.materialIconText}>\n                Payment\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.People />\n              <Typography className={classes.materialIconText}>\n                People\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PeopleOutline />\n              <Typography className={classes.materialIconText}>\n                PeopleOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermCameraMic />\n              <Typography className={classes.materialIconText}>\n                PermCameraMic\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermContactCalendar />\n              <Typography className={classes.materialIconText}>\n                PermContactCalendar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermDataSetting />\n              <Typography className={classes.materialIconText}>\n                PermDataSetting\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermDeviceInformation />\n              <Typography className={classes.materialIconText}>\n                PermDeviceInformation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermIdentity />\n              <Typography className={classes.materialIconText}>\n                PermIdentity\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermMedia />\n              <Typography className={classes.materialIconText}>\n                PermMedia\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermPhoneMsg />\n              <Typography className={classes.materialIconText}>\n                PermPhoneMsg\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermScanWifi />\n              <Typography className={classes.materialIconText}>\n                PermScanWifi\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Person />\n              <Typography className={classes.materialIconText}>\n                Person\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PersonalVideo />\n              <Typography className={classes.materialIconText}>\n                PersonalVideo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PersonOutline />\n              <Typography className={classes.materialIconText}>\n                PersonOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PersonPin />\n              <Typography className={classes.materialIconText}>\n                PersonPin\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PersonPinCircle />\n              <Typography className={classes.materialIconText}>\n                PersonPinCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Pets />\n              <Typography className={classes.materialIconText}>Pets</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Phone />\n              <Typography className={classes.materialIconText}>\n                Phone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneAndroid />\n              <Typography className={classes.materialIconText}>\n                PhoneAndroid\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneBluetoothSpeaker />\n              <Typography className={classes.materialIconText}>\n                PhoneBluetoothSpeaker\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneCallback />\n              <Typography className={classes.materialIconText}>\n                PhoneCallback\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneForwarded />\n              <Typography className={classes.materialIconText}>\n                PhoneForwarded\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneInTalk />\n              <Typography className={classes.materialIconText}>\n                PhoneInTalk\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneIphone />\n              <Typography className={classes.materialIconText}>\n                PhoneIphone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Phonelink />\n              <Typography className={classes.materialIconText}>\n                Phonelink\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhonelinkErase />\n              <Typography className={classes.materialIconText}>\n                PhonelinkErase\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhonelinkLock />\n              <Typography className={classes.materialIconText}>\n                PhonelinkLock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhonelinkRing />\n              <Typography className={classes.materialIconText}>\n                PhonelinkRing\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhonelinkSetup />\n              <Typography className={classes.materialIconText}>\n                PhonelinkSetup\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneLocked />\n              <Typography className={classes.materialIconText}>\n                PhoneLocked\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneMissed />\n              <Typography className={classes.materialIconText}>\n                PhoneMissed\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhonePaused />\n              <Typography className={classes.materialIconText}>\n                PhonePaused\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Photo />\n              <Typography className={classes.materialIconText}>\n                Photo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhotoAlbum />\n              <Typography className={classes.materialIconText}>\n                PhotoAlbum\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhotoCamera />\n              <Typography className={classes.materialIconText}>\n                PhotoCamera\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhotoFilter />\n              <Typography className={classes.materialIconText}>\n                PhotoFilter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhotoLibrary />\n              <Typography className={classes.materialIconText}>\n                PhotoLibrary\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhotoSizeSelectActual />\n              <Typography className={classes.materialIconText}>\n                PhotoSizeSelectActual\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhotoSizeSelectLarge />\n              <Typography className={classes.materialIconText}>\n                PhotoSizeSelectLarge\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhotoSizeSelectSmall />\n              <Typography className={classes.materialIconText}>\n                PhotoSizeSelectSmall\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PictureAsPdf />\n              <Typography className={classes.materialIconText}>\n                PictureAsPdf\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PictureInPicture />\n              <Typography className={classes.materialIconText}>\n                PictureInPicture\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PictureInPictureAlt />\n              <Typography className={classes.materialIconText}>\n                PictureInPictureAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PieChart />\n              <Typography className={classes.materialIconText}>\n                PieChart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PinDrop />\n              <Typography className={classes.materialIconText}>\n                PinDrop\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Place />\n              <Typography className={classes.materialIconText}>\n                Place\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PlayArrow />\n              <Typography className={classes.materialIconText}>\n                PlayArrow\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PlayCircleFilled />\n              <Typography className={classes.materialIconText}>\n                PlayCircleFilled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PlayCircleFilledWhite />\n              <Typography className={classes.materialIconText}>\n                PlayCircleFilledWhite\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PlayCircleOutline />\n              <Typography className={classes.materialIconText}>\n                PlayCircleOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PlayForWork />\n              <Typography className={classes.materialIconText}>\n                PlayForWork\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PlaylistPlay />\n              <Typography className={classes.materialIconText}>\n                PlaylistPlay\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Poll />\n              <Typography className={classes.materialIconText}>Poll</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Polymer />\n              <Typography className={classes.materialIconText}>\n                Polymer\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Pool />\n              <Typography className={classes.materialIconText}>Pool</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Portrait />\n              <Typography className={classes.materialIconText}>\n                Portrait\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Power />\n              <Typography className={classes.materialIconText}>\n                Power\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PowerInput />\n              <Typography className={classes.materialIconText}>\n                PowerInput\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PregnantWoman />\n              <Typography className={classes.materialIconText}>\n                PregnantWoman\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PresentToAll />\n              <Typography className={classes.materialIconText}>\n                PresentToAll\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Print />\n              <Typography className={classes.materialIconText}>\n                Print\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PrintDisabled />\n              <Typography className={classes.materialIconText}>\n                PrintDisabled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PriorityHigh />\n              <Typography className={classes.materialIconText}>\n                PriorityHigh\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Public />\n              <Typography className={classes.materialIconText}>\n                Public\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Publish />\n              <Typography className={classes.materialIconText}>\n                Publish\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.QueryBuilder />\n              <Typography className={classes.materialIconText}>\n                QueryBuilder\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.QuestionAnswer />\n              <Typography className={classes.materialIconText}>\n                QuestionAnswer\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Queue />\n              <Typography className={classes.materialIconText}>\n                Queue\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.QueueMusic />\n              <Typography className={classes.materialIconText}>\n                QueueMusic\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.QueuePlayNext />\n              <Typography className={classes.materialIconText}>\n                QueuePlayNext\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Radio />\n              <Typography className={classes.materialIconText}>\n                Radio\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RadioButtonChecked />\n              <Typography className={classes.materialIconText}>\n                RadioButtonChecked\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RadioButtonUnchecked />\n              <Typography className={classes.materialIconText}>\n                RadioButtonUnchecked\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RateReview />\n              <Typography className={classes.materialIconText}>\n                RateReview\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Receipt />\n              <Typography className={classes.materialIconText}>\n                Receipt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RecentActors />\n              <Typography className={classes.materialIconText}>\n                RecentActors\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RecordVoiceOver />\n              <Typography className={classes.materialIconText}>\n                RecordVoiceOver\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Redeem />\n              <Typography className={classes.materialIconText}>\n                Redeem\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Redo />\n              <Typography className={classes.materialIconText}>Redo</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Refresh />\n              <Typography className={classes.materialIconText}>\n                Refresh\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Remove />\n              <Typography className={classes.materialIconText}>\n                Remove\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RemoveCircle />\n              <Typography className={classes.materialIconText}>\n                RemoveCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RemoveCircleOutline />\n              <Typography className={classes.materialIconText}>\n                RemoveCircleOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RemoveFromQueue />\n              <Typography className={classes.materialIconText}>\n                RemoveFromQueue\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RemoveRedEye />\n              <Typography className={classes.materialIconText}>\n                RemoveRedEye\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RemoveShoppingCart />\n              <Typography className={classes.materialIconText}>\n                RemoveShoppingCart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Reorder />\n              <Typography className={classes.materialIconText}>\n                Reorder\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Repeat />\n              <Typography className={classes.materialIconText}>\n                Repeat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Replay />\n              <Typography className={classes.materialIconText}>\n                Replay\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Replay10 />\n              <Typography className={classes.materialIconText}>\n                Replay10\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Replay30 />\n              <Typography className={classes.materialIconText}>\n                Replay30\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Replay5 />\n              <Typography className={classes.materialIconText}>\n                Replay5\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Reply />\n              <Typography className={classes.materialIconText}>\n                Reply\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ReplyAll />\n              <Typography className={classes.materialIconText}>\n                ReplyAll\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Report />\n              <Typography className={classes.materialIconText}>\n                Report\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ReportProblem />\n              <Typography className={classes.materialIconText}>\n                ReportProblem\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Restaurant />\n              <Typography className={classes.materialIconText}>\n                Restaurant\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RestaurantMenu />\n              <Typography className={classes.materialIconText}>\n                RestaurantMenu\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Restore />\n              <Typography className={classes.materialIconText}>\n                Restore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RestoreFromTrash />\n              <Typography className={classes.materialIconText}>\n                RestoreFromTrash\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RestorePage />\n              <Typography className={classes.materialIconText}>\n                RestorePage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RingVolume />\n              <Typography className={classes.materialIconText}>\n                RingVolume\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Room />\n              <Typography className={classes.materialIconText}>Room</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RoomService />\n              <Typography className={classes.materialIconText}>\n                RoomService\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Rotate90DegreesCcw />\n              <Typography className={classes.materialIconText}>\n                Rotate90DegreesCcw\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RotateLeft />\n              <Typography className={classes.materialIconText}>\n                RotateLeft\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RotateRight />\n              <Typography className={classes.materialIconText}>\n                RotateRight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Router />\n              <Typography className={classes.materialIconText}>\n                Router\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Rowing />\n              <Typography className={classes.materialIconText}>\n                Rowing\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RssFeed />\n              <Typography className={classes.materialIconText}>\n                RssFeed\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RvHookup />\n              <Typography className={classes.materialIconText}>\n                RvHookup\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Satellite />\n              <Typography className={classes.materialIconText}>\n                Satellite\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Save />\n              <Typography className={classes.materialIconText}>Save</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SaveAlt />\n              <Typography className={classes.materialIconText}>\n                SaveAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Scanner />\n              <Typography className={classes.materialIconText}>\n                Scanner\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ScatterPlot />\n              <Typography className={classes.materialIconText}>\n                ScatterPlot\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Schedule />\n              <Typography className={classes.materialIconText}>\n                Schedule\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.School />\n              <Typography className={classes.materialIconText}>\n                School\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Score />\n              <Typography className={classes.materialIconText}>\n                Score\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ScreenLockLandscape />\n              <Typography className={classes.materialIconText}>\n                ScreenLockLandscape\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ScreenLockPortrait />\n              <Typography className={classes.materialIconText}>\n                ScreenLockPortrait\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ScreenLockRotation />\n              <Typography className={classes.materialIconText}>\n                ScreenLockRotation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ScreenRotation />\n              <Typography className={classes.materialIconText}>\n                ScreenRotation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ScreenShare />\n              <Typography className={classes.materialIconText}>\n                ScreenShare\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SdCard />\n              <Typography className={classes.materialIconText}>\n                SdCard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SdStorage />\n              <Typography className={classes.materialIconText}>\n                SdStorage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Search />\n              <Typography className={classes.materialIconText}>\n                Search\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Security />\n              <Typography className={classes.materialIconText}>\n                Security\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SelectAll />\n              <Typography className={classes.materialIconText}>\n                SelectAll\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Send />\n              <Typography className={classes.materialIconText}>Send</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SentimentDissatisfied />\n              <Typography className={classes.materialIconText}>\n                SentimentDissatisfied\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SentimentSatisfied />\n              <Typography className={classes.materialIconText}>\n                SentimentSatisfied\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SentimentSatisfiedAlt />\n              <Typography className={classes.materialIconText}>\n                SentimentSatisfiedAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SentimentVeryDissatisfied />\n              <Typography className={classes.materialIconText}>\n                SentimentVeryDissatisfied\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SentimentVerySatisfied />\n              <Typography className={classes.materialIconText}>\n                SentimentVerySatisfied\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Settings />\n              <Typography className={classes.materialIconText}>\n                Settings\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsApplications />\n              <Typography className={classes.materialIconText}>\n                SettingsApplications\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsBackupRestore />\n              <Typography className={classes.materialIconText}>\n                SettingsBackupRestore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsBluetooth />\n              <Typography className={classes.materialIconText}>\n                SettingsBluetooth\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsBrightness />\n              <Typography className={classes.materialIconText}>\n                SettingsBrightness\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsCell />\n              <Typography className={classes.materialIconText}>\n                SettingsCell\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsEthernet />\n              <Typography className={classes.materialIconText}>\n                SettingsEthernet\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsInputAntenna />\n              <Typography className={classes.materialIconText}>\n                SettingsInputAntenna\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsInputComponent />\n              <Typography className={classes.materialIconText}>\n                SettingsInputComponent\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsInputComposite />\n              <Typography className={classes.materialIconText}>\n                SettingsInputComposite\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsInputHdmi />\n              <Typography className={classes.materialIconText}>\n                SettingsInputHdmi\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsInputSvideo />\n              <Typography className={classes.materialIconText}>\n                SettingsInputSvideo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsOverscan />\n              <Typography className={classes.materialIconText}>\n                SettingsOverscan\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsPhone />\n              <Typography className={classes.materialIconText}>\n                SettingsPhone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsPower />\n              <Typography className={classes.materialIconText}>\n                SettingsPower\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsRemote />\n              <Typography className={classes.materialIconText}>\n                SettingsRemote\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsSystemDaydream />\n              <Typography className={classes.materialIconText}>\n                SettingsSystemDaydream\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsVoice />\n              <Typography className={classes.materialIconText}>\n                SettingsVoice\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Share />\n              <Typography className={classes.materialIconText}>\n                Share\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Shop />\n              <Typography className={classes.materialIconText}>Shop</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ShoppingBasket />\n              <Typography className={classes.materialIconText}>\n                ShoppingBasket\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ShoppingCart />\n              <Typography className={classes.materialIconText}>\n                ShoppingCart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ShopTwo />\n              <Typography className={classes.materialIconText}>\n                ShopTwo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ShortText />\n              <Typography className={classes.materialIconText}>\n                ShortText\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ShowChart />\n              <Typography className={classes.materialIconText}>\n                ShowChart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Shuffle />\n              <Typography className={classes.materialIconText}>\n                Shuffle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ShutterSpeed />\n              <Typography className={classes.materialIconText}>\n                ShutterSpeed\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellular0Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellular0Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellular1Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellular1Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellular2Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellular2Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellular3Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellular3Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellular4Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellular4Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularAlt />\n              <Typography className={classes.materialIconText}>\n                SignalCellularAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularConnectedNoInternet0Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellularConnectedNoInternet0Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularConnectedNoInternet1Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellularConnectedNoInternet1Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularConnectedNoInternet2Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellularConnectedNoInternet2Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularConnectedNoInternet3Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellularConnectedNoInternet3Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularConnectedNoInternet4Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellularConnectedNoInternet4Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularNoSim />\n              <Typography className={classes.materialIconText}>\n                SignalCellularNoSim\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularNull />\n              <Typography className={classes.materialIconText}>\n                SignalCellularNull\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi0Bar />\n              <Typography className={classes.materialIconText}>\n                SignalWifi0Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi1Bar />\n              <Typography className={classes.materialIconText}>\n                SignalWifi1Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi1BarLock />\n              <Typography className={classes.materialIconText}>\n                SignalWifi1BarLock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi2Bar />\n              <Typography className={classes.materialIconText}>\n                SignalWifi2Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi2BarLock />\n              <Typography className={classes.materialIconText}>\n                SignalWifi2BarLock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi3Bar />\n              <Typography className={classes.materialIconText}>\n                SignalWifi3Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi3BarLock />\n              <Typography className={classes.materialIconText}>\n                SignalWifi3BarLock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi4Bar />\n              <Typography className={classes.materialIconText}>\n                SignalWifi4Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi4BarLock />\n              <Typography className={classes.materialIconText}>\n                SignalWifi4BarLock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SimCard />\n              <Typography className={classes.materialIconText}>\n                SimCard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SkipNext />\n              <Typography className={classes.materialIconText}>\n                SkipNext\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SkipPrevious />\n              <Typography className={classes.materialIconText}>\n                SkipPrevious\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Slideshow />\n              <Typography className={classes.materialIconText}>\n                Slideshow\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SlowMotionVideo />\n              <Typography className={classes.materialIconText}>\n                SlowMotionVideo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Smartphone />\n              <Typography className={classes.materialIconText}>\n                Smartphone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SmokeFree />\n              <Typography className={classes.materialIconText}>\n                SmokeFree\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SmokingRooms />\n              <Typography className={classes.materialIconText}>\n                SmokingRooms\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Sms />\n              <Typography className={classes.materialIconText}>Sms</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SmsFailed />\n              <Typography className={classes.materialIconText}>\n                SmsFailed\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Snooze />\n              <Typography className={classes.materialIconText}>\n                Snooze\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Sort />\n              <Typography className={classes.materialIconText}>Sort</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SortByAlpha />\n              <Typography className={classes.materialIconText}>\n                SortByAlpha\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Spa />\n              <Typography className={classes.materialIconText}>Spa</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SpaceBar />\n              <Typography className={classes.materialIconText}>\n                SpaceBar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Speaker />\n              <Typography className={classes.materialIconText}>\n                Speaker\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SpeakerGroup />\n              <Typography className={classes.materialIconText}>\n                SpeakerGroup\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SpeakerNotes />\n              <Typography className={classes.materialIconText}>\n                SpeakerNotes\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SpeakerPhone />\n              <Typography className={classes.materialIconText}>\n                SpeakerPhone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Spellcheck />\n              <Typography className={classes.materialIconText}>\n                Spellcheck\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Star />\n              <Typography className={classes.materialIconText}>Star</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StarBorder />\n              <Typography className={classes.materialIconText}>\n                StarBorder\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StarHalf />\n              <Typography className={classes.materialIconText}>\n                StarHalf\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StarRate />\n              <Typography className={classes.materialIconText}>\n                StarRate\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Stars />\n              <Typography className={classes.materialIconText}>\n                Stars\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StayCurrentLandscape />\n              <Typography className={classes.materialIconText}>\n                StayCurrentLandscape\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StayCurrentPortrait />\n              <Typography className={classes.materialIconText}>\n                StayCurrentPortrait\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StayPrimaryLandscape />\n              <Typography className={classes.materialIconText}>\n                StayPrimaryLandscape\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StayPrimaryPortrait />\n              <Typography className={classes.materialIconText}>\n                StayPrimaryPortrait\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Stop />\n              <Typography className={classes.materialIconText}>Stop</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StopScreenShare />\n              <Typography className={classes.materialIconText}>\n                StopScreenShare\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Storage />\n              <Typography className={classes.materialIconText}>\n                Storage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Store />\n              <Typography className={classes.materialIconText}>\n                Store\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StoreMallDirectory />\n              <Typography className={classes.materialIconText}>\n                StoreMallDirectory\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Straighten />\n              <Typography className={classes.materialIconText}>\n                Straighten\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Streetview />\n              <Typography className={classes.materialIconText}>\n                Streetview\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StrikethroughS />\n              <Typography className={classes.materialIconText}>\n                StrikethroughS\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Style />\n              <Typography className={classes.materialIconText}>\n                Style\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SubdirectoryArrowLeft />\n              <Typography className={classes.materialIconText}>\n                SubdirectoryArrowLeft\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SubdirectoryArrowRight />\n              <Typography className={classes.materialIconText}>\n                SubdirectoryArrowRight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Subject />\n              <Typography className={classes.materialIconText}>\n                Subject\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Subscriptions />\n              <Typography className={classes.materialIconText}>\n                Subscriptions\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Subtitles />\n              <Typography className={classes.materialIconText}>\n                Subtitles\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Subway />\n              <Typography className={classes.materialIconText}>\n                Subway\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SupervisedUserCircle />\n              <Typography className={classes.materialIconText}>\n                SupervisedUserCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SupervisorAccount />\n              <Typography className={classes.materialIconText}>\n                SupervisorAccount\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SurroundSound />\n              <Typography className={classes.materialIconText}>\n                SurroundSound\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SwapCalls />\n              <Typography className={classes.materialIconText}>\n                SwapCalls\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SwapHoriz />\n              <Typography className={classes.materialIconText}>\n                SwapHoriz\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SwapHorizontalCircle />\n              <Typography className={classes.materialIconText}>\n                SwapHorizontalCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SwapVert />\n              <Typography className={classes.materialIconText}>\n                SwapVert\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SwapVerticalCircle />\n              <Typography className={classes.materialIconText}>\n                SwapVerticalCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SwitchCamera />\n              <Typography className={classes.materialIconText}>\n                SwitchCamera\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SwitchVideo />\n              <Typography className={classes.materialIconText}>\n                SwitchVideo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Sync />\n              <Typography className={classes.materialIconText}>Sync</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SyncDisabled />\n              <Typography className={classes.materialIconText}>\n                SyncDisabled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SyncProblem />\n              <Typography className={classes.materialIconText}>\n                SyncProblem\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SystemUpdate />\n              <Typography className={classes.materialIconText}>\n                SystemUpdate\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Tab />\n              <Typography className={classes.materialIconText}>Tab</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TableChart />\n              <Typography className={classes.materialIconText}>\n                TableChart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Tablet />\n              <Typography className={classes.materialIconText}>\n                Tablet\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TabletAndroid />\n              <Typography className={classes.materialIconText}>\n                TabletAndroid\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TabletMac />\n              <Typography className={classes.materialIconText}>\n                TabletMac\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TabUnselected />\n              <Typography className={classes.materialIconText}>\n                TabUnselected\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TagFaces />\n              <Typography className={classes.materialIconText}>\n                TagFaces\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TapAndPlay />\n              <Typography className={classes.materialIconText}>\n                TapAndPlay\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Terrain />\n              <Typography className={classes.materialIconText}>\n                Terrain\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TextFields />\n              <Typography className={classes.materialIconText}>\n                TextFields\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TextFormat />\n              <Typography className={classes.materialIconText}>\n                TextFormat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TextRotateUp />\n              <Typography className={classes.materialIconText}>\n                TextRotateUp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TextRotateVertical />\n              <Typography className={classes.materialIconText}>\n                TextRotateVertical\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TextRotationDown />\n              <Typography className={classes.materialIconText}>\n                TextRotationDown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TextRotationNone />\n              <Typography className={classes.materialIconText}>\n                TextRotationNone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Textsms />\n              <Typography className={classes.materialIconText}>\n                Textsms\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Texture />\n              <Typography className={classes.materialIconText}>\n                Texture\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Theaters />\n              <Typography className={classes.materialIconText}>\n                Theaters\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ThreeDRotation />\n              <Typography className={classes.materialIconText}>\n                ThreeDRotation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ThreeSixty />\n              <Typography className={classes.materialIconText}>\n                ThreeSixty\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ThumbDown />\n              <Typography className={classes.materialIconText}>\n                ThumbDown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ThumbDownAlt />\n              <Typography className={classes.materialIconText}>\n                ThumbDownAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ThumbsUpDown />\n              <Typography className={classes.materialIconText}>\n                ThumbsUpDown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ThumbUp />\n              <Typography className={classes.materialIconText}>\n                ThumbUp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ThumbUpAlt />\n              <Typography className={classes.materialIconText}>\n                ThumbUpAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Timelapse />\n              <Typography className={classes.materialIconText}>\n                Timelapse\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Timeline />\n              <Typography className={classes.materialIconText}>\n                Timeline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Timer />\n              <Typography className={classes.materialIconText}>\n                Timer\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Timer10 />\n              <Typography className={classes.materialIconText}>\n                Timer10\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Timer3 />\n              <Typography className={classes.materialIconText}>\n                Timer3\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TimeToLeave />\n              <Typography className={classes.materialIconText}>\n                TimeToLeave\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Title />\n              <Typography className={classes.materialIconText}>\n                Title\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Toc />\n              <Typography className={classes.materialIconText}>Toc</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Today />\n              <Typography className={classes.materialIconText}>\n                Today\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Toll />\n              <Typography className={classes.materialIconText}>Toll</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Tonality />\n              <Typography className={classes.materialIconText}>\n                Tonality\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TouchApp />\n              <Typography className={classes.materialIconText}>\n                TouchApp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Toys />\n              <Typography className={classes.materialIconText}>Toys</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TrackChanges />\n              <Typography className={classes.materialIconText}>\n                TrackChanges\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Traffic />\n              <Typography className={classes.materialIconText}>\n                Traffic\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Train />\n              <Typography className={classes.materialIconText}>\n                Train\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Tram />\n              <Typography className={classes.materialIconText}>Tram</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TransferWithinAStation />\n              <Typography className={classes.materialIconText}>\n                TransferWithinAStation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Transform />\n              <Typography className={classes.materialIconText}>\n                Transform\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TransitEnterexit />\n              <Typography className={classes.materialIconText}>\n                TransitEnterexit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Translate />\n              <Typography className={classes.materialIconText}>\n                Translate\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TrendingDown />\n              <Typography className={classes.materialIconText}>\n                TrendingDown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TrendingFlat />\n              <Typography className={classes.materialIconText}>\n                TrendingFlat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TrendingUp />\n              <Typography className={classes.materialIconText}>\n                TrendingUp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TripOrigin />\n              <Typography className={classes.materialIconText}>\n                TripOrigin\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Tune />\n              <Typography className={classes.materialIconText}>Tune</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TurnedIn />\n              <Typography className={classes.materialIconText}>\n                TurnedIn\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TurnedInNot />\n              <Typography className={classes.materialIconText}>\n                TurnedInNot\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Tv />\n              <Typography className={classes.materialIconText}>Tv</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Unarchive />\n              <Typography className={classes.materialIconText}>\n                Unarchive\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Undo />\n              <Typography className={classes.materialIconText}>Undo</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.UnfoldLess />\n              <Typography className={classes.materialIconText}>\n                UnfoldLess\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.UnfoldMore />\n              <Typography className={classes.materialIconText}>\n                UnfoldMore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Unsubscribe />\n              <Typography className={classes.materialIconText}>\n                Unsubscribe\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Update />\n              <Typography className={classes.materialIconText}>\n                Update\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Usb />\n              <Typography className={classes.materialIconText}>Usb</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VerifiedUser />\n              <Typography className={classes.materialIconText}>\n                VerifiedUser\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VerticalAlignBottom />\n              <Typography className={classes.materialIconText}>\n                VerticalAlignBottom\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VerticalAlignCenter />\n              <Typography className={classes.materialIconText}>\n                VerticalAlignCenter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VerticalAlignTop />\n              <Typography className={classes.materialIconText}>\n                VerticalAlignTop\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VerticalSplit />\n              <Typography className={classes.materialIconText}>\n                VerticalSplit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Vibration />\n              <Typography className={classes.materialIconText}>\n                Vibration\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VideoCall />\n              <Typography className={classes.materialIconText}>\n                VideoCall\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Videocam />\n              <Typography className={classes.materialIconText}>\n                Videocam\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VideogameAsset />\n              <Typography className={classes.materialIconText}>\n                VideogameAsset\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VideoLabel />\n              <Typography className={classes.materialIconText}>\n                VideoLabel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VideoLibrary />\n              <Typography className={classes.materialIconText}>\n                VideoLibrary\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewAgenda />\n              <Typography className={classes.materialIconText}>\n                ViewAgenda\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewArray />\n              <Typography className={classes.materialIconText}>\n                ViewArray\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewCarousel />\n              <Typography className={classes.materialIconText}>\n                ViewCarousel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewColumn />\n              <Typography className={classes.materialIconText}>\n                ViewColumn\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewComfy />\n              <Typography className={classes.materialIconText}>\n                ViewComfy\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewCompact />\n              <Typography className={classes.materialIconText}>\n                ViewCompact\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewDay />\n              <Typography className={classes.materialIconText}>\n                ViewDay\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewHeadline />\n              <Typography className={classes.materialIconText}>\n                ViewHeadline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewList />\n              <Typography className={classes.materialIconText}>\n                ViewList\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewModule />\n              <Typography className={classes.materialIconText}>\n                ViewModule\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewQuilt />\n              <Typography className={classes.materialIconText}>\n                ViewQuilt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewStream />\n              <Typography className={classes.materialIconText}>\n                ViewStream\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewWeek />\n              <Typography className={classes.materialIconText}>\n                ViewWeek\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Vignette />\n              <Typography className={classes.materialIconText}>\n                Vignette\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Visibility />\n              <Typography className={classes.materialIconText}>\n                Visibility\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VoiceChat />\n              <Typography className={classes.materialIconText}>\n                VoiceChat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Voicemail />\n              <Typography className={classes.materialIconText}>\n                Voicemail\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VolumeDown />\n              <Typography className={classes.materialIconText}>\n                VolumeDown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VolumeMute />\n              <Typography className={classes.materialIconText}>\n                VolumeMute\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VolumeUp />\n              <Typography className={classes.materialIconText}>\n                VolumeUp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VpnKey />\n              <Typography className={classes.materialIconText}>\n                VpnKey\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VpnLock />\n              <Typography className={classes.materialIconText}>\n                VpnLock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Wallpaper />\n              <Typography className={classes.materialIconText}>\n                Wallpaper\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Warning />\n              <Typography className={classes.materialIconText}>\n                Warning\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Watch />\n              <Typography className={classes.materialIconText}>\n                Watch\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WatchLater />\n              <Typography className={classes.materialIconText}>\n                WatchLater\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Waves />\n              <Typography className={classes.materialIconText}>\n                Waves\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WbAuto />\n              <Typography className={classes.materialIconText}>\n                WbAuto\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WbCloudy />\n              <Typography className={classes.materialIconText}>\n                WbCloudy\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WbIncandescent />\n              <Typography className={classes.materialIconText}>\n                WbIncandescent\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WbIridescent />\n              <Typography className={classes.materialIconText}>\n                WbIridescent\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WbSunny />\n              <Typography className={classes.materialIconText}>\n                WbSunny\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Wc />\n              <Typography className={classes.materialIconText}>Wc</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Web />\n              <Typography className={classes.materialIconText}>Web</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WebAsset />\n              <Typography className={classes.materialIconText}>\n                WebAsset\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Weekend />\n              <Typography className={classes.materialIconText}>\n                Weekend\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Whatshot />\n              <Typography className={classes.materialIconText}>\n                Whatshot\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WhereToVote />\n              <Typography className={classes.materialIconText}>\n                WhereToVote\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Widgets />\n              <Typography className={classes.materialIconText}>\n                Widgets\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Wifi />\n              <Typography className={classes.materialIconText}>Wifi</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WifiLock />\n              <Typography className={classes.materialIconText}>\n                WifiLock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WifiTethering />\n              <Typography className={classes.materialIconText}>\n                WifiTethering\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Work />\n              <Typography className={classes.materialIconText}>Work</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WorkOutline />\n              <Typography className={classes.materialIconText}>\n                WorkOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WrapText />\n              <Typography className={classes.materialIconText}>\n                WrapText\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.YoutubeSearchedFor />\n              <Typography className={classes.materialIconText}>\n                YoutubeSearchedFor\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ZoomIn />\n              <Typography className={classes.materialIconText}>\n                ZoomIn\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ZoomOut />\n              <Typography className={classes.materialIconText}>\n                ZoomOut\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ZoomOutMap />\n              <Typography className={classes.materialIconText}>\n                ZoomOutMap\n              </Typography>\n            </Grid>\n          </Grid>\n        </div>\n        )}\n\n        {activeTabId === 1 && (\n        <div>\n          <Grid container spacing={2} className=\"icon-list\">\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-bed\" />\n              <Typography className={classes.materialIconText}>Bed</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-bank\" />\n              <Typography className={classes.materialIconText}>Bank</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-behance\" />\n              <Typography className={classes.materialIconText}>\n                Behance\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-behance-square\" />\n              <Typography className={classes.materialIconText}>\n                Behance-square\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-bomb\" />\n              <Typography className={classes.materialIconText}>Bomb</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-building\" />\n              <Typography className={classes.materialIconText}>\n                Building\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-cab\" />\n              <Typography className={classes.materialIconText}>Cab</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-car\" />\n              <Typography className={classes.materialIconText}>Car</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-child\" />\n              <Typography className={classes.materialIconText}>\n                Child\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-circle-o-notch\" />\n              <Typography className={classes.materialIconText}>\n                Circle-o-notch\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-circle-thin\" />\n              <Typography className={classes.materialIconText}>\n                Circle-thin\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-codepen\" />\n              <Typography className={classes.materialIconText}>\n                Codepen\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-cube\" />\n              <Typography className={classes.materialIconText}>Cube</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-cubes\" />\n              <Typography className={classes.materialIconText}>\n                Cubes\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-database\" />\n              <Typography className={classes.materialIconText}>\n                Database\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-delicious\" />\n              <Typography className={classes.materialIconText}>\n                Delicious\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-deviantart\" />\n              <Typography className={classes.materialIconText}>\n                Deviantart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-digg\" />\n              <Typography className={classes.materialIconText}>Digg</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-drupal\" />\n              <Typography className={classes.materialIconText}>\n                Drupal\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-empire\" />\n              <Typography className={classes.materialIconText}>\n                Empire\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-envelope-square\" />\n              <Typography className={classes.materialIconText}>\n                Envelope-square\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-fax\" />\n              <Typography className={classes.materialIconText}>Fax</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-archive-o\" />\n              <Typography className={classes.materialIconText}>\n                File-archive-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-audio-o\" />\n              <Typography className={classes.materialIconText}>\n                File-audio-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-code-o\" />\n              <Typography className={classes.materialIconText}>\n                Аile-code-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-excel-o\" />\n              <Typography className={classes.materialIconText}>\n                Аile-excel-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-image-o\" />\n              <Typography className={classes.materialIconText}>\n                File-image-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-movie-o\" />\n              <Typography className={classes.materialIconText}>\n                Аile-movie-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-pdf-o\" />\n              <Typography className={classes.materialIconText}>\n                File-pdf-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-photo-o\" />\n              <Typography className={classes.materialIconText}>\n                File-photo-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-picture-o\" />\n              <Typography className={classes.materialIconText}>\n                File-picture-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-powerpoint-o\" />\n              <Typography className={classes.materialIconText}>\n                File-powerpoint-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-sound-o\" />\n              <Typography className={classes.materialIconText}>\n                File-sound-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-video-o\" />\n              <Typography className={classes.materialIconText}>\n                File-video-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-word-o\" />\n              <Typography className={classes.materialIconText}>\n                File-word-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-zip-o\" />\n              <Typography className={classes.materialIconText}>\n                File-zip-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-ge\" />\n              <Typography className={classes.materialIconText}>Ge</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-git\" />\n              <Typography className={classes.materialIconText}>Git</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-git-square\" />\n              <Typography className={classes.materialIconText}>\n                Git-square\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-google\" />\n              <Typography className={classes.materialIconText}>\n                Google\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-graduation-cap\" />\n              <Typography className={classes.materialIconText}>\n                Graduation-cap\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-hacker-news\" />\n              <Typography className={classes.materialIconText}>\n                Hacker-news\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-header\" />\n              <Typography className={classes.materialIconText}>\n                Header\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-history\" />\n              <Typography className={classes.materialIconText}>\n                History\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-institution\" />\n              <Typography className={classes.materialIconText}>\n                Institution\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-joomla\" />\n              <Typography className={classes.materialIconText}>\n                Joomla\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-jsfiddle\" />\n              <Typography className={classes.materialIconText}>\n                Jsfiddle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-language\" />\n              <Typography className={classes.materialIconText}>\n                Language\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-life-bouy\" />\n              <Typography className={classes.materialIconText}>\n                Life-bouy\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-life-ring\" />\n              <Typography className={classes.materialIconText}>\n                Life-ring\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-life-saver\" />\n              <Typography className={classes.materialIconText}>\n                Life-saver\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-mortar-board\" />\n              <Typography className={classes.materialIconText}>\n                Mortar-board\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-openid\" />\n              <Typography className={classes.materialIconText}>\n                Openid\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-paper-plane\" />\n              <Typography className={classes.materialIconText}>\n                Paper-plane\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-paper-plane-o\" />\n              <Typography className={classes.materialIconText}>\n                paper-plane-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-paragraph\" />\n              <Typography className={classes.materialIconText}>\n                Paragraph\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-paw\" />\n              <Typography className={classes.materialIconText}>Paw</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-pied-piper\" />\n              <Typography className={classes.materialIconText}>\n                Pied-piper\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-pied-piper-alt\" />\n              <Typography className={classes.materialIconText}>\n                Pied-piper-alt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-pied-piper-square\" />\n              <Typography className={classes.materialIconText}>\n                Pied-piper-square\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-qq\" />\n              <Typography className={classes.materialIconText}>Qq</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-ra\" />\n              <Typography className={classes.materialIconText}>Ra</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-rebel\" />\n              <Typography className={classes.materialIconText}>\n                Rebel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-recycle\" />\n              <Typography className={classes.materialIconText}>\n                Recycle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-reddit\" />\n              <Typography className={classes.materialIconText}>\n                Reddit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-reddit-square\" />\n              <Typography className={classes.materialIconText}>\n                Reddit-square\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-send\" />\n              <Typography className={classes.materialIconText}>Send</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-send-o\" />\n              <Typography className={classes.materialIconText}>\n                Send-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-share-alt\" />\n              <Typography className={classes.materialIconText}>\n                Share-alt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-share-alt-square\" />\n              <Typography className={classes.materialIconText}>\n                Share-alt-square\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-slack\" />\n              <Typography className={classes.materialIconText}>\n                Slack\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-sliders\" />\n              <Typography className={classes.materialIconText}>\n                Sliders\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-soundcloud\" />\n              <Typography className={classes.materialIconText}>\n                Soundcloud\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-space-shuttle\" />\n              <Typography className={classes.materialIconText}>\n                Space-shuttle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-spoon\" />\n              <Typography className={classes.materialIconText}>\n                Spoon\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-spotify\" />\n              <Typography className={classes.materialIconText}>\n                Spotify\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-steam\" />\n              <Typography className={classes.materialIconText}>\n                Steam\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-steam-square\" />\n              <Typography className={classes.materialIconText}>\n                Steam-square\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-stumbleupon\" />\n              <Typography className={classes.materialIconText}>\n                Stumbleupon\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-stumbleupon-circle\" />\n              <Typography className={classes.materialIconText}>\n                Stumbleupon-circle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-support\" />\n              <Typography className={classes.materialIconText}>\n                Support\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-taxi\" />\n              <Typography className={classes.materialIconText}>Taxi</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-tencent-weibo\" />\n              <Typography className={classes.materialIconText}>\n                Tencent-weibo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-tree\" />\n              <Typography className={classes.materialIconText}>Tree</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-university\" />\n              <Typography className={classes.materialIconText}>\n                University\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-vine\" />\n              <Typography className={classes.materialIconText}>Vine</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-wechat\" />\n              <Typography className={classes.materialIconText}>\n                Wechat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-weixin\" />\n              <Typography className={classes.materialIconText}>\n                Weixin\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-wordpress\" />\n              <Typography className={classes.materialIconText}>\n                Wordpress\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-yahoo\" />\n              <Typography className={classes.materialIconText}>\n                Yahoo\n              </Typography>\n            </Grid>\n          </Grid>\n        </div>\n        )}\n      </Paper>\n    </>\n  );\n}\n","import React from 'react';\nimport ApexCharts from 'react-apexcharts';\nimport { useTheme } from '@material-ui/styles';\n\nconst series = [\n  {\n    name: 'series1',\n    data: [31, 40, 28, 51, 42, 109, 100],\n  },\n  {\n    name: 'series2',\n    data: [11, 32, 45, 32, 34, 52, 41],\n  },\n];\n\nexport default function ApexLineChart() {\n  const theme = useTheme();\n\n  return (\n    <ApexCharts\n      options={themeOptions(theme)}\n      series={series}\n      type=\"area\"\n      height={350}\n    />\n  );\n}\n\n// ############################################################\nfunction themeOptions(theme) {\n  return {\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: 'smooth',\n    },\n    xaxis: {\n      type: 'datetime',\n      categories: [\n        '2018-09-19T00:00:00',\n        '2018-09-19T01:30:00',\n        '2018-09-19T02:30:00',\n        '2018-09-19T03:30:00',\n        '2018-09-19T04:30:00',\n        '2018-09-19T05:30:00',\n        '2018-09-19T06:30:00',\n      ],\n    },\n    tooltip: {\n      x: {\n        format: 'dd/MM/yy HH:mm',\n      },\n    },\n    fill: {\n      colors: [theme.palette.primary.light, theme.palette.success.light],\n    },\n    colors: [theme.palette.primary.main, theme.palette.success.main],\n    chart: {\n      toolbar: {\n        show: false,\n      },\n    },\n    legend: {\n      show: false,\n    },\n  };\n}\n","import React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport ApexCharts from 'react-apexcharts';\n\nconst series = [\n  {\n    name: 'Metric1',\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: 'Metric2',\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: 'Metric3',\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: 'Metric4',\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: 'Metric5',\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: 'Metric6',\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: 'Metric7',\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: 'Metric8',\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: 'Metric9',\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n];\n\nexport default function ApexLineChart() {\n  const theme = useTheme();\n\n  return (\n    <ApexCharts\n      options={themeOptions(theme)}\n      series={series}\n      type=\"heatmap\"\n      height={350}\n    />\n  );\n}\n\n// ##################################################################\nfunction generateData(count, yrange) {\n  let i = 0;\n  const series = [];\n  while (i < count) {\n    const x = `w${(i + 1).toString()}`;\n    const y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n    series.push({\n      x,\n      y,\n    });\n    i++;\n  }\n\n  return series;\n}\n\nfunction themeOptions(theme) {\n  return {\n    chart: {\n      toolbar: {\n        show: false,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    colors: [theme.palette.primary.main],\n  };\n}\n","import React, { useState } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { useTheme } from '@material-ui/styles';\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  Pie,\n  PieChart,\n  ResponsiveContainer,\n  Sector,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\n// components\nimport Widget from '../../components/Widget/Widget';\nimport ApexLineChart from './components/ApexLineChart';\nimport ApexHeatmap from './components/ApexHeatmap';\nimport PageTitle from '../../components/PageTitle/PageTitle';\n\nconst lineChartData = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'Page C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'Page E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nconst pieChartData = [\n  { name: 'Group A', value: 400 },\n  { name: 'Group B', value: 300 },\n  { name: 'Group C', value: 300 },\n  { name: 'Group D', value: 200 },\n];\n\nexport default function Charts(props) {\n  const theme = useTheme();\n\n  // local\n  const [activeIndex, setActiveIndexId] = useState(0);\n\n  return (\n    <>\n      <PageTitle title=\"Charts Page - Data Display\" button=\"Latest Reports\" />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"Apex Line Chart\" upperTitle noBodyPadding>\n            <ApexLineChart />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"Apex Heatmap\" upperTitle noBodyPadding>\n            <ApexHeatmap />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <Widget title=\"Simple Line Chart\" noBodyPadding upperTitle>\n            <ResponsiveContainer width=\"100%\" height={350}>\n              <LineChart\n                width={500}\n                height={300}\n                data={lineChartData}\n                margin={{\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 5,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"pv\"\n                  stroke={theme.palette.primary.main}\n                  activeDot={{ r: 8 }}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"uv\"\n                  stroke={theme.palette.secondary.main}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Widget title=\"Pie Chart with Tooltips\" noBodyPadding upperTitle>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart width={200} height={300}>\n                <Pie\n                  activeIndex={activeIndex}\n                  activeShape={renderActiveShape}\n                  data={pieChartData}\n                  cx={200}\n                  cy={150}\n                  innerRadius={60}\n                  outerRadius={80}\n                  fill={theme.palette.primary.main}\n                  dataKey=\"value\"\n                  onMouseEnter={(e, id) => setActiveIndexId(id)}\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// ################################################################\n\nfunction renderActiveShape(props) {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >\n        {`PV ${value}`}\n      </text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  DialogContent,\n  FormControlLabel,\n  Switch,\n  TextField,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\n// styles\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  createPeerRequest,\n} from '../../squeakclient/requests';\nimport {\n  goToPeerPage,\n} from '../../navigation/navigation';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    margin: 'auto',\n    width: 'fit-content',\n    '& .MuiDialogContent-root': {\n      overflow: 'hidden',\n    },\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n    '& .MuiDialogActions-root': {\n      padding: '1rem',\n    },\n  },\n  formControlLabel: {\n    position: 'absolute',\n    left: '2rem',\n  },\n}));\n\nconst portDefaultValue = '0';\n\nexport default function CreatePeerDialog({\n  open,\n  handleClose,\n  ...props\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [peerName, setPeerName] = useState('');\n  const [host, setHost] = useState('');\n  const [port, setPort] = useState('');\n  const [customPortChecked, setCustomPortChecked] = React.useState(false);\n\n  const resetFields = () => {\n    setPeerName('');\n    setHost('');\n    setPort(portDefaultValue);\n    setCustomPortChecked(false);\n  };\n\n  const handleChangePeerName = (event) => {\n    setPeerName(event.target.value);\n  };\n\n  const handleChangeHost = (event) => {\n    setHost(event.target.value);\n  };\n\n  const handleChangeCustomPortChecked = (event) => {\n    setPort(\n      event.target.checked ? '' : portDefaultValue,\n    );\n    setCustomPortChecked(event.target.checked);\n  };\n\n  const handleChangePort = (event) => {\n    setPort(event.target.value);\n  };\n\n  const createPeer = (peerName, host, port) => {\n    createPeerRequest(peerName, host, port, (response) => {\n      goToPeerPage(history, response.getPeerId());\n    });\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log('peerName:', peerName);\n    console.log('host:', host);\n    console.log('port:', port);\n    if (!host) {\n      alert('Host cannot be empty.');\n      return;\n    }\n    if (!port) {\n      alert('Port cannot be empty.');\n      return;\n    }\n    createPeer(peerName, host, port);\n    handleClose();\n  }\n\n  function CreatePeerNameInput() {\n    return (\n      <TextField\n        required\n        variant=\"outlined\"\n        label=\"Peer Name\"\n        autoFocus\n        value={peerName}\n        onChange={handleChangePeerName}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n        margin=\"normal\"\n      />\n    );\n  }\n\n  function CreateHostInput() {\n    return (\n      <TextField\n        required\n        variant=\"outlined\"\n        label=\"Host\"\n        value={host}\n        onChange={handleChangeHost}\n        inputProps={{ maxLength: 128 }}\n        margin=\"normal\"\n      />\n    );\n  }\n\n  function CreatePortInput() {\n    return (\n      <TextField\n        required={customPortChecked}\n        variant=\"outlined\"\n        label=\"Port\"\n        value={customPortChecked ? port : ''}\n        onChange={handleChangePort}\n        inputProps={{ maxLength: 8 }}\n        disabled={!customPortChecked}\n        margin=\"normal\"\n      />\n    );\n  }\n\n  function CustomPortSwitch() {\n    return (\n      <FormControlLabel\n        className={classes.formControlLabel}\n        control={(\n          <Switch\n            checked={customPortChecked}\n            onChange={handleChangeCustomPortChecked}\n            name=\"use-custom-port\"\n            size=\"small\"\n          />\n        )}\n        label=\"Use custom port\"\n      />\n    );\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function CreatePeerButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Create Peer\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onEnter={resetFields}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"sm\"\n    >\n      <DialogTitle id=\"form-dialog-title\">\n        Create Peer\n      </DialogTitle>\n      <form\n        className={classes.form}\n        onSubmit={handleSubmit}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <DialogContent>\n          {CreatePeerNameInput()}\n          {CreateHostInput()}\n          {CreatePortInput()}\n        </DialogContent>\n        <DialogActions>\n          {CustomPortSwitch()}\n          {CancelButton()}\n          {CreatePeerButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  DialogContent,\n  FormControlLabel,\n  Switch,\n  TextField,\n} from '@material-ui/core';\n\n// styles\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  connectSqueakPeerRequest,\n} from '../../squeakclient/requests';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    margin: 'auto',\n    width: 'fit-content',\n    '& .MuiDialogContent-root': {\n      overflow: 'hidden',\n    },\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n    '& .MuiDialogActions-root': {\n      padding: '1rem',\n    },\n  },\n  formControlLabel: {\n    position: 'absolute',\n    left: '2rem',\n  },\n}));\n\nconst portDefaultValue = '0';\n\nexport default function ConnectPeerDialog({\n  open,\n  handleClose,\n  ...props\n}) {\n  const classes = useStyles();\n\n  const [peerName, setPeerName] = useState('');\n  const [host, setHost] = useState('');\n  const [port, setPort] = useState('');\n  const [customPortChecked, setCustomPortChecked] = React.useState(false);\n\n  const resetFields = () => {\n    setPeerName('');\n    setHost('');\n    setPort(portDefaultValue);\n    setCustomPortChecked(false);\n  };\n\n  const handleChangeHost = (event) => {\n    setHost(event.target.value);\n  };\n\n  const handleChangeCustomPortChecked = (event) => {\n    setPort(\n      event.target.checked ? '' : portDefaultValue,\n    );\n    setCustomPortChecked(event.target.checked);\n  };\n\n  const handleChangePort = (event) => {\n    setPort(event.target.value);\n  };\n\n  const connectPeer = (peerName, host, port) => {\n    connectSqueakPeerRequest(host, port, (response) => {\n      // goToPeerPage(history, response.getPeerId());\n    });\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log('host:', host);\n    console.log('port:', port);\n    if (!host) {\n      alert('Host cannot be empty.');\n      return;\n    }\n    if (!port) {\n      alert('Port cannot be empty.');\n      return;\n    }\n    connectPeer(peerName, host, port);\n    handleClose();\n  }\n\n  function ConnectHostInput() {\n    return (\n      <TextField\n        required\n        variant=\"outlined\"\n        label=\"Host\"\n        value={host}\n        onChange={handleChangeHost}\n        inputProps={{ maxLength: 128 }}\n        margin=\"normal\"\n      />\n    );\n  }\n\n  function ConnectPortInput() {\n    return (\n      <TextField\n        required={customPortChecked}\n        variant=\"outlined\"\n        label=\"Port\"\n        value={customPortChecked ? port : ''}\n        onChange={handleChangePort}\n        inputProps={{ maxLength: 8 }}\n        disabled={!customPortChecked}\n        margin=\"normal\"\n      />\n    );\n  }\n\n  function CustomPortSwitch() {\n    return (\n      <FormControlLabel\n        className={classes.formControlLabel}\n        control={(\n          <Switch\n            checked={customPortChecked}\n            onChange={handleChangeCustomPortChecked}\n            name=\"use-custom-port\"\n            size=\"small\"\n          />\n        )}\n        label=\"Use custom port\"\n      />\n    );\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function ConnectPeerButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Connect Peer\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onEnter={resetFields}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"sm\"\n    >\n      <DialogTitle id=\"form-dialog-title\">\n        Connect Peer\n      </DialogTitle>\n      <form\n        className={classes.form}\n        onSubmit={handleSubmit}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <DialogContent>\n          {ConnectHostInput()}\n          {ConnectPortInput()}\n        </DialogContent>\n        <DialogActions>\n          {CustomPortSwitch()}\n          {CancelButton()}\n          {ConnectPeerButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n\n// icons\nimport ComputerIcon from '@material-ui/icons/Computer';\n\nimport useStyles from '../../pages/wallet/styles';\n\nimport {\n  goToPeerAddressPage,\n} from '../../navigation/navigation';\n\nexport default function PeerListItem({\n  peer,\n  ...props\n}) {\n  const classes = useStyles({\n    clickable: true,\n  });\n\n  const history = useHistory();\n\n  const onPeerClick = (event) => {\n    event.preventDefault();\n    console.log('Handling peer address click...');\n    const host = peer.getPeerAddress().getHost();\n    const port = peer.getPeerAddress().getPort();\n    goToPeerAddressPage(history, host, port);\n  };\n\n  // const getPeerHost = () => {\n  //   const address = peer.getAddress();\n  //   if (address == null) {\n  //     return null;\n  //   }\n  //   const pieces = address.split(\":\");\n  //   return pieces[0];\n  // }\n  //\n  // const getPeerPort = () => {\n  //   const address = peer.getAddress();\n  //   if (address == null) {\n  //     return null;\n  //   }\n  //   const pieces = address.split(\":\");\n  //   if (pieces.length < 2) {\n  //     return null;\n  //   }\n  //   return pieces[1];\n  // }\n\n  return (\n    <Card\n      className={classes.root}\n      onClick={onPeerClick}\n    >\n      <CardHeader\n        avatar={<ComputerIcon />}\n        title={`Address: ${peer.getPeerAddress().getHost()}:${peer.getPeerAddress().getPort()}`}\n      />\n    </Card>\n  );\n}\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n\n// icons\nimport ComputerIcon from '@material-ui/icons/Computer';\n\nimport useStyles from '../../pages/wallet/styles';\n\nimport {\n  goToPeerPage,\n} from '../../navigation/navigation';\n\nexport default function SavedPeerListItem({\n  peer,\n  ...props\n}) {\n  const classes = useStyles({\n    clickable: true,\n  });\n\n  const history = useHistory();\n\n  const onPeerClick = (event) => {\n    event.preventDefault();\n    console.log('Handling peer click...');\n    const peerId = peer.getPeerId();\n    // const host = getPeerHost();\n    // const port = getPeerPort();\n    goToPeerPage(history, peerId);\n  };\n\n  // const getPeerHost = () => {\n  //   const address = peer.getAddress();\n  //   if (address == null) {\n  //     return null;\n  //   }\n  //   const pieces = address.split(\":\");\n  //   return pieces[0];\n  // }\n  //\n  // const getPeerPort = () => {\n  //   const address = peer.getAddress();\n  //   if (address == null) {\n  //     return null;\n  //   }\n  //   const pieces = address.split(\":\");\n  //   if (pieces.length < 2) {\n  //     return null;\n  //   }\n  //   return pieces[1];\n  // }\n\n  return (\n    <Card\n      className={classes.root}\n      onClick={onPeerClick}\n    >\n      <CardHeader\n        avatar={<ComputerIcon />}\n        title={`Name: ${peer.getPeerName()}`}\n        subheader={`Address: ${peer.getPeerAddress().getHost()}:${peer.getPeerAddress().getPort()}`}\n      />\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Button,\n  Tabs,\n  Tab,\n  AppBar,\n  Box,\n  Typography,\n} from '@material-ui/core';\n\n// styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n// components\nimport Widget from '../../components/Widget';\nimport CreatePeerDialog from '../../components/CreatePeerDialog';\nimport ConnectPeerDialog from '../../components/ConnectPeerDialog';\nimport PeerListItem from '../../components/PeerListItem';\nimport SavedPeerListItem from '../../components/SavedPeerListItem';\n\n// data\n\nimport {\n  getPeersRequest,\n  getConnectedPeersRequest,\n  subscribeConnectedPeersRequest,\n} from '../../squeakclient/requests';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function Peers() {\n  const classes = useStyles();\n  const [connectedPeers, setConnectedPeers] = useState([]);\n  const [peers, setPeers] = useState([]);\n  const [createPeerDialogOpen, setCreatePeerDialogOpen] = useState(false);\n  const [connectPeerDialogOpen, setConnectPeerDialogOpen] = useState(false);\n  const [value, setValue] = useState(0);\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const getConnectedPeers = () => {\n    getConnectedPeersRequest(setConnectedPeers);\n  };\n\n  const subscribeConnectedPeers = () => subscribeConnectedPeersRequest(setConnectedPeers);\n\n  const getSqueakPeers = () => {\n    getPeersRequest(setPeers);\n  };\n\n  const handleClickOpenCreatePeerDialog = () => {\n    setCreatePeerDialogOpen(true);\n  };\n\n  const handleCloseCreatePeerDialog = () => {\n    setCreatePeerDialogOpen(false);\n  };\n\n  const handleClickOpenConnectPeerDialog = () => {\n    setConnectPeerDialogOpen(true);\n  };\n\n  const handleCloseConnectPeerDialog = () => {\n    setConnectPeerDialogOpen(false);\n  };\n\n  useEffect(() => {\n    getConnectedPeers();\n  }, []);\n  useEffect(() => {\n    const stream = subscribeConnectedPeers();\n    return () => stream.cancel();\n  }, []);\n  useEffect(() => {\n    getSqueakPeers();\n  }, []);\n\n  function TabPanel(props) {\n    const {\n      children, value, index, ...other\n    } = props;\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <div>{children}</div>\n        )}\n      </div>\n    );\n  }\n\n  function CreatePeerButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                handleClickOpenCreatePeerDialog();\n              }}\n            >\n              Create Peer\n            </Button>\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function ConnectPeerButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                handleClickOpenConnectPeerDialog();\n              }}\n            >\n              Connect Peer\n            </Button>\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function PeersCountSummary() {\n    return (\n      <Grid item xs={12}>\n        <Box\n          p={1}\n        >\n          <Typography variant=\"h5\" component=\"h5\">\n            {`Number of connected peers: ${connectedPeers.length}`}\n          </Typography>\n        </Box>\n      </Grid>\n    );\n  }\n\n  function PeersGridItem() {\n    return (\n      <Grid item xs={12}>\n        {connectedPeers.map((peer) => (\n          <Box\n            p={1}\n            key={peer.getPeerAddress()}\n          >\n            <PeerListItem\n              key={peer.getPeerAddress()}\n              handlePeerClick={() => console.log('clicked peer')}\n              peer={peer}\n            />\n          </Box>\n        ))}\n      </Grid>\n    );\n  }\n\n  function SavedPeersGridItem() {\n    return (\n      <Grid item xs={12}>\n        {peers.map((peer) => (\n          <Box\n            p={1}\n            key={peer.getPeerName()}\n          >\n            <SavedPeerListItem\n              key={peer.getPeerName()}\n              handlePeerClick={() => console.log('clicked peer')}\n              peer={peer}\n            />\n          </Box>\n        ))}\n      </Grid>\n    );\n  }\n\n  function PeersTabs() {\n    return (\n      <>\n        <AppBar position=\"static\" color=\"default\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Connected Peers\" {...a11yProps(0)} />\n            <Tab label=\"Saved Peers\" {...a11yProps(1)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          {ConnectedPeersContent()}\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          {SavedPeersContent()}\n        </TabPanel>\n      </>\n    );\n  }\n\n  function ConnectedPeersContent() {\n    return (\n      <>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <Widget disableWidgetMenu>\n              {ConnectPeerButton()}\n              {PeersCountSummary()}\n              {PeersGridItem()}\n            </Widget>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n\n  function SavedPeersContent() {\n    return (\n      <>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <Widget disableWidgetMenu>\n              {CreatePeerButton()}\n              {SavedPeersGridItem()}\n            </Widget>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n\n  function CreatePeerDialogContent() {\n    return (\n      <>\n        <CreatePeerDialog\n          open={createPeerDialogOpen}\n          handleClose={handleCloseCreatePeerDialog}\n        />\n      </>\n    );\n  }\n\n  function ConnectPeerDialogContent() {\n    return (\n      <>\n        <ConnectPeerDialog\n          open={connectPeerDialogOpen}\n          handleClose={handleCloseConnectPeerDialog}\n        />\n      </>\n    );\n  }\n\n  function GridContent() {\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={12} sm={9}>\n          {PeersTabs()}\n        </Grid>\n        <Grid item xs={12} sm={3} />\n      </Grid>\n    );\n  }\n\n  return (\n    <>\n      {GridContent()}\n      {CreatePeerDialogContent()}\n      {ConnectPeerDialogContent()}\n    < />\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  dashedBorder: {\n    border: '1px dashed',\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  widgetWrapper: {\n    display: 'flex',\n    minHeight: '100%',\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n      color: 'rgba(255, 255, 255, 0.35)',\n    },\n  },\n}));\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\n// styles\nimport useStyles from './styles';\n\nimport {\n  deletePeerRequest,\n} from '../../squeakclient/requests';\nimport {\n  reloadRoute,\n} from '../../navigation/navigation';\n\nexport default function DeletePeerDialog({\n  open,\n  handleClose,\n  peer,\n  ...props\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const deletePeer = (peerId) => {\n    deletePeerRequest(peerId, (response) => {\n      reloadRoute(history);\n    });\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log('peer:', peer);\n    const peerId = peer.getPeerId();\n    console.log('peerId:', peerId);\n    deletePeer(peerId);\n    handleClose();\n  }\n\n  function MakeCancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    );\n  }\n\n  function DeletePeerButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Delete peer\n      </Button>\n    );\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Delete peer</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          Are you sure you want to delete this peer?\n        </DialogContent>\n        <DialogActions>\n          {MakeCancelButton()}\n          {DeletePeerButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Grid,\n  FormLabel,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  Switch,\n  Button,\n} from '@material-ui/core';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport PageTitle from '../../components/PageTitle';\nimport DeletePeerDialog from '../../components/DeletePeerDialog';\n\nimport {\n  getPeerRequest,\n  setPeerAutoconnectRequest,\n} from '../../squeakclient/requests';\n\nexport default function PeerPage() {\n  const classes = useStyles();\n  const { id } = useParams();\n  const [peer, setPeer] = useState(null);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n\n  const getSqueakPeer = (id) => {\n    getPeerRequest(id, setPeer);\n  };\n  const setAutoconnect = (id, autoconnect) => {\n    setPeerAutoconnectRequest(id, autoconnect, () => {\n      getSqueakPeer(id);\n    });\n  };\n\n  useEffect(() => {\n    getSqueakPeer(id);\n  }, [id]);\n\n  const handleClickOpenDeleteDialog = () => {\n    setDeleteDialogOpen(true);\n    console.log(`deleteDialogOpen: ${deleteDialogOpen}`);\n  };\n\n  const handleCloseDeleteDialog = () => {\n    setDeleteDialogOpen(false);\n  };\n\n  const handleSettingsAutoconnectChange = (event) => {\n    console.log(`Autoconnect changed for peer id: ${id}`);\n    console.log(`Autoconnect changed to: ${event.target.checked}`);\n    setAutoconnect(id, event.target.checked);\n  };\n\n  function NoPeerContent() {\n    return (\n      <p>\n        No peer loaded\n      </p>\n    );\n  }\n\n  function PeerContent() {\n    return (\n      <>\n        <p>\n          Peer name:\n          {' '}\n          {peer.getPeerName()}\n        </p>\n        <p>\n          Address:\n          {' '}\n          {peer.getPeerAddress().getHost()}\n          :\n          {peer.getPeerAddress().getPort()}\n        </p>\n        {PeerSettingsForm()}\n        {DeletePeerButton()}\n      </>\n    );\n  }\n\n  function PeerSettingsForm() {\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Peer settings</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Switch checked={peer.getAutoconnect()} onChange={handleSettingsAutoconnectChange} />}\n            label=\"Autoconnect\"\n          />\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  function DeletePeerButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                handleClickOpenDeleteDialog();\n              }}\n            >\n              Delete Peer\n            </Button>\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function DeletePeerDialogContent() {\n    return (\n      <>\n        <DeletePeerDialog\n          open={deleteDialogOpen}\n          handleClose={handleCloseDeleteDialog}\n          peer={peer}\n        />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <PageTitle title={`Peer: ${peer ? peer.getPeerName() : null}`} />\n      <div>\n        {peer\n          ? PeerContent()\n          : NoPeerContent()}\n      </div>\n      {DeletePeerDialogContent()}\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  dashedBorder: {\n    border: '1px dashed',\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  oppositeContent: {\n    // TODO: adjust this value accordingly\n    flex: 0.0,\n    padding: 0,\n  },\n}));\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Grid,\n  Button,\n  Box,\n} from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n\n// styles\n\n// components\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ComputerIcon from '@material-ui/icons/Computer';\n\nimport moment from 'moment';\nimport useStyles from './styles';\n\nimport {\n  connectSqueakPeerRequest,\n  disconnectSqueakPeerRequest,\n  getConnectedPeerRequest,\n  subscribeConnectedPeerRequest,\n} from '../../squeakclient/requests';\n\nexport default function PeerAddressPage() {\n  const classes = useStyles();\n  const { host, port } = useParams();\n  const [connectedPeer, setConnectedPeer] = useState(null);\n\n  const getConnectedPeer = useCallback(() => {\n    getConnectedPeerRequest(host, port, setConnectedPeer);\n  },\n  [host, port]);\n\n  const subscribeConnectedPeer = useCallback(() => subscribeConnectedPeerRequest(host, port, (connectedPeer) => {\n    setConnectedPeer(connectedPeer);\n  }),\n  [host, port]);\n\n  useEffect(() => {\n    getConnectedPeer();\n  }, [getConnectedPeer]);\n  useEffect(() => {\n    const stream = subscribeConnectedPeer();\n    return () => stream.cancel();\n  }, [subscribeConnectedPeer]);\n\n  function DisconnectPeerButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                disconnectSqueakPeerRequest(host, port, () => {\n                // TODO: nothing maybe\n                });\n              }}\n            >\n              Disconnect Peer\n            </Button>\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function ConnectPeerButton() {\n    return (\n      <>\n        <Grid item xs={12}>\n          <div className={classes.root}>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                connectSqueakPeerRequest(host, port, () => {\n                // TODO: nothing maybe\n                });\n              }}\n            >\n              Connect Peer\n            </Button>\n          </div>\n        </Grid>\n      </>\n    );\n  }\n\n  function ConnectionStatusContent() {\n    return (\n      <>\n        <Grid item xs={12}>\n          Status:\n          {' '}\n          {(connectedPeer)\n            ? 'Connected'\n            : 'Disconnected'}\n        </Grid>\n      </>\n    );\n  }\n\n  function ConnectionActionContent() {\n    return (\n      <>\n        <Grid item xs={12}>\n          {(connectedPeer)\n            ? DisconnectPeerButton()\n            : ConnectPeerButton()}\n        </Grid>\n      </>\n    );\n  }\n\n  function AddressContent() {\n    return (\n      <>\n        <Typography variant=\"h2\" component=\"h2\">\n          {`Peer Address: ${host}:${port}`}\n        </Typography>\n      </>\n    );\n  }\n\n  function PeerConnectionDetails() {\n    const connectTimeS = connectedPeer.getConnectTimeS();\n    const momentTimeString = moment(connectTimeS * 1000).fromNow();\n    const lastMsgReceivedTimeS = connectedPeer.getLastMessageReceivedTimeS();\n    const lastMsgReceivedString = moment(lastMsgReceivedTimeS * 1000).fromNow();\n    const numMsgsReceived = connectedPeer.getNumberMessagesReceived();\n    const numBytesReceived = connectedPeer.getNumberBytesReceived();\n    const numMsgsSent = connectedPeer.getNumberMessagesSent();\n    const numBytesSent = connectedPeer.getNumberBytesSent();\n    return (\n      <>\n        <Box>\n          {`Connect time: ${momentTimeString}`}\n        </Box>\n        <Box>\n          {`Last message received: ${lastMsgReceivedString}`}\n        </Box>\n        <Box>\n          {`Number of messages received: ${numMsgsReceived}`}\n        </Box>\n        <Box>\n          {`Number of bytes received: ${numBytesReceived}`}\n        </Box>\n        <Box>\n          {`Number of messages sent: ${numMsgsSent}`}\n        </Box>\n        <Box>\n          {`Number of bytes sent: ${numBytesSent}`}\n        </Box>\n      </>\n    );\n  }\n\n  function PeerConnectionContent() {\n    console.log(connectedPeer);\n    return (\n      <Card\n        className={classes.root}\n      >\n        <CardHeader\n          avatar={<ComputerIcon />}\n          title={`Peer Address: ${`${host}:${port}`}`}\n          subheader={PeerConnectionDetails()}\n        />\n      </Card>\n    );\n  }\n\n  return (\n    <>\n      {AddressContent()}\n      {ConnectionStatusContent()}\n      {ConnectionActionContent()}\n      {(connectedPeer) && PeerConnectionContent()}\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from 'react-router-dom';\nimport classnames from 'classnames';\n\n// styles\nimport useStyles from './styles';\n\n// components\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\n\n// pages\nimport Timeline from '../../pages/timeline';\nimport Dashboard from '../../pages/dashboard';\nimport SqueakAddress from '../../pages/squeakaddress';\nimport Squeak from '../../pages/squeak';\nimport Profile from '../../pages/profile';\nimport Wallet from '../../pages/wallet';\nimport LightningNode from '../../pages/lightningnode';\nimport Channel from '../../pages/channel';\nimport Notifications from '../../pages/notifications';\nimport Maps from '../../pages/maps';\nimport Profiles from '../../pages/profiles';\nimport Payments from '../../pages/payments';\nimport SentPayments from '../../pages/sentpayments';\nimport ReceivedPayments from '../../pages/receivedpayments';\nimport Liked from '../../pages/liked';\nimport Icons from '../../pages/icons';\nimport Charts from '../../pages/charts';\nimport Peers from '../../pages/peers';\nimport Peer from '../../pages/peer';\nimport PeerAddress from '../../pages/peeraddress';\n\n// context\nimport { useLayoutState } from '../../context/LayoutContext';\n\nfunction Layout(props) {\n  const classes = useStyles();\n\n  // global\n  const layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n      <>\n        <Header history={props.history} />\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n          })}\n        >\n          <div className={classes.fakeToolbar} />\n          <Switch>\n            <Route path=\"/app/timeline\" component={Timeline} />\n            <Route path=\"/app/dashboard\" component={Dashboard} />\n            <Route path=\"/app/squeakaddress/:address\" component={SqueakAddress} />\n            <Route path=\"/app/squeak/:hash\" component={Squeak} />\n            <Route path=\"/app/profile/:id\" component={Profile} />\n            <Route path=\"/app/profiles\" component={Profiles} />\n            <Route path=\"/app/payments\" component={Payments} />\n            <Route path=\"/app/sentpayments\" component={SentPayments} />\n            <Route path=\"/app/receivedpayments\" component={ReceivedPayments} />\n            <Route path=\"/app/liked\" component={Liked} />\n            <Route path=\"/app/wallet\" component={Wallet} />\n            <Route path=\"/app/lightningnode/:pubkey/:host/:port\" component={LightningNode} />\n            <Route path=\"/app/lightningnode/:pubkey/:host\" component={LightningNode} />\n            <Route path=\"/app/lightningnode/:pubkey\" component={LightningNode} />\n            <Route path=\"/app/channel/:txId/:outputIndex\" component={Channel} />\n            <Route path=\"/app/peers\" component={Peers} />\n            <Route path=\"/app/peer/:id\" component={Peer} />\n            <Route path=\"/app/peeraddress/:host/:port\" component={PeerAddress} />\n            <Route path=\"/app/notifications\" component={Notifications} />\n            <Route\n              exact\n              path=\"/app/ui\"\n              render={() => <Redirect to=\"/app/ui/icons\" />}\n            />\n            <Route path=\"/app/ui/maps\" component={Maps} />\n            <Route path=\"/app/ui/icons\" component={Icons} />\n            <Route path=\"/app/ui/charts\" component={Charts} />\n          </Switch>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  container: {\n    height: '100vh',\n    width: '100vw',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.palette.primary.main,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n  logotype: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: theme.spacing(12),\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n  logotypeText: {\n    fontWeight: 500,\n    color: 'white',\n    marginLeft: theme.spacing(2),\n  },\n  logotypeIcon: {\n    width: 70,\n    marginRight: theme.spacing(2),\n  },\n  paperRoot: {\n    boxShadow: theme.customShadows.widgetDark,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(6),\n    paddingRight: theme.spacing(6),\n    maxWidth: 404,\n  },\n  textRow: {\n    marginBottom: theme.spacing(10),\n    textAlign: 'center',\n  },\n  errorCode: {\n    fontSize: 148,\n    fontWeight: 600,\n  },\n  safetyText: {\n    fontWeight: 300,\n    color: theme.palette.text.hint,\n  },\n  backButton: {\n    boxShadow: theme.customShadows.widget,\n    textTransform: 'none',\n    fontSize: 22,\n  },\n}));\n","import React from 'react';\nimport {\n  Grid, Paper, Typography, Button,\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\n\n// styles\nimport useStyles from './styles';\n\n// logo\nimport logo from './logo.svg';\n\nexport default function Error() {\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotype}>\n        <img className={classes.logotypeIcon} src={logo} alt=\"logo\" />\n        <Typography variant=\"h3\" color=\"white\" className={classes.logotypeText}>\n          Material Admin\n        </Typography>\n      </div>\n      <Paper classes={{ root: classes.paperRoot }}>\n        <Typography\n          variant=\"h1\"\n          color=\"primary\"\n          className={classnames(classes.textRow, classes.errorCode)}\n        >\n          404\n        </Typography>\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\n          Oops. Looks like the page you're looking for no longer exists\n        </Typography>\n        <Typography\n          variant=\"h6\"\n          color=\"text\"\n          colorBrightness=\"secondary\"\n          className={classnames(classes.textRow, classes.safetyText)}\n        >\n          But we're here to bring you back to safety\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/\"\n          size=\"large\"\n          className={classes.backButton}\n        >\n          Back to Home\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n","import { makeStyles } from '@material-ui/styles';\n\nexport default makeStyles((theme) => ({\n  container: {\n    height: '100vh',\n    width: '100vw',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n  logotypeContainer: {\n    backgroundColor: theme.palette.primary.main,\n    width: '60%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    [theme.breakpoints.down('md')]: {\n      width: '50%',\n    },\n    [theme.breakpoints.down('md')]: {\n      display: 'none',\n    },\n  },\n  logotypeImage: {\n    width: 165,\n    marginBottom: theme.spacing(4),\n  },\n  logotypeText: {\n    color: 'white',\n    fontWeight: 500,\n    fontSize: 84,\n    [theme.breakpoints.down('md')]: {\n      fontSize: 48,\n    },\n  },\n  formContainer: {\n    width: '40%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    [theme.breakpoints.down('md')]: {\n      width: '50%',\n    },\n  },\n  form: {\n    width: 320,\n  },\n  tab: {\n    fontWeight: 400,\n    fontSize: 18,\n  },\n  greeting: {\n    fontWeight: 500,\n    textAlign: 'center',\n    marginTop: theme.spacing(4),\n  },\n  subGreeting: {\n    fontWeight: 500,\n    textAlign: 'center',\n    marginTop: theme.spacing(2),\n  },\n  googleButton: {\n    marginTop: theme.spacing(6),\n    boxShadow: theme.customShadows.widget,\n    backgroundColor: 'white',\n    width: '100%',\n    textTransform: 'none',\n  },\n  googleButtonCreating: {\n    marginTop: 0,\n  },\n  googleIcon: {\n    width: 30,\n    marginRight: theme.spacing(2),\n  },\n  creatingButtonContainer: {\n    marginTop: theme.spacing(2.5),\n    height: 46,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  createAccountButton: {\n    height: 46,\n    textTransform: 'none',\n  },\n  formDividerContainer: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    display: 'flex',\n    alignItems: 'center',\n  },\n  formDividerWord: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  formDivider: {\n    flexGrow: 1,\n    height: 1,\n    backgroundColor: `${theme.palette.text.hint}40`,\n  },\n  errorMessage: {\n    textAlign: 'center',\n  },\n  textFieldUnderline: {\n    '&:before': {\n      borderBottomColor: theme.palette.primary.light,\n    },\n    '&:after': {\n      borderBottomColor: theme.palette.primary.main,\n    },\n    '&:hover:before': {\n      borderBottomColor: `${theme.palette.primary.light} !important`,\n    },\n  },\n  textField: {\n    borderBottomColor: theme.palette.background.light,\n  },\n  formButtons: {\n    width: '100%',\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  forgetButton: {\n    textTransform: 'none',\n    fontWeight: 400,\n  },\n  loginLoader: {\n    marginLeft: theme.spacing(4),\n  },\n  copyright: {\n    marginTop: theme.spacing(4),\n    whiteSpace: 'nowrap',\n    [theme.breakpoints.up('md')]: {\n      position: 'absolute',\n      bottom: theme.spacing(2),\n    },\n  },\n}));\n","import React from 'react';\n\nconst UserStateContext = React.createContext();\nconst UserDispatchContext = React.createContext();\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN_SUCCESS':\n      return { ...state, isAuthenticated: true };\n    case 'SIGN_OUT_SUCCESS':\n      return { ...state, isAuthenticated: false };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction UserProvider({ children }) {\n  const [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: !!localStorage.getItem('id_token'),\n  });\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nfunction useUserState() {\n  const context = React.useContext(UserStateContext);\n  if (context === undefined) {\n    throw new Error('useUserState must be used within a UserProvider');\n  }\n  return context;\n}\n\nfunction useUserDispatch() {\n  const context = React.useContext(UserDispatchContext);\n  if (context === undefined) {\n    throw new Error('useUserDispatch must be used within a UserProvider');\n  }\n  return context;\n}\n\nexport {\n  UserProvider, useUserState, useUserDispatch, loginUser, signOut,\n};\n\n// ###########################################################\n\nfunction loginUser(dispatch, login, password, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  if (!!login && !!password) {\n    setTimeout(() => {\n      localStorage.setItem('id_token', 1);\n      setError(null);\n      setIsLoading(false);\n      dispatch({ type: 'LOGIN_SUCCESS' });\n\n      history.push('/app/dashboard');\n    }, 2000);\n  } else {\n    dispatch({ type: 'LOGIN_FAILURE' });\n    setError(true);\n    setIsLoading(false);\n  }\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem('id_token');\n  dispatch({ type: 'SIGN_OUT_SUCCESS' });\n  history.push('/login');\n}\n","import React, { useState } from 'react';\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport classnames from 'classnames';\n\n// styles\nimport useStyles from './styles';\n\n// logo\nimport logo from './logo.svg';\nimport google from '../../images/google.svg';\n\n// context\nimport { useUserDispatch, loginUser } from '../../context/UserContext';\n\nfunction Login(props) {\n  const classes = useStyles();\n\n  // global\n  const userDispatch = useUserDispatch();\n\n  // local\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTabId, setActiveTabId] = useState(0);\n  const [nameValue, setNameValue] = useState('');\n  const [loginValue, setLoginValue] = useState('');\n  const [passwordValue, setPasswordValue] = useState('');\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n        <Typography className={classes.logotypeText}>Material Admin</Typography>\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <>\n              <Typography variant=\"h1\" className={classes.greeting}>\n                Good Morning, User\n              </Typography>\n              <Button size=\"large\" className={classes.googleButton}>\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button>\n              <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={(e) => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={(e) => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || passwordValue.length === 0\n                    }\n                    onClick={() => loginUser(\n                      userDispatch,\n                      loginValue,\n                      passwordValue,\n                      props.history,\n                      setIsLoading,\n                      setError,\n                    )}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                  >\n                    Login\n                  </Button>\n                )}\n                <Button\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.forgetButton}\n                >\n                  Forget Password\n                </Button>\n              </div>\n            </>\n          )}\n          {activeTabId === 1 && (\n            <>\n              <Typography variant=\"h1\" className={classes.greeting}>\n                Welcome!\n              </Typography>\n              <Typography variant=\"h2\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={(e) => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={(e) => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={(e) => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                  <Button\n                    onClick={() => loginUser(\n                      userDispatch,\n                      loginValue,\n                      passwordValue,\n                      props.history,\n                      setIsLoading,\n                      setError,\n                    )}\n                    disabled={\n                      loginValue.length === 0\n                      || passwordValue.length === 0\n                      || nameValue.length === 0\n                    }\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    className={classes.createAccountButton}\n                  >\n                    Create your account\n                  </Button>\n                )}\n              </div>\n              <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div>\n              <Button\n                size=\"large\"\n                className={classnames(\n                  classes.googleButton,\n                  classes.googleButtonCreating,\n                )}\n              >\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button>\n            </>\n          )}\n        </div>\n        <Typography color=\"primary\" className={classes.copyright}>\n          © 2014-2019 Flatlogic, LLC. All rights reserved.\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","import React from 'react';\nimport {\n  HashRouter, Route, Switch, Redirect,\n} from 'react-router-dom';\n\n// components\nimport Layout from './Layout';\n\n// pages\nimport Error from '../pages/error';\nimport Login from '../pages/login';\n\n// context\n// import { useUserState } from '../context/UserContext';\n\nexport default function App() {\n  // global\n  // const { isAuthenticated } = useUserState();\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app/timeline\" />} />\n        <Route\n          exact\n          path=\"/app\"\n          render={() => <Redirect to=\"/app/timeline\" />}\n        />\n        <PublicRoute path=\"/app\" component={Layout} />\n        {' '}\n        <PublicRoute path=\"/login\" component={Login} />\n        <Route component={Error} />\n      </Switch>\n    </HashRouter>\n  );\n\n  // #######################################################################\n\n  // function PrivateRoute({ component, ...rest }) {\n  //   return (\n  //     <Route\n  //       {...rest}\n  //       render={props =>\n  //         isAuthenticated ? (\n  //           React.createElement(component, props)\n  //         ) : (\n  //           <Redirect\n  //             to={{\n  //               pathname: \"/login\",\n  //               state: {\n  //                 from: props.location,\n  //               },\n  //             }}\n  //           />\n  //         )\n  //       }\n  //     />\n  //   );\n  // }\n\n  function PublicRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={(props) => React.createElement(component, props)}\n      />\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { CssBaseline } from '@material-ui/core';\n\nimport Themes from './themes';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { LayoutProvider } from './context/LayoutContext';\nimport { UserProvider } from './context/UserContext';\n\nReactDOM.render(\n  <LayoutProvider>\n    <UserProvider>\n      <ThemeProvider theme={Themes.default}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </UserProvider>\n  </LayoutProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}