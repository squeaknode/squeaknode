{"version":3,"sources":["proto/squeak_admin_pb.js","api/client.js","Icons.js","features/squeaks/squeaksSlice.js","components/Loader/index.js","features/profiles/profilesSlice.js","features/payments/paymentsSlice.js","components/SqueakCard/index.js","squeakimages/images.js","features/peers/peersSlice.js","features/sellPrice/sellPriceSlice.js","features/squeaks/MakeSqueak.js","features/network/networkSlice.js","features/externalAddress/externalAddressSlice.js","store.js","features/account/accountSlice.js","proto/lnd_pb.js","icon.svg","components/Nav/index.js","components/Login/index.js","components/Signup/index.js","features/squeaks/Squeak.js","components/Squeak/index.js","features/profiles/SigningProfiles.js","features/profiles/ContactProfiles.js","components/Profiles/index.js","features/payments/SentPayments.js","features/payments/ReceivedPayments.js","components/Payments/index.js","components/Peers/index.js","features/payments/PaymentSummary.js","components/Feed/index.js","features/squeaks/SearchResults.js","components/Search/index.js","components/Notifications/index.js","components/Alerts/index.js","App.js","serviceWorker.js","index.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","squeaknode","CreateSigningProfileRequest","opt_data","Message","initialize","this","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","profileName","getFieldWithDefault","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setProfileName","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","getProfileName","length","writeString","setField","CreateSigningProfileReply","profileId","readInt32","setProfileId","getProfileId","writeInt32","ImportSigningProfileRequest","privateKey","setPrivateKey","undefined","getPrivateKey","ImportSigningProfileReply","CreateContactProfileRequest","pubkey","setPubkey","getPubkey","CreateContactProfileReply","GetProfilesRequest","GetProfilesReply","repeatedFields_","squeakProfilesList","toObjectList","getSqueakProfilesList","SqueakProfile","readMessage","addSqueakProfiles","writeRepeatedMessage","getRepeatedWrapperField","setSqueakProfilesList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearSqueakProfilesList","GetSigningProfilesRequest","GetSigningProfilesReply","GetContactProfilesRequest","GetContactProfilesReply","GetSqueakProfileRequest","GetSqueakProfileReply","squeakProfile","getSqueakProfile","setSqueakProfile","writeMessage","getWrapperField","setWrapperField","clearSqueakProfile","hasSqueakProfile","getField","GetSqueakProfileByPubKeyRequest","GetSqueakProfileByPubKeyReply","GetSqueakProfileByNameRequest","name","setName","getName","GetSqueakProfileByNameReply","SetSqueakProfileFollowingRequest","following","readBool","setFollowing","getFollowing","writeBool","SetSqueakProfileFollowingReply","RenameSqueakProfileRequest","RenameSqueakProfileReply","GetSqueakProfilePrivateKeyRequest","GetSqueakProfilePrivateKeyReply","DeleteSqueakProfileRequest","DeleteSqueakProfileReply","SetSqueakProfileImageRequest","profileImage","setProfileImage","getProfileImage","SetSqueakProfileImageReply","ClearSqueakProfileImageRequest","ClearSqueakProfileImageReply","hasPrivateKey","hasCustomProfileImage","setHasPrivateKey","setHasCustomProfileImage","getHasPrivateKey","getHasCustomProfileImage","MakeSqueakRequest","content","replyto","hasRecipient","recipientProfileId","setContent","setReplyto","setHasRecipient","setRecipientProfileId","getContent","getReplyto","getHasRecipient","getRecipientProfileId","MakeSqueakReply","squeakHash","setSqueakHash","getSqueakHash","GetSqueakDisplayRequest","GetSqueakDisplayReply","squeakDisplayEntry","getSqueakDisplayEntry","SqueakDisplayEntry","setSqueakDisplayEntry","clearSqueakDisplayEntry","hasSqueakDisplayEntry","isUnlocked","contentStr","isReply","replyTo","blockHeight","blockHash","blockTime","squeakTime","authorPubkey","isAuthorKnown","author","getAuthor","likedTimeMs","serializedSqueakHex","secretKeyHex","isPrivate","recipientPubkey","isRecipientKnown","recipient","getRecipient","setIsUnlocked","setContentStr","setIsReply","setReplyTo","setBlockHeight","setBlockHash","readInt64","setBlockTime","setSqueakTime","setAuthorPubkey","setIsAuthorKnown","setAuthor","setLikedTimeMs","setSerializedSqueakHex","setSecretKeyHex","setIsPrivate","setRecipientPubkey","setIsRecipientKnown","setRecipient","getIsUnlocked","getContentStr","getIsReply","getReplyTo","getBlockHeight","getBlockHash","getBlockTime","writeInt64","getSqueakTime","getAuthorPubkey","getIsAuthorKnown","getLikedTimeMs","getSerializedSqueakHex","getSecretKeyHex","getIsPrivate","getRecipientPubkey","getIsRecipientKnown","clearAuthor","hasAuthor","clearRecipient","GetTimelineSqueakDisplaysRequest","limit","lastEntry","getLastEntry","setLimit","setLastEntry","getLimit","clearLastEntry","hasLastEntry","GetTimelineSqueakDisplaysReply","squeakDisplayEntriesList","getSqueakDisplayEntriesList","addSqueakDisplayEntries","setSqueakDisplayEntriesList","clearSqueakDisplayEntriesList","GetPubKeySqueakDisplaysRequest","GetPubKeySqueakDisplaysReply","GetSearchSqueakDisplaysRequest","searchText","setSearchText","getSearchText","GetSearchSqueakDisplaysReply","GetAncestorSqueakDisplaysRequest","GetAncestorSqueakDisplaysReply","GetReplySqueakDisplaysRequest","GetReplySqueakDisplaysReply","DeleteSqueakRequest","DeleteSqueakReply","CreatePeerRequest","peerName","peerAddress","getPeerAddress","PeerAddress","setPeerName","setPeerAddress","getPeerName","clearPeerAddress","hasPeerAddress","CreatePeerReply","peerId","setPeerId","getPeerId","GetPeerRequest","GetPeerReply","squeakPeer","getSqueakPeer","SqueakPeer","setSqueakPeer","clearSqueakPeer","hasSqueakPeer","GetPeerByAddressRequest","GetPeerByAddressReply","GetPeersRequest","GetPeersReply","squeakPeersList","getSqueakPeersList","addSqueakPeers","setSqueakPeersList","clearSqueakPeersList","autoconnect","shareForFree","setAutoconnect","setShareForFree","getAutoconnect","getShareForFree","SetPeerAutoconnectRequest","SetPeerAutoconnectReply","SetPeerShareForFreeRequest","SetPeerShareForFreeReply","RenamePeerRequest","RenamePeerReply","DeletePeerRequest","DeletePeerReply","LoadBuyOffersRequest","LoadBuyOffersReply","GetBuyOffersRequest","GetBuyOffersReply","offersList","getOffersList","OfferDisplayEntry","addOffers","setOffersList","clearOffersList","GetBuyOfferRequest","offerId","setOfferId","getOfferId","GetBuyOfferReply","offer","getOffer","setOffer","clearOffer","hasOffer","priceMsat","nodePubkey","nodeHost","nodePort","invoiceTimestamp","invoiceExpiry","setPriceMsat","setNodePubkey","setNodeHost","setNodePort","setInvoiceTimestamp","setInvoiceExpiry","getPriceMsat","getNodePubkey","getNodeHost","getNodePort","getInvoiceTimestamp","getInvoiceExpiry","DownloadSqueaksRequest","pubkeysList","getRepeatedField","minBlockHeight","maxBlockHeight","replytoSqueakHash","addPubkeys","setMinBlockHeight","setMaxBlockHeight","setReplytoSqueakHash","getPubkeysList","writeRepeatedString","getMinBlockHeight","getMaxBlockHeight","getReplytoSqueakHash","setPubkeysList","addToRepeatedField","clearPubkeysList","DownloadResult","numberDownloaded","numberRequested","numberPeers","elapsedTimeMs","setNumberDownloaded","setNumberRequested","setNumberPeers","setElapsedTimeMs","getNumberDownloaded","getNumberRequested","getNumberPeers","getElapsedTimeMs","DownloadSqueaksReply","downloadResult","getDownloadResult","setDownloadResult","clearDownloadResult","hasDownloadResult","PayOfferRequest","PayOfferReply","sentPaymentId","setSentPaymentId","getSentPaymentId","DecryptSqueakRequest","authorProfileId","setHasAuthor","setAuthorProfileId","getHasAuthor","getAuthorProfileId","DecryptSqueakReply","GetSentPaymentsRequest","lastSentPayment","getLastSentPayment","SentPayment","setLastSentPayment","clearLastSentPayment","hasLastSentPayment","GetSentPaymentsReply","sentPaymentsList","getSentPaymentsList","addSentPayments","setSentPaymentsList","clearSentPaymentsList","GetSentPaymentRequest","GetSentPaymentReply","sentPayment","getSentPayment","setSentPayment","clearSentPayment","hasSentPayment","paymentHash","valid","timeMs","setPaymentHash","setValid","setTimeMs","getPaymentHash","getValid","getTimeMs","DownloadSqueakRequest","DownloadSqueakReply","DownloadOffersRequest","DownloadOffersReply","DownloadRepliesRequest","DownloadRepliesReply","DownloadPubKeySqueaksRequest","DownloadPubKeySqueaksReply","GetSentOffersRequest","GetSentOffersReply","sentOffersList","getSentOffersList","SentOffer","addSentOffers","setSentOffersList","clearSentOffersList","sentOfferId","setSentOfferId","getSentOfferId","GetReceivedPaymentsRequest","lastReceivedPayment","getLastReceivedPayment","ReceivedPayment","setLastReceivedPayment","clearLastReceivedPayment","hasLastReceivedPayment","GetReceivedPaymentsReply","receivedPaymentsList","getReceivedPaymentsList","addReceivedPayments","setReceivedPaymentsList","clearReceivedPaymentsList","receivedPaymentId","setReceivedPaymentId","getReceivedPaymentId","SubscribeReceivedPaymentsRequest","paymentIndex","setPaymentIndex","getPaymentIndex","GetNetworkRequest","GetNetworkReply","network","setNetwork","getNetwork","GetPaymentSummaryRequest","GetPaymentSummaryReply","paymentSummary","getPaymentSummary","PaymentSummary","setPaymentSummary","clearPaymentSummary","hasPaymentSummary","numReceivedPayments","numSentPayments","amountEarnedMsat","amountSpentMsat","setNumReceivedPayments","setNumSentPayments","setAmountEarnedMsat","setAmountSpentMsat","getNumReceivedPayments","getNumSentPayments","getAmountEarnedMsat","getAmountSpentMsat","ReprocessReceivedPaymentsRequest","ReprocessReceivedPaymentsReply","LikeSqueakRequest","LikeSqueakReply","UnlikeSqueakRequest","UnlikeSqueakReply","GetLikedSqueakDisplaysRequest","GetLikedSqueakDisplaysReply","ConnectPeerRequest","ConnectPeerReply","ConnectedPeer","connectTimeS","lastMessageReceivedTimeS","numberMessagesReceived","numberBytesReceived","numberMessagesSent","numberBytesSent","isPeerSaved","savedPeer","getSavedPeer","setConnectTimeS","setLastMessageReceivedTimeS","setNumberMessagesReceived","setNumberBytesReceived","setNumberMessagesSent","setNumberBytesSent","setIsPeerSaved","setSavedPeer","getConnectTimeS","getLastMessageReceivedTimeS","getNumberMessagesReceived","getNumberBytesReceived","getNumberMessagesSent","getNumberBytesSent","getIsPeerSaved","clearSavedPeer","hasSavedPeer","GetConnectedPeersRequest","GetConnectedPeersReply","connectedPeersList","getConnectedPeersList","addConnectedPeers","setConnectedPeersList","clearConnectedPeersList","GetConnectedPeerRequest","GetConnectedPeerReply","connectedPeer","getConnectedPeer","setConnectedPeer","clearConnectedPeer","hasConnectedPeer","DisconnectPeerRequest","DisconnectPeerReply","SubscribeConnectedPeersRequest","SubscribeConnectedPeerRequest","host","port","setHost","setPort","getHost","getPort","SubscribeBuyOffersRequest","SubscribeSqueakDisplayRequest","SubscribeReplySqueakDisplaysRequest","SubscribePubKeySqueakDisplaysRequest","SubscribeAncestorSqueakDisplaysRequest","SubscribeSqueakDisplaysRequest","SubscribeTimelineSqueakDisplaysRequest","GetExternalAddressRequest","GetExternalAddressReply","GetDefaultPeerPortRequest","GetDefaultPeerPortReply","SetSellPriceRequest","SetSellPriceReply","ClearSellPriceRequest","ClearSellPriceReply","GetSellPriceRequest","GetSellPriceReply","priceMsatIsSet","defaultPriceMsat","setPriceMsatIsSet","setDefaultPriceMsat","getPriceMsatIsSet","getDefaultPriceMsat","TwitterAccount","twitterAccountId","handle","isProfileKnown","profile","getProfile","setTwitterAccountId","setHandle","setIsProfileKnown","setProfile","getTwitterAccountId","getHandle","getIsProfileKnown","clearProfile","hasProfile","AddTwitterAccountRequest","bearerToken","setBearerToken","getBearerToken","AddTwitterAccountReply","GetTwitterAccountsRequest","GetTwitterAccountsReply","twitterAccountsList","getTwitterAccountsList","addTwitterAccounts","setTwitterAccountsList","clearTwitterAccountsList","DeleteTwitterAccountRequest","DeleteTwitterAccountReply","GetTwitterStreamStatusRequest","GetTwitterStreamStatusReply","isStreamActive","setIsStreamActive","getIsStreamActive","object","extend","exports","console","log","Boolean","process","REACT_APP_DEV_MODE_ENABLED","REACT_APP_SERVER_PORT","SERVER_PORT","window","location","web_host_port","protocol","hostname","baseRequest","a","url","req","deser","data","fetch","method","body","result","ok","arrayBuffer","buf","deserRes","text","logout","logoutResponse","request","getTimelineSqueaks","lastSqueak","getSqueak","getAncestorSqueaks","getReplySqueaks","getProfileSqueaks","likeSqueak","unlikeSqueak","deleteSqueak","makeSqueak","getSigningProfiles","getContactProfiles","getSentPayments","getReceivedPayments","getSearchSqueaks","createSigningProfile","importSigningProfile","createContactProfile","id","getProfileByPubkey","setProfileFollowing","deleteProfile","renameProfile","changeProfileImage","imageBase64","clearProfileImage","getPeer","getConnectedPeers","getSavedPeers","connectPeer","ConnectSqueakPeerRequest","ConnectSqueakPeerReply","disconnectPeer","DisconnectSqueakPeerRequest","DisconnectSqueakPeerReply","getExternalAddress","savePeer","deletePeer","enableAutoconnectPeer","disableAutoconnectPeer","getSqueakOffers","buySqueak","getSellPrice","updateSellPrice","clearSellPrice","downloadSqueak","downloadPubkeySqueaks","ICON_LOGO","props","style","styles","viewBox","d","ICON_HOME","ICON_HOMEFILL","ICON_HASH","ICON_BELL","ICON_BELLFILL","ICON_LIST","ICON_LISTFILL","ICON_USER","ICON_USERFILL","ICON_LAPTOP","ICON_LAPTOPFILL","ICON_LOCKFILL","ICON_SETTINGS","ICON_REPLY","ICON_RETWEET","ICON_HEART","ICON_HEARTFULL","ICON_ARROWBACK","ICON_CLOSE","ICON_DELETE","ICON_UPLOAD","ICON_SEARCH","ICON_FEATHER","ICON_LIGHT","fill","ICON_DARK","fetchSqueak","createAsyncThunk","response","setLikeSqueak","setUnlikeSqueak","setDeleteSqueak","fetchAncestorSqueaks","fetchReplySqueaks","values","fetchTimeline","fetchSearch","fetchProfileSqueaks","profilePubkey","setMakeSqueak","signingProfile","description","fetchSqueakOffers","setBuySqueak","setDownloadSqueak","setDownloadPubkeySqueaks","updatedSqueakInArray","squeakArr","newSqueak","currentIndex","findIndex","squeak","removeSqueakInArray","filter","squeaksSlice","createSlice","initialState","currentSqueakStatus","currentSqueak","ancestorSqueaksStatus","ancestorSqueaks","replySqueaksStatus","replySqueaks","timelineSqueaksStatus","timelineSqueaks","searchSqueaksStatus","searchSqueaks","profileSqueaksStatus","profileSqueaks","makeSqueakStatus","squeakOffersStatus","squeakOffers","buySqueakStatus","downloadSqueakStatus","downloadPubkeySqueakStatus","reducers","clearAll","state","action","clearAncestors","clearReplies","clearTimeline","clearSearch","clearProfileSqueaks","extraReducers","builder","addCase","pending","fulfilled","payload","deletedSqueakHash","meta","arg","newEntities","concat","rejected","actions","selectCurrentSqueak","squeaks","selectCurrentSqueakStatus","selectAncestorSqueaks","selectAncestorSqueaksStatus","selectReplySqueaks","selectReplySqueaksStatus","selectTimelineSqueaks","selectTimelineSqueaksStatus","selectLastTimelineSqueak","createSelector","selectSearchSqueaks","selectSearchSqueaksStatus","selectLastSearchSqueak","selectProfileSqueaks","selectProfileSqueaksStatus","selectLastProfileSqueak","selectMakeSqueakStatus","selectSqueakOffers","selectBuySqueakStatus","selectDownloadSqueakStatus","selectDownloadPubkeySqueakStatus","Loader","className","version","xmlns","xmlnsXlink","x","y","width","height","xmlSpace","attributeType","attributeName","type","from","to","dur","repeatCount","fetchProfile","setFollowProfile","setUnfollowProfile","setDeleteProfile","setRenameProfile","setClearProfileImage","fetchSigningProfiles","fetchContactProfiles","setCreateContactProfile","createResponse","setCreateSigningProfile","setImportSigningProfile","getProfilePrivateKey","updatedProfileInArray","profileArr","newProfile","profilesSlice","currentProfileStatus","currentProfile","signingProfilesStatus","signingProfiles","contactProfilesStatus","contactProfiles","createContactProfileStatus","createSigningProfileStatus","importSigningProfileStatus","exportPrivateKeyStatus","clearSigningProfiles","clearContactProfiles","deletedProfileId","newSigningProfiles","newContactProfiles","selectCurrentProfile","profiles","selectSigningProfiles","selectSigningProfilesStatus","selectContactProfiles","selectContactProfilesStatus","fetchSentPayments","fetchReceivedPayments","fetchPaymentSummary","paymentsSlice","sentPaymentsStatus","sentPayments","receivedPaymentsStatus","receivedPayments","clearSentPayments","clearReceivedPayments","newSentPayments","newReceivedPayments","selectSentPayments","payments","selectLastSentPaymentsSqueak","selectSentPaymentsStatus","selectReceivedPayments","selectLastReceivedPaymentsSqueak","selectReceivedPaymentsStatus","selectPaymentSummary","SqueakCard","React","memo","useState","modalOpen","setModalOpen","setParent","styleBody","setStyleBody","dispatch","useDispatch","toggleModal","e","stopPropagation","setTimeout","isInitialMount","useRef","useEffect","current","document","getElementsByTagName","cssText","getElementById","focus","moment","updateLocale","relativeTime","future","past","s","ss","m","mm","h","hh","dd","M","MM","yy","user","onClick","history","push","key","alt","borderRadius","minWidth","src","getProfileImageSrcString","hasReply","fromNow","padding","resqueakId","pathname","slice","dest","alert","resqueak","display","minHeight","handleModalClick","marginTop","replyToSqueak","submittedCallback","withRouter","fetchPeer","fetchConnectedPeers","fetchSavedPeers","setConnectPeer","setDisconnectPeer","setSavePeer","setDeletePeer","setPeerAutoconnectEnabled","setPeerAutoconnectDisabled","peersSlice","currentPeerStatus","currentPeer","connectedPeersStatus","connectedPeers","savedPeersStatus","savedPeers","connectPeerStatus","disconnectPeerStatus","savePeerStatus","deletePeerStatus","clearSavedPeers","newPeer","newConnectedPeers","newSavedPeers","savedAddress","newSavedPeer","find","selectCurrentPeer","peers","selectSavedPeers","selectConnectedPeers","selectPeerConnectionByAddress","address","fetchSellPrice","setSellPrice","sellPriceMsat","setClearSellPrice","sellPriceSlice","sellPriceInfo","selectSellPriceInfo","sellPrice","useSelector","squeakT","setSigningProfile","squeakText","setSqueakText","options","map","p","label","onChange","onPaste","preventDefault","clipboardData","getData","execCommand","pastePlainText","onKeyDown","keyCode","placeholder","html","evt","trim","split","target","fontSize","color","then","unwrapResult","catch","err","fetchNetwork","networkSlice","selectNetwork","fetchExternalAddress","externalAddressSlice","externalAddress","selectExternalAddress","store","configureStore","reducer","networkReducer","squeaksReducer","profilesReducer","peersReducer","externalAddressReducer","paymentsReducer","sellPriceReducer","account","accountReducer","setLogout","accountSlice","userName","replace","lnrpc","Utxo","addressType","amountSat","pkScript","outpoint","getOutpoint","OutPoint","confirmations","readEnum","setAddressType","setAddress","setAmountSat","setPkScript","setOutpoint","setConfirmations","getAddressType","writeEnum","getAddress","getAmountSat","getPkScript","getConfirmations","clearOutpoint","hasOutpoint","Transaction","txHash","amount","numConfirmations","timeStamp","totalFees","destAddressesList","rawTxHex","setTxHash","setAmount","setNumConfirmations","setTimeStamp","setTotalFees","addDestAddresses","setRawTxHex","setLabel","getTxHash","getAmount","getNumConfirmations","getTimeStamp","getTotalFees","getDestAddressesList","getRawTxHex","getLabel","setDestAddressesList","clearDestAddressesList","GetTransactionsRequest","startHeight","endHeight","setStartHeight","setEndHeight","setAccount","getStartHeight","getEndHeight","getAccount","TransactionDetails","transactionsList","getTransactionsList","addTransactions","setTransactionsList","clearTransactionsList","FeeLimit","oneofGroups_","LimitCase","LIMIT_NOT_SET","FIXED","FIXED_MSAT","PERCENT","getLimitCase","computeOneofCase","fixed","fixedMsat","percent","setFixed","setFixedMsat","setPercent","getFixed","setOneofField","clearFixed","hasFixed","getFixedMsat","clearFixedMsat","hasFixedMsat","getPercent","clearPercent","hasPercent","SendRequest","getDest_asB64","destString","amt","amtMsat","getPaymentHash_asB64","paymentHashString","paymentRequest","finalCltvDelta","feeLimit","getFeeLimit","outgoingChanId","lastHopPubkey","getLastHopPubkey_asB64","cltvLimit","destCustomRecordsMap","getDestCustomRecordsMap","allowSelfPayment","destFeaturesList","paymentAddr","getPaymentAddr_asB64","readBytes","setDest","setDestString","setAmt","setAmtMsat","setPaymentHashString","setPaymentRequest","setFinalCltvDelta","setFeeLimit","readUint64String","setOutgoingChanId","setLastHopPubkey","readUint32","setCltvLimit","Map","readUint64","setAllowSelfPayment","readPackedEnum","setDestFeaturesList","setPaymentAddr","getDest_asU8","writeBytes","getDestString","getAmt","getAmtMsat","getPaymentHash_asU8","getPaymentHashString","getPaymentRequest","getFinalCltvDelta","getOutgoingChanId","parseInt","writeUint64String","getLastHopPubkey_asU8","getCltvLimit","writeUint32","getLength","writeUint64","getAllowSelfPayment","getDestFeaturesList","writePackedEnum","getPaymentAddr_asU8","getDest","bytesAsB64","bytesAsU8","clearFeeLimit","hasFeeLimit","getLastHopPubkey","opt_noLazyCreate","getMapField","clearDestCustomRecordsMap","clear","addDestFeatures","clearDestFeaturesList","getPaymentAddr","SendResponse","paymentError","paymentPreimage","getPaymentPreimage_asB64","paymentRoute","getPaymentRoute","Route","setPaymentError","setPaymentPreimage","setPaymentRoute","getPaymentError","getPaymentPreimage_asU8","getPaymentPreimage","clearPaymentRoute","hasPaymentRoute","SendToRouteRequest","route","getRoute","setRoute","clearRoute","hasRoute","ChannelAcceptRequest","getNodePubkey_asB64","chainHash","getChainHash_asB64","pendingChanId","getPendingChanId_asB64","fundingAmt","pushAmt","dustLimit","maxValueInFlight","channelReserve","minHtlc","feePerKw","csvDelay","maxAcceptedHtlcs","channelFlags","setChainHash","setPendingChanId","setFundingAmt","setPushAmt","setDustLimit","setMaxValueInFlight","setChannelReserve","setMinHtlc","setFeePerKw","setCsvDelay","setMaxAcceptedHtlcs","setChannelFlags","getNodePubkey_asU8","getChainHash_asU8","getPendingChanId_asU8","getFundingAmt","getPushAmt","getDustLimit","getMaxValueInFlight","getChannelReserve","getMinHtlc","getFeePerKw","getCsvDelay","getMaxAcceptedHtlcs","getChannelFlags","getChainHash","getPendingChanId","ChannelAcceptResponse","accept","error","upfrontShutdown","reserveSat","inFlightMaxMsat","maxHtlcCount","minHtlcIn","minAcceptDepth","setAccept","setError","setUpfrontShutdown","setReserveSat","setInFlightMaxMsat","setMaxHtlcCount","setMinHtlcIn","setMinAcceptDepth","getAccept","getError","getUpfrontShutdown","getReserveSat","getInFlightMaxMsat","getMaxHtlcCount","getMinHtlcIn","getMinAcceptDepth","ChannelPoint","FundingTxidCase","FUNDING_TXID_NOT_SET","FUNDING_TXID_BYTES","FUNDING_TXID_STR","getFundingTxidCase","fundingTxidBytes","getFundingTxidBytes_asB64","fundingTxidStr","outputIndex","setFundingTxidBytes","setFundingTxidStr","setOutputIndex","getOutputIndex","getFundingTxidBytes","getFundingTxidBytes_asU8","clearFundingTxidBytes","hasFundingTxidBytes","getFundingTxidStr","clearFundingTxidStr","hasFundingTxidStr","txidBytes","getTxidBytes_asB64","txidStr","setTxidBytes","setTxidStr","getTxidBytes_asU8","getTxidStr","getTxidBytes","LightningAddress","EstimateFeeRequest","addrtoamountMap","getAddrtoamountMap","targetConf","minConfs","spendUnconfirmed","setTargetConf","setMinConfs","setSpendUnconfirmed","getTargetConf","getMinConfs","getSpendUnconfirmed","clearAddrtoamountMap","EstimateFeeResponse","feeSat","feerateSatPerByte","satPerVbyte","setFeeSat","setFeerateSatPerByte","setSatPerVbyte","getFeeSat","getFeerateSatPerByte","getSatPerVbyte","SendManyRequest","satPerByte","setSatPerByte","getSatPerByte","SendManyResponse","txid","setTxid","getTxid","SendCoinsRequest","addr","sendAll","setAddr","setSendAll","getAddr","getSendAll","SendCoinsResponse","ListUnspentRequest","maxConfs","setMaxConfs","getMaxConfs","ListUnspentResponse","utxosList","getUtxosList","addUtxos","setUtxosList","clearUtxosList","NewAddressRequest","setType","getType","NewAddressResponse","SignMessageRequest","getMsg_asB64","singleHash","setMsg","setSingleHash","getMsg_asU8","getSingleHash","getMsg","SignMessageResponse","signature","setSignature","getSignature","VerifyMessageRequest","VerifyMessageResponse","perm","timeout","setPerm","getPerm","getTimeout","clearAddr","hasAddr","ConnectPeerResponse","pubKey","setPubKey","getPubKey","DisconnectPeerResponse","HTLC","incoming","hashLock","getHashLock_asB64","expirationHeight","htlcIndex","forwardingChannel","forwardingHtlcIndex","setIncoming","setHashLock","setExpirationHeight","setHtlcIndex","setForwardingChannel","setForwardingHtlcIndex","getIncoming","getHashLock_asU8","getExpirationHeight","getHtlcIndex","getForwardingChannel","getForwardingHtlcIndex","getHashLock","ChannelConstraints","chanReserveSat","dustLimitSat","maxPendingAmtMsat","minHtlcMsat","setChanReserveSat","setDustLimitSat","setMaxPendingAmtMsat","setMinHtlcMsat","getChanReserveSat","getDustLimitSat","getMaxPendingAmtMsat","getMinHtlcMsat","Channel","active","remotePubkey","channelPoint","chanId","capacity","localBalance","remoteBalance","commitFee","commitWeight","unsettledBalance","totalSatoshisSent","totalSatoshisReceived","numUpdates","pendingHtlcsList","getPendingHtlcsList","pb_private","initiator","chanStatusFlags","localChanReserveSat","remoteChanReserveSat","staticRemoteKey","commitmentType","lifetime","uptime","closeAddress","pushAmountSat","thawHeight","localConstraints","getLocalConstraints","remoteConstraints","getRemoteConstraints","setActive","setRemotePubkey","setChannelPoint","setChanId","setCapacity","setLocalBalance","setRemoteBalance","setCommitFee","setCommitWeight","setUnsettledBalance","setTotalSatoshisSent","setTotalSatoshisReceived","setNumUpdates","addPendingHtlcs","setPrivate","setInitiator","setChanStatusFlags","setLocalChanReserveSat","setRemoteChanReserveSat","setStaticRemoteKey","setCommitmentType","setLifetime","setUptime","setCloseAddress","setPushAmountSat","setThawHeight","setLocalConstraints","setRemoteConstraints","getActive","getRemotePubkey","getChannelPoint","getChanId","getCapacity","getLocalBalance","getRemoteBalance","getCommitFee","getCommitWeight","getUnsettledBalance","getTotalSatoshisSent","getTotalSatoshisReceived","getNumUpdates","getPrivate","getInitiator","getChanStatusFlags","getLocalChanReserveSat","getRemoteChanReserveSat","getStaticRemoteKey","getCommitmentType","getLifetime","getUptime","getCloseAddress","getPushAmountSat","getThawHeight","setPendingHtlcsList","clearPendingHtlcsList","clearLocalConstraints","hasLocalConstraints","clearRemoteConstraints","hasRemoteConstraints","ListChannelsRequest","activeOnly","inactiveOnly","publicOnly","privateOnly","peer","getPeer_asB64","setActiveOnly","setInactiveOnly","setPublicOnly","setPrivateOnly","setPeer","getActiveOnly","getInactiveOnly","getPublicOnly","getPrivateOnly","getPeer_asU8","ListChannelsResponse","channelsList","getChannelsList","addChannels","setChannelsList","clearChannelsList","ChannelCloseSummary","closingTxHash","closeHeight","settledBalance","timeLockedBalance","closeType","openInitiator","closeInitiator","resolutionsList","getResolutionsList","Resolution","setClosingTxHash","setCloseHeight","setSettledBalance","setTimeLockedBalance","setCloseType","setOpenInitiator","setCloseInitiator","addResolutions","getClosingTxHash","getCloseHeight","getSettledBalance","getTimeLockedBalance","getCloseType","getOpenInitiator","getCloseInitiator","ClosureType","COOPERATIVE_CLOSE","LOCAL_FORCE_CLOSE","REMOTE_FORCE_CLOSE","BREACH_CLOSE","FUNDING_CANCELED","ABANDONED","setResolutionsList","clearResolutionsList","resolutionType","outcome","sweepTxid","setResolutionType","setOutcome","setSweepTxid","getResolutionType","getOutcome","getSweepTxid","ClosedChannelsRequest","cooperative","localForce","remoteForce","breach","fundingCanceled","abandoned","setCooperative","setLocalForce","setRemoteForce","setBreach","setFundingCanceled","setAbandoned","getCooperative","getLocalForce","getRemoteForce","getBreach","getFundingCanceled","getAbandoned","ClosedChannelsResponse","Peer","bytesSent","bytesRecv","satSent","satRecv","inbound","pingTime","syncType","featuresMap","getFeaturesMap","Feature","errorsList","getErrorsList","TimestampedError","flapCount","lastFlapNs","lastPingPayload","getLastPingPayload_asB64","setBytesSent","setBytesRecv","setSatSent","setSatRecv","setInbound","setPingTime","setSyncType","addErrors","setFlapCount","setLastFlapNs","setLastPingPayload","getBytesSent","getBytesRecv","getSatSent","getSatRecv","getInbound","getPingTime","getSyncType","getFlapCount","getLastFlapNs","getLastPingPayload_asU8","SyncType","UNKNOWN_SYNC","ACTIVE_SYNC","PASSIVE_SYNC","PINNED_SYNC","clearFeaturesMap","setErrorsList","clearErrorsList","getLastPingPayload","timestamp","setTimestamp","getTimestamp","ListPeersRequest","latestError","setLatestError","getLatestError","ListPeersResponse","peersList","getPeersList","addPeers","setPeersList","clearPeersList","PeerEventSubscription","PeerEvent","EventType","PEER_ONLINE","PEER_OFFLINE","GetInfoRequest","GetInfoResponse","commitHash","identityPubkey","alias","numPendingChannels","numActiveChannels","numInactiveChannels","numPeers","bestHeaderTimestamp","syncedToChain","syncedToGraph","testnet","chainsList","getChainsList","Chain","urisList","setVersion","setCommitHash","setIdentityPubkey","setAlias","setColor","setNumPendingChannels","setNumActiveChannels","setNumInactiveChannels","setNumPeers","setBestHeaderTimestamp","setSyncedToChain","setSyncedToGraph","setTestnet","addChains","addUris","getVersion","getCommitHash","getIdentityPubkey","getAlias","getColor","getNumPendingChannels","getNumActiveChannels","getNumInactiveChannels","getNumPeers","getBestHeaderTimestamp","getSyncedToChain","getSyncedToGraph","getTestnet","getUrisList","setChainsList","clearChainsList","setUrisList","clearUrisList","GetRecoveryInfoRequest","GetRecoveryInfoResponse","recoveryMode","recoveryFinished","progress","setRecoveryMode","setRecoveryFinished","readDouble","setProgress","getRecoveryMode","getRecoveryFinished","getProgress","writeDouble","chain","setChain","getChain","ConfirmationUpdate","blockSha","getBlockSha_asB64","numConfsLeft","setBlockSha","setNumConfsLeft","getBlockSha_asU8","getNumConfsLeft","getBlockSha","ChannelOpenUpdate","clearChannelPoint","hasChannelPoint","ChannelCloseUpdate","closingTxid","getClosingTxid_asB64","success","setClosingTxid","setSuccess","getClosingTxid_asU8","getSuccess","getClosingTxid","CloseChannelRequest","force","deliveryAddress","setForce","setDeliveryAddress","getForce","getDeliveryAddress","CloseStatusUpdate","UpdateCase","UPDATE_NOT_SET","CLOSE_PENDING","CHAN_CLOSE","getUpdateCase","closePending","getClosePending","PendingUpdate","chanClose","getChanClose","setClosePending","setChanClose","setOneofWrapperField","clearClosePending","hasClosePending","clearChanClose","hasChanClose","getTxid_asB64","getTxid_asU8","ReadyForPsbtFunding","fundingAddress","fundingAmount","psbt","getPsbt_asB64","setFundingAddress","setFundingAmount","setPsbt","getFundingAddress","getFundingAmount","getPsbt_asU8","getPsbt","BatchOpenChannelRequest","BatchOpenChannel","localFundingAmount","pushSat","remoteCsvDelay","setLocalFundingAmount","setPushSat","setRemoteCsvDelay","getLocalFundingAmount","getPushSat","getRemoteCsvDelay","BatchOpenChannelResponse","pendingChannelsList","getPendingChannelsList","addPendingChannels","setPendingChannelsList","clearPendingChannelsList","OpenChannelRequest","nodePubkeyString","fundingShim","getFundingShim","FundingShim","remoteMaxValueInFlightMsat","remoteMaxHtlcs","maxLocalCsv","setNodePubkeyString","setFundingShim","setRemoteMaxValueInFlightMsat","setRemoteMaxHtlcs","setMaxLocalCsv","getNodePubkeyString","getRemoteMaxValueInFlightMsat","getRemoteMaxHtlcs","getMaxLocalCsv","clearFundingShim","hasFundingShim","OpenStatusUpdate","CHAN_PENDING","CHAN_OPEN","PSBT_FUND","chanPending","getChanPending","chanOpen","getChanOpen","psbtFund","getPsbtFund","setChanPending","setChanOpen","setPsbtFund","clearChanPending","hasChanPending","clearChanOpen","hasChanOpen","clearPsbtFund","hasPsbtFund","KeyLocator","keyFamily","keyIndex","setKeyFamily","setKeyIndex","getKeyFamily","getKeyIndex","KeyDescriptor","rawKeyBytes","getRawKeyBytes_asB64","keyLoc","getKeyLoc","setRawKeyBytes","setKeyLoc","getRawKeyBytes_asU8","getRawKeyBytes","clearKeyLoc","hasKeyLoc","ChanPointShim","chanPoint","getChanPoint","localKey","getLocalKey","remoteKey","getRemoteKey_asB64","setChanPoint","setLocalKey","setRemoteKey","getRemoteKey_asU8","clearChanPoint","hasChanPoint","clearLocalKey","hasLocalKey","getRemoteKey","PsbtShim","basePsbt","getBasePsbt_asB64","noPublish","setBasePsbt","setNoPublish","getBasePsbt_asU8","getNoPublish","getBasePsbt","ShimCase","SHIM_NOT_SET","CHAN_POINT_SHIM","PSBT_SHIM","getShimCase","chanPointShim","getChanPointShim","psbtShim","getPsbtShim","setChanPointShim","setPsbtShim","clearChanPointShim","hasChanPointShim","clearPsbtShim","hasPsbtShim","FundingShimCancel","FundingPsbtVerify","fundedPsbt","getFundedPsbt_asB64","skipFinalize","setFundedPsbt","setSkipFinalize","getFundedPsbt_asU8","getSkipFinalize","getFundedPsbt","FundingPsbtFinalize","signedPsbt","getSignedPsbt_asB64","finalRawTx","getFinalRawTx_asB64","setSignedPsbt","setFinalRawTx","getSignedPsbt_asU8","getFinalRawTx_asU8","getSignedPsbt","getFinalRawTx","FundingTransitionMsg","TriggerCase","TRIGGER_NOT_SET","SHIM_REGISTER","SHIM_CANCEL","PSBT_VERIFY","PSBT_FINALIZE","getTriggerCase","shimRegister","getShimRegister","shimCancel","getShimCancel","psbtVerify","getPsbtVerify","psbtFinalize","getPsbtFinalize","setShimRegister","setShimCancel","setPsbtVerify","setPsbtFinalize","clearShimRegister","hasShimRegister","clearShimCancel","hasShimCancel","clearPsbtVerify","hasPsbtVerify","clearPsbtFinalize","hasPsbtFinalize","FundingStateStepResp","PendingHTLC","maturityHeight","blocksTilMaturity","stage","setMaturityHeight","setBlocksTilMaturity","setStage","getMaturityHeight","getBlocksTilMaturity","getStage","PendingChannelsRequest","PendingChannelsResponse","totalLimboBalance","pendingOpenChannelsList","getPendingOpenChannelsList","PendingOpenChannel","pendingClosingChannelsList","getPendingClosingChannelsList","ClosedChannel","pendingForceClosingChannelsList","getPendingForceClosingChannelsList","ForceClosedChannel","waitingCloseChannelsList","getWaitingCloseChannelsList","WaitingCloseChannel","setTotalLimboBalance","addPendingOpenChannels","addPendingClosingChannels","addPendingForceClosingChannels","addWaitingCloseChannels","getTotalLimboBalance","PendingChannel","remoteNodePub","numForwardingPackages","setRemoteNodePub","setNumForwardingPackages","getRemoteNodePub","getNumForwardingPackages","channel","getChannel","confirmationHeight","setChannel","setConfirmationHeight","getConfirmationHeight","clearChannel","hasChannel","limboBalance","commitments","getCommitments","Commitments","setLimboBalance","setCommitments","getLimboBalance","clearCommitments","hasCommitments","localTxid","remoteTxid","remotePendingTxid","localCommitFeeSat","remoteCommitFeeSat","remotePendingCommitFeeSat","setLocalTxid","setRemoteTxid","setRemotePendingTxid","setLocalCommitFeeSat","setRemoteCommitFeeSat","setRemotePendingCommitFeeSat","getLocalTxid","getRemoteTxid","getRemotePendingTxid","getLocalCommitFeeSat","getRemoteCommitFeeSat","getRemotePendingCommitFeeSat","recoveredBalance","anchor","setRecoveredBalance","setAnchor","getRecoveredBalance","getAnchor","AnchorState","LIMBO","RECOVERED","LOST","setPendingOpenChannelsList","clearPendingOpenChannelsList","setPendingClosingChannelsList","clearPendingClosingChannelsList","setPendingForceClosingChannelsList","clearPendingForceClosingChannelsList","setWaitingCloseChannelsList","clearWaitingCloseChannelsList","ChannelEventSubscription","ChannelEventUpdate","ChannelCase","CHANNEL_NOT_SET","OPEN_CHANNEL","CLOSED_CHANNEL","ACTIVE_CHANNEL","INACTIVE_CHANNEL","PENDING_OPEN_CHANNEL","FULLY_RESOLVED_CHANNEL","getChannelCase","openChannel","getOpenChannel","closedChannel","getClosedChannel","activeChannel","getActiveChannel","inactiveChannel","getInactiveChannel","pendingOpenChannel","getPendingOpenChannel","fullyResolvedChannel","getFullyResolvedChannel","setOpenChannel","setClosedChannel","setActiveChannel","setInactiveChannel","setPendingOpenChannel","setFullyResolvedChannel","UpdateType","clearOpenChannel","hasOpenChannel","clearClosedChannel","hasClosedChannel","clearActiveChannel","hasActiveChannel","clearInactiveChannel","hasInactiveChannel","clearPendingOpenChannel","hasPendingOpenChannel","clearFullyResolvedChannel","hasFullyResolvedChannel","WalletAccountBalance","confirmedBalance","unconfirmedBalance","setConfirmedBalance","setUnconfirmedBalance","getConfirmedBalance","getUnconfirmedBalance","WalletBalanceRequest","WalletBalanceResponse","totalBalance","accountBalanceMap","getAccountBalanceMap","setTotalBalance","getTotalBalance","clearAccountBalanceMap","Amount","sat","msat","setSat","setMsat","getSat","getMsat","ChannelBalanceRequest","ChannelBalanceResponse","balance","pendingOpenBalance","unsettledLocalBalance","getUnsettledLocalBalance","unsettledRemoteBalance","getUnsettledRemoteBalance","pendingOpenLocalBalance","getPendingOpenLocalBalance","pendingOpenRemoteBalance","getPendingOpenRemoteBalance","setBalance","setPendingOpenBalance","setUnsettledLocalBalance","setUnsettledRemoteBalance","setPendingOpenLocalBalance","setPendingOpenRemoteBalance","getBalance","getPendingOpenBalance","clearLocalBalance","hasLocalBalance","clearRemoteBalance","hasRemoteBalance","clearUnsettledLocalBalance","hasUnsettledLocalBalance","clearUnsettledRemoteBalance","hasUnsettledRemoteBalance","clearPendingOpenLocalBalance","hasPendingOpenLocalBalance","clearPendingOpenRemoteBalance","hasPendingOpenRemoteBalance","QueryRoutesRequest","ignoredNodesList","getIgnoredNodesList_asB64","ignoredEdgesList","getIgnoredEdgesList","EdgeLocator","sourcePubKey","useMissionControl","ignoredPairsList","getIgnoredPairsList","NodePair","routeHintsList","getRouteHintsList","RouteHint","addIgnoredNodes","addIgnoredEdges","setSourcePubKey","setUseMissionControl","addIgnoredPairs","addRouteHints","getIgnoredNodesList_asU8","writeRepeatedBytes","getSourcePubKey","getUseMissionControl","getIgnoredNodesList","bytesListAsB64","bytesListAsU8","setIgnoredNodesList","clearIgnoredNodesList","setIgnoredEdgesList","clearIgnoredEdgesList","setIgnoredPairsList","clearIgnoredPairsList","setRouteHintsList","clearRouteHintsList","getFrom_asB64","getTo_asB64","setFrom","setTo","getFrom_asU8","getTo_asU8","getFrom","getTo","channelId","directionReverse","setChannelId","setDirectionReverse","getChannelId","getDirectionReverse","QueryRoutesResponse","routesList","getRoutesList","successProb","addRoutes","setSuccessProb","getSuccessProb","setRoutesList","clearRoutesList","Hop","chanCapacity","amtToForward","fee","expiry","amtToForwardMsat","feeMsat","tlvPayload","mppRecord","getMppRecord","MPPRecord","ampRecord","getAmpRecord","AMPRecord","customRecordsMap","getCustomRecordsMap","setChanCapacity","setAmtToForward","setFee","setExpiry","setAmtToForwardMsat","setFeeMsat","setTlvPayload","setMppRecord","setAmpRecord","getChanCapacity","getAmtToForward","getFee","getExpiry","getAmtToForwardMsat","getFeeMsat","getTlvPayload","clearMppRecord","hasMppRecord","clearAmpRecord","hasAmpRecord","clearCustomRecordsMap","totalAmtMsat","setTotalAmtMsat","getTotalAmtMsat","rootShare","getRootShare_asB64","setId","getSetId_asB64","childIndex","setRootShare","setSetId","setChildIndex","getRootShare_asU8","getSetId_asU8","getChildIndex","getRootShare","getSetId","totalTimeLock","totalAmt","hopsList","getHopsList","totalFeesMsat","setTotalTimeLock","setTotalAmt","addHops","setTotalFeesMsat","getTotalTimeLock","getTotalAmt","getTotalFeesMsat","setHopsList","clearHopsList","NodeInfoRequest","includeChannels","setIncludeChannels","getIncludeChannels","NodeInfo","node","getNode","LightningNode","numChannels","totalCapacity","ChannelEdge","setNode","setNumChannels","setTotalCapacity","getNumChannels","getTotalCapacity","clearNode","hasNode","lastUpdate","addressesList","getAddressesList","NodeAddress","setLastUpdate","addAddresses","getLastUpdate","setAddressesList","clearAddressesList","RoutingPolicy","timeLockDelta","feeBaseMsat","feeRateMilliMsat","disabled","maxHtlcMsat","setTimeLockDelta","setFeeBaseMsat","setFeeRateMilliMsat","setDisabled","setMaxHtlcMsat","getTimeLockDelta","getFeeBaseMsat","getFeeRateMilliMsat","getDisabled","getMaxHtlcMsat","node1Pub","node2Pub","node1Policy","getNode1Policy","node2Policy","getNode2Policy","setNode1Pub","setNode2Pub","setNode1Policy","setNode2Policy","getNode1Pub","getNode2Pub","clearNode1Policy","hasNode1Policy","clearNode2Policy","hasNode2Policy","ChannelGraphRequest","includeUnannounced","setIncludeUnannounced","getIncludeUnannounced","ChannelGraph","nodesList","getNodesList","edgesList","getEdgesList","addNodes","addEdges","setNodesList","clearNodesList","setEdgesList","clearEdgesList","NodeMetricsRequest","typesList","setTypesList","getTypesList","addTypes","clearTypesList","NodeMetricsResponse","betweennessCentralityMap","getBetweennessCentralityMap","FloatMetric","clearBetweennessCentralityMap","normalizedValue","setValue","setNormalizedValue","getValue","getNormalizedValue","ChanInfoRequest","NetworkInfoRequest","NetworkInfo","graphDiameter","avgOutDegree","maxOutDegree","numNodes","totalNetworkCapacity","avgChannelSize","minChannelSize","maxChannelSize","medianChannelSizeSat","numZombieChans","setGraphDiameter","setAvgOutDegree","setMaxOutDegree","setNumNodes","setTotalNetworkCapacity","setAvgChannelSize","setMinChannelSize","setMaxChannelSize","setMedianChannelSizeSat","setNumZombieChans","getGraphDiameter","getAvgOutDegree","getMaxOutDegree","getNumNodes","getTotalNetworkCapacity","getAvgChannelSize","getMinChannelSize","getMaxChannelSize","getMedianChannelSizeSat","getNumZombieChans","StopRequest","StopResponse","GraphTopologySubscription","GraphTopologyUpdate","nodeUpdatesList","getNodeUpdatesList","NodeUpdate","channelUpdatesList","getChannelUpdatesList","ChannelEdgeUpdate","closedChansList","getClosedChansList","ClosedChannelUpdate","addNodeUpdates","addChannelUpdates","addClosedChans","setNodeUpdatesList","clearNodeUpdatesList","setChannelUpdatesList","clearChannelUpdatesList","setClosedChansList","clearClosedChansList","identityKey","globalFeatures","getGlobalFeatures_asB64","nodeAddressesList","getNodeAddressesList","setIdentityKey","setGlobalFeatures","addNodeAddresses","getIdentityKey","getGlobalFeatures_asU8","getGlobalFeatures","setNodeAddressesList","clearNodeAddressesList","routingPolicy","getRoutingPolicy","advertisingNode","connectingNode","setRoutingPolicy","setAdvertisingNode","setConnectingNode","getAdvertisingNode","getConnectingNode","clearRoutingPolicy","hasRoutingPolicy","closedHeight","setClosedHeight","getClosedHeight","HopHint","nodeId","feeProportionalMillionths","cltvExpiryDelta","setNodeId","setFeeProportionalMillionths","setCltvExpiryDelta","getNodeId","getFeeProportionalMillionths","getCltvExpiryDelta","hopHintsList","getHopHintsList","addHopHints","setHopHintsList","clearHopHintsList","Invoice","rPreimage","getRPreimage_asB64","rHash","getRHash_asB64","valueMsat","settled","creationDate","settleDate","descriptionHash","getDescriptionHash_asB64","fallbackAddr","cltvExpiry","addIndex","settleIndex","amtPaid","amtPaidSat","amtPaidMsat","htlcsList","getHtlcsList","InvoiceHTLC","isKeysend","isAmp","setMemo","setRPreimage","setRHash","setValueMsat","setSettled","setCreationDate","setSettleDate","setDescriptionHash","setFallbackAddr","setCltvExpiry","setAddIndex","setSettleIndex","setAmtPaid","setAmtPaidSat","setAmtPaidMsat","setState","addHtlcs","setIsKeysend","setIsAmp","getMemo","getRPreimage_asU8","getRHash_asU8","getValueMsat","getSettled","getCreationDate","getSettleDate","getDescriptionHash_asU8","getFallbackAddr","getCltvExpiry","getAddIndex","getSettleIndex","getAmtPaid","getAmtPaidSat","getAmtPaidMsat","getState","getIsKeysend","getIsAmp","InvoiceState","OPEN","SETTLED","CANCELED","ACCEPTED","getRPreimage","getRHash","getDescriptionHash","setHtlcsList","clearHtlcsList","acceptHeight","acceptTime","resolveTime","expiryHeight","mppTotalAmtMsat","amp","getAmp","AMP","setAcceptHeight","setAcceptTime","setResolveTime","setExpiryHeight","setMppTotalAmtMsat","setAmp","getAcceptHeight","getAcceptTime","getResolveTime","getExpiryHeight","getMppTotalAmtMsat","clearAmp","hasAmp","hash","getHash_asB64","preimage","getPreimage_asB64","setHash","setPreimage","getHash_asU8","getPreimage_asU8","getHash","getPreimage","AddInvoiceResponse","PaymentHash","rHashStr","setRHashStr","getRHashStr","ListInvoiceRequest","pendingOnly","indexOffset","numMaxInvoices","reversed","setPendingOnly","setIndexOffset","setNumMaxInvoices","setReversed","getPendingOnly","getIndexOffset","getNumMaxInvoices","getReversed","ListInvoiceResponse","invoicesList","getInvoicesList","lastIndexOffset","firstIndexOffset","addInvoices","setLastIndexOffset","setFirstIndexOffset","getLastIndexOffset","getFirstIndexOffset","setInvoicesList","clearInvoicesList","InvoiceSubscription","Payment","valueSat","status","creationTimeNs","HTLCAttempt","failureReason","setValueSat","setStatus","setCreationTimeNs","setFailureReason","getValueSat","getStatus","getCreationTimeNs","getFailureReason","PaymentStatus","UNKNOWN","IN_FLIGHT","SUCCEEDED","FAILED","attemptId","attemptTimeNs","resolveTimeNs","failure","getFailure","Failure","setAttemptId","setAttemptTimeNs","setResolveTimeNs","setFailure","getAttemptId","getAttemptTimeNs","getResolveTimeNs","HTLCStatus","clearFailure","hasFailure","ListPaymentsRequest","includeIncomplete","maxPayments","setIncludeIncomplete","setMaxPayments","getIncludeIncomplete","getMaxPayments","ListPaymentsResponse","paymentsList","getPaymentsList","addPayments","setPaymentsList","clearPaymentsList","DeletePaymentRequest","failedHtlcsOnly","setFailedHtlcsOnly","getFailedHtlcsOnly","DeleteAllPaymentsRequest","failedPaymentsOnly","setFailedPaymentsOnly","getFailedPaymentsOnly","DeletePaymentResponse","DeleteAllPaymentsResponse","AbandonChannelRequest","pendingFundingShimOnly","iKnowWhatIAmDoing","setPendingFundingShimOnly","setIKnowWhatIAmDoing","getPendingFundingShimOnly","getIKnowWhatIAmDoing","AbandonChannelResponse","DebugLevelRequest","show","levelSpec","setShow","setLevelSpec","getShow","getLevelSpec","DebugLevelResponse","subSystems","setSubSystems","getSubSystems","PayReqString","payReq","setPayReq","getPayReq","PayReq","destination","numSatoshis","numMsat","setDestination","setNumSatoshis","setDescription","setNumMsat","getDestination","getNumSatoshis","getDescription","getNumMsat","isRequired","isKnown","setIsRequired","setIsKnown","getIsRequired","getIsKnown","FeeReportRequest","ChannelFeeReport","baseFeeMsat","feePerMil","feeRate","setBaseFeeMsat","setFeePerMil","setFeeRate","getBaseFeeMsat","getFeePerMil","getFeeRate","FeeReportResponse","channelFeesList","getChannelFeesList","dayFeeSum","weekFeeSum","monthFeeSum","addChannelFees","setDayFeeSum","setWeekFeeSum","setMonthFeeSum","getDayFeeSum","getWeekFeeSum","getMonthFeeSum","setChannelFeesList","clearChannelFeesList","PolicyUpdateRequest","ScopeCase","SCOPE_NOT_SET","GLOBAL","CHAN_POINT","getScopeCase","minHtlcMsatSpecified","setGlobal","setMinHtlcMsatSpecified","getMinHtlcMsatSpecified","getGlobal","clearGlobal","hasGlobal","FailedUpdate","reason","updateError","setReason","setUpdateError","getReason","getUpdateError","PolicyUpdateResponse","failedUpdatesList","getFailedUpdatesList","addFailedUpdates","setFailedUpdatesList","clearFailedUpdatesList","ForwardingHistoryRequest","startTime","endTime","numMaxEvents","setStartTime","setEndTime","setNumMaxEvents","getStartTime","getEndTime","getNumMaxEvents","ForwardingEvent","chanIdIn","chanIdOut","amtIn","amtOut","amtInMsat","amtOutMsat","timestampNs","setChanIdIn","setChanIdOut","setAmtIn","setAmtOut","setAmtInMsat","setAmtOutMsat","setTimestampNs","getChanIdIn","getChanIdOut","getAmtIn","getAmtOut","getAmtInMsat","getAmtOutMsat","getTimestampNs","ForwardingHistoryResponse","forwardingEventsList","getForwardingEventsList","lastOffsetIndex","addForwardingEvents","setLastOffsetIndex","getLastOffsetIndex","setForwardingEventsList","clearForwardingEventsList","ExportChannelBackupRequest","ChannelBackup","chanBackup","getChanBackup_asB64","setChanBackup","getChanBackup_asU8","getChanBackup","MultiChanBackup","chanPointsList","getChanPointsList","multiChanBackup","getMultiChanBackup_asB64","addChanPoints","setMultiChanBackup","getMultiChanBackup_asU8","setChanPointsList","clearChanPointsList","getMultiChanBackup","ChanBackupExportRequest","ChanBackupSnapshot","singleChanBackups","getSingleChanBackups","ChannelBackups","setSingleChanBackups","clearSingleChanBackups","hasSingleChanBackups","clearMultiChanBackup","hasMultiChanBackup","chanBackupsList","getChanBackupsList","addChanBackups","setChanBackupsList","clearChanBackupsList","RestoreChanBackupRequest","BackupCase","BACKUP_NOT_SET","CHAN_BACKUPS","MULTI_CHAN_BACKUP","getBackupCase","chanBackups","getChanBackups","setChanBackups","clearChanBackups","hasChanBackups","RestoreBackupResponse","ChannelBackupSubscription","VerifyChanBackupResponse","MacaroonPermission","entity","setEntity","setAction","getEntity","getAction","BakeMacaroonRequest","permissionsList","getPermissionsList","rootKeyId","allowExternalPermissions","addPermissions","setRootKeyId","setAllowExternalPermissions","getRootKeyId","getAllowExternalPermissions","setPermissionsList","clearPermissionsList","BakeMacaroonResponse","macaroon","setMacaroon","getMacaroon","ListMacaroonIDsRequest","ListMacaroonIDsResponse","rootKeyIdsList","readPackedUint64","setRootKeyIdsList","getRootKeyIdsList","writePackedUint64","addRootKeyIds","clearRootKeyIdsList","DeleteMacaroonIDRequest","DeleteMacaroonIDResponse","deleted","setDeleted","getDeleted","MacaroonPermissionList","ListPermissionsRequest","ListPermissionsResponse","methodPermissionsMap","getMethodPermissionsMap","clearMethodPermissionsMap","code","channelUpdate","getChannelUpdate","ChannelUpdate","htlcMsat","onionSha256","getOnionSha256_asB64","flags","failureSourceIndex","setCode","setChannelUpdate","setHtlcMsat","setOnionSha256","setFlags","setFailureSourceIndex","setHeight","getCode","getHtlcMsat","getOnionSha256_asU8","getFlags","getFailureSourceIndex","getHeight","FailureCode","RESERVED","INCORRECT_OR_UNKNOWN_PAYMENT_DETAILS","INCORRECT_PAYMENT_AMOUNT","FINAL_INCORRECT_CLTV_EXPIRY","FINAL_INCORRECT_HTLC_AMOUNT","FINAL_EXPIRY_TOO_SOON","INVALID_REALM","EXPIRY_TOO_SOON","INVALID_ONION_VERSION","INVALID_ONION_HMAC","INVALID_ONION_KEY","AMOUNT_BELOW_MINIMUM","FEE_INSUFFICIENT","INCORRECT_CLTV_EXPIRY","CHANNEL_DISABLED","TEMPORARY_CHANNEL_FAILURE","REQUIRED_NODE_FEATURE_MISSING","REQUIRED_CHANNEL_FEATURE_MISSING","UNKNOWN_NEXT_PEER","TEMPORARY_NODE_FAILURE","PERMANENT_NODE_FAILURE","PERMANENT_CHANNEL_FAILURE","EXPIRY_TOO_FAR","MPP_TIMEOUT","INVALID_ONION_PAYLOAD","INTERNAL_FAILURE","UNKNOWN_FAILURE","UNREADABLE_FAILURE","clearChannelUpdate","hasChannelUpdate","getOnionSha256","getSignature_asB64","messageFlags","htlcMinimumMsat","baseFee","htlcMaximumMsat","extraOpaqueData","getExtraOpaqueData_asB64","setMessageFlags","setHtlcMinimumMsat","setBaseFee","setHtlcMaximumMsat","setExtraOpaqueData","getSignature_asU8","getMessageFlags","getHtlcMinimumMsat","getBaseFee","getHtlcMaximumMsat","getExtraOpaqueData_asU8","getExtraOpaqueData","MacaroonId","nonce","getNonce_asB64","storageid","getStorageid_asB64","opsList","getOpsList","Op","setNonce","setStorageid","addOps","getNonce_asU8","getStorageid_asU8","getNonce","getStorageid","setOpsList","clearOpsList","actionsList","addActions","getActionsList","setActionsList","clearActionsList","CheckMacPermRequest","getMacaroon_asB64","fullmethod","setFullmethod","getMacaroon_asU8","getFullmethod","CheckMacPermResponse","RPCMiddlewareRequest","InterceptTypeCase","INTERCEPT_TYPE_NOT_SET","STREAM_AUTH","REQUEST","RESPONSE","getInterceptTypeCase","requestId","rawMacaroon","getRawMacaroon_asB64","customCaveatCondition","streamAuth","getStreamAuth","StreamAuth","getRequest","RPCMessage","getResponse","setRequestId","setRawMacaroon","setCustomCaveatCondition","setStreamAuth","setRequest","setResponse","getRequestId","getRawMacaroon_asU8","getCustomCaveatCondition","getRawMacaroon","clearStreamAuth","hasStreamAuth","clearRequest","hasRequest","clearResponse","hasResponse","methodFullUri","setMethodFullUri","getMethodFullUri","streamRpc","typeName","serialized","getSerialized_asB64","setStreamRpc","setTypeName","setSerialized","getStreamRpc","getTypeName","getSerialized_asU8","getSerialized","RPCMiddlewareResponse","MiddlewareMessageCase","MIDDLEWARE_MESSAGE_NOT_SET","REGISTER","FEEDBACK","getMiddlewareMessageCase","register","getRegister","MiddlewareRegistration","feedback","getFeedback","InterceptFeedback","setRegister","setFeedback","clearRegister","hasRegister","clearFeedback","hasFeedback","middlewareName","customMacaroonCaveatName","readOnlyMode","setMiddlewareName","setCustomMacaroonCaveatName","setReadOnlyMode","getMiddlewareName","getCustomMacaroonCaveatName","getReadOnlyMode","replaceResponse","replacementSerialized","getReplacementSerialized_asB64","setReplaceResponse","setReplacementSerialized","getReplaceResponse","getReplacementSerialized_asU8","getReplacementSerialized","AddressType","WITNESS_PUBKEY_HASH","NESTED_PUBKEY_HASH","UNUSED_WITNESS_PUBKEY_HASH","UNUSED_NESTED_PUBKEY_HASH","CommitmentType","UNKNOWN_COMMITMENT_TYPE","LEGACY","STATIC_REMOTE_KEY","ANCHORS","Initiator","INITIATOR_UNKNOWN","INITIATOR_LOCAL","INITIATOR_REMOTE","INITIATOR_BOTH","ResolutionType","TYPE_UNKNOWN","ANCHOR","INCOMING_HTLC","OUTGOING_HTLC","COMMIT","ResolutionOutcome","OUTCOME_UNKNOWN","CLAIMED","UNCLAIMED","FIRST_STAGE","TIMEOUT","NodeMetricType","BETWEENNESS_CENTRALITY","InvoiceHTLCState","PaymentFailureReason","FAILURE_REASON_NONE","FAILURE_REASON_TIMEOUT","FAILURE_REASON_NO_ROUTE","FAILURE_REASON_ERROR","FAILURE_REASON_INCORRECT_PAYMENT_DETAILS","FAILURE_REASON_INSUFFICIENT_BALANCE","FeatureBit","DATALOSS_PROTECT_REQ","DATALOSS_PROTECT_OPT","INITIAL_ROUING_SYNC","UPFRONT_SHUTDOWN_SCRIPT_REQ","UPFRONT_SHUTDOWN_SCRIPT_OPT","GOSSIP_QUERIES_REQ","GOSSIP_QUERIES_OPT","TLV_ONION_REQ","TLV_ONION_OPT","EXT_GOSSIP_QUERIES_REQ","EXT_GOSSIP_QUERIES_OPT","STATIC_REMOTE_KEY_REQ","STATIC_REMOTE_KEY_OPT","PAYMENT_ADDR_REQ","PAYMENT_ADDR_OPT","MPP_REQ","MPP_OPT","WUMBO_CHANNELS_REQ","WUMBO_CHANNELS_OPT","ANCHORS_REQ","ANCHORS_OPT","ANCHORS_ZERO_FEE_HTLC_REQ","ANCHORS_ZERO_FEE_HTLC_OPT","AMP_REQ","AMP_OPT","UpdateFailure","UPDATE_FAILURE_UNKNOWN","UPDATE_FAILURE_PENDING","UPDATE_FAILURE_NOT_FOUND","UPDATE_FAILURE_INTERNAL_ERR","UPDATE_FAILURE_INVALID_PARAMETER","_extends","Object","assign","i","arguments","source","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","createElement","ref","gradientUnits","x1","y1","x2","y2","gradientTransform","offset","stopColor","stopOpacity","stroke","fillRule","fillOpacity","ForwardRef","forwardRef","moreMenu","setMoreMenu","theme","setTheme","sellPriceModalOpen","setSellPriceModalOpen","newSellPriceMsat","setNewSellPriceMsat","localStorage","getItem","setFetchMethod","enableDarkMode","setItem","path","openMore","toggleSellPriceModal","param","top","getBoundingClientRect","left","handleMenuClick","disableDarkMode","MakeSqueak","defaultValue","LoginPage","username","setUsername","password","setPassword","onSubmit","Login","form","email","setEmail","SignUp","loadingCurrentSqueakStatus","loadingAncestorSqueaksStatus","loadingReplySqueaksStatus","buyModalOpen","setBuyModalOpen","scrollTo","offers","toggleBuyModal","renderedCurrentSqueak","match","params","href","getBlockDetailUrl","rel","format","goBack","replies","r","renderedListItems","unfollowUser","followUser","tab","setTab","signingProfileModalOpen","setSigningProfileModalOpen","contactProfileModalOpen","setContactProfileModalOpen","newProfileName","setNewProfileName","newProfilePubkey","setNewProfilePubkey","usePrivKey","setUsePrivKey","newProfilePrivkey","setNewProfilePrivkey","toggleSigningProfileModal","toggleContactProfileModal","checked","savePeerModalOpen","setSavePeerModalOpen","connectPeerModalOpen","setconnectPeerModalOpen","showExternalAddressModalOpen","setShowExternalAddressModalOpen","useTor","setUseTor","goToPeer","peerAddressToStr","toggleSavePeerModal","toggleconnectPeerModal","toggleShowExternalAddressModalOpen","removeHttp","handleChangeUseTor","sp","savedPeerName","addrStr","isConnected","peerAddressStr","includes","isPeerConnected","readOnly","strippedHost","goToNewSearch","newSearchText","searchOnEnter","loadingStatus","search","useLocation","q","useMemo","URLSearchParams","get","decodeURIComponent","t","squeakLst","getMoreSqueaks","Notifications","Alert","Home","lazy","Profile","DefaultContainer","exact","App","fallback","Alerts","Signup","component","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7fc9c801.chunk.js","sourcesContent":["/* eslint-disable */\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar proto_lnd_pb = require('../proto/lnd_pb.js');\ngoog.exportSymbol('proto.squeaknode.AddTwitterAccountReply', null, global);\ngoog.exportSymbol('proto.squeaknode.AddTwitterAccountRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.ClearSellPriceReply', null, global);\ngoog.exportSymbol('proto.squeaknode.ClearSellPriceRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.ClearSqueakProfileImageReply', null, global);\ngoog.exportSymbol('proto.squeaknode.ClearSqueakProfileImageRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.ConnectPeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.ConnectPeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.ConnectedPeer', null, global);\ngoog.exportSymbol('proto.squeaknode.CreateContactProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.CreateContactProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.CreatePeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.CreatePeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.CreateSigningProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.CreateSigningProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DecryptSqueakReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DecryptSqueakRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DeletePeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DeletePeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DeleteSqueakProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DeleteSqueakProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DeleteSqueakReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DeleteSqueakRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DeleteTwitterAccountReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DeleteTwitterAccountRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DisconnectPeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DisconnectPeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadOffersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadOffersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadPubKeySqueaksReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadPubKeySqueaksRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadRepliesReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadRepliesRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadResult', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadSqueakReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadSqueakRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadSqueaksReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DownloadSqueaksRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetAncestorSqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetAncestorSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetBuyOfferReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetBuyOfferRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetBuyOffersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetBuyOffersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetConnectedPeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetConnectedPeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetConnectedPeersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetConnectedPeersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetContactProfilesReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetContactProfilesRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetDefaultPeerPortReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetDefaultPeerPortRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetExternalAddressReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetExternalAddressRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetLikedSqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetLikedSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetNetworkReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetNetworkRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPaymentSummaryReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPaymentSummaryRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPeerByAddressReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPeerByAddressRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPeersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPeersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetProfilesReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetProfilesRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPubKeySqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPubKeySqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetReceivedPaymentsReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetReceivedPaymentsRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetReplySqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetReplySqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSearchSqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSearchSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSellPriceReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSellPriceRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentOffersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentOffersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentPaymentReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentPaymentRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentPaymentsReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentPaymentsRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSigningProfilesReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSigningProfilesRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakDisplayReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakDisplayRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileByNameReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileByNameRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileByPubKeyReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileByPubKeyRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfilePrivateKeyReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfilePrivateKeyRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetTimelineSqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetTimelineSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetTwitterAccountsReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetTwitterAccountsRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetTwitterStreamStatusReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetTwitterStreamStatusRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.ImportSigningProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.ImportSigningProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.LikeSqueakReply', null, global);\ngoog.exportSymbol('proto.squeaknode.LikeSqueakRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.LoadBuyOffersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.LoadBuyOffersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.MakeSqueakReply', null, global);\ngoog.exportSymbol('proto.squeaknode.MakeSqueakRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.OfferDisplayEntry', null, global);\ngoog.exportSymbol('proto.squeaknode.PayOfferReply', null, global);\ngoog.exportSymbol('proto.squeaknode.PayOfferRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.PaymentSummary', null, global);\ngoog.exportSymbol('proto.squeaknode.PeerAddress', null, global);\ngoog.exportSymbol('proto.squeaknode.ReceivedPayment', null, global);\ngoog.exportSymbol('proto.squeaknode.RenamePeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.RenamePeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.RenameSqueakProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.RenameSqueakProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.ReprocessReceivedPaymentsReply', null, global);\ngoog.exportSymbol('proto.squeaknode.ReprocessReceivedPaymentsRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SentOffer', null, global);\ngoog.exportSymbol('proto.squeaknode.SentPayment', null, global);\ngoog.exportSymbol('proto.squeaknode.SetPeerAutoconnectReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetPeerAutoconnectRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SetPeerShareForFreeReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetPeerShareForFreeRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSellPriceReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSellPriceRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileFollowingReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileFollowingRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileImageReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileImageRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SqueakDisplayEntry', null, global);\ngoog.exportSymbol('proto.squeaknode.SqueakPeer', null, global);\ngoog.exportSymbol('proto.squeaknode.SqueakProfile', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeBuyOffersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeConnectedPeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeConnectedPeersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribePubKeySqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeReceivedPaymentsRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeReplySqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeSqueakDisplayRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.TwitterAccount', null, global);\ngoog.exportSymbol('proto.squeaknode.UnlikeSqueakReply', null, global);\ngoog.exportSymbol('proto.squeaknode.UnlikeSqueakRequest', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreateSigningProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreateSigningProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreateSigningProfileRequest.displayName = 'proto.squeaknode.CreateSigningProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreateSigningProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreateSigningProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreateSigningProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateSigningProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileName: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreateSigningProfileRequest}\n */\nproto.squeaknode.CreateSigningProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreateSigningProfileRequest;\n  return proto.squeaknode.CreateSigningProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreateSigningProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreateSigningProfileRequest}\n */\nproto.squeaknode.CreateSigningProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreateSigningProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreateSigningProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreateSigningProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateSigningProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string profile_name = 1;\n * @return {string}\n */\nproto.squeaknode.CreateSigningProfileRequest.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.CreateSigningProfileRequest.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreateSigningProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreateSigningProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreateSigningProfileReply.displayName = 'proto.squeaknode.CreateSigningProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreateSigningProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreateSigningProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreateSigningProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateSigningProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreateSigningProfileReply}\n */\nproto.squeaknode.CreateSigningProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreateSigningProfileReply;\n  return proto.squeaknode.CreateSigningProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreateSigningProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreateSigningProfileReply}\n */\nproto.squeaknode.CreateSigningProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreateSigningProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreateSigningProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreateSigningProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateSigningProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.CreateSigningProfileReply.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.CreateSigningProfileReply.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ImportSigningProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ImportSigningProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ImportSigningProfileRequest.displayName = 'proto.squeaknode.ImportSigningProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ImportSigningProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ImportSigningProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ImportSigningProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ImportSigningProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    privateKey: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ImportSigningProfileRequest}\n */\nproto.squeaknode.ImportSigningProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ImportSigningProfileRequest;\n  return proto.squeaknode.ImportSigningProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ImportSigningProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ImportSigningProfileRequest}\n */\nproto.squeaknode.ImportSigningProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivateKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ImportSigningProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ImportSigningProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ImportSigningProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ImportSigningProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPrivateKey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string profile_name = 1;\n * @return {string}\n */\nproto.squeaknode.ImportSigningProfileRequest.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.ImportSigningProfileRequest.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string private_key = 2;\n * @return {string}\n */\nproto.squeaknode.ImportSigningProfileRequest.prototype.getPrivateKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.ImportSigningProfileRequest.prototype.setPrivateKey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ImportSigningProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ImportSigningProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ImportSigningProfileReply.displayName = 'proto.squeaknode.ImportSigningProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ImportSigningProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ImportSigningProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ImportSigningProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ImportSigningProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ImportSigningProfileReply}\n */\nproto.squeaknode.ImportSigningProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ImportSigningProfileReply;\n  return proto.squeaknode.ImportSigningProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ImportSigningProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ImportSigningProfileReply}\n */\nproto.squeaknode.ImportSigningProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ImportSigningProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ImportSigningProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ImportSigningProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ImportSigningProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.ImportSigningProfileReply.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ImportSigningProfileReply.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreateContactProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreateContactProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreateContactProfileRequest.displayName = 'proto.squeaknode.CreateContactProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreateContactProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreateContactProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreateContactProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateContactProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    pubkey: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreateContactProfileRequest}\n */\nproto.squeaknode.CreateContactProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreateContactProfileRequest;\n  return proto.squeaknode.CreateContactProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreateContactProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreateContactProfileRequest}\n */\nproto.squeaknode.CreateContactProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubkey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreateContactProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreateContactProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreateContactProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateContactProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string profile_name = 1;\n * @return {string}\n */\nproto.squeaknode.CreateContactProfileRequest.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.CreateContactProfileRequest.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string pubkey = 2;\n * @return {string}\n */\nproto.squeaknode.CreateContactProfileRequest.prototype.getPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.CreateContactProfileRequest.prototype.setPubkey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreateContactProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreateContactProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreateContactProfileReply.displayName = 'proto.squeaknode.CreateContactProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreateContactProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreateContactProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreateContactProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateContactProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreateContactProfileReply}\n */\nproto.squeaknode.CreateContactProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreateContactProfileReply;\n  return proto.squeaknode.CreateContactProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreateContactProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreateContactProfileReply}\n */\nproto.squeaknode.CreateContactProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreateContactProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreateContactProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreateContactProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateContactProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.CreateContactProfileReply.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.CreateContactProfileReply.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetProfilesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetProfilesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetProfilesRequest.displayName = 'proto.squeaknode.GetProfilesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetProfilesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetProfilesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetProfilesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetProfilesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetProfilesRequest}\n */\nproto.squeaknode.GetProfilesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetProfilesRequest;\n  return proto.squeaknode.GetProfilesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetProfilesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetProfilesRequest}\n */\nproto.squeaknode.GetProfilesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetProfilesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetProfilesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetProfilesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetProfilesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetProfilesReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetProfilesReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetProfilesReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetProfilesReply.displayName = 'proto.squeaknode.GetProfilesReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetProfilesReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetProfilesReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetProfilesReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetProfilesReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetProfilesReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfilesList: jspb.Message.toObjectList(msg.getSqueakProfilesList(),\n    proto.squeaknode.SqueakProfile.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetProfilesReply}\n */\nproto.squeaknode.GetProfilesReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetProfilesReply;\n  return proto.squeaknode.GetProfilesReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetProfilesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetProfilesReply}\n */\nproto.squeaknode.GetProfilesReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.addSqueakProfiles(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetProfilesReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetProfilesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetProfilesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetProfilesReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfilesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakProfile squeak_profiles = 1;\n * @return {!Array.<!proto.squeaknode.SqueakProfile>}\n */\nproto.squeaknode.GetProfilesReply.prototype.getSqueakProfilesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakProfile>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakProfile>} value */\nproto.squeaknode.GetProfilesReply.prototype.setSqueakProfilesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakProfile=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetProfilesReply.prototype.addSqueakProfiles = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakProfile, opt_index);\n};\n\n\nproto.squeaknode.GetProfilesReply.prototype.clearSqueakProfilesList = function() {\n  this.setSqueakProfilesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSigningProfilesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSigningProfilesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSigningProfilesRequest.displayName = 'proto.squeaknode.GetSigningProfilesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSigningProfilesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSigningProfilesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSigningProfilesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSigningProfilesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSigningProfilesRequest}\n */\nproto.squeaknode.GetSigningProfilesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSigningProfilesRequest;\n  return proto.squeaknode.GetSigningProfilesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSigningProfilesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSigningProfilesRequest}\n */\nproto.squeaknode.GetSigningProfilesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSigningProfilesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSigningProfilesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSigningProfilesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSigningProfilesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSigningProfilesReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetSigningProfilesReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetSigningProfilesReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSigningProfilesReply.displayName = 'proto.squeaknode.GetSigningProfilesReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetSigningProfilesReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSigningProfilesReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSigningProfilesReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSigningProfilesReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSigningProfilesReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfilesList: jspb.Message.toObjectList(msg.getSqueakProfilesList(),\n    proto.squeaknode.SqueakProfile.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSigningProfilesReply}\n */\nproto.squeaknode.GetSigningProfilesReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSigningProfilesReply;\n  return proto.squeaknode.GetSigningProfilesReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSigningProfilesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSigningProfilesReply}\n */\nproto.squeaknode.GetSigningProfilesReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.addSqueakProfiles(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSigningProfilesReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSigningProfilesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSigningProfilesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSigningProfilesReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfilesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakProfile squeak_profiles = 1;\n * @return {!Array.<!proto.squeaknode.SqueakProfile>}\n */\nproto.squeaknode.GetSigningProfilesReply.prototype.getSqueakProfilesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakProfile>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakProfile>} value */\nproto.squeaknode.GetSigningProfilesReply.prototype.setSqueakProfilesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakProfile=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetSigningProfilesReply.prototype.addSqueakProfiles = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakProfile, opt_index);\n};\n\n\nproto.squeaknode.GetSigningProfilesReply.prototype.clearSqueakProfilesList = function() {\n  this.setSqueakProfilesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetContactProfilesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetContactProfilesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetContactProfilesRequest.displayName = 'proto.squeaknode.GetContactProfilesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetContactProfilesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetContactProfilesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetContactProfilesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetContactProfilesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetContactProfilesRequest}\n */\nproto.squeaknode.GetContactProfilesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetContactProfilesRequest;\n  return proto.squeaknode.GetContactProfilesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetContactProfilesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetContactProfilesRequest}\n */\nproto.squeaknode.GetContactProfilesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetContactProfilesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetContactProfilesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetContactProfilesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetContactProfilesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetContactProfilesReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetContactProfilesReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetContactProfilesReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetContactProfilesReply.displayName = 'proto.squeaknode.GetContactProfilesReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetContactProfilesReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetContactProfilesReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetContactProfilesReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetContactProfilesReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetContactProfilesReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfilesList: jspb.Message.toObjectList(msg.getSqueakProfilesList(),\n    proto.squeaknode.SqueakProfile.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetContactProfilesReply}\n */\nproto.squeaknode.GetContactProfilesReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetContactProfilesReply;\n  return proto.squeaknode.GetContactProfilesReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetContactProfilesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetContactProfilesReply}\n */\nproto.squeaknode.GetContactProfilesReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.addSqueakProfiles(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetContactProfilesReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetContactProfilesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetContactProfilesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetContactProfilesReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfilesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakProfile squeak_profiles = 1;\n * @return {!Array.<!proto.squeaknode.SqueakProfile>}\n */\nproto.squeaknode.GetContactProfilesReply.prototype.getSqueakProfilesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakProfile>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakProfile>} value */\nproto.squeaknode.GetContactProfilesReply.prototype.setSqueakProfilesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakProfile=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetContactProfilesReply.prototype.addSqueakProfiles = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakProfile, opt_index);\n};\n\n\nproto.squeaknode.GetContactProfilesReply.prototype.clearSqueakProfilesList = function() {\n  this.setSqueakProfilesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileRequest.displayName = 'proto.squeaknode.GetSqueakProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileRequest}\n */\nproto.squeaknode.GetSqueakProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileRequest;\n  return proto.squeaknode.GetSqueakProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileRequest}\n */\nproto.squeaknode.GetSqueakProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetSqueakProfileRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetSqueakProfileRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileReply.displayName = 'proto.squeaknode.GetSqueakProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfile: (f = msg.getSqueakProfile()) && proto.squeaknode.SqueakProfile.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileReply}\n */\nproto.squeaknode.GetSqueakProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileReply;\n  return proto.squeaknode.GetSqueakProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileReply}\n */\nproto.squeaknode.GetSqueakProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.setSqueakProfile(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfile();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakProfile squeak_profile = 1;\n * @return {?proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetSqueakProfileReply.prototype.getSqueakProfile = function() {\n  return /** @type{?proto.squeaknode.SqueakProfile} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakProfile|undefined} value */\nproto.squeaknode.GetSqueakProfileReply.prototype.setSqueakProfile = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSqueakProfileReply.prototype.clearSqueakProfile = function() {\n  this.setSqueakProfile(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSqueakProfileReply.prototype.hasSqueakProfile = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileByPubKeyRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileByPubKeyRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileByPubKeyRequest.displayName = 'proto.squeaknode.GetSqueakProfileByPubKeyRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileByPubKeyRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileByPubKeyRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileByPubKeyRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByPubKeyRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubkey: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileByPubKeyRequest}\n */\nproto.squeaknode.GetSqueakProfileByPubKeyRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileByPubKeyRequest;\n  return proto.squeaknode.GetSqueakProfileByPubKeyRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileByPubKeyRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileByPubKeyRequest}\n */\nproto.squeaknode.GetSqueakProfileByPubKeyRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubkey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileByPubKeyRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileByPubKeyRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileByPubKeyRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByPubKeyRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pubkey = 1;\n * @return {string}\n */\nproto.squeaknode.GetSqueakProfileByPubKeyRequest.prototype.getPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSqueakProfileByPubKeyRequest.prototype.setPubkey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileByPubKeyReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileByPubKeyReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileByPubKeyReply.displayName = 'proto.squeaknode.GetSqueakProfileByPubKeyReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileByPubKeyReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileByPubKeyReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileByPubKeyReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByPubKeyReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfile: (f = msg.getSqueakProfile()) && proto.squeaknode.SqueakProfile.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileByPubKeyReply}\n */\nproto.squeaknode.GetSqueakProfileByPubKeyReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileByPubKeyReply;\n  return proto.squeaknode.GetSqueakProfileByPubKeyReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileByPubKeyReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileByPubKeyReply}\n */\nproto.squeaknode.GetSqueakProfileByPubKeyReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.setSqueakProfile(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileByPubKeyReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileByPubKeyReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileByPubKeyReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByPubKeyReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfile();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakProfile squeak_profile = 1;\n * @return {?proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetSqueakProfileByPubKeyReply.prototype.getSqueakProfile = function() {\n  return /** @type{?proto.squeaknode.SqueakProfile} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakProfile|undefined} value */\nproto.squeaknode.GetSqueakProfileByPubKeyReply.prototype.setSqueakProfile = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSqueakProfileByPubKeyReply.prototype.clearSqueakProfile = function() {\n  this.setSqueakProfile(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSqueakProfileByPubKeyReply.prototype.hasSqueakProfile = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileByNameRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileByNameRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileByNameRequest.displayName = 'proto.squeaknode.GetSqueakProfileByNameRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileByNameRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileByNameRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileByNameRequest}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileByNameRequest;\n  return proto.squeaknode.GetSqueakProfileByNameRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileByNameRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileByNameRequest}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileByNameRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileByNameRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSqueakProfileByNameRequest.prototype.setName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileByNameReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileByNameReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileByNameReply.displayName = 'proto.squeaknode.GetSqueakProfileByNameReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileByNameReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileByNameReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByNameReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfile: (f = msg.getSqueakProfile()) && proto.squeaknode.SqueakProfile.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileByNameReply}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileByNameReply;\n  return proto.squeaknode.GetSqueakProfileByNameReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileByNameReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileByNameReply}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.setSqueakProfile(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileByNameReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileByNameReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByNameReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfile();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakProfile squeak_profile = 1;\n * @return {?proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.getSqueakProfile = function() {\n  return /** @type{?proto.squeaknode.SqueakProfile} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakProfile|undefined} value */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.setSqueakProfile = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.clearSqueakProfile = function() {\n  this.setSqueakProfile(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.hasSqueakProfile = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileFollowingRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileFollowingRequest.displayName = 'proto.squeaknode.SetSqueakProfileFollowingRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileFollowingRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileFollowingRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    following: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileFollowingRequest}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileFollowingRequest;\n  return proto.squeaknode.SetSqueakProfileFollowingRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileFollowingRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileFollowingRequest}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFollowing(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileFollowingRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileFollowingRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getFollowing();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool following = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.getFollowing = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.setFollowing = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileFollowingReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileFollowingReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileFollowingReply.displayName = 'proto.squeaknode.SetSqueakProfileFollowingReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileFollowingReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileFollowingReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileFollowingReply}\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileFollowingReply;\n  return proto.squeaknode.SetSqueakProfileFollowingReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileFollowingReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileFollowingReply}\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileFollowingReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileFollowingReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.RenameSqueakProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.RenameSqueakProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.RenameSqueakProfileRequest.displayName = 'proto.squeaknode.RenameSqueakProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.RenameSqueakProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.RenameSqueakProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenameSqueakProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    profileName: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.RenameSqueakProfileRequest}\n */\nproto.squeaknode.RenameSqueakProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.RenameSqueakProfileRequest;\n  return proto.squeaknode.RenameSqueakProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.RenameSqueakProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.RenameSqueakProfileRequest}\n */\nproto.squeaknode.RenameSqueakProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.RenameSqueakProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.RenameSqueakProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenameSqueakProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string profile_name = 2;\n * @return {string}\n */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.RenameSqueakProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.RenameSqueakProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.RenameSqueakProfileReply.displayName = 'proto.squeaknode.RenameSqueakProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.RenameSqueakProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.RenameSqueakProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.RenameSqueakProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenameSqueakProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.RenameSqueakProfileReply}\n */\nproto.squeaknode.RenameSqueakProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.RenameSqueakProfileReply;\n  return proto.squeaknode.RenameSqueakProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.RenameSqueakProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.RenameSqueakProfileReply}\n */\nproto.squeaknode.RenameSqueakProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.RenameSqueakProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.RenameSqueakProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.RenameSqueakProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenameSqueakProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfilePrivateKeyRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfilePrivateKeyRequest.displayName = 'proto.squeaknode.GetSqueakProfilePrivateKeyRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfilePrivateKeyRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfilePrivateKeyRequest;\n  return proto.squeaknode.GetSqueakProfilePrivateKeyRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfilePrivateKeyRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfilePrivateKeyReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfilePrivateKeyReply.displayName = 'proto.squeaknode.GetSqueakProfilePrivateKeyReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfilePrivateKeyReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    privateKey: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfilePrivateKeyReply}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfilePrivateKeyReply;\n  return proto.squeaknode.GetSqueakProfilePrivateKeyReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfilePrivateKeyReply}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivateKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfilePrivateKeyReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPrivateKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string private_key = 1;\n * @return {string}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.prototype.getPrivateKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.prototype.setPrivateKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeleteSqueakProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeleteSqueakProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeleteSqueakProfileRequest.displayName = 'proto.squeaknode.DeleteSqueakProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeleteSqueakProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeleteSqueakProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeleteSqueakProfileRequest}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeleteSqueakProfileRequest;\n  return proto.squeaknode.DeleteSqueakProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeleteSqueakProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeleteSqueakProfileRequest}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeleteSqueakProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeleteSqueakProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DeleteSqueakProfileRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeleteSqueakProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeleteSqueakProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeleteSqueakProfileReply.displayName = 'proto.squeaknode.DeleteSqueakProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeleteSqueakProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeleteSqueakProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeleteSqueakProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeleteSqueakProfileReply}\n */\nproto.squeaknode.DeleteSqueakProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeleteSqueakProfileReply;\n  return proto.squeaknode.DeleteSqueakProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeleteSqueakProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeleteSqueakProfileReply}\n */\nproto.squeaknode.DeleteSqueakProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeleteSqueakProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeleteSqueakProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeleteSqueakProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileImageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileImageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileImageRequest.displayName = 'proto.squeaknode.SetSqueakProfileImageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileImageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileImageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileImageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    profileImage: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileImageRequest}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileImageRequest;\n  return proto.squeaknode.SetSqueakProfileImageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileImageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileImageRequest}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileImage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileImageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileImageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileImageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getProfileImage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string profile_image = 2;\n * @return {string}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.getProfileImage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.setProfileImage = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileImageReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileImageReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileImageReply.displayName = 'proto.squeaknode.SetSqueakProfileImageReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileImageReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileImageReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileImageReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileImageReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileImageReply}\n */\nproto.squeaknode.SetSqueakProfileImageReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileImageReply;\n  return proto.squeaknode.SetSqueakProfileImageReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileImageReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileImageReply}\n */\nproto.squeaknode.SetSqueakProfileImageReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileImageReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileImageReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileImageReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileImageReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ClearSqueakProfileImageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ClearSqueakProfileImageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ClearSqueakProfileImageRequest.displayName = 'proto.squeaknode.ClearSqueakProfileImageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ClearSqueakProfileImageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ClearSqueakProfileImageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ClearSqueakProfileImageRequest}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ClearSqueakProfileImageRequest;\n  return proto.squeaknode.ClearSqueakProfileImageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ClearSqueakProfileImageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ClearSqueakProfileImageRequest}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ClearSqueakProfileImageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ClearSqueakProfileImageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ClearSqueakProfileImageRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ClearSqueakProfileImageReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ClearSqueakProfileImageReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ClearSqueakProfileImageReply.displayName = 'proto.squeaknode.ClearSqueakProfileImageReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ClearSqueakProfileImageReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ClearSqueakProfileImageReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ClearSqueakProfileImageReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSqueakProfileImageReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ClearSqueakProfileImageReply}\n */\nproto.squeaknode.ClearSqueakProfileImageReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ClearSqueakProfileImageReply;\n  return proto.squeaknode.ClearSqueakProfileImageReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ClearSqueakProfileImageReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ClearSqueakProfileImageReply}\n */\nproto.squeaknode.ClearSqueakProfileImageReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ClearSqueakProfileImageReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ClearSqueakProfileImageReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ClearSqueakProfileImageReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSqueakProfileImageReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SqueakProfile = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SqueakProfile, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SqueakProfile.displayName = 'proto.squeaknode.SqueakProfile';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SqueakProfile.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SqueakProfile.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SqueakProfile} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakProfile.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    profileName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    hasPrivateKey: jspb.Message.getFieldWithDefault(msg, 3, false),\n    pubkey: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    following: jspb.Message.getFieldWithDefault(msg, 5, false),\n    profileImage: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    hasCustomProfileImage: jspb.Message.getFieldWithDefault(msg, 7, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.SqueakProfile.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SqueakProfile;\n  return proto.squeaknode.SqueakProfile.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SqueakProfile} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.SqueakProfile.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasPrivateKey(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubkey(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFollowing(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileImage(value);\n      break;\n    case 7:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasCustomProfileImage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SqueakProfile.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SqueakProfile.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SqueakProfile} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakProfile.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getHasPrivateKey();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getFollowing();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getProfileImage();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getHasCustomProfileImage();\n  if (f) {\n    writer.writeBool(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.SqueakProfile.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakProfile.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string profile_name = 2;\n * @return {string}\n */\nproto.squeaknode.SqueakProfile.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakProfile.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool has_private_key = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakProfile.prototype.getHasPrivateKey = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakProfile.prototype.setHasPrivateKey = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string pubkey = 4;\n * @return {string}\n */\nproto.squeaknode.SqueakProfile.prototype.getPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakProfile.prototype.setPubkey = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bool following = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakProfile.prototype.getFollowing = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakProfile.prototype.setFollowing = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string profile_image = 6;\n * @return {string}\n */\nproto.squeaknode.SqueakProfile.prototype.getProfileImage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakProfile.prototype.setProfileImage = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional bool has_custom_profile_image = 7;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakProfile.prototype.getHasCustomProfileImage = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakProfile.prototype.setHasCustomProfileImage = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.MakeSqueakRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.MakeSqueakRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.MakeSqueakRequest.displayName = 'proto.squeaknode.MakeSqueakRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.MakeSqueakRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.MakeSqueakRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.MakeSqueakRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    content: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    replyto: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    hasRecipient: jspb.Message.getFieldWithDefault(msg, 4, false),\n    recipientProfileId: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.MakeSqueakRequest}\n */\nproto.squeaknode.MakeSqueakRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.MakeSqueakRequest;\n  return proto.squeaknode.MakeSqueakRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.MakeSqueakRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.MakeSqueakRequest}\n */\nproto.squeaknode.MakeSqueakRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setContent(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReplyto(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasRecipient(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setRecipientProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.MakeSqueakRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.MakeSqueakRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.MakeSqueakRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getContent();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getReplyto();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getHasRecipient();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getRecipientProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.MakeSqueakRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string content = 2;\n * @return {string}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.getContent = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.MakeSqueakRequest.prototype.setContent = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string replyto = 3;\n * @return {string}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.getReplyto = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.MakeSqueakRequest.prototype.setReplyto = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool has_recipient = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.getHasRecipient = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.MakeSqueakRequest.prototype.setHasRecipient = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int32 recipient_profile_id = 5;\n * @return {number}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.getRecipientProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.MakeSqueakRequest.prototype.setRecipientProfileId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.MakeSqueakReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.MakeSqueakReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.MakeSqueakReply.displayName = 'proto.squeaknode.MakeSqueakReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.MakeSqueakReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.MakeSqueakReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.MakeSqueakReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.MakeSqueakReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.MakeSqueakReply}\n */\nproto.squeaknode.MakeSqueakReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.MakeSqueakReply;\n  return proto.squeaknode.MakeSqueakReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.MakeSqueakReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.MakeSqueakReply}\n */\nproto.squeaknode.MakeSqueakReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.MakeSqueakReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.MakeSqueakReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.MakeSqueakReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.MakeSqueakReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.MakeSqueakReply.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.MakeSqueakReply.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakDisplayRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakDisplayRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakDisplayRequest.displayName = 'proto.squeaknode.GetSqueakDisplayRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakDisplayRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakDisplayRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakDisplayRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDisplayRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakDisplayRequest}\n */\nproto.squeaknode.GetSqueakDisplayRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakDisplayRequest;\n  return proto.squeaknode.GetSqueakDisplayRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakDisplayRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakDisplayRequest}\n */\nproto.squeaknode.GetSqueakDisplayRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakDisplayRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakDisplayRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakDisplayRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDisplayRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.GetSqueakDisplayRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSqueakDisplayRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakDisplayReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakDisplayReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakDisplayReply.displayName = 'proto.squeaknode.GetSqueakDisplayReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakDisplayReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakDisplayReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakDisplayReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDisplayReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntry: (f = msg.getSqueakDisplayEntry()) && proto.squeaknode.SqueakDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakDisplayReply}\n */\nproto.squeaknode.GetSqueakDisplayReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakDisplayReply;\n  return proto.squeaknode.GetSqueakDisplayReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakDisplayReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakDisplayReply}\n */\nproto.squeaknode.GetSqueakDisplayReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.setSqueakDisplayEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakDisplayReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakDisplayReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakDisplayReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDisplayReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntry();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakDisplayEntry squeak_display_entry = 1;\n * @return {?proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetSqueakDisplayReply.prototype.getSqueakDisplayEntry = function() {\n  return /** @type{?proto.squeaknode.SqueakDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakDisplayEntry|undefined} value */\nproto.squeaknode.GetSqueakDisplayReply.prototype.setSqueakDisplayEntry = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSqueakDisplayReply.prototype.clearSqueakDisplayEntry = function() {\n  this.setSqueakDisplayEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSqueakDisplayReply.prototype.hasSqueakDisplayEntry = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SqueakDisplayEntry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SqueakDisplayEntry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SqueakDisplayEntry.displayName = 'proto.squeaknode.SqueakDisplayEntry';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SqueakDisplayEntry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SqueakDisplayEntry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakDisplayEntry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    isUnlocked: jspb.Message.getFieldWithDefault(msg, 2, false),\n    contentStr: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    isReply: jspb.Message.getFieldWithDefault(msg, 4, false),\n    replyTo: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    blockHeight: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    blockHash: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    blockTime: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    squeakTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    authorPubkey: jspb.Message.getFieldWithDefault(msg, 10, \"\"),\n    isAuthorKnown: jspb.Message.getFieldWithDefault(msg, 11, false),\n    author: (f = msg.getAuthor()) && proto.squeaknode.SqueakProfile.toObject(includeInstance, f),\n    likedTimeMs: jspb.Message.getFieldWithDefault(msg, 13, 0),\n    serializedSqueakHex: jspb.Message.getFieldWithDefault(msg, 14, \"\"),\n    secretKeyHex: jspb.Message.getFieldWithDefault(msg, 15, \"\"),\n    isPrivate: jspb.Message.getFieldWithDefault(msg, 16, false),\n    recipientPubkey: jspb.Message.getFieldWithDefault(msg, 17, \"\"),\n    isRecipientKnown: jspb.Message.getFieldWithDefault(msg, 18, false),\n    recipient: (f = msg.getRecipient()) && proto.squeaknode.SqueakProfile.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.SqueakDisplayEntry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SqueakDisplayEntry;\n  return proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SqueakDisplayEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsUnlocked(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setContentStr(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsReply(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReplyTo(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlockHeight(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBlockHash(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBlockTime(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSqueakTime(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAuthorPubkey(value);\n      break;\n    case 11:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsAuthorKnown(value);\n      break;\n    case 12:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.setAuthor(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLikedTimeMs(value);\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSerializedSqueakHex(value);\n      break;\n    case 15:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSecretKeyHex(value);\n      break;\n    case 16:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsPrivate(value);\n      break;\n    case 17:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRecipientPubkey(value);\n      break;\n    case 18:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsRecipientKnown(value);\n      break;\n    case 19:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.setRecipient(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SqueakDisplayEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getIsUnlocked();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getContentStr();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getIsReply();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getReplyTo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getBlockHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getBlockHash();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getBlockTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getSqueakTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getAuthorPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n  f = message.getIsAuthorKnown();\n  if (f) {\n    writer.writeBool(\n      11,\n      f\n    );\n  }\n  f = message.getAuthor();\n  if (f != null) {\n    writer.writeMessage(\n      12,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n  f = message.getLikedTimeMs();\n  if (f !== 0) {\n    writer.writeInt64(\n      13,\n      f\n    );\n  }\n  f = message.getSerializedSqueakHex();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n  f = message.getSecretKeyHex();\n  if (f.length > 0) {\n    writer.writeString(\n      15,\n      f\n    );\n  }\n  f = message.getIsPrivate();\n  if (f) {\n    writer.writeBool(\n      16,\n      f\n    );\n  }\n  f = message.getRecipientPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      17,\n      f\n    );\n  }\n  f = message.getIsRecipientKnown();\n  if (f) {\n    writer.writeBool(\n      18,\n      f\n    );\n  }\n  f = message.getRecipient();\n  if (f != null) {\n    writer.writeMessage(\n      19,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool is_unlocked = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getIsUnlocked = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setIsUnlocked = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string content_str = 3;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getContentStr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setContentStr = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool is_reply = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getIsReply = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setIsReply = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string reply_to = 5;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getReplyTo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setReplyTo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int32 block_height = 6;\n * @return {number}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setBlockHeight = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string block_hash = 7;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getBlockHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setBlockHash = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 block_time = 8;\n * @return {number}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getBlockTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setBlockTime = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 squeak_time = 9;\n * @return {number}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getSqueakTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setSqueakTime = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string author_pubkey = 10;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getAuthorPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setAuthorPubkey = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional bool is_author_known = 11;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getIsAuthorKnown = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setIsAuthorKnown = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional SqueakProfile author = 12;\n * @return {?proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getAuthor = function() {\n  return /** @type{?proto.squeaknode.SqueakProfile} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakProfile, 12));\n};\n\n\n/** @param {?proto.squeaknode.SqueakProfile|undefined} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setAuthor = function(value) {\n  jspb.Message.setWrapperField(this, 12, value);\n};\n\n\nproto.squeaknode.SqueakDisplayEntry.prototype.clearAuthor = function() {\n  this.setAuthor(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.hasAuthor = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * optional int64 liked_time_ms = 13;\n * @return {number}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getLikedTimeMs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setLikedTimeMs = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional string serialized_squeak_hex = 14;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getSerializedSqueakHex = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setSerializedSqueakHex = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * optional string secret_key_hex = 15;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getSecretKeyHex = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setSecretKeyHex = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * optional bool is_private = 16;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getIsPrivate = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setIsPrivate = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n/**\n * optional string recipient_pubkey = 17;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getRecipientPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setRecipientPubkey = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\n/**\n * optional bool is_recipient_known = 18;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getIsRecipientKnown = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setIsRecipientKnown = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\n/**\n * optional SqueakProfile recipient = 19;\n * @return {?proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getRecipient = function() {\n  return /** @type{?proto.squeaknode.SqueakProfile} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakProfile, 19));\n};\n\n\n/** @param {?proto.squeaknode.SqueakProfile|undefined} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setRecipient = function(value) {\n  jspb.Message.setWrapperField(this, 19, value);\n};\n\n\nproto.squeaknode.SqueakDisplayEntry.prototype.clearRecipient = function() {\n  this.setRecipient(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.hasRecipient = function() {\n  return jspb.Message.getField(this, 19) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetTimelineSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetTimelineSqueakDisplaysRequest.displayName = 'proto.squeaknode.GetTimelineSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetTimelineSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    lastEntry: (f = msg.getLastEntry()) && proto.squeaknode.SqueakDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetTimelineSqueakDisplaysRequest}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetTimelineSqueakDisplaysRequest;\n  return proto.squeaknode.GetTimelineSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetTimelineSqueakDisplaysRequest}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLimit(value);\n      break;\n    case 2:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.setLastEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetTimelineSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getLastEntry();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 limit = 1;\n * @return {number}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.setLimit = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional SqueakDisplayEntry last_entry = 2;\n * @return {?proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.getLastEntry = function() {\n  return /** @type{?proto.squeaknode.SqueakDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 2));\n};\n\n\n/** @param {?proto.squeaknode.SqueakDisplayEntry|undefined} value */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.setLastEntry = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.clearLastEntry = function() {\n  this.setLastEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.hasLastEntry = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetTimelineSqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetTimelineSqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetTimelineSqueakDisplaysReply.displayName = 'proto.squeaknode.GetTimelineSqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetTimelineSqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetTimelineSqueakDisplaysReply}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetTimelineSqueakDisplaysReply;\n  return proto.squeaknode.GetTimelineSqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetTimelineSqueakDisplaysReply}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetTimelineSqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPubKeySqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPubKeySqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPubKeySqueakDisplaysRequest.displayName = 'proto.squeaknode.GetPubKeySqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPubKeySqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPubKeySqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPubKeySqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPubKeySqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubkey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    lastEntry: (f = msg.getLastEntry()) && proto.squeaknode.SqueakDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPubKeySqueakDisplaysRequest}\n */\nproto.squeaknode.GetPubKeySqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPubKeySqueakDisplaysRequest;\n  return proto.squeaknode.GetPubKeySqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPubKeySqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPubKeySqueakDisplaysRequest}\n */\nproto.squeaknode.GetPubKeySqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubkey(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLimit(value);\n      break;\n    case 3:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.setLastEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPubKeySqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPubKeySqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPubKeySqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPubKeySqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getLastEntry();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string pubkey = 1;\n * @return {string}\n */\nproto.squeaknode.GetPubKeySqueakDisplaysRequest.prototype.getPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetPubKeySqueakDisplaysRequest.prototype.setPubkey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 limit = 2;\n * @return {number}\n */\nproto.squeaknode.GetPubKeySqueakDisplaysRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetPubKeySqueakDisplaysRequest.prototype.setLimit = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional SqueakDisplayEntry last_entry = 3;\n * @return {?proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetPubKeySqueakDisplaysRequest.prototype.getLastEntry = function() {\n  return /** @type{?proto.squeaknode.SqueakDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 3));\n};\n\n\n/** @param {?proto.squeaknode.SqueakDisplayEntry|undefined} value */\nproto.squeaknode.GetPubKeySqueakDisplaysRequest.prototype.setLastEntry = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.squeaknode.GetPubKeySqueakDisplaysRequest.prototype.clearLastEntry = function() {\n  this.setLastEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetPubKeySqueakDisplaysRequest.prototype.hasLastEntry = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPubKeySqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetPubKeySqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetPubKeySqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPubKeySqueakDisplaysReply.displayName = 'proto.squeaknode.GetPubKeySqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetPubKeySqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPubKeySqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPubKeySqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPubKeySqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPubKeySqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPubKeySqueakDisplaysReply}\n */\nproto.squeaknode.GetPubKeySqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPubKeySqueakDisplaysReply;\n  return proto.squeaknode.GetPubKeySqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPubKeySqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPubKeySqueakDisplaysReply}\n */\nproto.squeaknode.GetPubKeySqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPubKeySqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPubKeySqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPubKeySqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPubKeySqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetPubKeySqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetPubKeySqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetPubKeySqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetPubKeySqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSearchSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSearchSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSearchSqueakDisplaysRequest.displayName = 'proto.squeaknode.GetSearchSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSearchSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSearchSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSearchSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSearchSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    searchText: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    lastEntry: (f = msg.getLastEntry()) && proto.squeaknode.SqueakDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSearchSqueakDisplaysRequest}\n */\nproto.squeaknode.GetSearchSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSearchSqueakDisplaysRequest;\n  return proto.squeaknode.GetSearchSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSearchSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSearchSqueakDisplaysRequest}\n */\nproto.squeaknode.GetSearchSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSearchText(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLimit(value);\n      break;\n    case 3:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.setLastEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSearchSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSearchSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSearchSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSearchSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSearchText();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getLastEntry();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string search_text = 1;\n * @return {string}\n */\nproto.squeaknode.GetSearchSqueakDisplaysRequest.prototype.getSearchText = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSearchSqueakDisplaysRequest.prototype.setSearchText = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 limit = 2;\n * @return {number}\n */\nproto.squeaknode.GetSearchSqueakDisplaysRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetSearchSqueakDisplaysRequest.prototype.setLimit = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional SqueakDisplayEntry last_entry = 3;\n * @return {?proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetSearchSqueakDisplaysRequest.prototype.getLastEntry = function() {\n  return /** @type{?proto.squeaknode.SqueakDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 3));\n};\n\n\n/** @param {?proto.squeaknode.SqueakDisplayEntry|undefined} value */\nproto.squeaknode.GetSearchSqueakDisplaysRequest.prototype.setLastEntry = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.squeaknode.GetSearchSqueakDisplaysRequest.prototype.clearLastEntry = function() {\n  this.setLastEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSearchSqueakDisplaysRequest.prototype.hasLastEntry = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSearchSqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetSearchSqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetSearchSqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSearchSqueakDisplaysReply.displayName = 'proto.squeaknode.GetSearchSqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetSearchSqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSearchSqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSearchSqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSearchSqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSearchSqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSearchSqueakDisplaysReply}\n */\nproto.squeaknode.GetSearchSqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSearchSqueakDisplaysReply;\n  return proto.squeaknode.GetSearchSqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSearchSqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSearchSqueakDisplaysReply}\n */\nproto.squeaknode.GetSearchSqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSearchSqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSearchSqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSearchSqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSearchSqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetSearchSqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetSearchSqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetSearchSqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetSearchSqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetAncestorSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetAncestorSqueakDisplaysRequest.displayName = 'proto.squeaknode.GetAncestorSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetAncestorSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetAncestorSqueakDisplaysRequest}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetAncestorSqueakDisplaysRequest;\n  return proto.squeaknode.GetAncestorSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetAncestorSqueakDisplaysRequest}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetAncestorSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetAncestorSqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetAncestorSqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetAncestorSqueakDisplaysReply.displayName = 'proto.squeaknode.GetAncestorSqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetAncestorSqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetAncestorSqueakDisplaysReply}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetAncestorSqueakDisplaysReply;\n  return proto.squeaknode.GetAncestorSqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetAncestorSqueakDisplaysReply}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetAncestorSqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetReplySqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetReplySqueakDisplaysRequest.displayName = 'proto.squeaknode.GetReplySqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetReplySqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetReplySqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    lastEntry: (f = msg.getLastEntry()) && proto.squeaknode.SqueakDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetReplySqueakDisplaysRequest}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetReplySqueakDisplaysRequest;\n  return proto.squeaknode.GetReplySqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetReplySqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetReplySqueakDisplaysRequest}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLimit(value);\n      break;\n    case 3:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.setLastEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetReplySqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetReplySqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getLastEntry();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 limit = 2;\n * @return {number}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.setLimit = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional SqueakDisplayEntry last_entry = 3;\n * @return {?proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.getLastEntry = function() {\n  return /** @type{?proto.squeaknode.SqueakDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 3));\n};\n\n\n/** @param {?proto.squeaknode.SqueakDisplayEntry|undefined} value */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.setLastEntry = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.clearLastEntry = function() {\n  this.setLastEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.hasLastEntry = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetReplySqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetReplySqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetReplySqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetReplySqueakDisplaysReply.displayName = 'proto.squeaknode.GetReplySqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetReplySqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetReplySqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetReplySqueakDisplaysReply}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetReplySqueakDisplaysReply;\n  return proto.squeaknode.GetReplySqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetReplySqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetReplySqueakDisplaysReply}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetReplySqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetReplySqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeleteSqueakRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeleteSqueakRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeleteSqueakRequest.displayName = 'proto.squeaknode.DeleteSqueakRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeleteSqueakRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeleteSqueakRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeleteSqueakRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeleteSqueakRequest}\n */\nproto.squeaknode.DeleteSqueakRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeleteSqueakRequest;\n  return proto.squeaknode.DeleteSqueakRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeleteSqueakRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeleteSqueakRequest}\n */\nproto.squeaknode.DeleteSqueakRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeleteSqueakRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeleteSqueakRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeleteSqueakRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.DeleteSqueakRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.DeleteSqueakRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeleteSqueakReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeleteSqueakReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeleteSqueakReply.displayName = 'proto.squeaknode.DeleteSqueakReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeleteSqueakReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeleteSqueakReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeleteSqueakReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeleteSqueakReply}\n */\nproto.squeaknode.DeleteSqueakReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeleteSqueakReply;\n  return proto.squeaknode.DeleteSqueakReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeleteSqueakReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeleteSqueakReply}\n */\nproto.squeaknode.DeleteSqueakReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeleteSqueakReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeleteSqueakReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeleteSqueakReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreatePeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreatePeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreatePeerRequest.displayName = 'proto.squeaknode.CreatePeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreatePeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreatePeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreatePeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreatePeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreatePeerRequest}\n */\nproto.squeaknode.CreatePeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreatePeerRequest;\n  return proto.squeaknode.CreatePeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreatePeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreatePeerRequest}\n */\nproto.squeaknode.CreatePeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPeerName(value);\n      break;\n    case 2:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreatePeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreatePeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreatePeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreatePeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string peer_name = 1;\n * @return {string}\n */\nproto.squeaknode.CreatePeerRequest.prototype.getPeerName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.CreatePeerRequest.prototype.setPeerName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional PeerAddress peer_address = 2;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.CreatePeerRequest.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 2));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.CreatePeerRequest.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.squeaknode.CreatePeerRequest.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.CreatePeerRequest.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreatePeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreatePeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreatePeerReply.displayName = 'proto.squeaknode.CreatePeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreatePeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreatePeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreatePeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreatePeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreatePeerReply}\n */\nproto.squeaknode.CreatePeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreatePeerReply;\n  return proto.squeaknode.CreatePeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreatePeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreatePeerReply}\n */\nproto.squeaknode.CreatePeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreatePeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreatePeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreatePeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreatePeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.CreatePeerReply.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.CreatePeerReply.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPeerRequest.displayName = 'proto.squeaknode.GetPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPeerRequest}\n */\nproto.squeaknode.GetPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPeerRequest;\n  return proto.squeaknode.GetPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPeerRequest}\n */\nproto.squeaknode.GetPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetPeerRequest.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetPeerRequest.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPeerReply.displayName = 'proto.squeaknode.GetPeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakPeer: (f = msg.getSqueakPeer()) && proto.squeaknode.SqueakPeer.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPeerReply}\n */\nproto.squeaknode.GetPeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPeerReply;\n  return proto.squeaknode.GetPeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPeerReply}\n */\nproto.squeaknode.GetPeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakPeer;\n      reader.readMessage(value,proto.squeaknode.SqueakPeer.deserializeBinaryFromReader);\n      msg.setSqueakPeer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakPeer();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakPeer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakPeer squeak_peer = 1;\n * @return {?proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.GetPeerReply.prototype.getSqueakPeer = function() {\n  return /** @type{?proto.squeaknode.SqueakPeer} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakPeer, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakPeer|undefined} value */\nproto.squeaknode.GetPeerReply.prototype.setSqueakPeer = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetPeerReply.prototype.clearSqueakPeer = function() {\n  this.setSqueakPeer(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetPeerReply.prototype.hasSqueakPeer = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPeerByAddressRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPeerByAddressRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPeerByAddressRequest.displayName = 'proto.squeaknode.GetPeerByAddressRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPeerByAddressRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPeerByAddressRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPeerByAddressRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerByAddressRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPeerByAddressRequest}\n */\nproto.squeaknode.GetPeerByAddressRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPeerByAddressRequest;\n  return proto.squeaknode.GetPeerByAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPeerByAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPeerByAddressRequest}\n */\nproto.squeaknode.GetPeerByAddressRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPeerByAddressRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPeerByAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPeerByAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerByAddressRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress peer_address = 1;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.GetPeerByAddressRequest.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 1));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.GetPeerByAddressRequest.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetPeerByAddressRequest.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetPeerByAddressRequest.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPeerByAddressReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPeerByAddressReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPeerByAddressReply.displayName = 'proto.squeaknode.GetPeerByAddressReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPeerByAddressReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPeerByAddressReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPeerByAddressReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerByAddressReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakPeer: (f = msg.getSqueakPeer()) && proto.squeaknode.SqueakPeer.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPeerByAddressReply}\n */\nproto.squeaknode.GetPeerByAddressReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPeerByAddressReply;\n  return proto.squeaknode.GetPeerByAddressReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPeerByAddressReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPeerByAddressReply}\n */\nproto.squeaknode.GetPeerByAddressReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakPeer;\n      reader.readMessage(value,proto.squeaknode.SqueakPeer.deserializeBinaryFromReader);\n      msg.setSqueakPeer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPeerByAddressReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPeerByAddressReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPeerByAddressReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerByAddressReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakPeer();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakPeer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakPeer squeak_peer = 1;\n * @return {?proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.GetPeerByAddressReply.prototype.getSqueakPeer = function() {\n  return /** @type{?proto.squeaknode.SqueakPeer} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakPeer, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakPeer|undefined} value */\nproto.squeaknode.GetPeerByAddressReply.prototype.setSqueakPeer = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetPeerByAddressReply.prototype.clearSqueakPeer = function() {\n  this.setSqueakPeer(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetPeerByAddressReply.prototype.hasSqueakPeer = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPeersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPeersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPeersRequest.displayName = 'proto.squeaknode.GetPeersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPeersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPeersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPeersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPeersRequest}\n */\nproto.squeaknode.GetPeersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPeersRequest;\n  return proto.squeaknode.GetPeersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPeersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPeersRequest}\n */\nproto.squeaknode.GetPeersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPeersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPeersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPeersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPeersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetPeersReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetPeersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPeersReply.displayName = 'proto.squeaknode.GetPeersReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetPeersReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPeersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPeersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPeersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakPeersList: jspb.Message.toObjectList(msg.getSqueakPeersList(),\n    proto.squeaknode.SqueakPeer.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPeersReply}\n */\nproto.squeaknode.GetPeersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPeersReply;\n  return proto.squeaknode.GetPeersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPeersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPeersReply}\n */\nproto.squeaknode.GetPeersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakPeer;\n      reader.readMessage(value,proto.squeaknode.SqueakPeer.deserializeBinaryFromReader);\n      msg.addSqueakPeers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPeersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPeersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPeersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakPeersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakPeer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakPeer squeak_peers = 1;\n * @return {!Array.<!proto.squeaknode.SqueakPeer>}\n */\nproto.squeaknode.GetPeersReply.prototype.getSqueakPeersList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakPeer>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakPeer, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakPeer>} value */\nproto.squeaknode.GetPeersReply.prototype.setSqueakPeersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakPeer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.GetPeersReply.prototype.addSqueakPeers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakPeer, opt_index);\n};\n\n\nproto.squeaknode.GetPeersReply.prototype.clearSqueakPeersList = function() {\n  this.setSqueakPeersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SqueakPeer = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SqueakPeer, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SqueakPeer.displayName = 'proto.squeaknode.SqueakPeer';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SqueakPeer.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SqueakPeer.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SqueakPeer} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakPeer.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    peerName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f),\n    autoconnect: jspb.Message.getFieldWithDefault(msg, 4, false),\n    shareForFree: jspb.Message.getFieldWithDefault(msg, 5, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.SqueakPeer.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SqueakPeer;\n  return proto.squeaknode.SqueakPeer.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SqueakPeer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.SqueakPeer.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPeerName(value);\n      break;\n    case 3:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAutoconnect(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setShareForFree(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SqueakPeer.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SqueakPeer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SqueakPeer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakPeer.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getPeerName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n  f = message.getAutoconnect();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getShareForFree();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.SqueakPeer.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakPeer.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string peer_name = 2;\n * @return {string}\n */\nproto.squeaknode.SqueakPeer.prototype.getPeerName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakPeer.prototype.setPeerName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional PeerAddress peer_address = 3;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.SqueakPeer.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 3));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.SqueakPeer.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.squeaknode.SqueakPeer.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.SqueakPeer.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bool autoconnect = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakPeer.prototype.getAutoconnect = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakPeer.prototype.setAutoconnect = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bool share_for_free = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakPeer.prototype.getShareForFree = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakPeer.prototype.setShareForFree = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetPeerAutoconnectRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetPeerAutoconnectRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetPeerAutoconnectRequest.displayName = 'proto.squeaknode.SetPeerAutoconnectRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetPeerAutoconnectRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetPeerAutoconnectRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetPeerAutoconnectRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerAutoconnectRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    autoconnect: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetPeerAutoconnectRequest}\n */\nproto.squeaknode.SetPeerAutoconnectRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetPeerAutoconnectRequest;\n  return proto.squeaknode.SetPeerAutoconnectRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetPeerAutoconnectRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetPeerAutoconnectRequest}\n */\nproto.squeaknode.SetPeerAutoconnectRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAutoconnect(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetPeerAutoconnectRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetPeerAutoconnectRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetPeerAutoconnectRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerAutoconnectRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getAutoconnect();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.SetPeerAutoconnectRequest.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetPeerAutoconnectRequest.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool autoconnect = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SetPeerAutoconnectRequest.prototype.getAutoconnect = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SetPeerAutoconnectRequest.prototype.setAutoconnect = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetPeerAutoconnectReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetPeerAutoconnectReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetPeerAutoconnectReply.displayName = 'proto.squeaknode.SetPeerAutoconnectReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetPeerAutoconnectReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetPeerAutoconnectReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetPeerAutoconnectReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerAutoconnectReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetPeerAutoconnectReply}\n */\nproto.squeaknode.SetPeerAutoconnectReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetPeerAutoconnectReply;\n  return proto.squeaknode.SetPeerAutoconnectReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetPeerAutoconnectReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetPeerAutoconnectReply}\n */\nproto.squeaknode.SetPeerAutoconnectReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetPeerAutoconnectReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetPeerAutoconnectReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetPeerAutoconnectReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerAutoconnectReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetPeerShareForFreeRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetPeerShareForFreeRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetPeerShareForFreeRequest.displayName = 'proto.squeaknode.SetPeerShareForFreeRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetPeerShareForFreeRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetPeerShareForFreeRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetPeerShareForFreeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerShareForFreeRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    shareForFree: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetPeerShareForFreeRequest}\n */\nproto.squeaknode.SetPeerShareForFreeRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetPeerShareForFreeRequest;\n  return proto.squeaknode.SetPeerShareForFreeRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetPeerShareForFreeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetPeerShareForFreeRequest}\n */\nproto.squeaknode.SetPeerShareForFreeRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setShareForFree(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetPeerShareForFreeRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetPeerShareForFreeRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetPeerShareForFreeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerShareForFreeRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getShareForFree();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.SetPeerShareForFreeRequest.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetPeerShareForFreeRequest.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool share_for_free = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SetPeerShareForFreeRequest.prototype.getShareForFree = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SetPeerShareForFreeRequest.prototype.setShareForFree = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetPeerShareForFreeReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetPeerShareForFreeReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetPeerShareForFreeReply.displayName = 'proto.squeaknode.SetPeerShareForFreeReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetPeerShareForFreeReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetPeerShareForFreeReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetPeerShareForFreeReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerShareForFreeReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetPeerShareForFreeReply}\n */\nproto.squeaknode.SetPeerShareForFreeReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetPeerShareForFreeReply;\n  return proto.squeaknode.SetPeerShareForFreeReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetPeerShareForFreeReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetPeerShareForFreeReply}\n */\nproto.squeaknode.SetPeerShareForFreeReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetPeerShareForFreeReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetPeerShareForFreeReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetPeerShareForFreeReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerShareForFreeReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.RenamePeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.RenamePeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.RenamePeerRequest.displayName = 'proto.squeaknode.RenamePeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.RenamePeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.RenamePeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.RenamePeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenamePeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    peerName: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.RenamePeerRequest}\n */\nproto.squeaknode.RenamePeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.RenamePeerRequest;\n  return proto.squeaknode.RenamePeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.RenamePeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.RenamePeerRequest}\n */\nproto.squeaknode.RenamePeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPeerName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.RenamePeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.RenamePeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.RenamePeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenamePeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getPeerName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.RenamePeerRequest.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.RenamePeerRequest.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string peer_name = 2;\n * @return {string}\n */\nproto.squeaknode.RenamePeerRequest.prototype.getPeerName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.RenamePeerRequest.prototype.setPeerName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.RenamePeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.RenamePeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.RenamePeerReply.displayName = 'proto.squeaknode.RenamePeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.RenamePeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.RenamePeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.RenamePeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenamePeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.RenamePeerReply}\n */\nproto.squeaknode.RenamePeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.RenamePeerReply;\n  return proto.squeaknode.RenamePeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.RenamePeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.RenamePeerReply}\n */\nproto.squeaknode.RenamePeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.RenamePeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.RenamePeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.RenamePeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenamePeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeletePeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeletePeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeletePeerRequest.displayName = 'proto.squeaknode.DeletePeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeletePeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeletePeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeletePeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeletePeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeletePeerRequest}\n */\nproto.squeaknode.DeletePeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeletePeerRequest;\n  return proto.squeaknode.DeletePeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeletePeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeletePeerRequest}\n */\nproto.squeaknode.DeletePeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeletePeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeletePeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeletePeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeletePeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.DeletePeerRequest.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DeletePeerRequest.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeletePeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeletePeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeletePeerReply.displayName = 'proto.squeaknode.DeletePeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeletePeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeletePeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeletePeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeletePeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeletePeerReply}\n */\nproto.squeaknode.DeletePeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeletePeerReply;\n  return proto.squeaknode.DeletePeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeletePeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeletePeerReply}\n */\nproto.squeaknode.DeletePeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeletePeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeletePeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeletePeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeletePeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.LoadBuyOffersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.LoadBuyOffersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.LoadBuyOffersRequest.displayName = 'proto.squeaknode.LoadBuyOffersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.LoadBuyOffersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.LoadBuyOffersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.LoadBuyOffersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LoadBuyOffersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.LoadBuyOffersRequest}\n */\nproto.squeaknode.LoadBuyOffersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.LoadBuyOffersRequest;\n  return proto.squeaknode.LoadBuyOffersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.LoadBuyOffersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.LoadBuyOffersRequest}\n */\nproto.squeaknode.LoadBuyOffersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.LoadBuyOffersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.LoadBuyOffersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.LoadBuyOffersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LoadBuyOffersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.LoadBuyOffersRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.LoadBuyOffersRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.LoadBuyOffersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.LoadBuyOffersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.LoadBuyOffersReply.displayName = 'proto.squeaknode.LoadBuyOffersReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.LoadBuyOffersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.LoadBuyOffersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.LoadBuyOffersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LoadBuyOffersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.LoadBuyOffersReply}\n */\nproto.squeaknode.LoadBuyOffersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.LoadBuyOffersReply;\n  return proto.squeaknode.LoadBuyOffersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.LoadBuyOffersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.LoadBuyOffersReply}\n */\nproto.squeaknode.LoadBuyOffersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.LoadBuyOffersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.LoadBuyOffersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.LoadBuyOffersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LoadBuyOffersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetBuyOffersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetBuyOffersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetBuyOffersRequest.displayName = 'proto.squeaknode.GetBuyOffersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetBuyOffersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetBuyOffersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetBuyOffersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOffersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetBuyOffersRequest}\n */\nproto.squeaknode.GetBuyOffersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetBuyOffersRequest;\n  return proto.squeaknode.GetBuyOffersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetBuyOffersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetBuyOffersRequest}\n */\nproto.squeaknode.GetBuyOffersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetBuyOffersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetBuyOffersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetBuyOffersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOffersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.GetBuyOffersRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetBuyOffersRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetBuyOffersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetBuyOffersReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetBuyOffersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetBuyOffersReply.displayName = 'proto.squeaknode.GetBuyOffersReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetBuyOffersReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetBuyOffersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetBuyOffersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetBuyOffersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOffersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offersList: jspb.Message.toObjectList(msg.getOffersList(),\n    proto.squeaknode.OfferDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetBuyOffersReply}\n */\nproto.squeaknode.GetBuyOffersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetBuyOffersReply;\n  return proto.squeaknode.GetBuyOffersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetBuyOffersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetBuyOffersReply}\n */\nproto.squeaknode.GetBuyOffersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.OfferDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.OfferDisplayEntry.deserializeBinaryFromReader);\n      msg.addOffers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetBuyOffersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetBuyOffersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetBuyOffersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOffersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOffersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.OfferDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated OfferDisplayEntry offers = 1;\n * @return {!Array.<!proto.squeaknode.OfferDisplayEntry>}\n */\nproto.squeaknode.GetBuyOffersReply.prototype.getOffersList = function() {\n  return /** @type{!Array.<!proto.squeaknode.OfferDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.OfferDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.OfferDisplayEntry>} value */\nproto.squeaknode.GetBuyOffersReply.prototype.setOffersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.OfferDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.OfferDisplayEntry}\n */\nproto.squeaknode.GetBuyOffersReply.prototype.addOffers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.OfferDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetBuyOffersReply.prototype.clearOffersList = function() {\n  this.setOffersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetBuyOfferRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetBuyOfferRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetBuyOfferRequest.displayName = 'proto.squeaknode.GetBuyOfferRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetBuyOfferRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetBuyOfferRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetBuyOfferRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOfferRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetBuyOfferRequest}\n */\nproto.squeaknode.GetBuyOfferRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetBuyOfferRequest;\n  return proto.squeaknode.GetBuyOfferRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetBuyOfferRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetBuyOfferRequest}\n */\nproto.squeaknode.GetBuyOfferRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setOfferId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetBuyOfferRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetBuyOfferRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetBuyOfferRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOfferRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOfferId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 offer_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetBuyOfferRequest.prototype.getOfferId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetBuyOfferRequest.prototype.setOfferId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetBuyOfferReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetBuyOfferReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetBuyOfferReply.displayName = 'proto.squeaknode.GetBuyOfferReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetBuyOfferReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetBuyOfferReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetBuyOfferReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOfferReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offer: (f = msg.getOffer()) && proto.squeaknode.OfferDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetBuyOfferReply}\n */\nproto.squeaknode.GetBuyOfferReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetBuyOfferReply;\n  return proto.squeaknode.GetBuyOfferReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetBuyOfferReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetBuyOfferReply}\n */\nproto.squeaknode.GetBuyOfferReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.OfferDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.OfferDisplayEntry.deserializeBinaryFromReader);\n      msg.setOffer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetBuyOfferReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetBuyOfferReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetBuyOfferReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOfferReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOffer();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.OfferDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional OfferDisplayEntry offer = 1;\n * @return {?proto.squeaknode.OfferDisplayEntry}\n */\nproto.squeaknode.GetBuyOfferReply.prototype.getOffer = function() {\n  return /** @type{?proto.squeaknode.OfferDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.OfferDisplayEntry, 1));\n};\n\n\n/** @param {?proto.squeaknode.OfferDisplayEntry|undefined} value */\nproto.squeaknode.GetBuyOfferReply.prototype.setOffer = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetBuyOfferReply.prototype.clearOffer = function() {\n  this.setOffer(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetBuyOfferReply.prototype.hasOffer = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.OfferDisplayEntry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.OfferDisplayEntry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.OfferDisplayEntry.displayName = 'proto.squeaknode.OfferDisplayEntry';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.OfferDisplayEntry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.OfferDisplayEntry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.OfferDisplayEntry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offerId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    priceMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    nodePubkey: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    nodeHost: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    nodePort: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    invoiceTimestamp: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    invoiceExpiry: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.OfferDisplayEntry}\n */\nproto.squeaknode.OfferDisplayEntry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.OfferDisplayEntry;\n  return proto.squeaknode.OfferDisplayEntry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.OfferDisplayEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.OfferDisplayEntry}\n */\nproto.squeaknode.OfferDisplayEntry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setOfferId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPriceMsat(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodePubkey(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodeHost(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNodePort(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setInvoiceTimestamp(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setInvoiceExpiry(value);\n      break;\n    case 9:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.OfferDisplayEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.OfferDisplayEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.OfferDisplayEntry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOfferId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getNodePubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getNodeHost();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getNodePort();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getInvoiceTimestamp();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n  f = message.getInvoiceExpiry();\n  if (f !== 0) {\n    writer.writeInt32(\n      8,\n      f\n    );\n  }\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      9,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 offer_id = 1;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getOfferId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setOfferId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string squeak_hash = 2;\n * @return {string}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 price_msat = 3;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setPriceMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string node_pubkey = 4;\n * @return {string}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getNodePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setNodePubkey = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string node_host = 5;\n * @return {string}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getNodeHost = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setNodeHost = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int32 node_port = 6;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getNodePort = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setNodePort = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int32 invoice_timestamp = 7;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getInvoiceTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setInvoiceTimestamp = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int32 invoice_expiry = 8;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getInvoiceExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setInvoiceExpiry = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional PeerAddress peer_address = 9;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 9));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n\n\nproto.squeaknode.OfferDisplayEntry.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadSqueaksRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.DownloadSqueaksRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.DownloadSqueaksRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadSqueaksRequest.displayName = 'proto.squeaknode.DownloadSqueaksRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.DownloadSqueaksRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadSqueaksRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadSqueaksRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadSqueaksRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueaksRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubkeysList: jspb.Message.getRepeatedField(msg, 1),\n    minBlockHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    maxBlockHeight: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    replytoSqueakHash: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadSqueaksRequest}\n */\nproto.squeaknode.DownloadSqueaksRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadSqueaksRequest;\n  return proto.squeaknode.DownloadSqueaksRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadSqueaksRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadSqueaksRequest}\n */\nproto.squeaknode.DownloadSqueaksRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addPubkeys(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinBlockHeight(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMaxBlockHeight(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReplytoSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadSqueaksRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadSqueaksRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadSqueaksRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueaksRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubkeysList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n  f = message.getMinBlockHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getMaxBlockHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getReplytoSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string pubkeys = 1;\n * @return {!Array.<string>}\n */\nproto.squeaknode.DownloadSqueaksRequest.prototype.getPubkeysList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array.<string>} value */\nproto.squeaknode.DownloadSqueaksRequest.prototype.setPubkeysList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.squeaknode.DownloadSqueaksRequest.prototype.addPubkeys = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.squeaknode.DownloadSqueaksRequest.prototype.clearPubkeysList = function() {\n  this.setPubkeysList([]);\n};\n\n\n/**\n * optional int32 min_block_height = 2;\n * @return {number}\n */\nproto.squeaknode.DownloadSqueaksRequest.prototype.getMinBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DownloadSqueaksRequest.prototype.setMinBlockHeight = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 max_block_height = 3;\n * @return {number}\n */\nproto.squeaknode.DownloadSqueaksRequest.prototype.getMaxBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DownloadSqueaksRequest.prototype.setMaxBlockHeight = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string replyto_squeak_hash = 4;\n * @return {string}\n */\nproto.squeaknode.DownloadSqueaksRequest.prototype.getReplytoSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.DownloadSqueaksRequest.prototype.setReplytoSqueakHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadResult = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadResult, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadResult.displayName = 'proto.squeaknode.DownloadResult';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadResult.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadResult.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadResult} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadResult.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    numberDownloaded: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    numberRequested: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    numberPeers: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    elapsedTimeMs: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadResult}\n */\nproto.squeaknode.DownloadResult.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadResult;\n  return proto.squeaknode.DownloadResult.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadResult} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadResult}\n */\nproto.squeaknode.DownloadResult.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumberDownloaded(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumberRequested(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumberPeers(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setElapsedTimeMs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadResult.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadResult.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadResult} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadResult.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNumberDownloaded();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getNumberRequested();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getNumberPeers();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getElapsedTimeMs();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 number_downloaded = 1;\n * @return {number}\n */\nproto.squeaknode.DownloadResult.prototype.getNumberDownloaded = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DownloadResult.prototype.setNumberDownloaded = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 number_requested = 2;\n * @return {number}\n */\nproto.squeaknode.DownloadResult.prototype.getNumberRequested = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DownloadResult.prototype.setNumberRequested = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 number_peers = 3;\n * @return {number}\n */\nproto.squeaknode.DownloadResult.prototype.getNumberPeers = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DownloadResult.prototype.setNumberPeers = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int32 elapsed_time_ms = 4;\n * @return {number}\n */\nproto.squeaknode.DownloadResult.prototype.getElapsedTimeMs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DownloadResult.prototype.setElapsedTimeMs = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadSqueaksReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadSqueaksReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadSqueaksReply.displayName = 'proto.squeaknode.DownloadSqueaksReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadSqueaksReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadSqueaksReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadSqueaksReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueaksReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    downloadResult: (f = msg.getDownloadResult()) && proto.squeaknode.DownloadResult.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadSqueaksReply}\n */\nproto.squeaknode.DownloadSqueaksReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadSqueaksReply;\n  return proto.squeaknode.DownloadSqueaksReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadSqueaksReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadSqueaksReply}\n */\nproto.squeaknode.DownloadSqueaksReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.DownloadResult;\n      reader.readMessage(value,proto.squeaknode.DownloadResult.deserializeBinaryFromReader);\n      msg.setDownloadResult(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadSqueaksReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadSqueaksReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadSqueaksReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueaksReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDownloadResult();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.DownloadResult.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DownloadResult download_result = 1;\n * @return {?proto.squeaknode.DownloadResult}\n */\nproto.squeaknode.DownloadSqueaksReply.prototype.getDownloadResult = function() {\n  return /** @type{?proto.squeaknode.DownloadResult} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.DownloadResult, 1));\n};\n\n\n/** @param {?proto.squeaknode.DownloadResult|undefined} value */\nproto.squeaknode.DownloadSqueaksReply.prototype.setDownloadResult = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.DownloadSqueaksReply.prototype.clearDownloadResult = function() {\n  this.setDownloadResult(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.DownloadSqueaksReply.prototype.hasDownloadResult = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.PayOfferRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.PayOfferRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.PayOfferRequest.displayName = 'proto.squeaknode.PayOfferRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.PayOfferRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.PayOfferRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.PayOfferRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PayOfferRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.PayOfferRequest}\n */\nproto.squeaknode.PayOfferRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.PayOfferRequest;\n  return proto.squeaknode.PayOfferRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.PayOfferRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.PayOfferRequest}\n */\nproto.squeaknode.PayOfferRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setOfferId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.PayOfferRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.PayOfferRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.PayOfferRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PayOfferRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOfferId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 offer_id = 1;\n * @return {number}\n */\nproto.squeaknode.PayOfferRequest.prototype.getOfferId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PayOfferRequest.prototype.setOfferId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.PayOfferReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.PayOfferReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.PayOfferReply.displayName = 'proto.squeaknode.PayOfferReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.PayOfferReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.PayOfferReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.PayOfferReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PayOfferReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPaymentId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.PayOfferReply}\n */\nproto.squeaknode.PayOfferReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.PayOfferReply;\n  return proto.squeaknode.PayOfferReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.PayOfferReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.PayOfferReply}\n */\nproto.squeaknode.PayOfferReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSentPaymentId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.PayOfferReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.PayOfferReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.PayOfferReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PayOfferReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPaymentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 sent_payment_id = 1;\n * @return {number}\n */\nproto.squeaknode.PayOfferReply.prototype.getSentPaymentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PayOfferReply.prototype.setSentPaymentId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DecryptSqueakRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DecryptSqueakRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DecryptSqueakRequest.displayName = 'proto.squeaknode.DecryptSqueakRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DecryptSqueakRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DecryptSqueakRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DecryptSqueakRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DecryptSqueakRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    hasRecipient: jspb.Message.getFieldWithDefault(msg, 2, false),\n    recipientProfileId: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    hasAuthor: jspb.Message.getFieldWithDefault(msg, 4, false),\n    authorProfileId: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DecryptSqueakRequest}\n */\nproto.squeaknode.DecryptSqueakRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DecryptSqueakRequest;\n  return proto.squeaknode.DecryptSqueakRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DecryptSqueakRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DecryptSqueakRequest}\n */\nproto.squeaknode.DecryptSqueakRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasRecipient(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setRecipientProfileId(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasAuthor(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setAuthorProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DecryptSqueakRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DecryptSqueakRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DecryptSqueakRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DecryptSqueakRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getHasRecipient();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getRecipientProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getHasAuthor();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getAuthorProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.DecryptSqueakRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.DecryptSqueakRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool has_recipient = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.DecryptSqueakRequest.prototype.getHasRecipient = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.DecryptSqueakRequest.prototype.setHasRecipient = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 recipient_profile_id = 3;\n * @return {number}\n */\nproto.squeaknode.DecryptSqueakRequest.prototype.getRecipientProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DecryptSqueakRequest.prototype.setRecipientProfileId = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool has_author = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.DecryptSqueakRequest.prototype.getHasAuthor = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.DecryptSqueakRequest.prototype.setHasAuthor = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int32 author_profile_id = 5;\n * @return {number}\n */\nproto.squeaknode.DecryptSqueakRequest.prototype.getAuthorProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DecryptSqueakRequest.prototype.setAuthorProfileId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DecryptSqueakReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DecryptSqueakReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DecryptSqueakReply.displayName = 'proto.squeaknode.DecryptSqueakReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DecryptSqueakReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DecryptSqueakReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DecryptSqueakReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DecryptSqueakReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DecryptSqueakReply}\n */\nproto.squeaknode.DecryptSqueakReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DecryptSqueakReply;\n  return proto.squeaknode.DecryptSqueakReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DecryptSqueakReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DecryptSqueakReply}\n */\nproto.squeaknode.DecryptSqueakReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DecryptSqueakReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DecryptSqueakReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DecryptSqueakReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DecryptSqueakReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSentPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentPaymentsRequest.displayName = 'proto.squeaknode.GetSentPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    lastSentPayment: (f = msg.getLastSentPayment()) && proto.squeaknode.SentPayment.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentPaymentsRequest}\n */\nproto.squeaknode.GetSentPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentPaymentsRequest;\n  return proto.squeaknode.GetSentPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentPaymentsRequest}\n */\nproto.squeaknode.GetSentPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLimit(value);\n      break;\n    case 2:\n      var value = new proto.squeaknode.SentPayment;\n      reader.readMessage(value,proto.squeaknode.SentPayment.deserializeBinaryFromReader);\n      msg.setLastSentPayment(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getLastSentPayment();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.squeaknode.SentPayment.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 limit = 1;\n * @return {number}\n */\nproto.squeaknode.GetSentPaymentsRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetSentPaymentsRequest.prototype.setLimit = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional SentPayment last_sent_payment = 2;\n * @return {?proto.squeaknode.SentPayment}\n */\nproto.squeaknode.GetSentPaymentsRequest.prototype.getLastSentPayment = function() {\n  return /** @type{?proto.squeaknode.SentPayment} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SentPayment, 2));\n};\n\n\n/** @param {?proto.squeaknode.SentPayment|undefined} value */\nproto.squeaknode.GetSentPaymentsRequest.prototype.setLastSentPayment = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.squeaknode.GetSentPaymentsRequest.prototype.clearLastSentPayment = function() {\n  this.setLastSentPayment(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSentPaymentsRequest.prototype.hasLastSentPayment = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentPaymentsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetSentPaymentsReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetSentPaymentsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentPaymentsReply.displayName = 'proto.squeaknode.GetSentPaymentsReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetSentPaymentsReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentPaymentsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentPaymentsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentPaymentsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPaymentsList: jspb.Message.toObjectList(msg.getSentPaymentsList(),\n    proto.squeaknode.SentPayment.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentPaymentsReply}\n */\nproto.squeaknode.GetSentPaymentsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentPaymentsReply;\n  return proto.squeaknode.GetSentPaymentsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentPaymentsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentPaymentsReply}\n */\nproto.squeaknode.GetSentPaymentsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SentPayment;\n      reader.readMessage(value,proto.squeaknode.SentPayment.deserializeBinaryFromReader);\n      msg.addSentPayments(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentPaymentsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentPaymentsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentPaymentsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPaymentsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SentPayment.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SentPayment sent_payments = 1;\n * @return {!Array.<!proto.squeaknode.SentPayment>}\n */\nproto.squeaknode.GetSentPaymentsReply.prototype.getSentPaymentsList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SentPayment>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SentPayment, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SentPayment>} value */\nproto.squeaknode.GetSentPaymentsReply.prototype.setSentPaymentsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SentPayment=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SentPayment}\n */\nproto.squeaknode.GetSentPaymentsReply.prototype.addSentPayments = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SentPayment, opt_index);\n};\n\n\nproto.squeaknode.GetSentPaymentsReply.prototype.clearSentPaymentsList = function() {\n  this.setSentPaymentsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentPaymentRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSentPaymentRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentPaymentRequest.displayName = 'proto.squeaknode.GetSentPaymentRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentPaymentRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentPaymentRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentPaymentRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPaymentId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentPaymentRequest}\n */\nproto.squeaknode.GetSentPaymentRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentPaymentRequest;\n  return proto.squeaknode.GetSentPaymentRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentPaymentRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentPaymentRequest}\n */\nproto.squeaknode.GetSentPaymentRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSentPaymentId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentPaymentRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentPaymentRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentPaymentRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPaymentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 sent_payment_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetSentPaymentRequest.prototype.getSentPaymentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetSentPaymentRequest.prototype.setSentPaymentId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentPaymentReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSentPaymentReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentPaymentReply.displayName = 'proto.squeaknode.GetSentPaymentReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentPaymentReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentPaymentReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentPaymentReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPayment: (f = msg.getSentPayment()) && proto.squeaknode.SentPayment.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentPaymentReply}\n */\nproto.squeaknode.GetSentPaymentReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentPaymentReply;\n  return proto.squeaknode.GetSentPaymentReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentPaymentReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentPaymentReply}\n */\nproto.squeaknode.GetSentPaymentReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SentPayment;\n      reader.readMessage(value,proto.squeaknode.SentPayment.deserializeBinaryFromReader);\n      msg.setSentPayment(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentPaymentReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentPaymentReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentPaymentReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPayment();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SentPayment.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SentPayment sent_payment = 1;\n * @return {?proto.squeaknode.SentPayment}\n */\nproto.squeaknode.GetSentPaymentReply.prototype.getSentPayment = function() {\n  return /** @type{?proto.squeaknode.SentPayment} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SentPayment, 1));\n};\n\n\n/** @param {?proto.squeaknode.SentPayment|undefined} value */\nproto.squeaknode.GetSentPaymentReply.prototype.setSentPayment = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSentPaymentReply.prototype.clearSentPayment = function() {\n  this.setSentPayment(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSentPaymentReply.prototype.hasSentPayment = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SentPayment = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SentPayment, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SentPayment.displayName = 'proto.squeaknode.SentPayment';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SentPayment.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SentPayment.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SentPayment} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SentPayment.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPaymentId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    priceMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    nodePubkey: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    valid: jspb.Message.getFieldWithDefault(msg, 6, false),\n    timeMs: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SentPayment}\n */\nproto.squeaknode.SentPayment.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SentPayment;\n  return proto.squeaknode.SentPayment.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SentPayment} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SentPayment}\n */\nproto.squeaknode.SentPayment.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSentPaymentId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPriceMsat(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodePubkey(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setValid(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimeMs(value);\n      break;\n    case 8:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SentPayment.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SentPayment.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SentPayment} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SentPayment.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPaymentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getNodePubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getValid();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = message.getTimeMs();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 sent_payment_id = 1;\n * @return {number}\n */\nproto.squeaknode.SentPayment.prototype.getSentPaymentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentPayment.prototype.setSentPaymentId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string squeak_hash = 2;\n * @return {string}\n */\nproto.squeaknode.SentPayment.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentPayment.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string payment_hash = 3;\n * @return {string}\n */\nproto.squeaknode.SentPayment.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentPayment.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 price_msat = 4;\n * @return {number}\n */\nproto.squeaknode.SentPayment.prototype.getPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentPayment.prototype.setPriceMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string node_pubkey = 5;\n * @return {string}\n */\nproto.squeaknode.SentPayment.prototype.getNodePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentPayment.prototype.setNodePubkey = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional bool valid = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SentPayment.prototype.getValid = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SentPayment.prototype.setValid = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 time_ms = 7;\n * @return {number}\n */\nproto.squeaknode.SentPayment.prototype.getTimeMs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentPayment.prototype.setTimeMs = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional PeerAddress peer_address = 8;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.SentPayment.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 8));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.SentPayment.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.squeaknode.SentPayment.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.SentPayment.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadSqueakRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadSqueakRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadSqueakRequest.displayName = 'proto.squeaknode.DownloadSqueakRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadSqueakRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadSqueakRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadSqueakRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueakRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadSqueakRequest}\n */\nproto.squeaknode.DownloadSqueakRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadSqueakRequest;\n  return proto.squeaknode.DownloadSqueakRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadSqueakRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadSqueakRequest}\n */\nproto.squeaknode.DownloadSqueakRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadSqueakRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadSqueakRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadSqueakRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueakRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.DownloadSqueakRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.DownloadSqueakRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadSqueakReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadSqueakReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadSqueakReply.displayName = 'proto.squeaknode.DownloadSqueakReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadSqueakReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadSqueakReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadSqueakReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueakReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    downloadResult: (f = msg.getDownloadResult()) && proto.squeaknode.DownloadResult.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadSqueakReply}\n */\nproto.squeaknode.DownloadSqueakReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadSqueakReply;\n  return proto.squeaknode.DownloadSqueakReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadSqueakReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadSqueakReply}\n */\nproto.squeaknode.DownloadSqueakReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.DownloadResult;\n      reader.readMessage(value,proto.squeaknode.DownloadResult.deserializeBinaryFromReader);\n      msg.setDownloadResult(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadSqueakReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadSqueakReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadSqueakReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadSqueakReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDownloadResult();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.DownloadResult.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DownloadResult download_result = 1;\n * @return {?proto.squeaknode.DownloadResult}\n */\nproto.squeaknode.DownloadSqueakReply.prototype.getDownloadResult = function() {\n  return /** @type{?proto.squeaknode.DownloadResult} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.DownloadResult, 1));\n};\n\n\n/** @param {?proto.squeaknode.DownloadResult|undefined} value */\nproto.squeaknode.DownloadSqueakReply.prototype.setDownloadResult = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.DownloadSqueakReply.prototype.clearDownloadResult = function() {\n  this.setDownloadResult(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.DownloadSqueakReply.prototype.hasDownloadResult = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadOffersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadOffersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadOffersRequest.displayName = 'proto.squeaknode.DownloadOffersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadOffersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadOffersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadOffersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadOffersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadOffersRequest}\n */\nproto.squeaknode.DownloadOffersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadOffersRequest;\n  return proto.squeaknode.DownloadOffersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadOffersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadOffersRequest}\n */\nproto.squeaknode.DownloadOffersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadOffersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadOffersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadOffersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadOffersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.DownloadOffersRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.DownloadOffersRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadOffersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadOffersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadOffersReply.displayName = 'proto.squeaknode.DownloadOffersReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadOffersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadOffersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadOffersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadOffersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    downloadResult: (f = msg.getDownloadResult()) && proto.squeaknode.DownloadResult.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadOffersReply}\n */\nproto.squeaknode.DownloadOffersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadOffersReply;\n  return proto.squeaknode.DownloadOffersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadOffersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadOffersReply}\n */\nproto.squeaknode.DownloadOffersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.DownloadResult;\n      reader.readMessage(value,proto.squeaknode.DownloadResult.deserializeBinaryFromReader);\n      msg.setDownloadResult(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadOffersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadOffersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadOffersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadOffersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDownloadResult();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.DownloadResult.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DownloadResult download_result = 1;\n * @return {?proto.squeaknode.DownloadResult}\n */\nproto.squeaknode.DownloadOffersReply.prototype.getDownloadResult = function() {\n  return /** @type{?proto.squeaknode.DownloadResult} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.DownloadResult, 1));\n};\n\n\n/** @param {?proto.squeaknode.DownloadResult|undefined} value */\nproto.squeaknode.DownloadOffersReply.prototype.setDownloadResult = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.DownloadOffersReply.prototype.clearDownloadResult = function() {\n  this.setDownloadResult(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.DownloadOffersReply.prototype.hasDownloadResult = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadRepliesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadRepliesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadRepliesRequest.displayName = 'proto.squeaknode.DownloadRepliesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadRepliesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadRepliesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadRepliesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadRepliesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadRepliesRequest}\n */\nproto.squeaknode.DownloadRepliesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadRepliesRequest;\n  return proto.squeaknode.DownloadRepliesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadRepliesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadRepliesRequest}\n */\nproto.squeaknode.DownloadRepliesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadRepliesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadRepliesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadRepliesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadRepliesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.DownloadRepliesRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.DownloadRepliesRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadRepliesReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadRepliesReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadRepliesReply.displayName = 'proto.squeaknode.DownloadRepliesReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadRepliesReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadRepliesReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadRepliesReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadRepliesReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    downloadResult: (f = msg.getDownloadResult()) && proto.squeaknode.DownloadResult.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadRepliesReply}\n */\nproto.squeaknode.DownloadRepliesReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadRepliesReply;\n  return proto.squeaknode.DownloadRepliesReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadRepliesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadRepliesReply}\n */\nproto.squeaknode.DownloadRepliesReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.DownloadResult;\n      reader.readMessage(value,proto.squeaknode.DownloadResult.deserializeBinaryFromReader);\n      msg.setDownloadResult(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadRepliesReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadRepliesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadRepliesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadRepliesReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDownloadResult();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.DownloadResult.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DownloadResult download_result = 1;\n * @return {?proto.squeaknode.DownloadResult}\n */\nproto.squeaknode.DownloadRepliesReply.prototype.getDownloadResult = function() {\n  return /** @type{?proto.squeaknode.DownloadResult} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.DownloadResult, 1));\n};\n\n\n/** @param {?proto.squeaknode.DownloadResult|undefined} value */\nproto.squeaknode.DownloadRepliesReply.prototype.setDownloadResult = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.DownloadRepliesReply.prototype.clearDownloadResult = function() {\n  this.setDownloadResult(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.DownloadRepliesReply.prototype.hasDownloadResult = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadPubKeySqueaksRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadPubKeySqueaksRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadPubKeySqueaksRequest.displayName = 'proto.squeaknode.DownloadPubKeySqueaksRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadPubKeySqueaksRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadPubKeySqueaksRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadPubKeySqueaksRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadPubKeySqueaksRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubkey: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadPubKeySqueaksRequest}\n */\nproto.squeaknode.DownloadPubKeySqueaksRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadPubKeySqueaksRequest;\n  return proto.squeaknode.DownloadPubKeySqueaksRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadPubKeySqueaksRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadPubKeySqueaksRequest}\n */\nproto.squeaknode.DownloadPubKeySqueaksRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubkey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadPubKeySqueaksRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadPubKeySqueaksRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadPubKeySqueaksRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadPubKeySqueaksRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pubkey = 1;\n * @return {string}\n */\nproto.squeaknode.DownloadPubKeySqueaksRequest.prototype.getPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.DownloadPubKeySqueaksRequest.prototype.setPubkey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DownloadPubKeySqueaksReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DownloadPubKeySqueaksReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DownloadPubKeySqueaksReply.displayName = 'proto.squeaknode.DownloadPubKeySqueaksReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DownloadPubKeySqueaksReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DownloadPubKeySqueaksReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DownloadPubKeySqueaksReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadPubKeySqueaksReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    downloadResult: (f = msg.getDownloadResult()) && proto.squeaknode.DownloadResult.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DownloadPubKeySqueaksReply}\n */\nproto.squeaknode.DownloadPubKeySqueaksReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DownloadPubKeySqueaksReply;\n  return proto.squeaknode.DownloadPubKeySqueaksReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DownloadPubKeySqueaksReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DownloadPubKeySqueaksReply}\n */\nproto.squeaknode.DownloadPubKeySqueaksReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.DownloadResult;\n      reader.readMessage(value,proto.squeaknode.DownloadResult.deserializeBinaryFromReader);\n      msg.setDownloadResult(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DownloadPubKeySqueaksReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DownloadPubKeySqueaksReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DownloadPubKeySqueaksReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DownloadPubKeySqueaksReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDownloadResult();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.DownloadResult.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DownloadResult download_result = 1;\n * @return {?proto.squeaknode.DownloadResult}\n */\nproto.squeaknode.DownloadPubKeySqueaksReply.prototype.getDownloadResult = function() {\n  return /** @type{?proto.squeaknode.DownloadResult} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.DownloadResult, 1));\n};\n\n\n/** @param {?proto.squeaknode.DownloadResult|undefined} value */\nproto.squeaknode.DownloadPubKeySqueaksReply.prototype.setDownloadResult = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.DownloadPubKeySqueaksReply.prototype.clearDownloadResult = function() {\n  this.setDownloadResult(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.DownloadPubKeySqueaksReply.prototype.hasDownloadResult = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentOffersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSentOffersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentOffersRequest.displayName = 'proto.squeaknode.GetSentOffersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentOffersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentOffersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentOffersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentOffersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentOffersRequest}\n */\nproto.squeaknode.GetSentOffersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentOffersRequest;\n  return proto.squeaknode.GetSentOffersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentOffersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentOffersRequest}\n */\nproto.squeaknode.GetSentOffersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentOffersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentOffersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentOffersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentOffersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentOffersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetSentOffersReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetSentOffersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentOffersReply.displayName = 'proto.squeaknode.GetSentOffersReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetSentOffersReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentOffersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentOffersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentOffersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentOffersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentOffersList: jspb.Message.toObjectList(msg.getSentOffersList(),\n    proto.squeaknode.SentOffer.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentOffersReply}\n */\nproto.squeaknode.GetSentOffersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentOffersReply;\n  return proto.squeaknode.GetSentOffersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentOffersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentOffersReply}\n */\nproto.squeaknode.GetSentOffersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SentOffer;\n      reader.readMessage(value,proto.squeaknode.SentOffer.deserializeBinaryFromReader);\n      msg.addSentOffers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentOffersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentOffersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentOffersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentOffersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentOffersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SentOffer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SentOffer sent_offers = 1;\n * @return {!Array.<!proto.squeaknode.SentOffer>}\n */\nproto.squeaknode.GetSentOffersReply.prototype.getSentOffersList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SentOffer>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SentOffer, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SentOffer>} value */\nproto.squeaknode.GetSentOffersReply.prototype.setSentOffersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SentOffer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SentOffer}\n */\nproto.squeaknode.GetSentOffersReply.prototype.addSentOffers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SentOffer, opt_index);\n};\n\n\nproto.squeaknode.GetSentOffersReply.prototype.clearSentOffersList = function() {\n  this.setSentOffersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SentOffer = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SentOffer, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SentOffer.displayName = 'proto.squeaknode.SentOffer';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SentOffer.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SentOffer.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SentOffer} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SentOffer.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentOfferId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    priceMsat: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SentOffer}\n */\nproto.squeaknode.SentOffer.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SentOffer;\n  return proto.squeaknode.SentOffer.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SentOffer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SentOffer}\n */\nproto.squeaknode.SentOffer.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSentOfferId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPriceMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SentOffer.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SentOffer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SentOffer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SentOffer.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentOfferId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 sent_offer_id = 1;\n * @return {number}\n */\nproto.squeaknode.SentOffer.prototype.getSentOfferId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentOffer.prototype.setSentOfferId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string squeak_hash = 2;\n * @return {string}\n */\nproto.squeaknode.SentOffer.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentOffer.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string payment_hash = 3;\n * @return {string}\n */\nproto.squeaknode.SentOffer.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentOffer.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 price_msat = 4;\n * @return {number}\n */\nproto.squeaknode.SentOffer.prototype.getPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentOffer.prototype.setPriceMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetReceivedPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetReceivedPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetReceivedPaymentsRequest.displayName = 'proto.squeaknode.GetReceivedPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetReceivedPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetReceivedPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReceivedPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    lastReceivedPayment: (f = msg.getLastReceivedPayment()) && proto.squeaknode.ReceivedPayment.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetReceivedPaymentsRequest}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetReceivedPaymentsRequest;\n  return proto.squeaknode.GetReceivedPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetReceivedPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetReceivedPaymentsRequest}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLimit(value);\n      break;\n    case 2:\n      var value = new proto.squeaknode.ReceivedPayment;\n      reader.readMessage(value,proto.squeaknode.ReceivedPayment.deserializeBinaryFromReader);\n      msg.setLastReceivedPayment(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetReceivedPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetReceivedPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReceivedPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getLastReceivedPayment();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.squeaknode.ReceivedPayment.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 limit = 1;\n * @return {number}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetReceivedPaymentsRequest.prototype.setLimit = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional ReceivedPayment last_received_payment = 2;\n * @return {?proto.squeaknode.ReceivedPayment}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.prototype.getLastReceivedPayment = function() {\n  return /** @type{?proto.squeaknode.ReceivedPayment} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.ReceivedPayment, 2));\n};\n\n\n/** @param {?proto.squeaknode.ReceivedPayment|undefined} value */\nproto.squeaknode.GetReceivedPaymentsRequest.prototype.setLastReceivedPayment = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.squeaknode.GetReceivedPaymentsRequest.prototype.clearLastReceivedPayment = function() {\n  this.setLastReceivedPayment(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.prototype.hasLastReceivedPayment = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetReceivedPaymentsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetReceivedPaymentsReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetReceivedPaymentsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetReceivedPaymentsReply.displayName = 'proto.squeaknode.GetReceivedPaymentsReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetReceivedPaymentsReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetReceivedPaymentsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetReceivedPaymentsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReceivedPaymentsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    receivedPaymentsList: jspb.Message.toObjectList(msg.getReceivedPaymentsList(),\n    proto.squeaknode.ReceivedPayment.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetReceivedPaymentsReply}\n */\nproto.squeaknode.GetReceivedPaymentsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetReceivedPaymentsReply;\n  return proto.squeaknode.GetReceivedPaymentsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetReceivedPaymentsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetReceivedPaymentsReply}\n */\nproto.squeaknode.GetReceivedPaymentsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.ReceivedPayment;\n      reader.readMessage(value,proto.squeaknode.ReceivedPayment.deserializeBinaryFromReader);\n      msg.addReceivedPayments(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetReceivedPaymentsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetReceivedPaymentsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReceivedPaymentsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getReceivedPaymentsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.ReceivedPayment.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ReceivedPayment received_payments = 1;\n * @return {!Array.<!proto.squeaknode.ReceivedPayment>}\n */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.getReceivedPaymentsList = function() {\n  return /** @type{!Array.<!proto.squeaknode.ReceivedPayment>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.ReceivedPayment, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.ReceivedPayment>} value */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.setReceivedPaymentsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.ReceivedPayment=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.ReceivedPayment}\n */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.addReceivedPayments = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.ReceivedPayment, opt_index);\n};\n\n\nproto.squeaknode.GetReceivedPaymentsReply.prototype.clearReceivedPaymentsList = function() {\n  this.setReceivedPaymentsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ReceivedPayment = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ReceivedPayment, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ReceivedPayment.displayName = 'proto.squeaknode.ReceivedPayment';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ReceivedPayment.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ReceivedPayment.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ReceivedPayment} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ReceivedPayment.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    receivedPaymentId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    priceMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    timeMs: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ReceivedPayment}\n */\nproto.squeaknode.ReceivedPayment.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ReceivedPayment;\n  return proto.squeaknode.ReceivedPayment.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ReceivedPayment} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ReceivedPayment}\n */\nproto.squeaknode.ReceivedPayment.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setReceivedPaymentId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPriceMsat(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimeMs(value);\n      break;\n    case 6:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ReceivedPayment.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ReceivedPayment.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ReceivedPayment} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ReceivedPayment.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getReceivedPaymentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getTimeMs();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 received_payment_id = 1;\n * @return {number}\n */\nproto.squeaknode.ReceivedPayment.prototype.getReceivedPaymentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ReceivedPayment.prototype.setReceivedPaymentId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string squeak_hash = 2;\n * @return {string}\n */\nproto.squeaknode.ReceivedPayment.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.ReceivedPayment.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string payment_hash = 3;\n * @return {string}\n */\nproto.squeaknode.ReceivedPayment.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.ReceivedPayment.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 price_msat = 4;\n * @return {number}\n */\nproto.squeaknode.ReceivedPayment.prototype.getPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ReceivedPayment.prototype.setPriceMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 time_ms = 5;\n * @return {number}\n */\nproto.squeaknode.ReceivedPayment.prototype.getTimeMs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ReceivedPayment.prototype.setTimeMs = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional PeerAddress peer_address = 6;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.ReceivedPayment.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 6));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.ReceivedPayment.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 6, value);\n};\n\n\nproto.squeaknode.ReceivedPayment.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.ReceivedPayment.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeReceivedPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeReceivedPaymentsRequest.displayName = 'proto.squeaknode.SubscribeReceivedPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeReceivedPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeReceivedPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentIndex: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeReceivedPaymentsRequest}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeReceivedPaymentsRequest;\n  return proto.squeaknode.SubscribeReceivedPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeReceivedPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeReceivedPaymentsRequest}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPaymentIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeReceivedPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeReceivedPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentIndex();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 payment_index = 1;\n * @return {number}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.prototype.getPaymentIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.prototype.setPaymentIndex = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetNetworkRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetNetworkRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetNetworkRequest.displayName = 'proto.squeaknode.GetNetworkRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetNetworkRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetNetworkRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetNetworkRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetNetworkRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetNetworkRequest}\n */\nproto.squeaknode.GetNetworkRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetNetworkRequest;\n  return proto.squeaknode.GetNetworkRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetNetworkRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetNetworkRequest}\n */\nproto.squeaknode.GetNetworkRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetNetworkRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetNetworkRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetNetworkRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetNetworkRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetNetworkReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetNetworkReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetNetworkReply.displayName = 'proto.squeaknode.GetNetworkReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetNetworkReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetNetworkReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetNetworkReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetNetworkReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    network: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetNetworkReply}\n */\nproto.squeaknode.GetNetworkReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetNetworkReply;\n  return proto.squeaknode.GetNetworkReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetNetworkReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetNetworkReply}\n */\nproto.squeaknode.GetNetworkReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNetwork(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetNetworkReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetNetworkReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetNetworkReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetNetworkReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNetwork();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string network = 1;\n * @return {string}\n */\nproto.squeaknode.GetNetworkReply.prototype.getNetwork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetNetworkReply.prototype.setNetwork = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPaymentSummaryRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPaymentSummaryRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPaymentSummaryRequest.displayName = 'proto.squeaknode.GetPaymentSummaryRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPaymentSummaryRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPaymentSummaryRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPaymentSummaryRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPaymentSummaryRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPaymentSummaryRequest}\n */\nproto.squeaknode.GetPaymentSummaryRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPaymentSummaryRequest;\n  return proto.squeaknode.GetPaymentSummaryRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPaymentSummaryRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPaymentSummaryRequest}\n */\nproto.squeaknode.GetPaymentSummaryRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPaymentSummaryRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPaymentSummaryRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPaymentSummaryRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPaymentSummaryRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPaymentSummaryReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPaymentSummaryReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPaymentSummaryReply.displayName = 'proto.squeaknode.GetPaymentSummaryReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPaymentSummaryReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPaymentSummaryReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPaymentSummaryReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPaymentSummaryReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentSummary: (f = msg.getPaymentSummary()) && proto.squeaknode.PaymentSummary.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPaymentSummaryReply}\n */\nproto.squeaknode.GetPaymentSummaryReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPaymentSummaryReply;\n  return proto.squeaknode.GetPaymentSummaryReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPaymentSummaryReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPaymentSummaryReply}\n */\nproto.squeaknode.GetPaymentSummaryReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PaymentSummary;\n      reader.readMessage(value,proto.squeaknode.PaymentSummary.deserializeBinaryFromReader);\n      msg.setPaymentSummary(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPaymentSummaryReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPaymentSummaryReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPaymentSummaryReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPaymentSummaryReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentSummary();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PaymentSummary.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PaymentSummary payment_summary = 1;\n * @return {?proto.squeaknode.PaymentSummary}\n */\nproto.squeaknode.GetPaymentSummaryReply.prototype.getPaymentSummary = function() {\n  return /** @type{?proto.squeaknode.PaymentSummary} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PaymentSummary, 1));\n};\n\n\n/** @param {?proto.squeaknode.PaymentSummary|undefined} value */\nproto.squeaknode.GetPaymentSummaryReply.prototype.setPaymentSummary = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetPaymentSummaryReply.prototype.clearPaymentSummary = function() {\n  this.setPaymentSummary(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetPaymentSummaryReply.prototype.hasPaymentSummary = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.PaymentSummary = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.PaymentSummary, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.PaymentSummary.displayName = 'proto.squeaknode.PaymentSummary';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.PaymentSummary.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.PaymentSummary.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.PaymentSummary} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PaymentSummary.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    numReceivedPayments: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    numSentPayments: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    amountEarnedMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    amountSpentMsat: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.PaymentSummary}\n */\nproto.squeaknode.PaymentSummary.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.PaymentSummary;\n  return proto.squeaknode.PaymentSummary.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.PaymentSummary} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.PaymentSummary}\n */\nproto.squeaknode.PaymentSummary.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumReceivedPayments(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumSentPayments(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmountEarnedMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmountSpentMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.PaymentSummary.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.PaymentSummary.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.PaymentSummary} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PaymentSummary.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNumReceivedPayments();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getNumSentPayments();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getAmountEarnedMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getAmountSpentMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 num_received_payments = 1;\n * @return {number}\n */\nproto.squeaknode.PaymentSummary.prototype.getNumReceivedPayments = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PaymentSummary.prototype.setNumReceivedPayments = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 num_sent_payments = 2;\n * @return {number}\n */\nproto.squeaknode.PaymentSummary.prototype.getNumSentPayments = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PaymentSummary.prototype.setNumSentPayments = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amount_earned_msat = 3;\n * @return {number}\n */\nproto.squeaknode.PaymentSummary.prototype.getAmountEarnedMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PaymentSummary.prototype.setAmountEarnedMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 amount_spent_msat = 4;\n * @return {number}\n */\nproto.squeaknode.PaymentSummary.prototype.getAmountSpentMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PaymentSummary.prototype.setAmountSpentMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ReprocessReceivedPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ReprocessReceivedPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ReprocessReceivedPaymentsRequest.displayName = 'proto.squeaknode.ReprocessReceivedPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ReprocessReceivedPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ReprocessReceivedPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ReprocessReceivedPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ReprocessReceivedPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ReprocessReceivedPaymentsRequest}\n */\nproto.squeaknode.ReprocessReceivedPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ReprocessReceivedPaymentsRequest;\n  return proto.squeaknode.ReprocessReceivedPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ReprocessReceivedPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ReprocessReceivedPaymentsRequest}\n */\nproto.squeaknode.ReprocessReceivedPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ReprocessReceivedPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ReprocessReceivedPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ReprocessReceivedPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ReprocessReceivedPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ReprocessReceivedPaymentsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ReprocessReceivedPaymentsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ReprocessReceivedPaymentsReply.displayName = 'proto.squeaknode.ReprocessReceivedPaymentsReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ReprocessReceivedPaymentsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ReprocessReceivedPaymentsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ReprocessReceivedPaymentsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ReprocessReceivedPaymentsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ReprocessReceivedPaymentsReply}\n */\nproto.squeaknode.ReprocessReceivedPaymentsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ReprocessReceivedPaymentsReply;\n  return proto.squeaknode.ReprocessReceivedPaymentsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ReprocessReceivedPaymentsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ReprocessReceivedPaymentsReply}\n */\nproto.squeaknode.ReprocessReceivedPaymentsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ReprocessReceivedPaymentsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ReprocessReceivedPaymentsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ReprocessReceivedPaymentsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ReprocessReceivedPaymentsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.LikeSqueakRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.LikeSqueakRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.LikeSqueakRequest.displayName = 'proto.squeaknode.LikeSqueakRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.LikeSqueakRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.LikeSqueakRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.LikeSqueakRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LikeSqueakRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.LikeSqueakRequest}\n */\nproto.squeaknode.LikeSqueakRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.LikeSqueakRequest;\n  return proto.squeaknode.LikeSqueakRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.LikeSqueakRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.LikeSqueakRequest}\n */\nproto.squeaknode.LikeSqueakRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.LikeSqueakRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.LikeSqueakRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.LikeSqueakRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LikeSqueakRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.LikeSqueakRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.LikeSqueakRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.LikeSqueakReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.LikeSqueakReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.LikeSqueakReply.displayName = 'proto.squeaknode.LikeSqueakReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.LikeSqueakReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.LikeSqueakReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.LikeSqueakReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LikeSqueakReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.LikeSqueakReply}\n */\nproto.squeaknode.LikeSqueakReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.LikeSqueakReply;\n  return proto.squeaknode.LikeSqueakReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.LikeSqueakReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.LikeSqueakReply}\n */\nproto.squeaknode.LikeSqueakReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.LikeSqueakReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.LikeSqueakReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.LikeSqueakReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LikeSqueakReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.UnlikeSqueakRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.UnlikeSqueakRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.UnlikeSqueakRequest.displayName = 'proto.squeaknode.UnlikeSqueakRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.UnlikeSqueakRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.UnlikeSqueakRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.UnlikeSqueakRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.UnlikeSqueakRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.UnlikeSqueakRequest}\n */\nproto.squeaknode.UnlikeSqueakRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.UnlikeSqueakRequest;\n  return proto.squeaknode.UnlikeSqueakRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.UnlikeSqueakRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.UnlikeSqueakRequest}\n */\nproto.squeaknode.UnlikeSqueakRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.UnlikeSqueakRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.UnlikeSqueakRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.UnlikeSqueakRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.UnlikeSqueakRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.UnlikeSqueakRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.UnlikeSqueakRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.UnlikeSqueakReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.UnlikeSqueakReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.UnlikeSqueakReply.displayName = 'proto.squeaknode.UnlikeSqueakReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.UnlikeSqueakReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.UnlikeSqueakReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.UnlikeSqueakReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.UnlikeSqueakReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.UnlikeSqueakReply}\n */\nproto.squeaknode.UnlikeSqueakReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.UnlikeSqueakReply;\n  return proto.squeaknode.UnlikeSqueakReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.UnlikeSqueakReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.UnlikeSqueakReply}\n */\nproto.squeaknode.UnlikeSqueakReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.UnlikeSqueakReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.UnlikeSqueakReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.UnlikeSqueakReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.UnlikeSqueakReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetLikedSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetLikedSqueakDisplaysRequest.displayName = 'proto.squeaknode.GetLikedSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetLikedSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetLikedSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    lastEntry: (f = msg.getLastEntry()) && proto.squeaknode.SqueakDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetLikedSqueakDisplaysRequest}\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetLikedSqueakDisplaysRequest;\n  return proto.squeaknode.GetLikedSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetLikedSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetLikedSqueakDisplaysRequest}\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setLimit(value);\n      break;\n    case 2:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.setLastEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetLikedSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetLikedSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getLastEntry();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 limit = 1;\n * @return {number}\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.setLimit = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional SqueakDisplayEntry last_entry = 2;\n * @return {?proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.getLastEntry = function() {\n  return /** @type{?proto.squeaknode.SqueakDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 2));\n};\n\n\n/** @param {?proto.squeaknode.SqueakDisplayEntry|undefined} value */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.setLastEntry = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.clearLastEntry = function() {\n  this.setLastEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetLikedSqueakDisplaysRequest.prototype.hasLastEntry = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetLikedSqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetLikedSqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetLikedSqueakDisplaysReply.displayName = 'proto.squeaknode.GetLikedSqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetLikedSqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetLikedSqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetLikedSqueakDisplaysReply}\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetLikedSqueakDisplaysReply;\n  return proto.squeaknode.GetLikedSqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetLikedSqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetLikedSqueakDisplaysReply}\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetLikedSqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetLikedSqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetLikedSqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetLikedSqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetLikedSqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ConnectPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ConnectPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ConnectPeerRequest.displayName = 'proto.squeaknode.ConnectPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ConnectPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ConnectPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ConnectPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ConnectPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ConnectPeerRequest}\n */\nproto.squeaknode.ConnectPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ConnectPeerRequest;\n  return proto.squeaknode.ConnectPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ConnectPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ConnectPeerRequest}\n */\nproto.squeaknode.ConnectPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ConnectPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ConnectPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ConnectPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ConnectPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress peer_address = 1;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.ConnectPeerRequest.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 1));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.ConnectPeerRequest.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.ConnectPeerRequest.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.ConnectPeerRequest.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ConnectPeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ConnectPeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ConnectPeerReply.displayName = 'proto.squeaknode.ConnectPeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ConnectPeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ConnectPeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ConnectPeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ConnectPeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ConnectPeerReply}\n */\nproto.squeaknode.ConnectPeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ConnectPeerReply;\n  return proto.squeaknode.ConnectPeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ConnectPeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ConnectPeerReply}\n */\nproto.squeaknode.ConnectPeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ConnectPeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ConnectPeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ConnectPeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ConnectPeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ConnectedPeer = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ConnectedPeer, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ConnectedPeer.displayName = 'proto.squeaknode.ConnectedPeer';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ConnectedPeer.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ConnectedPeer.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ConnectedPeer} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ConnectedPeer.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f),\n    connectTimeS: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    lastMessageReceivedTimeS: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    numberMessagesReceived: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    numberBytesReceived: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    numberMessagesSent: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    numberBytesSent: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    isPeerSaved: jspb.Message.getFieldWithDefault(msg, 8, false),\n    savedPeer: (f = msg.getSavedPeer()) && proto.squeaknode.SqueakPeer.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ConnectedPeer}\n */\nproto.squeaknode.ConnectedPeer.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ConnectedPeer;\n  return proto.squeaknode.ConnectedPeer.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ConnectedPeer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ConnectedPeer}\n */\nproto.squeaknode.ConnectedPeer.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setConnectTimeS(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLastMessageReceivedTimeS(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumberMessagesReceived(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumberBytesReceived(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumberMessagesSent(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumberBytesSent(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsPeerSaved(value);\n      break;\n    case 9:\n      var value = new proto.squeaknode.SqueakPeer;\n      reader.readMessage(value,proto.squeaknode.SqueakPeer.deserializeBinaryFromReader);\n      msg.setSavedPeer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ConnectedPeer.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ConnectedPeer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ConnectedPeer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ConnectedPeer.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n  f = message.getConnectTimeS();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getLastMessageReceivedTimeS();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getNumberMessagesReceived();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getNumberBytesReceived();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getNumberMessagesSent();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getNumberBytesSent();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getIsPeerSaved();\n  if (f) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n  f = message.getSavedPeer();\n  if (f != null) {\n    writer.writeMessage(\n      9,\n      f,\n      proto.squeaknode.SqueakPeer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress peer_address = 1;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.ConnectedPeer.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 1));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.ConnectedPeer.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.ConnectedPeer.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.ConnectedPeer.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 connect_time_s = 2;\n * @return {number}\n */\nproto.squeaknode.ConnectedPeer.prototype.getConnectTimeS = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ConnectedPeer.prototype.setConnectTimeS = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 last_message_received_time_s = 3;\n * @return {number}\n */\nproto.squeaknode.ConnectedPeer.prototype.getLastMessageReceivedTimeS = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ConnectedPeer.prototype.setLastMessageReceivedTimeS = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 number_messages_received = 4;\n * @return {number}\n */\nproto.squeaknode.ConnectedPeer.prototype.getNumberMessagesReceived = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ConnectedPeer.prototype.setNumberMessagesReceived = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 number_bytes_received = 5;\n * @return {number}\n */\nproto.squeaknode.ConnectedPeer.prototype.getNumberBytesReceived = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ConnectedPeer.prototype.setNumberBytesReceived = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 number_messages_sent = 6;\n * @return {number}\n */\nproto.squeaknode.ConnectedPeer.prototype.getNumberMessagesSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ConnectedPeer.prototype.setNumberMessagesSent = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 number_bytes_sent = 7;\n * @return {number}\n */\nproto.squeaknode.ConnectedPeer.prototype.getNumberBytesSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ConnectedPeer.prototype.setNumberBytesSent = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional bool is_peer_saved = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.ConnectedPeer.prototype.getIsPeerSaved = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.ConnectedPeer.prototype.setIsPeerSaved = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional SqueakPeer saved_peer = 9;\n * @return {?proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.ConnectedPeer.prototype.getSavedPeer = function() {\n  return /** @type{?proto.squeaknode.SqueakPeer} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakPeer, 9));\n};\n\n\n/** @param {?proto.squeaknode.SqueakPeer|undefined} value */\nproto.squeaknode.ConnectedPeer.prototype.setSavedPeer = function(value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n\n\nproto.squeaknode.ConnectedPeer.prototype.clearSavedPeer = function() {\n  this.setSavedPeer(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.ConnectedPeer.prototype.hasSavedPeer = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetConnectedPeersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetConnectedPeersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetConnectedPeersRequest.displayName = 'proto.squeaknode.GetConnectedPeersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetConnectedPeersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetConnectedPeersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetConnectedPeersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetConnectedPeersRequest}\n */\nproto.squeaknode.GetConnectedPeersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetConnectedPeersRequest;\n  return proto.squeaknode.GetConnectedPeersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetConnectedPeersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetConnectedPeersRequest}\n */\nproto.squeaknode.GetConnectedPeersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetConnectedPeersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetConnectedPeersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetConnectedPeersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetConnectedPeersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetConnectedPeersReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetConnectedPeersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetConnectedPeersReply.displayName = 'proto.squeaknode.GetConnectedPeersReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetConnectedPeersReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetConnectedPeersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetConnectedPeersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetConnectedPeersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    connectedPeersList: jspb.Message.toObjectList(msg.getConnectedPeersList(),\n    proto.squeaknode.ConnectedPeer.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetConnectedPeersReply}\n */\nproto.squeaknode.GetConnectedPeersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetConnectedPeersReply;\n  return proto.squeaknode.GetConnectedPeersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetConnectedPeersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetConnectedPeersReply}\n */\nproto.squeaknode.GetConnectedPeersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.ConnectedPeer;\n      reader.readMessage(value,proto.squeaknode.ConnectedPeer.deserializeBinaryFromReader);\n      msg.addConnectedPeers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetConnectedPeersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetConnectedPeersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetConnectedPeersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConnectedPeersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.ConnectedPeer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ConnectedPeer connected_peers = 1;\n * @return {!Array.<!proto.squeaknode.ConnectedPeer>}\n */\nproto.squeaknode.GetConnectedPeersReply.prototype.getConnectedPeersList = function() {\n  return /** @type{!Array.<!proto.squeaknode.ConnectedPeer>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.ConnectedPeer, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.ConnectedPeer>} value */\nproto.squeaknode.GetConnectedPeersReply.prototype.setConnectedPeersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.ConnectedPeer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.ConnectedPeer}\n */\nproto.squeaknode.GetConnectedPeersReply.prototype.addConnectedPeers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.ConnectedPeer, opt_index);\n};\n\n\nproto.squeaknode.GetConnectedPeersReply.prototype.clearConnectedPeersList = function() {\n  this.setConnectedPeersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetConnectedPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetConnectedPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetConnectedPeerRequest.displayName = 'proto.squeaknode.GetConnectedPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetConnectedPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetConnectedPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetConnectedPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetConnectedPeerRequest}\n */\nproto.squeaknode.GetConnectedPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetConnectedPeerRequest;\n  return proto.squeaknode.GetConnectedPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetConnectedPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetConnectedPeerRequest}\n */\nproto.squeaknode.GetConnectedPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetConnectedPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetConnectedPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetConnectedPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress peer_address = 1;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.GetConnectedPeerRequest.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 1));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.GetConnectedPeerRequest.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetConnectedPeerRequest.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetConnectedPeerRequest.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetConnectedPeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetConnectedPeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetConnectedPeerReply.displayName = 'proto.squeaknode.GetConnectedPeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetConnectedPeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetConnectedPeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetConnectedPeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    connectedPeer: (f = msg.getConnectedPeer()) && proto.squeaknode.ConnectedPeer.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetConnectedPeerReply}\n */\nproto.squeaknode.GetConnectedPeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetConnectedPeerReply;\n  return proto.squeaknode.GetConnectedPeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetConnectedPeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetConnectedPeerReply}\n */\nproto.squeaknode.GetConnectedPeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.ConnectedPeer;\n      reader.readMessage(value,proto.squeaknode.ConnectedPeer.deserializeBinaryFromReader);\n      msg.setConnectedPeer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetConnectedPeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetConnectedPeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetConnectedPeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetConnectedPeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConnectedPeer();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.ConnectedPeer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ConnectedPeer connected_peer = 1;\n * @return {?proto.squeaknode.ConnectedPeer}\n */\nproto.squeaknode.GetConnectedPeerReply.prototype.getConnectedPeer = function() {\n  return /** @type{?proto.squeaknode.ConnectedPeer} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.ConnectedPeer, 1));\n};\n\n\n/** @param {?proto.squeaknode.ConnectedPeer|undefined} value */\nproto.squeaknode.GetConnectedPeerReply.prototype.setConnectedPeer = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetConnectedPeerReply.prototype.clearConnectedPeer = function() {\n  this.setConnectedPeer(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetConnectedPeerReply.prototype.hasConnectedPeer = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DisconnectPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DisconnectPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DisconnectPeerRequest.displayName = 'proto.squeaknode.DisconnectPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DisconnectPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DisconnectPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DisconnectPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DisconnectPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DisconnectPeerRequest}\n */\nproto.squeaknode.DisconnectPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DisconnectPeerRequest;\n  return proto.squeaknode.DisconnectPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DisconnectPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DisconnectPeerRequest}\n */\nproto.squeaknode.DisconnectPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DisconnectPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DisconnectPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DisconnectPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DisconnectPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress peer_address = 1;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.DisconnectPeerRequest.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 1));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.DisconnectPeerRequest.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.DisconnectPeerRequest.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.DisconnectPeerRequest.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DisconnectPeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DisconnectPeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DisconnectPeerReply.displayName = 'proto.squeaknode.DisconnectPeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DisconnectPeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DisconnectPeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DisconnectPeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DisconnectPeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DisconnectPeerReply}\n */\nproto.squeaknode.DisconnectPeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DisconnectPeerReply;\n  return proto.squeaknode.DisconnectPeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DisconnectPeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DisconnectPeerReply}\n */\nproto.squeaknode.DisconnectPeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DisconnectPeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DisconnectPeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DisconnectPeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DisconnectPeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeConnectedPeersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeConnectedPeersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeConnectedPeersRequest.displayName = 'proto.squeaknode.SubscribeConnectedPeersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeConnectedPeersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeConnectedPeersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeConnectedPeersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeConnectedPeersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeConnectedPeersRequest}\n */\nproto.squeaknode.SubscribeConnectedPeersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeConnectedPeersRequest;\n  return proto.squeaknode.SubscribeConnectedPeersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeConnectedPeersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeConnectedPeersRequest}\n */\nproto.squeaknode.SubscribeConnectedPeersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeConnectedPeersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeConnectedPeersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeConnectedPeersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeConnectedPeersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeConnectedPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeConnectedPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeConnectedPeerRequest.displayName = 'proto.squeaknode.SubscribeConnectedPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeConnectedPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeConnectedPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeConnectedPeerRequest}\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeConnectedPeerRequest;\n  return proto.squeaknode.SubscribeConnectedPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeConnectedPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeConnectedPeerRequest}\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeConnectedPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeConnectedPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress peer_address = 1;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 1));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.SubscribeConnectedPeerRequest.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.SubscribeConnectedPeerRequest.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.SubscribeConnectedPeerRequest.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.PeerAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.PeerAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.PeerAddress.displayName = 'proto.squeaknode.PeerAddress';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.PeerAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.PeerAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.PeerAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PeerAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    network: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    host: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    port: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.PeerAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.PeerAddress;\n  return proto.squeaknode.PeerAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.PeerAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.PeerAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNetwork(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHost(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPort(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.PeerAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.PeerAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.PeerAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PeerAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNetwork();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getHost();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPort();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string network = 1;\n * @return {string}\n */\nproto.squeaknode.PeerAddress.prototype.getNetwork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.PeerAddress.prototype.setNetwork = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string host = 2;\n * @return {string}\n */\nproto.squeaknode.PeerAddress.prototype.getHost = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.PeerAddress.prototype.setHost = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 port = 3;\n * @return {number}\n */\nproto.squeaknode.PeerAddress.prototype.getPort = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PeerAddress.prototype.setPort = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeBuyOffersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeBuyOffersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeBuyOffersRequest.displayName = 'proto.squeaknode.SubscribeBuyOffersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeBuyOffersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeBuyOffersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeBuyOffersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeBuyOffersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeBuyOffersRequest}\n */\nproto.squeaknode.SubscribeBuyOffersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeBuyOffersRequest;\n  return proto.squeaknode.SubscribeBuyOffersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeBuyOffersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeBuyOffersRequest}\n */\nproto.squeaknode.SubscribeBuyOffersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeBuyOffersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeBuyOffersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeBuyOffersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeBuyOffersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.SubscribeBuyOffersRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SubscribeBuyOffersRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeSqueakDisplayRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeSqueakDisplayRequest.displayName = 'proto.squeaknode.SubscribeSqueakDisplayRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeSqueakDisplayRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeSqueakDisplayRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeSqueakDisplayRequest}\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeSqueakDisplayRequest;\n  return proto.squeaknode.SubscribeSqueakDisplayRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeSqueakDisplayRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeSqueakDisplayRequest}\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeSqueakDisplayRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeSqueakDisplayRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.SubscribeSqueakDisplayRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SubscribeSqueakDisplayRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeReplySqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeReplySqueakDisplaysRequest.displayName = 'proto.squeaknode.SubscribeReplySqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeReplySqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeReplySqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeReplySqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeReplySqueakDisplaysRequest;\n  return proto.squeaknode.SubscribeReplySqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeReplySqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeReplySqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeReplySqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeReplySqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SubscribeReplySqueakDisplaysRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribePubKeySqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribePubKeySqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribePubKeySqueakDisplaysRequest.displayName = 'proto.squeaknode.SubscribePubKeySqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribePubKeySqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribePubKeySqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribePubKeySqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribePubKeySqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubkey: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribePubKeySqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribePubKeySqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribePubKeySqueakDisplaysRequest;\n  return proto.squeaknode.SubscribePubKeySqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribePubKeySqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribePubKeySqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribePubKeySqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubkey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribePubKeySqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribePubKeySqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribePubKeySqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribePubKeySqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pubkey = 1;\n * @return {string}\n */\nproto.squeaknode.SubscribePubKeySqueakDisplaysRequest.prototype.getPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SubscribePubKeySqueakDisplaysRequest.prototype.setPubkey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.displayName = 'proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest;\n  return proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeAncestorSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SubscribeAncestorSqueakDisplaysRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeSqueakDisplaysRequest.displayName = 'proto.squeaknode.SubscribeSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeSqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeSqueakDisplaysRequest;\n  return proto.squeaknode.SubscribeSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeSqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeTimelineSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.displayName = 'proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest;\n  return proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest}\n */\nproto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeTimelineSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeTimelineSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetExternalAddressRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetExternalAddressRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetExternalAddressRequest.displayName = 'proto.squeaknode.GetExternalAddressRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetExternalAddressRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetExternalAddressRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetExternalAddressRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetExternalAddressRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetExternalAddressRequest}\n */\nproto.squeaknode.GetExternalAddressRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetExternalAddressRequest;\n  return proto.squeaknode.GetExternalAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetExternalAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetExternalAddressRequest}\n */\nproto.squeaknode.GetExternalAddressRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetExternalAddressRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetExternalAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetExternalAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetExternalAddressRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetExternalAddressReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetExternalAddressReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetExternalAddressReply.displayName = 'proto.squeaknode.GetExternalAddressReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetExternalAddressReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetExternalAddressReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetExternalAddressReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetExternalAddressReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerAddress: (f = msg.getPeerAddress()) && proto.squeaknode.PeerAddress.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetExternalAddressReply}\n */\nproto.squeaknode.GetExternalAddressReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetExternalAddressReply;\n  return proto.squeaknode.GetExternalAddressReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetExternalAddressReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetExternalAddressReply}\n */\nproto.squeaknode.GetExternalAddressReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PeerAddress;\n      reader.readMessage(value,proto.squeaknode.PeerAddress.deserializeBinaryFromReader);\n      msg.setPeerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetExternalAddressReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetExternalAddressReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetExternalAddressReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetExternalAddressReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerAddress();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PeerAddress.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PeerAddress peer_address = 1;\n * @return {?proto.squeaknode.PeerAddress}\n */\nproto.squeaknode.GetExternalAddressReply.prototype.getPeerAddress = function() {\n  return /** @type{?proto.squeaknode.PeerAddress} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PeerAddress, 1));\n};\n\n\n/** @param {?proto.squeaknode.PeerAddress|undefined} value */\nproto.squeaknode.GetExternalAddressReply.prototype.setPeerAddress = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetExternalAddressReply.prototype.clearPeerAddress = function() {\n  this.setPeerAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetExternalAddressReply.prototype.hasPeerAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetDefaultPeerPortRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetDefaultPeerPortRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetDefaultPeerPortRequest.displayName = 'proto.squeaknode.GetDefaultPeerPortRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetDefaultPeerPortRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetDefaultPeerPortRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetDefaultPeerPortRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetDefaultPeerPortRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetDefaultPeerPortRequest}\n */\nproto.squeaknode.GetDefaultPeerPortRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetDefaultPeerPortRequest;\n  return proto.squeaknode.GetDefaultPeerPortRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetDefaultPeerPortRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetDefaultPeerPortRequest}\n */\nproto.squeaknode.GetDefaultPeerPortRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetDefaultPeerPortRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetDefaultPeerPortRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetDefaultPeerPortRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetDefaultPeerPortRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetDefaultPeerPortReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetDefaultPeerPortReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetDefaultPeerPortReply.displayName = 'proto.squeaknode.GetDefaultPeerPortReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetDefaultPeerPortReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetDefaultPeerPortReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetDefaultPeerPortReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetDefaultPeerPortReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    port: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetDefaultPeerPortReply}\n */\nproto.squeaknode.GetDefaultPeerPortReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetDefaultPeerPortReply;\n  return proto.squeaknode.GetDefaultPeerPortReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetDefaultPeerPortReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetDefaultPeerPortReply}\n */\nproto.squeaknode.GetDefaultPeerPortReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPort(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetDefaultPeerPortReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetDefaultPeerPortReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetDefaultPeerPortReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetDefaultPeerPortReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPort();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 port = 1;\n * @return {number}\n */\nproto.squeaknode.GetDefaultPeerPortReply.prototype.getPort = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetDefaultPeerPortReply.prototype.setPort = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSellPriceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSellPriceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSellPriceRequest.displayName = 'proto.squeaknode.SetSellPriceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSellPriceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSellPriceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSellPriceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSellPriceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    priceMsat: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSellPriceRequest}\n */\nproto.squeaknode.SetSellPriceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSellPriceRequest;\n  return proto.squeaknode.SetSellPriceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSellPriceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSellPriceRequest}\n */\nproto.squeaknode.SetSellPriceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPriceMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSellPriceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSellPriceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSellPriceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSellPriceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 price_msat = 1;\n * @return {number}\n */\nproto.squeaknode.SetSellPriceRequest.prototype.getPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetSellPriceRequest.prototype.setPriceMsat = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSellPriceReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSellPriceReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSellPriceReply.displayName = 'proto.squeaknode.SetSellPriceReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSellPriceReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSellPriceReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSellPriceReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSellPriceReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSellPriceReply}\n */\nproto.squeaknode.SetSellPriceReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSellPriceReply;\n  return proto.squeaknode.SetSellPriceReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSellPriceReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSellPriceReply}\n */\nproto.squeaknode.SetSellPriceReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSellPriceReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSellPriceReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSellPriceReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSellPriceReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ClearSellPriceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ClearSellPriceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ClearSellPriceRequest.displayName = 'proto.squeaknode.ClearSellPriceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ClearSellPriceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ClearSellPriceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ClearSellPriceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSellPriceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ClearSellPriceRequest}\n */\nproto.squeaknode.ClearSellPriceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ClearSellPriceRequest;\n  return proto.squeaknode.ClearSellPriceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ClearSellPriceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ClearSellPriceRequest}\n */\nproto.squeaknode.ClearSellPriceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ClearSellPriceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ClearSellPriceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ClearSellPriceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSellPriceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ClearSellPriceReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ClearSellPriceReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ClearSellPriceReply.displayName = 'proto.squeaknode.ClearSellPriceReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ClearSellPriceReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ClearSellPriceReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ClearSellPriceReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSellPriceReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ClearSellPriceReply}\n */\nproto.squeaknode.ClearSellPriceReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ClearSellPriceReply;\n  return proto.squeaknode.ClearSellPriceReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ClearSellPriceReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ClearSellPriceReply}\n */\nproto.squeaknode.ClearSellPriceReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ClearSellPriceReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ClearSellPriceReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ClearSellPriceReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSellPriceReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSellPriceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSellPriceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSellPriceRequest.displayName = 'proto.squeaknode.GetSellPriceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSellPriceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSellPriceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSellPriceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSellPriceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSellPriceRequest}\n */\nproto.squeaknode.GetSellPriceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSellPriceRequest;\n  return proto.squeaknode.GetSellPriceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSellPriceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSellPriceRequest}\n */\nproto.squeaknode.GetSellPriceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSellPriceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSellPriceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSellPriceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSellPriceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSellPriceReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSellPriceReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSellPriceReply.displayName = 'proto.squeaknode.GetSellPriceReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSellPriceReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSellPriceReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSellPriceReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSellPriceReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    priceMsat: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    priceMsatIsSet: jspb.Message.getFieldWithDefault(msg, 2, false),\n    defaultPriceMsat: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSellPriceReply}\n */\nproto.squeaknode.GetSellPriceReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSellPriceReply;\n  return proto.squeaknode.GetSellPriceReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSellPriceReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSellPriceReply}\n */\nproto.squeaknode.GetSellPriceReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPriceMsat(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPriceMsatIsSet(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setDefaultPriceMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSellPriceReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSellPriceReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSellPriceReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSellPriceReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPriceMsatIsSet();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getDefaultPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 price_msat = 1;\n * @return {number}\n */\nproto.squeaknode.GetSellPriceReply.prototype.getPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetSellPriceReply.prototype.setPriceMsat = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool price_msat_is_set = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.GetSellPriceReply.prototype.getPriceMsatIsSet = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.GetSellPriceReply.prototype.setPriceMsatIsSet = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 default_price_msat = 3;\n * @return {number}\n */\nproto.squeaknode.GetSellPriceReply.prototype.getDefaultPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetSellPriceReply.prototype.setDefaultPriceMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.TwitterAccount = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.TwitterAccount, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.TwitterAccount.displayName = 'proto.squeaknode.TwitterAccount';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.TwitterAccount.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.TwitterAccount.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.TwitterAccount} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.TwitterAccount.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    twitterAccountId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    handle: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    profileId: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    isProfileKnown: jspb.Message.getFieldWithDefault(msg, 4, false),\n    profile: (f = msg.getProfile()) && proto.squeaknode.SqueakProfile.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.TwitterAccount}\n */\nproto.squeaknode.TwitterAccount.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.TwitterAccount;\n  return proto.squeaknode.TwitterAccount.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.TwitterAccount} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.TwitterAccount}\n */\nproto.squeaknode.TwitterAccount.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTwitterAccountId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHandle(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsProfileKnown(value);\n      break;\n    case 5:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.setProfile(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.TwitterAccount.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.TwitterAccount.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.TwitterAccount} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.TwitterAccount.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTwitterAccountId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getHandle();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getIsProfileKnown();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getProfile();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int32 twitter_account_id = 1;\n * @return {number}\n */\nproto.squeaknode.TwitterAccount.prototype.getTwitterAccountId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.TwitterAccount.prototype.setTwitterAccountId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string handle = 2;\n * @return {string}\n */\nproto.squeaknode.TwitterAccount.prototype.getHandle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.TwitterAccount.prototype.setHandle = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 profile_id = 3;\n * @return {number}\n */\nproto.squeaknode.TwitterAccount.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.TwitterAccount.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool is_profile_known = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.TwitterAccount.prototype.getIsProfileKnown = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.TwitterAccount.prototype.setIsProfileKnown = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional SqueakProfile profile = 5;\n * @return {?proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.TwitterAccount.prototype.getProfile = function() {\n  return /** @type{?proto.squeaknode.SqueakProfile} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakProfile, 5));\n};\n\n\n/** @param {?proto.squeaknode.SqueakProfile|undefined} value */\nproto.squeaknode.TwitterAccount.prototype.setProfile = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.squeaknode.TwitterAccount.prototype.clearProfile = function() {\n  this.setProfile(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.TwitterAccount.prototype.hasProfile = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.AddTwitterAccountRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.AddTwitterAccountRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.AddTwitterAccountRequest.displayName = 'proto.squeaknode.AddTwitterAccountRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.AddTwitterAccountRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.AddTwitterAccountRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.AddTwitterAccountRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.AddTwitterAccountRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    handle: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    profileId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    bearerToken: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.AddTwitterAccountRequest}\n */\nproto.squeaknode.AddTwitterAccountRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.AddTwitterAccountRequest;\n  return proto.squeaknode.AddTwitterAccountRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.AddTwitterAccountRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.AddTwitterAccountRequest}\n */\nproto.squeaknode.AddTwitterAccountRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHandle(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBearerToken(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.AddTwitterAccountRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.AddTwitterAccountRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.AddTwitterAccountRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.AddTwitterAccountRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHandle();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getBearerToken();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string handle = 1;\n * @return {string}\n */\nproto.squeaknode.AddTwitterAccountRequest.prototype.getHandle = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.AddTwitterAccountRequest.prototype.setHandle = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 profile_id = 2;\n * @return {number}\n */\nproto.squeaknode.AddTwitterAccountRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.AddTwitterAccountRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string bearer_token = 3;\n * @return {string}\n */\nproto.squeaknode.AddTwitterAccountRequest.prototype.getBearerToken = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.AddTwitterAccountRequest.prototype.setBearerToken = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.AddTwitterAccountReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.AddTwitterAccountReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.AddTwitterAccountReply.displayName = 'proto.squeaknode.AddTwitterAccountReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.AddTwitterAccountReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.AddTwitterAccountReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.AddTwitterAccountReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.AddTwitterAccountReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    twitterAccountId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.AddTwitterAccountReply}\n */\nproto.squeaknode.AddTwitterAccountReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.AddTwitterAccountReply;\n  return proto.squeaknode.AddTwitterAccountReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.AddTwitterAccountReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.AddTwitterAccountReply}\n */\nproto.squeaknode.AddTwitterAccountReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTwitterAccountId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.AddTwitterAccountReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.AddTwitterAccountReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.AddTwitterAccountReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.AddTwitterAccountReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTwitterAccountId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 twitter_account_id = 1;\n * @return {number}\n */\nproto.squeaknode.AddTwitterAccountReply.prototype.getTwitterAccountId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.AddTwitterAccountReply.prototype.setTwitterAccountId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetTwitterAccountsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetTwitterAccountsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetTwitterAccountsRequest.displayName = 'proto.squeaknode.GetTwitterAccountsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetTwitterAccountsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetTwitterAccountsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetTwitterAccountsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTwitterAccountsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetTwitterAccountsRequest}\n */\nproto.squeaknode.GetTwitterAccountsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetTwitterAccountsRequest;\n  return proto.squeaknode.GetTwitterAccountsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetTwitterAccountsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetTwitterAccountsRequest}\n */\nproto.squeaknode.GetTwitterAccountsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetTwitterAccountsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetTwitterAccountsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetTwitterAccountsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTwitterAccountsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetTwitterAccountsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetTwitterAccountsReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetTwitterAccountsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetTwitterAccountsReply.displayName = 'proto.squeaknode.GetTwitterAccountsReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetTwitterAccountsReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetTwitterAccountsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetTwitterAccountsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetTwitterAccountsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTwitterAccountsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    twitterAccountsList: jspb.Message.toObjectList(msg.getTwitterAccountsList(),\n    proto.squeaknode.TwitterAccount.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetTwitterAccountsReply}\n */\nproto.squeaknode.GetTwitterAccountsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetTwitterAccountsReply;\n  return proto.squeaknode.GetTwitterAccountsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetTwitterAccountsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetTwitterAccountsReply}\n */\nproto.squeaknode.GetTwitterAccountsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.TwitterAccount;\n      reader.readMessage(value,proto.squeaknode.TwitterAccount.deserializeBinaryFromReader);\n      msg.addTwitterAccounts(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetTwitterAccountsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetTwitterAccountsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetTwitterAccountsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTwitterAccountsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTwitterAccountsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.TwitterAccount.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated TwitterAccount twitter_accounts = 1;\n * @return {!Array.<!proto.squeaknode.TwitterAccount>}\n */\nproto.squeaknode.GetTwitterAccountsReply.prototype.getTwitterAccountsList = function() {\n  return /** @type{!Array.<!proto.squeaknode.TwitterAccount>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.TwitterAccount, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.TwitterAccount>} value */\nproto.squeaknode.GetTwitterAccountsReply.prototype.setTwitterAccountsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.TwitterAccount=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.TwitterAccount}\n */\nproto.squeaknode.GetTwitterAccountsReply.prototype.addTwitterAccounts = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.TwitterAccount, opt_index);\n};\n\n\nproto.squeaknode.GetTwitterAccountsReply.prototype.clearTwitterAccountsList = function() {\n  this.setTwitterAccountsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeleteTwitterAccountRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeleteTwitterAccountRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeleteTwitterAccountRequest.displayName = 'proto.squeaknode.DeleteTwitterAccountRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeleteTwitterAccountRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeleteTwitterAccountRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeleteTwitterAccountRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteTwitterAccountRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    twitterAccountId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeleteTwitterAccountRequest}\n */\nproto.squeaknode.DeleteTwitterAccountRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeleteTwitterAccountRequest;\n  return proto.squeaknode.DeleteTwitterAccountRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeleteTwitterAccountRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeleteTwitterAccountRequest}\n */\nproto.squeaknode.DeleteTwitterAccountRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTwitterAccountId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeleteTwitterAccountRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeleteTwitterAccountRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeleteTwitterAccountRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteTwitterAccountRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTwitterAccountId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 twitter_account_id = 1;\n * @return {number}\n */\nproto.squeaknode.DeleteTwitterAccountRequest.prototype.getTwitterAccountId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DeleteTwitterAccountRequest.prototype.setTwitterAccountId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeleteTwitterAccountReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeleteTwitterAccountReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeleteTwitterAccountReply.displayName = 'proto.squeaknode.DeleteTwitterAccountReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeleteTwitterAccountReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeleteTwitterAccountReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeleteTwitterAccountReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteTwitterAccountReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeleteTwitterAccountReply}\n */\nproto.squeaknode.DeleteTwitterAccountReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeleteTwitterAccountReply;\n  return proto.squeaknode.DeleteTwitterAccountReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeleteTwitterAccountReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeleteTwitterAccountReply}\n */\nproto.squeaknode.DeleteTwitterAccountReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeleteTwitterAccountReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeleteTwitterAccountReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeleteTwitterAccountReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteTwitterAccountReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetTwitterStreamStatusRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetTwitterStreamStatusRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetTwitterStreamStatusRequest.displayName = 'proto.squeaknode.GetTwitterStreamStatusRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetTwitterStreamStatusRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetTwitterStreamStatusRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetTwitterStreamStatusRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTwitterStreamStatusRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetTwitterStreamStatusRequest}\n */\nproto.squeaknode.GetTwitterStreamStatusRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetTwitterStreamStatusRequest;\n  return proto.squeaknode.GetTwitterStreamStatusRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetTwitterStreamStatusRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetTwitterStreamStatusRequest}\n */\nproto.squeaknode.GetTwitterStreamStatusRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetTwitterStreamStatusRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetTwitterStreamStatusRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetTwitterStreamStatusRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTwitterStreamStatusRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetTwitterStreamStatusReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetTwitterStreamStatusReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetTwitterStreamStatusReply.displayName = 'proto.squeaknode.GetTwitterStreamStatusReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetTwitterStreamStatusReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetTwitterStreamStatusReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetTwitterStreamStatusReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTwitterStreamStatusReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    isStreamActive: jspb.Message.getFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetTwitterStreamStatusReply}\n */\nproto.squeaknode.GetTwitterStreamStatusReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetTwitterStreamStatusReply;\n  return proto.squeaknode.GetTwitterStreamStatusReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetTwitterStreamStatusReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetTwitterStreamStatusReply}\n */\nproto.squeaknode.GetTwitterStreamStatusReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsStreamActive(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetTwitterStreamStatusReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetTwitterStreamStatusReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetTwitterStreamStatusReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTwitterStreamStatusReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIsStreamActive();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool is_stream_active = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.GetTwitterStreamStatusReply.prototype.getIsStreamActive = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.GetTwitterStreamStatusReply.prototype.setIsStreamActive = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.squeaknode);\n","import {\n  GetInfoRequest,\n  GetInfoResponse,\n  WalletBalanceRequest,\n  WalletBalanceResponse,\n  GetTransactionsRequest,\n  TransactionDetails,\n  ListPeersRequest,\n  ListPeersResponse,\n  ListChannelsRequest,\n  ListChannelsResponse,\n  PendingChannelsRequest,\n  PendingChannelsResponse,\n  ConnectPeerRequest,\n  ConnectPeerResponse,\n  LightningAddress,\n  DisconnectPeerRequest,\n  DisconnectPeerResponse,\n  OpenChannelRequest,\n  CloseChannelRequest,\n  CloseStatusUpdate,\n  ChannelPoint,\n  NewAddressRequest,\n  NewAddressResponse,\n  SendCoinsRequest,\n  SendCoinsResponse,\n} from '../proto/lnd_pb';\nimport {\n  GetSqueakProfileRequest,\n  GetSqueakProfileReply,\n  GetTimelineSqueakDisplaysRequest,\n  GetTimelineSqueakDisplaysReply,\n  SetSqueakProfileFollowingRequest,\n  SetSqueakProfileFollowingReply,\n  GetPeersRequest,\n  PayOfferRequest,\n  GetBuyOffersRequest,\n  GetBuyOfferRequest,\n  GetPeerRequest,\n  SetPeerAutoconnectRequest,\n  GetSigningProfilesRequest,\n  GetProfilesRequest,\n  GetContactProfilesRequest,\n  MakeSqueakRequest,\n  GetSqueakDisplayRequest,\n  GetAncestorSqueakDisplaysRequest,\n  GetReplySqueakDisplaysRequest,\n  GetSqueakProfileByPubKeyRequest,\n  GetPubKeySqueakDisplaysRequest,\n  CreateContactProfileRequest,\n  CreateSigningProfileRequest,\n  ImportSigningProfileRequest,\n  CreatePeerRequest,\n  DeletePeerRequest,\n  DeleteSqueakProfileRequest,\n  DeleteSqueakRequest,\n  DownloadSqueakRequest,\n  GetSentPaymentsRequest,\n  GetReceivedPaymentsRequest,\n  GetNetworkRequest,\n  GetSqueakProfilePrivateKeyRequest,\n  GetPaymentSummaryRequest,\n  RenameSqueakProfileRequest,\n  RenameSqueakProfileReply,\n  SetSqueakProfileImageRequest,\n  ClearSqueakProfileImageRequest,\n  ReprocessReceivedPaymentsRequest,\n  LikeSqueakRequest,\n  UnlikeSqueakRequest,\n  GetLikedSqueakDisplaysRequest,\n  GetConnectedPeersRequest,\n  GetConnectedPeerRequest,\n  ConnectPeerRequest as ConnectSqueakPeerRequest,\n  DisconnectPeerRequest as DisconnectSqueakPeerRequest,\n  DownloadOffersRequest,\n  DownloadRepliesRequest,\n  DownloadPubKeySqueaksRequest,\n  PeerAddress,\n  SetSqueakProfileImageReply,\n  ClearSqueakProfileImageReply,\n  GetPeersReply,\n  PayOfferReply,\n  GetBuyOffersReply,\n  GetBuyOfferReply,\n  GetPeerReply,\n  SetPeerAutoconnectReply,\n  GetProfilesReply,\n  GetSigningProfilesReply,\n  GetContactProfilesReply,\n  MakeSqueakReply,\n  GetSqueakDisplayReply,\n  GetAncestorSqueakDisplaysReply,\n  GetReplySqueakDisplaysReply,\n  GetPubKeySqueakDisplaysReply,\n  GetSqueakProfileByPubKeyReply,\n  CreateContactProfileReply,\n  CreateSigningProfileReply,\n  ImportSigningProfileReply,\n  CreatePeerReply,\n  DeletePeerReply,\n  DeleteSqueakProfileReply,\n  DeleteSqueakReply,\n  DownloadSqueakReply,\n  DownloadOffersReply,\n  DownloadRepliesReply,\n  DownloadPubKeySqueaksReply,\n  GetSentPaymentsReply,\n  GetReceivedPaymentsReply,\n  GetNetworkReply,\n  GetSqueakProfilePrivateKeyReply,\n  GetPaymentSummaryReply,\n  ReprocessReceivedPaymentsReply,\n  LikeSqueakReply,\n  UnlikeSqueakReply,\n  GetLikedSqueakDisplaysReply,\n  GetConnectedPeersReply,\n  GetConnectedPeerReply,\n  ConnectPeerReply as ConnectSqueakPeerReply,\n  DisconnectPeerReply as DisconnectSqueakPeerReply,\n  GetExternalAddressRequest,\n  GetExternalAddressReply,\n  GetSearchSqueakDisplaysRequest,\n  GetSearchSqueakDisplaysReply,\n  GetPeerByAddressRequest,\n  GetPeerByAddressReply,\n  GetDefaultPeerPortRequest,\n  GetDefaultPeerPortReply,\n  GetTwitterAccountsRequest,\n  GetTwitterAccountsReply,\n  AddTwitterAccountRequest,\n  AddTwitterAccountReply,\n  DeleteTwitterAccountRequest,\n  DeleteTwitterAccountReply,\n  SetPeerShareForFreeRequest,\n  SetPeerShareForFreeReply,\n  SetSellPriceRequest,\n  SetSellPriceReply,\n  GetSellPriceRequest,\n  GetSellPriceReply,\n  ClearSellPriceRequest,\n  ClearSellPriceReply,\n  GetTwitterStreamStatusRequest,\n  GetTwitterStreamStatusReply,\n  DecryptSqueakRequest,\n  DecryptSqueakReply,\n} from '../proto/squeak_admin_pb';\n\nimport axios from 'axios'\n\n// A tiny wrapper around fetch(), borrowed from\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\n\nconsole.log('The value of REACT_APP_DEV_MODE_ENABLED is:', Boolean(process.env.REACT_APP_DEV_MODE_ENABLED));\nconst DEV_MODE_ENABLED = process.env.REACT_APP_DEV_MODE_ENABLED;\n\nconsole.log('The value of REACT_APP_SERVER_PORT is:', process.env.REACT_APP_SERVER_PORT);\nconst SERVER_PORT = process.env.REACT_APP_SERVER_PORT || window.location.port;\n\nexport const web_host_port = `${window.location.protocol}//${window.location.hostname}:${SERVER_PORT}`;\n\nexport const baseRequest =\n  async ({ url, req, deser }) => {\n    try {\n      const data = req.serializeBinary();\n      // const result = await axios({ url: web_host_port + url, responseType: 'arraybuffer', method: 'post', data })\n      const result = await fetch(web_host_port + url, {\n        method: 'post',\n        body: data,\n      });\n      if (!result.ok) { throw result; }\n      const buf = await result.arrayBuffer();\n      const deserRes = deser(buf);\n      return deserRes;\n    } catch (axiosError) {\n      const errorText = await axiosError.text();\n      throw errorText;\n    }\n  }\n\nexport const logout =\n  async () => {\n    const logoutResponse = await fetch(`${web_host_port}/logout`, {\n      method: 'get',\n    });\n    console.log('Got logout response');\n    const buf = await logoutResponse.arrayBuffer();\n    console.log('Got buf');\n    return buf;\n}\n\nexport const getNetwork = () => {\n    console.log('Calling getNetwork');\n    const request = new GetNetworkRequest();\n    const deser = GetNetworkReply.deserializeBinary;\n    return baseRequest({\n      url: '/getnetwork',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getTimelineSqueaks = (limit, lastSqueak) => {\n    console.log('Calling getTimelineSqueaks');\n    const request = new GetTimelineSqueakDisplaysRequest();\n    request.setLimit(limit);\n    if (lastSqueak) {\n      request.setLastEntry(lastSqueak);\n    }\n    const deser = GetTimelineSqueakDisplaysReply.deserializeBinary;\n    return baseRequest({\n      url: '/gettimelinesqueakdisplays',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getSqueak = (squeakHash) => {\n    console.log('Calling getSqueak');\n    const request = new GetSqueakDisplayRequest();\n    request.setSqueakHash(squeakHash);\n    const deser = GetSqueakDisplayReply.deserializeBinary;\n    return baseRequest({\n      url: '/getsqueakdisplay',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getAncestorSqueaks = (squeakHash) => {\n    console.log('Calling getAncestorSqueaks');\n    const request = new GetAncestorSqueakDisplaysRequest();\n    request.setSqueakHash(squeakHash);\n    const deser = GetAncestorSqueakDisplaysReply.deserializeBinary;\n    return baseRequest({\n      url: '/getancestorsqueakdisplays',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getReplySqueaks = (squeakHash, limit, lastSqueak) => {\n    console.log('Calling getAncestorSqueaks');\n    const request = new GetReplySqueakDisplaysRequest();\n    request.setSqueakHash(squeakHash);\n    request.setLimit(limit);\n    if (lastSqueak) {\n      request.setLastEntry(lastSqueak);\n    }\n    const deser = GetReplySqueakDisplaysReply.deserializeBinary;\n    return baseRequest({\n      url: '/getreplysqueakdisplays',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getProfileSqueaks = (pubkey, limit, lastSqueak) => {\n    console.log('Calling getProfileSqueaks');\n    const request = new GetPubKeySqueakDisplaysRequest();\n    request.setPubkey(pubkey);\n    request.setLimit(limit);\n    if (lastSqueak) {\n      request.setLastEntry(lastSqueak);\n    }\n    const deser = GetPubKeySqueakDisplaysReply.deserializeBinary;\n    return baseRequest({\n      url: '/getpubkeysqueakdisplays',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const likeSqueak = (squeakHash) => {\n    console.log('Calling likeSqueak');\n    const request = new LikeSqueakRequest();\n    request.setSqueakHash(squeakHash);\n    const deser = LikeSqueakReply.deserializeBinary;\n    return baseRequest({\n      url: '/likesqueak',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const unlikeSqueak = (squeakHash) => {\n    console.log('Calling unlikeSqueak');\n    const request = new UnlikeSqueakRequest();\n    request.setSqueakHash(squeakHash);\n    const deser = UnlikeSqueakReply.deserializeBinary;\n    return baseRequest({\n      url: '/unlikesqueak',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const deleteSqueak = (squeakHash) => {\n    console.log('Calling deleteSqueak');\n    const request = new DeleteSqueakRequest();\n    request.setSqueakHash(squeakHash);\n    const deser = DeleteSqueakReply.deserializeBinary;\n    return baseRequest({\n      url: '/deletesqueak',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const makeSqueak = (profileId, content, replyTo, hasRecipient, recipientProfileId) => {\n    console.log('Calling makeSqueak');\n    const request = new MakeSqueakRequest();\n    request.setProfileId(profileId);\n    request.setContent(content);\n    request.setReplyto(replyTo);\n    request.setHasRecipient(hasRecipient);\n    request.setRecipientProfileId(recipientProfileId);\n    const deser = MakeSqueakReply.deserializeBinary;\n    return baseRequest({\n      url: '/makesqueakrequest',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getSigningProfiles = () => {\n    console.log('Calling getSigningProfiles');\n    const request = new GetSigningProfilesRequest();\n    const deser = GetSigningProfilesReply.deserializeBinary;\n    return baseRequest({\n      url: '/getsigningprofiles',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getContactProfiles = () => {\n    console.log('Calling getContactProfiles');\n    const request = new GetContactProfilesRequest();\n    const deser = GetContactProfilesReply.deserializeBinary;\n    return baseRequest({\n      url: '/getcontactprofiles',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getPaymentSummary = () => {\n    console.log('Calling getPaymentSummary');\n    const request = new GetPaymentSummaryRequest();\n    const deser = GetPaymentSummaryReply.deserializeBinary;\n    return baseRequest({\n      url: '/getpaymentsummary',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getSentPayments = (limit, lastSentPayment) => {\n    console.log('Calling getSentPayments');\n    const request = new GetSentPaymentsRequest();\n    request.setLimit(limit);\n    if (lastSentPayment) {\n      request.setLastSentPayment(lastSentPayment);\n    }\n    const deser = GetSentPaymentsReply.deserializeBinary;\n    return baseRequest({\n      url: '/getsentpayments',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getReceivedPayments = (limit, lastReceivedPayment) => {\n    console.log('Calling getSentPayments');\n    const request = new GetReceivedPaymentsRequest();\n    request.setLimit(limit);\n    if (lastReceivedPayment) {\n      request.setLastReceivedPayment(lastReceivedPayment);\n    }\n    const deser = GetReceivedPaymentsReply.deserializeBinary;\n    return baseRequest({\n      url: '/getreceivedpayments',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getSearchSqueaks = (searchText, limit, lastSqueak) => {\n    console.log('Calling getSearchSqueaks');\n    const request = new GetSearchSqueakDisplaysRequest();\n    request.setSearchText(searchText);\n    request.setLimit(limit);\n    if (lastSqueak) {\n      request.setLastEntry(lastSqueak);\n    }\n    const deser = GetSearchSqueakDisplaysReply.deserializeBinary;\n    return baseRequest({\n      url: '/getsearchsqueakdisplays',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const createSigningProfile = (profileName) => {\n    console.log('Calling createSigningProfile');\n    const request = new CreateSigningProfileRequest();\n    request.setProfileName(profileName);\n    const deser = CreateSigningProfileReply.deserializeBinary;\n    return baseRequest({\n      url: '/createsigningprofile',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const importSigningProfile = (profileName, privateKey) => {\n    console.log('Calling importSigningProfile');\n    const request = new ImportSigningProfileRequest();\n    request.setProfileName(profileName);\n    request.setPrivateKey(privateKey);\n    const deser = ImportSigningProfileReply.deserializeBinary;\n    return baseRequest({\n      url: '/importsigningprofile',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const createContactProfile = (profileName, pubkey) => {\n    console.log('Calling createContactProfile');\n    const request = new CreateContactProfileRequest();\n    request.setProfileName(profileName);\n    request.setPubkey(pubkey);\n    const deser = CreateContactProfileReply.deserializeBinary;\n    return baseRequest({\n      url: '/createcontactprofile',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getProfile = (id) => {\n    console.log('Calling getProfile');\n    const request = new GetSqueakProfileRequest();\n    request.setProfileId(id);\n    const deser = GetSqueakProfileReply.deserializeBinary;\n    return baseRequest({\n      url: '/getsqueakprofile',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getProfileByPubkey = (pubkey) => {\n    console.log('Calling getProfileByPubkey');\n    const request = new GetSqueakProfileByPubKeyRequest();\n    request.setPubkey(pubkey);\n    const deser = GetSqueakProfileByPubKeyReply.deserializeBinary;\n    return baseRequest({\n      url: '/getsqueakprofilebypubkey',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const setProfileFollowing = (id, following) => {\n    console.log('Calling setProfileFollowing');\n    const request = new SetSqueakProfileFollowingRequest();\n    request.setProfileId(id);\n    request.setFollowing(following);\n    const deser = SetSqueakProfileFollowingReply.deserializeBinary;\n    return baseRequest({\n      url: '/setsqueakprofilefollowing',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const deleteProfile = (id) => {\n    console.log('Calling deleteProfile');\n    const request = new DeleteSqueakProfileRequest();\n    request.setProfileId(id);\n    const deser = DeleteSqueakProfileReply.deserializeBinary;\n    return baseRequest({\n      url: '/deleteprofile',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const renameProfile = (id, profileName) => {\n    console.log('Calling renameProfile');\n    const request = new RenameSqueakProfileRequest();\n    request.setProfileId(id);\n    request.setProfileName(profileName);\n    const deser = RenameSqueakProfileReply.deserializeBinary;\n    return baseRequest({\n      url: '/renamesqueakprofile',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const changeProfileImage = (id, imageBase64) => {\n    console.log('Calling changeProfileImage');\n    const request = new SetSqueakProfileImageRequest();\n    request.setProfileId(id);\n    request.setProfileImage(imageBase64);\n    const deser = SetSqueakProfileImageReply.deserializeBinary;\n    return baseRequest({\n      url: '/setsqueakprofileimage',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const clearProfileImage = (id, imageBase64) => {\n    console.log('Calling clearProfileImage');\n    const request = new ClearSqueakProfileImageRequest();\n    request.setProfileId(id);\n    const deser = ClearSqueakProfileImageReply.deserializeBinary;\n    return baseRequest({\n      url: '/clearsqueakprofileimage',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getPrivateKey = (id) => {\n    console.log('Calling getProfilePrivateKey');\n    const request = new GetSqueakProfilePrivateKeyRequest();\n    request.setProfileId(id);\n    const deser = GetSqueakProfilePrivateKeyReply.deserializeBinary;\n    return baseRequest({\n      url: '/getsqueakprofileprivatekey',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getPeer = (network, host, port) => {\n    console.log('Calling getPeer');\n    const request = new GetPeerByAddressRequest();\n    const peerAddress = new PeerAddress();\n    peerAddress.setNetwork(network);\n    peerAddress.setHost(host);\n    peerAddress.setPort(port);\n    request.setPeerAddress(peerAddress);\n    const deser = GetPeerByAddressReply.deserializeBinary;\n    return baseRequest({\n      url: '/getpeerbyaddress',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getConnectedPeers = () => {\n    console.log('Calling getConnectedPeers');\n    const request = new GetConnectedPeersRequest();\n    const deser = GetConnectedPeersReply.deserializeBinary;\n    return baseRequest({\n      url: '/getconnectedpeers',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getSavedPeers = () => {\n    console.log('Calling getSavedPeers');\n    const request = new GetPeersRequest();\n    const deser = GetPeersReply.deserializeBinary;\n    return baseRequest({\n      url: '/getpeers',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const connectPeer = (network, host, port) => {\n    console.log('Calling connectPeer');\n    const request = new ConnectSqueakPeerRequest();\n    const peerAddress = new PeerAddress();\n    peerAddress.setNetwork(network);\n    peerAddress.setHost(host);\n    peerAddress.setPort(port);\n    request.setPeerAddress(peerAddress);\n    const deser = ConnectSqueakPeerReply.deserializeBinary;\n    return baseRequest({\n      url: '/connectpeer',\n      req: request,\n      deser: deser,\n    });\n}\n\n\nexport const disconnectPeer = (network, host, port) => {\n    console.log('Calling disconnectPeer');\n    const request = new DisconnectSqueakPeerRequest();\n    const peerAddress = new PeerAddress();\n    peerAddress.setNetwork(network);\n    peerAddress.setHost(host);\n    peerAddress.setPort(port);\n    request.setPeerAddress(peerAddress);\n    const deser = DisconnectSqueakPeerReply.deserializeBinary;\n    return baseRequest({\n      url: '/disconnectpeer',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getExternalAddress = () => {\n    console.log('Calling getExternalAddress');\n    const request = new GetExternalAddressRequest();\n    const deser = GetExternalAddressReply.deserializeBinary;\n    return baseRequest({\n      url: '/getexternaladdress',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const savePeer = (peerName, network, host, port) => {\n    console.log('Calling savePeer');\n    const request = new CreatePeerRequest();\n    const peerAddress = new PeerAddress();\n    peerAddress.setNetwork(network);\n    peerAddress.setHost(host);\n    peerAddress.setPort(port);\n    request.setPeerName(peerName);\n    request.setPeerAddress(peerAddress);\n    const deser = CreatePeerReply.deserializeBinary;\n    return baseRequest({\n      url: '/createpeer',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const deletePeer = (peerId) => {\n    console.log('Calling savePeer');\n    const request = new DeletePeerRequest();\n    request.setPeerId(peerId);\n    const deser = DeletePeerReply.deserializeBinary;\n    return baseRequest({\n      url: '/deletepeer',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const enableAutoconnectPeer = (peerId) => {\n    console.log('Calling enableAutoconnectPeer');\n    const request = new SetPeerAutoconnectRequest();\n    request.setPeerId(peerId);\n    request.setAutoconnect(true);\n    const deser = SetPeerAutoconnectReply.deserializeBinary;\n    return baseRequest({\n      url: '/setpeerautoconnect',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const disableAutoconnectPeer = (peerId) => {\n    console.log('Calling disableAutoconnectPeer');\n    const request = new SetPeerAutoconnectRequest();\n    request.setPeerId(peerId);\n    request.setAutoconnect(false);\n    const deser = SetPeerAutoconnectReply.deserializeBinary;\n    return baseRequest({\n      url: '/setpeerautoconnect',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getSqueakOffers = (squeakHash) => {\n    console.log('Calling getSqueakOffers');\n    const request = new GetBuyOffersRequest();\n    request.setSqueakHash(squeakHash);\n    const deser = GetBuyOffersReply.deserializeBinary;\n    return baseRequest({\n      url: '/getbuyoffers',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const buySqueak = (offerId) => {\n    console.log('Calling buySqueak');\n    const request = new PayOfferRequest();\n    request.setOfferId(offerId);\n    const deser = PayOfferReply.deserializeBinary;\n    return baseRequest({\n      url: '/payoffer',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const getSellPrice = () => {\n    console.log('Calling getSellPrice');\n    const request = new GetSellPriceRequest();\n    const deser = GetSellPriceReply.deserializeBinary;\n    return baseRequest({\n      url: '/getsellprice',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const updateSellPrice = (priceMsat) => {\n    console.log('Calling updateSellPrice');\n    const request = new SetSellPriceRequest();\n    request.setPriceMsat(priceMsat);\n    const deser = SetSellPriceReply.deserializeBinary;\n    return baseRequest({\n      url: '/setsellprice',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const clearSellPrice = () => {\n    console.log('Calling clearSellPrice');\n    const request = new ClearSellPriceRequest();\n    const deser = ClearSellPriceReply.deserializeBinary;\n    return baseRequest({\n      url: '/clearsellprice',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const downloadSqueak = (squeakHash) => {\n    console.log('Calling downloadSqueak');\n    const request = new DownloadSqueakRequest();\n    request.setSqueakHash(squeakHash);\n    const deser = DownloadSqueakReply.deserializeBinary;\n    return baseRequest({\n      url: '/downloadsqueak',\n      req: request,\n      deser: deser,\n    });\n}\n\nexport const downloadPubkeySqueaks = (pubkey) => {\n    console.log('Calling downloadPubkeySqueaks');\n    const request = new DownloadPubKeySqueaksRequest();\n    request.setPubkey(pubkey);\n    const deser = DownloadPubKeySqueaksReply.deserializeBinary;\n    return baseRequest({\n      url: '/downloadaddresssqueaks',\n      req: request,\n      deser: deser,\n    });\n}\n","import React from 'react'\r\n\r\nexport const ICON_LOGO = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_HOME = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M22.46 7.57L12.357 2.115c-.223-.12-.49-.12-.713 0L1.543 7.57c-.364.197-.5.652-.303 1.017.135.25.394.393.66.393.12 0 .243-.03.356-.09l.815-.44L4.7 19.963c.214 1.215 1.308 2.062 2.658 2.062h9.282c1.352 0 2.445-.848 2.663-2.087l1.626-11.49.818.442c.364.193.82.06 1.017-.304.196-.363.06-.818-.304-1.016zm-4.638 12.133c-.107.606-.703.822-1.18.822H7.36c-.48 0-1.075-.216-1.178-.798L4.48 7.69 12 3.628l7.522 4.06-1.7 12.015z\"></path><path d=\"M8.22 12.184c0 2.084 1.695 3.78 3.78 3.78s3.78-1.696 3.78-3.78-1.695-3.78-3.78-3.78-3.78 1.696-3.78 3.78zm6.06 0c0 1.258-1.022 2.28-2.28 2.28s-2.28-1.022-2.28-2.28 1.022-2.28 2.28-2.28 2.28 1.022 2.28 2.28z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_HOMEFILL = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M22.58 7.35L12.475 1.897c-.297-.16-.654-.16-.95 0L1.425 7.35c-.486.264-.667.87-.405 1.356.18.335.525.525.88.525.16 0 .324-.038.475-.12l.734-.396 1.59 11.25c.216 1.214 1.31 2.062 2.66 2.062h9.282c1.35 0 2.444-.848 2.662-2.088l1.588-11.225.737.398c.485.263 1.092.082 1.354-.404.263-.486.08-1.093-.404-1.355zM12 15.435c-1.795 0-3.25-1.455-3.25-3.25s1.455-3.25 3.25-3.25 3.25 1.455 3.25 3.25-1.455 3.25-3.25 3.25z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_HASH = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M21 7.337h-3.93l.372-4.272c.036-.412-.27-.775-.682-.812-.417-.03-.776.27-.812.683l-.383 4.4h-6.32l.37-4.27c.037-.413-.27-.776-.68-.813-.42-.03-.777.27-.813.683l-.382 4.4H3.782c-.414 0-.75.337-.75.75s.336.75.75.75H7.61l-.55 6.327H3c-.414 0-.75.336-.75.75s.336.75.75.75h3.93l-.372 4.272c-.036.412.27.775.682.812l.066.003c.385 0 .712-.295.746-.686l.383-4.4h6.32l-.37 4.27c-.036.413.27.776.682.813l.066.003c.385 0 .712-.295.746-.686l.382-4.4h3.957c.413 0 .75-.337.75-.75s-.337-.75-.75-.75H16.39l.55-6.327H21c.414 0 .75-.336.75-.75s-.336-.75-.75-.75zm-6.115 7.826h-6.32l.55-6.326h6.32l-.55 6.326z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_HASHFILL = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M20.585 9.468c.66 0 1.2-.538 1.2-1.2 0-.662-.54-1.2-1.2-1.2h-3.22l.31-3.547c.027-.318-.07-.63-.277-.875-.206-.245-.495-.396-.822-.425-.65-.035-1.235.432-1.293 1.093l-.326 3.754H9.9l.308-3.545c.06-.658-.43-1.242-1.097-1.302-.665-.05-1.235.43-1.293 1.092l-.325 3.754h-3.33c-.663 0-1.2.538-1.2 1.2 0 .662.538 1.2 1.2 1.2h3.122l-.44 5.064H3.416c-.662 0-1.2.54-1.2 1.2s.538 1.202 1.2 1.202h3.22l-.31 3.548c-.057.657.432 1.24 1.09 1.3l.106.005c.626 0 1.14-.472 1.195-1.098l.327-3.753H14.1l-.308 3.544c-.06.658.43 1.242 1.09 1.302l.106.005c.617 0 1.142-.482 1.195-1.098l.325-3.753h3.33c.66 0 1.2-.54 1.2-1.2s-.54-1.202-1.2-1.202h-3.122l.44-5.064h3.43zm-5.838 0l-.44 5.063H9.253l.44-5.062h5.055z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_BELL = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M21.697 16.468c-.02-.016-2.14-1.64-2.103-6.03.02-2.532-.812-4.782-2.347-6.335C15.872 2.71 14.01 1.94 12.005 1.93h-.013c-2.004.01-3.866.78-5.242 2.174-1.534 1.553-2.368 3.802-2.346 6.334.037 4.33-2.02 5.967-2.102 6.03-.26.193-.366.53-.265.838.102.308.39.515.712.515h4.92c.102 2.31 1.997 4.16 4.33 4.16s4.226-1.85 4.327-4.16h4.922c.322 0 .61-.206.71-.514.103-.307-.003-.645-.263-.838zM12 20.478c-1.505 0-2.73-1.177-2.828-2.658h5.656c-.1 1.48-1.323 2.66-2.828 2.66zM4.38 16.32c.74-1.132 1.548-3.028 1.524-5.896-.018-2.16.644-3.982 1.913-5.267C8.91 4.05 10.397 3.437 12 3.43c1.603.008 3.087.62 4.18 1.728 1.27 1.285 1.933 3.106 1.915 5.267-.024 2.868.785 4.765 1.525 5.896H4.38z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_BELLFILL = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M21.697 16.468c-.02-.016-2.14-1.64-2.103-6.03.02-2.533-.812-4.782-2.347-6.334-1.375-1.393-3.237-2.164-5.242-2.172h-.013c-2.004.008-3.866.78-5.242 2.172-1.534 1.553-2.367 3.802-2.346 6.333.037 4.332-2.02 5.967-2.102 6.03-.26.194-.366.53-.265.838s.39.515.713.515h4.494c.1 2.544 2.188 4.587 4.756 4.587s4.655-2.043 4.756-4.587h4.494c.324 0 .61-.208.712-.515s-.005-.644-.265-.837zM12 20.408c-1.466 0-2.657-1.147-2.756-2.588h5.512c-.1 1.44-1.29 2.587-2.756 2.587z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_INBOX = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M19.25 3.018H4.75C3.233 3.018 2 4.252 2 5.77v12.495c0 1.518 1.233 2.753 2.75 2.753h14.5c1.517 0 2.75-1.235 2.75-2.753V5.77c0-1.518-1.233-2.752-2.75-2.752zm-14.5 1.5h14.5c.69 0 1.25.56 1.25 1.25v.714l-8.05 5.367c-.273.18-.626.182-.9-.002L3.5 6.482v-.714c0-.69.56-1.25 1.25-1.25zm14.5 14.998H4.75c-.69 0-1.25-.56-1.25-1.25V8.24l7.24 4.83c.383.256.822.384 1.26.384.44 0 .877-.128 1.26-.383l7.24-4.83v10.022c0 .69-.56 1.25-1.25 1.25z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_INBOXFILL = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M11.55 12.082c.273.182.627.182.9 0L22 5.716V5.5c0-1.24-1.01-2.25-2.25-2.25H4.25C3.01 3.25 2 4.26 2 5.5v.197l9.55 6.385z\"></path><path d=\"M13.26 13.295c-.383.255-.82.382-1.26.382s-.877-.127-1.26-.383L2 7.452v11.67c0 1.24 1.01 2.25 2.25 2.25h15.5c1.24 0 2.25-1.01 2.25-2.25V7.47l-8.74 5.823z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_BOOKMARK = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M19.9 23.5c-.157 0-.312-.05-.442-.144L12 17.928l-7.458 5.43c-.228.164-.53.19-.782.06-.25-.127-.41-.385-.41-.667V5.6c0-1.24 1.01-2.25 2.25-2.25h12.798c1.24 0 2.25 1.01 2.25 2.25v17.15c0 .282-.158.54-.41.668-.106.055-.223.082-.34.082zM12 16.25c.155 0 .31.048.44.144l6.71 4.883V5.6c0-.412-.337-.75-.75-.75H5.6c-.413 0-.75.338-.75.75v15.677l6.71-4.883c.13-.096.285-.144.44-.144z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_BOOKMARKFILL = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M19.9 23.5c-.2 0-.3 0-.4-.1L12 17.9l-7.5 5.4c-.2.2-.5.2-.8.1-.2-.1-.4-.4-.4-.7V5.6c0-1.2 1-2.2 2.2-2.2h12.8c1.2 0 2.2 1 2.2 2.2v17.1c0 .3-.2.5-.4.7 0 .1-.1.1-.2.1z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_LIST = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M19.75 22H4.25C3.01 22 2 20.99 2 19.75V4.25C2 3.01 3.01 2 4.25 2h15.5C20.99 2 22 3.01 22 4.25v15.5c0 1.24-1.01 2.25-2.25 2.25zM4.25 3.5c-.414 0-.75.337-.75.75v15.5c0 .413.336.75.75.75h15.5c.414 0 .75-.337.75-.75V4.25c0-.413-.336-.75-.75-.75H4.25z\"></path><path d=\"M17 8.64H7c-.414 0-.75-.337-.75-.75s.336-.75.75-.75h10c.414 0 .75.335.75.75s-.336.75-.75.75zm0 4.11H7c-.414 0-.75-.336-.75-.75s.336-.75.75-.75h10c.414 0 .75.336.75.75s-.336.75-.75.75zm-5 4.11H7c-.414 0-.75-.335-.75-.75s.336-.75.75-.75h5c.414 0 .75.337.75.75s-.336.75-.75.75z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_LISTFILL = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M19.75 2H4.25C3.013 2 2 3.013 2 4.25v15.5C2 20.987 3.013 22 4.25 22h15.5c1.237 0 2.25-1.013 2.25-2.25V4.25C22 3.013 20.987 2 19.75 2zM11 16.75H7c-.414 0-.75-.336-.75-.75s.336-.75.75-.75h4c.414 0 .75.336.75.75s-.336.75-.75.75zm6-4H7c-.414 0-.75-.336-.75-.75s.336-.75.75-.75h10c.414 0 .75.336.75.75s-.336.75-.75.75zm0-4H7c-.414 0-.75-.336-.75-.75s.336-.75.75-.75h10c.414 0 .75.336.75.75s-.336.75-.75.75z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_USER = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M12 11.816c1.355 0 2.872-.15 3.84-1.256.814-.93 1.078-2.368.806-4.392-.38-2.825-2.117-4.512-4.646-4.512S7.734 3.343 7.354 6.17c-.272 2.022-.008 3.46.806 4.39.968 1.107 2.485 1.256 3.84 1.256zM8.84 6.368c.162-1.2.787-3.212 3.16-3.212s2.998 2.013 3.16 3.212c.207 1.55.057 2.627-.45 3.205-.455.52-1.266.743-2.71.743s-2.255-.223-2.71-.743c-.507-.578-.657-1.656-.45-3.205zm11.44 12.868c-.877-3.526-4.282-5.99-8.28-5.99s-7.403 2.464-8.28 5.99c-.172.692-.028 1.4.395 1.94.408.52 1.04.82 1.733.82h12.304c.693 0 1.325-.3 1.733-.82.424-.54.567-1.247.394-1.94zm-1.576 1.016c-.126.16-.316.246-.552.246H5.848c-.235 0-.426-.085-.552-.246-.137-.174-.18-.412-.12-.654.71-2.855 3.517-4.85 6.824-4.85s6.114 1.994 6.824 4.85c.06.242.017.48-.12.654z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_USERFILL = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M12.225 12.165c-1.356 0-2.872-.15-3.84-1.256-.814-.93-1.077-2.368-.805-4.392.38-2.826 2.116-4.513 4.646-4.513s4.267 1.687 4.646 4.513c.272 2.024.008 3.46-.806 4.392-.97 1.106-2.485 1.255-3.84 1.255zm5.849 9.85H6.376c-.663 0-1.25-.28-1.65-.786-.422-.534-.576-1.27-.41-1.968.834-3.53 4.086-5.997 7.908-5.997s7.074 2.466 7.91 5.997c.164.698.01 1.434-.412 1.967-.4.505-.985.785-1.648.785z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_LAPTOP = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M13.5 3a.5.5 0 0 1 .5.5V11H2V3.5a.5.5 0 0 1 .5-.5h11zm-11-1A1.5 1.5 0 0 0 1 3.5V12h14V3.5A1.5 1.5 0 0 0 13.5 2h-11zM0 12.5h16a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_LAPTOPFILL = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M2.5 2A1.5 1.5 0 0 0 1 3.5V12h14V3.5A1.5 1.5 0 0 0 13.5 2h-11zM0 12.5h16a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_LOCK = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2zM5 8h6a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_LOCKFILL = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_SETTINGS = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M16.5 10.25c-.965 0-1.75.787-1.75 1.75s.784 1.75 1.75 1.75c.964 0 1.75-.786 1.75-1.75s-.786-1.75-1.75-1.75zm0 2.5c-.414 0-.75-.336-.75-.75 0-.413.337-.75.75-.75s.75.336.75.75c0 .413-.336.75-.75.75zm-4.5-2.5c-.966 0-1.75.787-1.75 1.75s.785 1.75 1.75 1.75 1.75-.786 1.75-1.75-.784-1.75-1.75-1.75zm0 2.5c-.414 0-.75-.336-.75-.75 0-.413.337-.75.75-.75s.75.336.75.75c0 .413-.336.75-.75.75zm-4.5-2.5c-.965 0-1.75.787-1.75 1.75s.785 1.75 1.75 1.75c.964 0 1.75-.786 1.75-1.75s-.787-1.75-1.75-1.75zm0 2.5c-.414 0-.75-.336-.75-.75 0-.413.337-.75.75-.75s.75.336.75.75c0 .413-.336.75-.75.75z\"></path><path d=\"M12 22.75C6.072 22.75 1.25 17.928 1.25 12S6.072 1.25 12 1.25 22.75 6.072 22.75 12 17.928 22.75 12 22.75zm0-20C6.9 2.75 2.75 6.9 2.75 12S6.9 21.25 12 21.25s9.25-4.15 9.25-9.25S17.1 2.75 12 2.75z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_TWEET = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\" class=\"r-jwli3a r-4qtqp9 r-yyyyoo r-1q142lx r-50lct3 r-dnmrzs r-bnwqim r-1plcrui r-lrvibr\"><g><path d=\"M8.8 7.2H5.6V3.9c0-.4-.3-.8-.8-.8s-.7.4-.7.8v3.3H.8c-.4 0-.8.3-.8.8s.3.8.8.8h3.3v3.3c0 .4.3.8.8.8s.8-.3.8-.8V8.7H9c.4 0 .8-.3.8-.8s-.5-.7-1-.7zm15-4.9v-.1h-.1c-.1 0-9.2 1.2-14.4 11.7-3.8 7.6-3.6 9.9-3.3 9.9.3.1 3.4-6.5 6.7-9.2 5.2-1.1 6.6-3.6 6.6-3.6s-1.5.2-2.1.2c-.8 0-1.4-.2-1.7-.3 1.3-1.2 2.4-1.5 3.5-1.7.9-.2 1.8-.4 3-1.2 2.2-1.6 1.9-5.5 1.8-5.7z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_IMGUPLOAD = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M19.75 2H4.25C3.01 2 2 3.01 2 4.25v15.5C2 20.99 3.01 22 4.25 22h15.5c1.24 0 2.25-1.01 2.25-2.25V4.25C22 3.01 20.99 2 19.75 2zM4.25 3.5h15.5c.413 0 .75.337.75.75v9.676l-3.858-3.858c-.14-.14-.33-.22-.53-.22h-.003c-.2 0-.393.08-.532.224l-4.317 4.384-1.813-1.806c-.14-.14-.33-.22-.53-.22-.193-.03-.395.08-.535.227L3.5 17.642V4.25c0-.413.337-.75.75-.75zm-.744 16.28l5.418-5.534 6.282 6.254H4.25c-.402 0-.727-.322-.744-.72zm16.244.72h-2.42l-5.007-4.987 3.792-3.85 4.385 4.384v3.703c0 .413-.337.75-.75.75z\"></path><circle cx=\"8.868\" cy=\"8.309\" r=\"1.542\"></circle></g></svg>\r\n}\r\n\r\nexport const ICON_REPLY = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M14.046 2.242l-4.148-.01h-.002c-4.374 0-7.8 3.427-7.8 7.802 0 4.098 3.186 7.206 7.465 7.37v3.828c0 .108.044.286.12.403.142.225.384.347.632.347.138 0 .277-.038.402-.118.264-.168 6.473-4.14 8.088-5.506 1.902-1.61 3.04-3.97 3.043-6.312v-.017c-.006-4.367-3.43-7.787-7.8-7.788zm3.787 12.972c-1.134.96-4.862 3.405-6.772 4.643V16.67c0-.414-.335-.75-.75-.75h-.396c-3.66 0-6.318-2.476-6.318-5.886 0-3.534 2.768-6.302 6.3-6.302l4.147.01h.002c3.532 0 6.3 2.766 6.302 6.296-.003 1.91-.942 3.844-2.514 5.176z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_RETWEET = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M23.77 15.67c-.292-.293-.767-.293-1.06 0l-2.22 2.22V7.65c0-2.068-1.683-3.75-3.75-3.75h-5.85c-.414 0-.75.336-.75.75s.336.75.75.75h5.85c1.24 0 2.25 1.01 2.25 2.25v10.24l-2.22-2.22c-.293-.293-.768-.293-1.06 0s-.294.768 0 1.06l3.5 3.5c.145.147.337.22.53.22s.383-.072.53-.22l3.5-3.5c.294-.292.294-.767 0-1.06zm-10.66 3.28H7.26c-1.24 0-2.25-1.01-2.25-2.25V6.46l2.22 2.22c.148.147.34.22.532.22s.384-.073.53-.22c.293-.293.293-.768 0-1.06l-3.5-3.5c-.293-.294-.768-.294-1.06 0l-3.5 3.5c-.294.292-.294.767 0 1.06s.767.293 1.06 0l2.22-2.22V16.7c0 2.068 1.683 3.75 3.75 3.75h5.85c.414 0 .75-.336.75-.75s-.337-.75-.75-.75z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_HEART = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12zM7.354 4.225c-2.08 0-3.903 1.988-3.903 4.255 0 5.74 7.034 11.596 8.55 11.658 1.518-.062 8.55-5.917 8.55-11.658 0-2.267-1.823-4.255-3.903-4.255-2.528 0-3.94 2.936-3.952 2.965-.23.562-1.156.562-1.387 0-.014-.03-1.425-2.965-3.954-2.965z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_HEARTFULL = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M12 21.638h-.014C9.403 21.59 1.95 14.856 1.95 8.478c0-3.064 2.525-5.754 5.403-5.754 2.29 0 3.83 1.58 4.646 2.73.814-1.148 2.354-2.73 4.645-2.73 2.88 0 5.404 2.69 5.404 5.755 0 6.376-7.454 13.11-10.037 13.157H12z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_SHARE = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M17.53 7.47l-5-5c-.293-.293-.768-.293-1.06 0l-5 5c-.294.293-.294.768 0 1.06s.767.294 1.06 0l3.72-3.72V15c0 .414.336.75.75.75s.75-.336.75-.75V4.81l3.72 3.72c.146.147.338.22.53.22s.384-.072.53-.22c.293-.293.293-.767 0-1.06z\"></path><path d=\"M19.708 21.944H4.292C3.028 21.944 2 20.916 2 19.652V14c0-.414.336-.75.75-.75s.75.336.75.75v5.652c0 .437.355.792.792.792h15.416c.437 0 .792-.355.792-.792V14c0-.414.336-.75.75-.75s.75.336.75.75v5.652c0 1.264-1.028 2.292-2.292 2.292z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_ARROWBACK = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M20 11H7.414l4.293-4.293c.39-.39.39-1.023 0-1.414s-1.023-.39-1.414 0l-6 6c-.39.39-.39 1.023 0 1.414l6 6c.195.195.45.293.707.293s.512-.098.707-.293c.39-.39.39-1.023 0-1.414L7.414 13H20c.553 0 1-.447 1-1s-.447-1-1-1z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_MARKDOWN = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M12 14.315c-2.088 0-3.787-1.698-3.787-3.786S9.913 6.74 12 6.74s3.787 1.7 3.787 3.787-1.7 3.785-3.787 3.785zm0-6.073c-1.26 0-2.287 1.026-2.287 2.287S10.74 12.814 12 12.814s2.287-1.025 2.287-2.286S13.26 8.24 12 8.24z\"></path><path d=\"M20.692 10.69C20.692 5.9 16.792 2 12 2s-8.692 3.9-8.692 8.69c0 1.902.603 3.708 1.743 5.223l.003-.002.007.015c1.628 2.07 6.278 5.757 6.475 5.912.138.11.302.163.465.163.163 0 .327-.053.465-.162.197-.155 4.847-3.84 6.475-5.912l.007-.014.002.002c1.14-1.516 1.742-3.32 1.742-5.223zM12 20.29c-1.224-.99-4.52-3.715-5.756-5.285-.94-1.25-1.436-2.742-1.436-4.312C4.808 6.727 8.035 3.5 12 3.5s7.192 3.226 7.192 7.19c0 1.57-.497 3.062-1.436 4.313-1.236 1.57-4.532 4.294-5.756 5.285z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_DATE = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M19.708 2H4.292C3.028 2 2 3.028 2 4.292v15.416C2 20.972 3.028 22 4.292 22h15.416C20.972 22 22 20.972 22 19.708V4.292C22 3.028 20.972 2 19.708 2zm.792 17.708c0 .437-.355.792-.792.792H4.292c-.437 0-.792-.355-.792-.792V6.418c0-.437.354-.79.79-.792h15.42c.436 0 .79.355.79.79V19.71z\"></path><circle cx=\"7.032\" cy=\"8.75\" r=\"1.285\"></circle><circle cx=\"7.032\" cy=\"13.156\" r=\"1.285\"></circle><circle cx=\"16.968\" cy=\"8.75\" r=\"1.285\"></circle><circle cx=\"16.968\" cy=\"13.156\" r=\"1.285\"></circle><circle cx=\"12\" cy=\"8.75\" r=\"1.285\"></circle><circle cx=\"12\" cy=\"13.156\" r=\"1.285\"></circle><circle cx=\"7.032\" cy=\"17.486\" r=\"1.285\"></circle><circle cx=\"12\" cy=\"17.486\" r=\"1.285\"></circle></g></svg>\r\n}\r\n\r\nexport const ICON_CLOSE = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M13.414 12l5.793-5.793c.39-.39.39-1.023 0-1.414s-1.023-.39-1.414 0L12 10.586 6.207 4.793c-.39-.39-1.023-.39-1.414 0s-.39 1.023 0 1.414L10.586 12l-5.793 5.793c-.39.39-.39 1.023 0 1.414.195.195.45.293.707.293s.512-.098.707-.293L12 13.414l5.793 5.793c.195.195.45.293.707.293s.512-.098.707-.293c.39-.39.39-1.023 0-1.414L13.414 12z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_DELETE = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M20.746 5.236h-3.75V4.25c0-1.24-1.01-2.25-2.25-2.25h-5.5c-1.24 0-2.25 1.01-2.25 2.25v.986h-3.75c-.414 0-.75.336-.75.75s.336.75.75.75h.368l1.583 13.262c.216 1.193 1.31 2.027 2.658 2.027h8.282c1.35 0 2.442-.834 2.664-2.072l1.577-13.217h.368c.414 0 .75-.336.75-.75s-.335-.75-.75-.75zM8.496 4.25c0-.413.337-.75.75-.75h5.5c.413 0 .75.337.75.75v.986h-7V4.25zm8.822 15.48c-.1.55-.664.795-1.18.795H7.854c-.517 0-1.083-.246-1.175-.75L5.126 6.735h13.74L17.32 19.732z\"></path><path d=\"M10 17.75c.414 0 .75-.336.75-.75v-7c0-.414-.336-.75-.75-.75s-.75.336-.75.75v7c0 .414.336.75.75.75zm4 0c.414 0 .75-.336.75-.75v-7c0-.414-.336-.75-.75-.75s-.75.336-.75.75v7c0 .414.336.75.75.75z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_UPLOAD = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M19.708 22H4.292C3.028 22 2 20.972 2 19.708V7.375C2 6.11 3.028 5.083 4.292 5.083h2.146C7.633 3.17 9.722 2 12 2c2.277 0 4.367 1.17 5.562 3.083h2.146C20.972 5.083 22 6.11 22 7.375v12.333C22 20.972 20.972 22 19.708 22zM4.292 6.583c-.437 0-.792.355-.792.792v12.333c0 .437.355.792.792.792h15.416c.437 0 .792-.355.792-.792V7.375c0-.437-.355-.792-.792-.792h-2.45c-.317.05-.632-.095-.782-.382-.88-1.665-2.594-2.7-4.476-2.7-1.883 0-3.598 1.035-4.476 2.702-.16.302-.502.46-.833.38H4.293z\"></path><path d=\"M12 8.167c-2.68 0-4.86 2.18-4.86 4.86s2.18 4.86 4.86 4.86 4.86-2.18 4.86-4.86-2.18-4.86-4.86-4.86zm2 5.583h-1.25V15c0 .414-.336.75-.75.75s-.75-.336-.75-.75v-1.25H10c-.414 0-.75-.336-.75-.75s.336-.75.75-.75h1.25V11c0-.414.336-.75.75-.75s.75.336.75.75v1.25H14c.414 0 .75.336.75.75s-.336.75-.75.75z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_NEWLIST = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M23.25 3.25h-2.425V.825c0-.414-.336-.75-.75-.75s-.75.336-.75.75V3.25H16.9c-.414 0-.75.336-.75.75s.336.75.75.75h2.425v2.425c0 .414.336.75.75.75s.75-.336.75-.75V4.75h2.425c.414 0 .75-.336.75-.75s-.336-.75-.75-.75zM18.575 22H4.25C3.01 22 2 20.99 2 19.75V5.5c0-1.24 1.01-2.25 2.25-2.25h8.947c.414 0 .75.336.75.75s-.336.75-.75.75H4.25c-.413 0-.75.336-.75.75v14.25c0 .414.337.75.75.75h14.325c.413 0 .75-.336.75-.75v-8.872c0-.414.336-.75.75-.75s.75.336.75.75v8.872c0 1.24-1.01 2.25-2.25 2.25z\"></path><path d=\"M16.078 9.583H6.673c-.414 0-.75-.336-.75-.75s.336-.75.75-.75h9.405c.414 0 .75.336.75.75s-.336.75-.75.75zm0 3.867H6.673c-.414 0-.75-.337-.75-.75s.336-.75.75-.75h9.405c.414 0 .75.335.75.75s-.336.75-.75.75zm-4.703 3.866H6.673c-.414 0-.75-.336-.75-.75s.336-.75.75-.75h4.702c.414 0 .75.336.75.75s-.336.75-.75.75z\"></path></g></svg>\r\n}\r\n\r\n\r\nexport const ICON_SEARCH = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M21.53 20.47l-3.66-3.66C19.195 15.24 20 13.214 20 11c0-4.97-4.03-9-9-9s-9 4.03-9 9 4.03 9 9 9c2.215 0 4.24-.804 5.808-2.13l3.66 3.66c.147.146.34.22.53.22s.385-.073.53-.22c.295-.293.295-.767.002-1.06zM3.5 11c0-4.135 3.365-7.5 7.5-7.5s7.5 3.365 7.5 7.5-3.365 7.5-7.5 7.5-7.5-3.365-7.5-7.5z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_FEATHER = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M8.8 7.2H5.6V3.9c0-.4-.3-.8-.8-.8s-.7.4-.7.8v3.3H.8c-.4 0-.8.3-.8.8s.3.8.8.8h3.3v3.3c0 .4.3.8.8.8s.8-.3.8-.8V8.7H9c.4 0 .8-.3.8-.8s-.5-.7-1-.7zm15-4.9v-.1h-.1c-.1 0-9.2 1.2-14.4 11.7-3.8 7.6-3.6 9.9-3.3 9.9.3.1 3.4-6.5 6.7-9.2 5.2-1.1 6.6-3.6 6.6-3.6s-1.5.2-2.1.2c-.8 0-1.4-.2-1.7-.3 1.3-1.2 2.4-1.5 3.5-1.7.9-.2 1.8-.4 3-1.2 2.2-1.6 1.9-5.5 1.8-5.7z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_LIGHT = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 512 512\"><g><path fill=\"currentColor\" d=\"M502.42 240.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.41-94.8a17.31 17.31 0 0 0-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4a17.31 17.31 0 0 0 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.41-33.5 47.3 94.7a17.31 17.31 0 0 0 31 0l47.31-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3a17.33 17.33 0 0 0 .2-31.1zm-155.9 106c-49.91 49.9-131.11 49.9-181 0a128.13 128.13 0 0 1 0-181c49.9-49.9 131.1-49.9 181 0a128.13 128.13 0 0 1 0 181z\"></path><path fill=\"currentColor\" d=\"M352 256a96 96 0 1 1-96-96 96.15 96.15 0 0 1 96 96z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_DARK = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 512 512\"><g><path fill=\"currentColor\" d=\"M320 32L304 0l-16 32-32 16 32 16 16 32 16-32 32-16zm138.7 149.3L432 128l-26.7 53.3L352 208l53.3 26.7L432 288l26.7-53.3L512 208z\" ></path><path fill=\"currentColor\" d=\"M332.2 426.4c8.1-1.6 13.9 8 8.6 14.5a191.18 191.18 0 0 1-149 71.1C85.8 512 0 426 0 320c0-120 108.7-210.6 227-188.8 8.2 1.6 10.1 12.6 2.8 16.7a150.3 150.3 0 0 0-76.1 130.8c0 94 85.4 165.4 178.5 147.7z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_NEWMSG = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M23.25 3.25h-2.425V.825c0-.414-.336-.75-.75-.75s-.75.336-.75.75V3.25H16.9c-.414 0-.75.336-.75.75s.336.75.75.75h2.425v2.425c0 .414.336.75.75.75s.75-.336.75-.75V4.75h2.425c.414 0 .75-.336.75-.75s-.336-.75-.75-.75zm-3.175 6.876c-.414 0-.75.336-.75.75v8.078c0 .414-.337.75-.75.75H4.095c-.412 0-.75-.336-.75-.75V8.298l6.778 4.518c.368.246.79.37 1.213.37.422 0 .844-.124 1.212-.37l4.53-3.013c.336-.223.428-.676.204-1.012-.223-.332-.675-.425-1.012-.2l-4.53 3.014c-.246.162-.563.163-.808 0l-7.586-5.06V5.5c0-.414.337-.75.75-.75h9.094c.414 0 .75-.336.75-.75s-.336-.75-.75-.75H4.096c-1.24 0-2.25 1.01-2.25 2.25v13.455c0 1.24 1.01 2.25 2.25 2.25h14.48c1.24 0 2.25-1.01 2.25-2.25v-8.078c0-.415-.337-.75-.75-.75z\"></path></g></svg>\r\n}\r\n\r\nexport const ICON_SEND = (props) => {\r\n    return <svg style={props.styles} viewBox=\"0 0 24 24\"><g><path d=\"M21.13 11.358L3.614 2.108c-.29-.152-.64-.102-.873.126-.23.226-.293.577-.15.868l4.362 8.92-4.362 8.92c-.143.292-.08.643.15.868.145.14.333.212.523.212.12 0 .24-.028.35-.087l17.517-9.25c.245-.13.4-.386.4-.664s-.155-.532-.4-.662zM4.948 4.51l12.804 6.762H8.255l-3.307-6.76zm3.307 8.26h9.498L4.948 19.535l3.307-6.763z\"></path></g></svg>\r\n}\r\n","import {\n  createSlice,\n  createSelector,\n  createAsyncThunk,\n  createEntityAdapter,\n} from '@reduxjs/toolkit'\nimport {\n  client,\n  getSqueak,\n  likeSqueak,\n  unlikeSqueak,\n  getAncestorSqueaks,\n  getReplySqueaks,\n  getTimelineSqueaks,\n  getSearchSqueaks,\n  getProfileSqueaks,\n  makeSqueak,\n  deleteSqueak,\n  getSqueakOffers,\n  buySqueak,\n  downloadSqueak,\n  downloadPubkeySqueaks,\n} from '../../api/client'\n\nconst initialState = {\n  currentSqueakStatus: 'idle',\n  currentSqueak: null,\n  ancestorSqueaksStatus: 'idle',\n  ancestorSqueaks: [],\n  replySqueaksStatus: 'idle',\n  replySqueaks: [],\n  timelineSqueaksStatus: 'idle',\n  timelineSqueaks: [],\n  searchSqueaksStatus: 'idle',\n  searchSqueaks: [],\n  profileSqueaksStatus: 'idle',\n  profileSqueaks: [],\n  makeSqueakStatus: 'idle',\n  squeakOffersStatus: 'idle',\n  squeakOffers: [],\n  buySqueakStatus: 'idle',\n  downloadSqueakStatus: 'idle',\n  downloadPubkeySqueakStatus: 'idle',\n}\n\n// Thunk functions\nexport const fetchSqueak = createAsyncThunk(\n  'squeaks/fetchSqueak',\n  async (squeakHash) => {\n    console.log('Fetching squeak');\n    const response = await getSqueak(squeakHash);\n    return response.getSqueakDisplayEntry();\n  }\n)\n\nexport const setLikeSqueak = createAsyncThunk(\n  'squeaks/setLikeSqueak',\n  async (squeakHash) => {\n    console.log('Liking squeak');\n    await likeSqueak(squeakHash);\n    const response = await getSqueak(squeakHash);\n    return response.getSqueakDisplayEntry();\n  }\n)\n\nexport const setUnlikeSqueak = createAsyncThunk(\n  'squeaks/setUnlikeSqueak',\n  async (squeakHash) => {\n    console.log('Unliking squeak');\n    await unlikeSqueak(squeakHash);\n    const response = await getSqueak(squeakHash);\n    return response.getSqueakDisplayEntry();\n  }\n)\n\nexport const setDeleteSqueak = createAsyncThunk(\n  'squeaks/setDeleteSqueak',\n  async (squeakHash) => {\n    console.log('Deleting squeak');\n    await deleteSqueak(squeakHash);\n    return null;\n  }\n)\n\nexport const fetchAncestorSqueaks = createAsyncThunk(\n  'squeaks/fetchAncestorSqueaks',\n  async (squeakHash) => {\n    console.log('Fetching ancestor squeaks');\n    const response = await getAncestorSqueaks(squeakHash);\n    return response.getSqueakDisplayEntriesList();\n  }\n)\n\nexport const fetchReplySqueaks = createAsyncThunk(\n  'squeaks/fetchReplySqueaks',\n  async (values) => {\n    console.log('Fetching reply squeaks');\n    console.log(values.squeakHash);\n    console.log(values.limit);\n    console.log(values.lastSqueak);\n    const response = await getReplySqueaks(\n      values.squeakHash,\n      values.limit,\n      values.lastSqueak,\n    );\n    return response.getSqueakDisplayEntriesList();\n  }\n)\n\nexport const fetchTimeline = createAsyncThunk(\n  'squeaks/fetchTimeline',\n  async (lastSqueak) => {\n    const response = await getTimelineSqueaks(5, lastSqueak);\n    return response.getSqueakDisplayEntriesList();\n  }\n)\n\nexport const fetchSearch = createAsyncThunk(\n  'searchs/fetchSearch',\n  async (values) => {\n    const response = await getSearchSqueaks(\n      values.searchText,\n      values.limit,\n      values.lastSqueak,\n    );\n    return response.getSqueakDisplayEntriesList();\n  }\n)\n\nexport const fetchProfileSqueaks = createAsyncThunk(\n  'squeaks/fetchProfileSqueaks',\n  async (values) => {\n    console.log('Fetching profile squeaks');\n    console.log(values.profilePubkey);\n    console.log(values.limit);\n    console.log(values.lastSqueak);\n    const response = await getProfileSqueaks(\n      values.profilePubkey,\n      values.limit,\n      values.lastSqueak,\n    );\n    return response.getSqueakDisplayEntriesList();\n  }\n)\n\nexport const setMakeSqueak = createAsyncThunk(\n  'squeaks/makeSqueak',\n  async (values) => {\n    console.log('Making squeak');\n    let profileId = values.signingProfile;\n    let content = values.description;\n    let replyTo = values.replyTo;\n    let hasRecipient = values.hasRecipient;\n    let recipientProfileId = values.recipientProfileId;\n\n    const response = await makeSqueak(\n      profileId,\n      content,\n      replyTo,\n      hasRecipient,\n      recipientProfileId,\n    );\n    return response.getSqueakHash();\n  }\n)\n\nexport const fetchSqueakOffers = createAsyncThunk(\n  'squeaks/fetchSqueakOffers',\n  async (squeakHash) => {\n    console.log('Fetching squeak offers');\n    const response = await getSqueakOffers(squeakHash);\n    console.log(response);\n    return response.getOffersList();\n  }\n)\n\nexport const setBuySqueak = createAsyncThunk(\n  'squeaks/setBuySqueak',\n  async (values) => {\n    console.log('Buying squeak');\n    let offerId = values.offerId;\n    let squeakHash = values.squeakHash;\n    await buySqueak(offerId);\n    const response = await getSqueak(squeakHash);\n    return response.getSqueakDisplayEntry();\n  }\n)\n\nexport const setDownloadSqueak = createAsyncThunk(\n  'squeaks/setDownloadSqueak',\n  async (squeakHash) => {\n    console.log('Downloading squeak');\n    await downloadSqueak(squeakHash);\n    const response = await getSqueak(squeakHash);\n    return response.getSqueakDisplayEntry();\n  }\n)\n\nexport const setDownloadPubkeySqueaks = createAsyncThunk(\n  'squeaks/setDownloadPubkeySqueaks',\n  async (pubkey) => {\n    console.log('Downloading pubkey squeaks');\n    const response = await downloadPubkeySqueaks(pubkey);\n    return response;\n  }\n)\n\nconst updatedSqueakInArray = (squeakArr, newSqueak) => {\n  const currentIndex = squeakArr.findIndex(squeak => squeak.getSqueakHash() === newSqueak.getSqueakHash());\n  if (currentIndex != -1) {\n    squeakArr[currentIndex] = newSqueak;\n  }\n}\n\nconst removeSqueakInArray = (squeakArr, squeakHash) => {\n  return squeakArr.filter(squeak => squeak.getSqueakHash() !== squeakHash);\n}\n\n\nconst squeaksSlice = createSlice({\n  name: 'squeaks',\n  initialState,\n  reducers: {\n    clearAll(state, action) {\n      console.log('Clear squeak and other data.');\n      state.currentSqueakStatus = 'idle';\n      state.currentSqueak = null;\n    },\n    clearAncestors(state, action) {\n      console.log('Clear squeak and other data.');\n      state.ancestorSqueaksStatus = 'idle';\n      state.ancestorSqueaks = []\n    },\n    clearReplies(state, action) {\n      console.log('Clear reply squeaks.');\n      state.replySqueaksStatus = 'idle';\n      state.replySqueaks = [];\n    },\n    clearTimeline(state, action) {\n      state.timelineSqueaks = [];\n    },\n    clearSearch(state, action) {\n      state.searchSqueaks = [];\n    },\n    clearProfileSqueaks(state, action) {\n      state.profileSqueaks = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n    .addCase(fetchSqueak.pending, (state, action) => {\n      state.currentSqueakStatus = 'loading'\n    })\n    .addCase(fetchSqueak.fulfilled, (state, action) => {\n      console.log(action);\n      const newSqueak = action.payload;\n      state.currentSqueak = newSqueak;\n      state.currentSqueakStatus = 'idle';\n    })\n    .addCase(setLikeSqueak.fulfilled, (state, action) => {\n      console.log(action);\n      const newSqueak = action.payload;\n      if (state.currentSqueak && state.currentSqueak.getSqueakHash() === newSqueak.getSqueakHash()) {\n        state.currentSqueak = newSqueak;\n      }\n      updatedSqueakInArray(state.timelineSqueaks, newSqueak);\n      updatedSqueakInArray(state.searchSqueaks, newSqueak);\n      updatedSqueakInArray(state.ancestorSqueaks, newSqueak);\n      updatedSqueakInArray(state.replySqueaks, newSqueak);\n      updatedSqueakInArray(state.profileSqueaks, newSqueak);\n    })\n    .addCase(setUnlikeSqueak.fulfilled, (state, action) => {\n      console.log(action);\n      const newSqueak = action.payload;\n      if (state.currentSqueak && state.currentSqueak.getSqueakHash() === newSqueak.getSqueakHash()) {\n        state.currentSqueak = newSqueak;\n      }\n      updatedSqueakInArray(state.timelineSqueaks, newSqueak);\n      updatedSqueakInArray(state.searchSqueaks, newSqueak);\n      updatedSqueakInArray(state.ancestorSqueaks, newSqueak);\n      updatedSqueakInArray(state.replySqueaks, newSqueak);\n      updatedSqueakInArray(state.profileSqueaks, newSqueak);\n    })\n    .addCase(setDeleteSqueak.fulfilled, (state, action) => {\n      console.log(action);\n      const deletedSqueakHash = action.meta.arg;\n      if (state.currentSqueak && state.currentSqueak.getSqueakHash() === deletedSqueakHash) {\n        console.log('Matched current squeak')\n        state.currentSqueak = null;\n      }\n      state.timelineSqueaks = removeSqueakInArray(state.timelineSqueaks, deletedSqueakHash);\n      state.searchSqueaks = removeSqueakInArray(state.searchSqueaks, deletedSqueakHash);\n      state.ancestorSqueaks = removeSqueakInArray(state.ancestorSqueaks, deletedSqueakHash);\n      state.replySqueaks = removeSqueakInArray(state.replySqueaks, deletedSqueakHash);\n      state.profileSqueaks = removeSqueakInArray(state.profileSqueaks, deletedSqueakHash);\n    })\n    .addCase(fetchAncestorSqueaks.pending, (state, action) => {\n      state.ancestorSqueaksStatus = 'loading'\n    })\n    .addCase(fetchAncestorSqueaks.fulfilled, (state, action) => {\n      console.log(action);\n      const ancestorSqueaks = action.payload;\n      state.ancestorSqueaks = ancestorSqueaks;\n      state.ancestorSqueaksStatus = 'idle';\n    })\n    .addCase(fetchReplySqueaks.pending, (state, action) => {\n      state.replySqueaksStatus = 'loading'\n    })\n    .addCase(fetchReplySqueaks.fulfilled, (state, action) => {\n      console.log(action);\n      const replySqueaks = action.payload;\n      state.replySqueaks = replySqueaks;\n      state.replySqueaksStatus = 'idle';\n    })\n    .addCase(fetchTimeline.pending, (state, action) => {\n      state.timelineSqueaksStatus = 'loading'\n    })\n    .addCase(fetchTimeline.fulfilled, (state, action) => {\n      const newEntities = action.payload;\n      state.timelineSqueaks = state.timelineSqueaks.concat(newEntities);\n      state.timelineSqueaksStatus = 'idle'\n    })\n    .addCase(fetchSearch.pending, (state, action) => {\n      state.searchSqueaksStatus = 'loading'\n    })\n    .addCase(fetchSearch.fulfilled, (state, action) => {\n      const newEntities = action.payload;\n      state.searchSqueaks = state.searchSqueaks.concat(newEntities);\n      state.searchSqueaksStatus = 'idle'\n    })\n    .addCase(fetchProfileSqueaks.pending, (state, action) => {\n      state.profileSqueaksStatus = 'loading'\n    })\n    .addCase(fetchProfileSqueaks.fulfilled, (state, action) => {\n      const newEntities = action.payload;\n      state.profileSqueaks = state.profileSqueaks.concat(newEntities);\n      state.profileSqueaksStatus = 'idle'\n    })\n    .addCase(setMakeSqueak.pending, (state, action) => {\n      console.log('setMakeSqueak pending');\n      state.makeSqueakStatus = 'loading'\n    })\n    .addCase(setMakeSqueak.rejected, (state, action) => {\n      state.makeSqueakStatus = 'idle'\n    })\n    .addCase(setMakeSqueak.fulfilled, (state, action) => {\n      console.log('setMakeSqueak fulfilled');\n      console.log(action);\n      const newSqueakHash = action.payload;\n      state.makeSqueakStatus = 'idle';\n      console.log('Go to new squeak');\n    })\n    .addCase(fetchSqueakOffers.pending, (state, action) => {\n      state.squeakOffersStatus = 'loading'\n    })\n    .addCase(fetchSqueakOffers.fulfilled, (state, action) => {\n      console.log(action);\n      const squeakOffers = action.payload;\n      state.squeakOffers = squeakOffers;\n      state.squeakOffersStatus = 'idle';\n    })\n    .addCase(setBuySqueak.pending, (state, action) => {\n      state.buySqueakStatus = 'loading'\n    })\n    .addCase(setBuySqueak.rejected, (state, action) => {\n      state.buySqueakStatus = 'idle'\n    })\n    .addCase(setBuySqueak.fulfilled, (state, action) => {\n      console.log(action);\n      state.buySqueakStatus = 'idle';\n      const newSqueak = action.payload;\n      if (state.currentSqueak && state.currentSqueak.getSqueakHash() === newSqueak.getSqueakHash()) {\n        state.currentSqueak = newSqueak;\n      }\n      updatedSqueakInArray(state.timelineSqueaks, newSqueak);\n      updatedSqueakInArray(state.searchSqueaks, newSqueak);\n      updatedSqueakInArray(state.ancestorSqueaks, newSqueak);\n      updatedSqueakInArray(state.replySqueaks, newSqueak);\n      updatedSqueakInArray(state.profileSqueaks, newSqueak);\n    })\n    .addCase(setDownloadSqueak.pending, (state, action) => {\n      state.downloadSqueakStatus = 'loading'\n    })\n    .addCase(setDownloadSqueak.rejected, (state, action) => {\n      state.downloadSqueakStatus = 'idle'\n    })\n    .addCase(setDownloadSqueak.fulfilled, (state, action) => {\n      console.log(action);\n      state.downloadSqueakStatus = 'idle';\n      const newSqueak = action.payload;\n      // TODO: check if current squeak is the one that got downloaded.\n      state.currentSqueak = newSqueak;\n    })\n    .addCase(setDownloadPubkeySqueaks.pending, (state, action) => {\n      state.downloadPubkeySqueakStatus = 'loading'\n    })\n    .addCase(setDownloadPubkeySqueaks.rejected, (state, action) => {\n      state.downloadPubkeySqueakStatus = 'idle'\n    })\n    .addCase(setDownloadPubkeySqueaks.fulfilled, (state, action) => {\n      console.log(action);\n      state.downloadPubkeySqueakStatus = 'idle';\n    })\n  },\n})\n\nexport const {\n  clearAll,\n  clearAncestors,\n  clearReplies,\n  clearTimeline,\n  clearSearch,\n  clearProfileSqueaks,\n} = squeaksSlice.actions\n\nexport default squeaksSlice.reducer\n\nexport const selectCurrentSqueak = state => state.squeaks.currentSqueak\n\nexport const selectCurrentSqueakStatus = state => state.squeaks.currentSqueakStatus\n\nexport const selectAncestorSqueaks = state => state.squeaks.ancestorSqueaks\n\nexport const selectAncestorSqueaksStatus = state => state.squeaks.ancestorSqueaksStatus\n\nexport const selectReplySqueaks = state => state.squeaks.replySqueaks\n\nexport const selectReplySqueaksStatus = state => state.squeaks.replySqueaksStatus\n\nexport const selectTimelineSqueaks = state => state.squeaks.timelineSqueaks\n\nexport const selectTimelineSqueaksStatus = state => state.squeaks.timelineSqueaksStatus\n\nexport const selectLastTimelineSqueak = createSelector(\n  selectTimelineSqueaks,\n  squeaks => squeaks.length > 0 && squeaks[squeaks.length - 1]\n)\n\nexport const selectSearchSqueaks = state => state.squeaks.searchSqueaks\n\nexport const selectSearchSqueaksStatus = state => state.squeaks.searchSqueaksStatus\n\nexport const selectLastSearchSqueak = createSelector(\n  selectSearchSqueaks,\n  squeaks => squeaks.length > 0 && squeaks[squeaks.length - 1]\n)\n\nexport const selectProfileSqueaks = state => state.squeaks.profileSqueaks\n\nexport const selectProfileSqueaksStatus = state => state.squeaks.profileSqueaksStatus\n\nexport const selectLastProfileSqueak = createSelector(\n  selectProfileSqueaks,\n  squeaks => squeaks.length > 0 && squeaks[squeaks.length - 1]\n)\n\nexport const selectMakeSqueakStatus = state => state.squeaks.makeSqueakStatus\n\nexport const selectSqueakOffers = state => state.squeaks.squeakOffers\n\nexport const selectSqueakOffersStatus = state => state.squeaks.squeakOffersStatus\n\nexport const selectBuySqueakStatus = state => state.squeaks.buySqueakStatus\n\nexport const selectDownloadSqueakStatus = state => state.squeaks.downloadSqueakStatus\n\nexport const selectDownloadPubkeySqueakStatus = state => state.squeaks.downloadPubkeySqueakStatus\n","import React from 'react'\r\nimport './style.css'\r\n\r\nconst Loader = () => {\r\n    return(\r\n        <div className=\"loader-wrapper\">\r\n            <svg className=\"loader_svg\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n            width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" xmlSpace=\"preserve\">\r\n            <path fill=\"#1da1f2\" d=\"M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z\">\r\n                <animateTransform attributeType=\"xml\"\r\n                attributeName=\"transform\"\r\n                type=\"rotate\"\r\n                from=\"0 25 25\"\r\n                to=\"360 25 25\"\r\n                dur=\"0.6s\"\r\n                repeatCount=\"indefinite\"/>\r\n                </path>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import {\n  createSlice,\n  createSelector,\n  createAsyncThunk,\n  createEntityAdapter,\n} from '@reduxjs/toolkit'\nimport {\n  getProfile,\n  getProfileByPubkey,\n  setProfileFollowing,\n  deleteProfile,\n  getSigningProfiles,\n  getContactProfiles,\n  createContactProfile,\n  createSigningProfile,\n  importSigningProfile,\n  renameProfile,\n  changeProfileImage,\n  clearProfileImage,\n  getPrivateKey,\n} from '../../api/client'\n\nconst initialState = {\n  currentProfileStatus: 'idle',\n  currentProfile: null,\n  signingProfilesStatus: 'idle',\n  signingProfiles: [],\n  contactProfilesStatus: 'idle',\n  contactProfiles: [],\n  createContactProfileStatus: 'idle',\n  createSigningProfileStatus: 'idle',\n  importSigningProfileStatus: 'idle',\n  exportPrivateKeyStatus: 'idle',\n}\n\n// Thunk functions\nexport const fetchProfile = createAsyncThunk(\n  'profile/fetchProfile',\n  async (pubkey) => {\n    console.log('Fetching profile');\n    const response = await getProfileByPubkey(pubkey);\n    console.log(response);\n    return response.getSqueakProfile();\n  }\n)\n\n// Use profile id for now. In the future, change RPC to accept pubkey.\nexport const setFollowProfile = createAsyncThunk(\n  'profile/setFollowProfile',\n  async (id) => {\n    console.log('Following profile');\n    await setProfileFollowing(id, true);\n    const response = await getProfile(id);\n    return response.getSqueakProfile();\n  }\n)\n\n// Use profile id for now. In the future, change RPC to accept pubkey.\nexport const setUnfollowProfile = createAsyncThunk(\n  'profile/setUnfollowProfile',\n  async (id) => {\n    console.log('Unfollowing profile');\n    await setProfileFollowing(id, false);\n    const response = await getProfile(id);\n    return response.getSqueakProfile();\n  }\n)\n\n// Use profile id for now. In the future, change RPC to accept pubkey.\nexport const setDeleteProfile = createAsyncThunk(\n  'profile/setDeleteProfile',\n  async (values) => {\n    console.log('Deleting profile');\n    await deleteProfile(values.profileId);\n    return null;\n  }\n)\n\n// Use profile id for now. In the future, change RPC to accept pubkey.\nexport const setRenameProfile = createAsyncThunk(\n  'profile/setRenameProfile',\n  async (values) => {\n    console.log('Renaming profile');\n    let profileId = values.profileId;\n    let profileName = values.profileName;\n    await renameProfile(profileId, profileName);\n    const response = await getProfile(profileId);\n    return response.getSqueakProfile();\n  }\n)\n\n// Use profile id for now. In the future, change RPC to accept pubkey.\nexport const setProfileImage = createAsyncThunk(\n  'profile/setProfileImage',\n  async (values) => {\n    console.log('Changing image for profile');\n    let profileId = values.profileId;\n    let imageBase64 = values.imageBase64;\n    await changeProfileImage(profileId, imageBase64);\n    const response = await getProfile(profileId);\n    return response.getSqueakProfile();\n  }\n)\n\n// Use profile id for now. In the future, change RPC to accept pubkey.\nexport const setClearProfileImage = createAsyncThunk(\n  'profile/setClearProfileImage',\n  async (values) => {\n    console.log('Clearing image for profile');\n    let profileId = values.profileId;\n    await clearProfileImage(profileId);\n    const response = await getProfile(profileId);\n    return response.getSqueakProfile();\n  }\n)\n\nexport const fetchSigningProfiles = createAsyncThunk(\n  'profiles/fetchSigningProfiles',\n  async () => {\n    const response = await getSigningProfiles();\n    return response.getSqueakProfilesList();\n  }\n)\n\nexport const fetchContactProfiles = createAsyncThunk(\n  'profiles/fetchContactProfiles',\n  async () => {\n    const response = await getContactProfiles();\n    return response.getSqueakProfilesList();\n  }\n)\n\nexport const setCreateContactProfile = createAsyncThunk(\n  'profiles/createContactProfile',\n  async (values) => {\n    console.log('Creating contact profile');\n    let profileName = values.profileName;\n    let pubkey = values.pubkey;\n    const createResponse = await createContactProfile(profileName, pubkey);\n    console.log(createResponse);\n    const response = await getProfile(createResponse.getProfileId());\n    console.log(response);\n    return response.getSqueakProfile().getPubkey();\n  }\n)\n\nexport const setCreateSigningProfile = createAsyncThunk(\n  'profiles/createSigningProfile',\n  async (values) => {\n    console.log('Creating signing profile');\n    let profileName = values.profileName;\n    const createResponse = await createSigningProfile(profileName);\n    console.log(createResponse);\n    const response = await getProfile(createResponse.getProfileId());\n    console.log(response);\n    return response.getSqueakProfile().getPubkey();\n  }\n)\n\nexport const setImportSigningProfile = createAsyncThunk(\n  'profiles/importSigningProfile',\n  async (values) => {\n    console.log('Importing signing profile');\n    let profileName = values.profileName;\n    let privateKey = values.privateKey;\n    const createResponse = await importSigningProfile(profileName, privateKey);\n    console.log(createResponse);\n    const response = await getProfile(createResponse.getProfileId());\n    console.log(response);\n    return response.getSqueakProfile().getPubkey();\n  }\n)\n\nexport const getProfilePrivateKey = createAsyncThunk(\n  'profiles/getProfilePrivateKey',\n  async (values) => {\n    console.log('Exporting profile private key');\n    let profileId = values.profileId;\n    const response = await getPrivateKey(profileId);\n    console.log(response);\n    return response.getPrivateKey();\n  }\n)\n\nconst updatedProfileInArray = (profileArr, newProfile) => {\n  const currentIndex = profileArr.findIndex(profile => profile.getPubkey() === newProfile.getPubkey());\n  if (currentIndex != -1) {\n    profileArr[currentIndex] = newProfile;\n  }\n}\n\n\nconst profilesSlice = createSlice({\n  name: 'profiles',\n  initialState,\n  reducers: {\n    clearAll(state, action) {\n      console.log('Clear profile and other data.');\n      state.currentProfileStatus = 'idle';\n      state.currentProfile = null;\n    },\n    clearSigningProfiles(state, action) {\n      state.signingProfilesStatus = 'idle'\n      state.signingProfiles = [];\n    },\n    clearContactProfiles(state, action) {\n      state.contactProfilesStatus = 'idle'\n      state.contactProfiles = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n    .addCase(fetchProfile.pending, (state, action) => {\n      state.currentProfileStatus = 'loading'\n    })\n    .addCase(fetchProfile.fulfilled, (state, action) => {\n      console.log(action);\n      const newProfile = action.payload;\n      state.currentProfile = newProfile;\n      state.currentProfileStatus = 'idle';\n    })\n    .addCase(setFollowProfile.fulfilled, (state, action) => {\n      console.log(action);\n      const newProfile = action.payload;\n      if (state.currentProfile && state.currentProfile.getPubkey() === newProfile.getPubkey()) {\n        state.currentProfile = newProfile;\n      }\n      updatedProfileInArray(state.signingProfiles, newProfile);\n      updatedProfileInArray(state.contactProfiles, newProfile);\n    })\n    .addCase(setUnfollowProfile.fulfilled, (state, action) => {\n      console.log(action);\n      const newProfile = action.payload;\n      if (state.currentProfile && state.currentProfile.getPubkey() === newProfile.getPubkey()) {\n        state.currentProfile = newProfile;\n      }\n      updatedProfileInArray(state.signingProfiles, newProfile);\n      updatedProfileInArray(state.contactProfiles, newProfile);\n    })\n    .addCase(setRenameProfile.fulfilled, (state, action) => {\n      console.log(action);\n      const newProfile = action.payload;\n      if (state.currentProfile && state.currentProfile.getPubkey() === newProfile.getPubkey()) {\n        state.currentProfile = newProfile;\n      }\n      updatedProfileInArray(state.signingProfiles, newProfile);\n      updatedProfileInArray(state.contactProfiles, newProfile);\n    })\n    .addCase(setProfileImage.fulfilled, (state, action) => {\n      console.log(action);\n      const newProfile = action.payload;\n      if (state.currentProfile && state.currentProfile.getPubkey() === newProfile.getPubkey()) {\n        state.currentProfile = newProfile;\n      }\n      updatedProfileInArray(state.signingProfiles, newProfile);\n      updatedProfileInArray(state.contactProfiles, newProfile);\n    })\n    .addCase(setClearProfileImage.fulfilled, (state, action) => {\n      console.log(action);\n      const newProfile = action.payload;\n      if (state.currentProfile && state.currentProfile.getPubkey() === newProfile.getPubkey()) {\n        state.currentProfile = newProfile;\n      }\n      updatedProfileInArray(state.signingProfiles, newProfile);\n      updatedProfileInArray(state.contactProfiles, newProfile);\n    })\n    .addCase(setDeleteProfile.fulfilled, (state, action) => {\n      console.log(action);\n      const deletedProfileId = action.meta.arg.profileId;\n      console.log(deletedProfileId);\n      if (state.currentProfile && state.currentProfile.getProfileId() === deletedProfileId) {\n        state.currentProfile = null;\n      }\n    })\n    .addCase(fetchSigningProfiles.pending, (state, action) => {\n      state.signingProfilesStatus = 'loading'\n    })\n    .addCase(fetchSigningProfiles.fulfilled, (state, action) => {\n      const newSigningProfiles = action.payload;\n      state.signingProfiles = newSigningProfiles;\n      state.signingProfilesStatus = 'idle'\n    })\n    .addCase(fetchContactProfiles.pending, (state, action) => {\n      state.contactProfilesStatus = 'loading'\n    })\n    .addCase(fetchContactProfiles.fulfilled, (state, action) => {\n      const newContactProfiles = action.payload;\n      state.contactProfiles = newContactProfiles;\n      state.contactProfilesStatus = 'idle'\n    })\n    .addCase(setCreateContactProfile.pending, (state, action) => {\n      console.log('setCreateContactProfile pending');\n      state.createContactProfileStatus = 'loading'\n    })\n    .addCase(setCreateContactProfile.fulfilled, (state, action) => {\n      console.log('setCreateContactProfile fulfilled');\n      console.log(action);\n      const newSqueakHash = action.payload;\n      state.createContactProfileStatus = 'idle';\n      console.log('Go to new profile');\n    })\n    .addCase(setCreateSigningProfile.pending, (state, action) => {\n      console.log('setCreateSigningProfile pending');\n      state.createSigningProfileStatus = 'loading'\n    })\n    .addCase(setCreateSigningProfile.fulfilled, (state, action) => {\n      console.log('setCreateSigningProfile fulfilled');\n      console.log(action);\n      const newSqueakHash = action.payload;\n      state.createSigningProfileStatus = 'idle';\n      console.log('Go to new profile');\n    })\n    .addCase(setImportSigningProfile.pending, (state, action) => {\n      console.log('setImportSigningProfile pending');\n      state.importSigningProfileStatus = 'loading'\n    })\n    .addCase(setImportSigningProfile.fulfilled, (state, action) => {\n      console.log('setImportSigningProfile fulfilled');\n      console.log(action);\n      const newSqueakHash = action.payload;\n      state.importSigningProfileStatus = 'idle';\n      console.log('Go to new profile');\n    })\n    .addCase(getProfilePrivateKey.pending, (state, action) => {\n      console.log('getProfilePrivateKey pending');\n      state.exportPrivateKeyStatus = 'loading'\n    })\n    .addCase(getProfilePrivateKey.fulfilled, (state, action) => {\n      console.log('getProfilePrivateKey fulfilled');\n      console.log(action);\n      state.exportPrivateKeyStatus = 'idle';\n    })\n  },\n})\n\nexport const {\n  clearAll,\n  clearSigningProfiles,\n  clearContactProfiles,\n} = profilesSlice.actions\n\nexport default profilesSlice.reducer\n\nexport const selectCurrentProfile = state => state.profiles.currentProfile\n\nexport const selectCurrentProfileStatus = state => state.profiles.currentProfileStatus\n\nexport const selectSigningProfiles = state => state.profiles.signingProfiles\n\nexport const selectSigningProfilesStatus = state => state.profiles.signingProfilesStatus\n\nexport const selectContactProfiles = state => state.profiles.contactProfiles\n\nexport const selectContactProfilesStatus = state => state.profiles.contactProfilesStatus\n\nexport const selectCreateContactProfileStatus = state => state.createContactProfile.createContactProfileStatus\n\nexport const selectCreateSigningProfileStatus = state => state.createSigningProfile.createSigningProfileStatus\n\nexport const selectImportSigningProfileStatus = state => state.importSigningProfile.importSigningProfileStatus\n","import {\n  createSlice,\n  createSelector,\n  createAsyncThunk,\n  createEntityAdapter,\n} from '@reduxjs/toolkit'\nimport {\n  getSentPayments,\n  getReceivedPayments,\n  getPaymentSummary,\n} from '../../api/client'\n\nconst initialState = {\n  sentPaymentsStatus: 'idle',\n  sentPayments: [],\n  receivedPaymentsStatus: 'idle',\n  receivedPayments: [],\n  paymentSummary: null,\n}\n\n// Thunk functions\nexport const fetchSentPayments = createAsyncThunk(\n  'payments/fetchSentPayments',\n  async (lastSentPayment) => {\n    const response = await getSentPayments(5, lastSentPayment);\n    return response.getSentPaymentsList();\n  }\n)\n\nexport const fetchReceivedPayments = createAsyncThunk(\n  'payments/fetchReceivedPayments',\n  async (lastReceivedPayment) => {\n    const response = await getReceivedPayments(5, lastReceivedPayment);\n    return response.getReceivedPaymentsList();\n  }\n)\n\nexport const fetchPaymentSummary = createAsyncThunk(\n  'payments/fetchPaymentSummary',\n  async () => {\n    console.log('Fetching paymentSummary');\n    const response = await getPaymentSummary();\n    return response.getPaymentSummary();\n  }\n)\n\n\nconst paymentsSlice = createSlice({\n  name: 'sentPayments',\n  initialState,\n  reducers: {\n    clearSentPayments(state, action) {\n      state.sentPaymentsStatus = 'idle'\n      state.sentPayments = [];\n    },\n    clearReceivedPayments(state, action) {\n      state.receivedPaymentsStatus = 'idle'\n      state.receivedPayments = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n    .addCase(fetchSentPayments.pending, (state, action) => {\n      state.sentPaymentsStatus = 'loading'\n    })\n    .addCase(fetchSentPayments.fulfilled, (state, action) => {\n      const newSentPayments = action.payload;\n      state.sentPayments = state.sentPayments.concat(newSentPayments);\n      state.sentPaymentsStatus = 'idle'\n    })\n    .addCase(fetchReceivedPayments.pending, (state, action) => {\n      state.receivedPaymentsStatus = 'loading'\n    })\n    .addCase(fetchReceivedPayments.fulfilled, (state, action) => {\n      const newReceivedPayments = action.payload;\n      state.receivedPayments = state.receivedPayments.concat(newReceivedPayments);\n      state.receivedPaymentsStatus = 'idle'\n    })\n    .addCase(fetchPaymentSummary.fulfilled, (state, action) => {\n      const paymentSummary = action.payload;\n      state.paymentSummary = paymentSummary;\n    })\n  },\n})\n\nexport const {\n  clearSentPayments,\n  clearReceivedPayments,\n} = paymentsSlice.actions\n\nexport default paymentsSlice.reducer\n\nexport const selectSentPayments = state => state.payments.sentPayments\n\nexport const selectLastSentPaymentsSqueak = createSelector(\n  selectSentPayments,\n  sentPayments => sentPayments.length > 0 && sentPayments[sentPayments.length - 1]\n)\n\nexport const selectSentPaymentsStatus = state => state.payments.sentPaymentsStatus\n\nexport const selectReceivedPayments = state => state.payments.receivedPayments\n\nexport const selectLastReceivedPaymentsSqueak = createSelector(\n  selectReceivedPayments,\n  receivedPayments => receivedPayments.length > 0 && receivedPayments[receivedPayments.length - 1]\n)\n\nexport const selectReceivedPaymentsStatus = state => state.payments.receivedPaymentsStatus\n\nexport const selectPaymentSummary = state => state.payments.paymentSummary\n","import React, { useContext, useState, useRef, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport './style.scss'\r\nimport moment from 'moment'\r\nimport { getProfileImageSrcString } from '../../squeakimages/images';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { ICON_REPLY, ICON_RETWEET,\r\n    ICON_HEART, ICON_HEARTFULL, ICON_DELETE, ICON_CLOSE,ICON_IMGUPLOAD, ICON_LOCKFILL} from '../../Icons'\r\nimport axios from 'axios'\r\nimport {API_URL} from '../../config'\r\nimport MakeSqueak from '../../features/squeaks/MakeSqueak'\r\nimport ContentEditable from 'react-contenteditable'\r\n\r\nimport {\r\n  setLikeSqueak,\r\n  setUnlikeSqueak,\r\n  setDeleteSqueak,\r\n} from '../../features/squeaks/squeaksSlice'\r\n\r\n\r\nconst SqueakCard = React.memo(function SqueakCard(props) {\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [parent, setParent] = useState(false)\r\n    const [styleBody, setStyleBody] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    let info\r\n    const likeSqueak = (e,id) => {\r\n        if(e){ e.stopPropagation() }\r\n        console.log('Clicked like with id', id);\r\n        dispatch(setLikeSqueak(id));\r\n    }\r\n    const unlikeSqueak = (e,id) => {\r\n        if(e){ e.stopPropagation() }\r\n        console.log('Clicked unlike with id', id);\r\n        dispatch(setUnlikeSqueak(id));\r\n    }\r\n\r\n    const resqueak = (e,id, resqueakId) => {\r\n        e.stopPropagation()\r\n        if(props.history.location.pathname.slice(1,5) === 'prof'){\r\n            info = { dest: \"profile\", id, resqueakId }\r\n        }else{ info = { id, resqueakId } }\r\n        alert('Re-Squeak not yet implemented!');\r\n    }\r\n\r\n    const deleteSqueak = (e,id) => {\r\n        e.stopPropagation()\r\n        dispatch(setDeleteSqueak(id));\r\n    }\r\n\r\n    const goToSqueak = (id) => {\r\n        props.history.push(`/app/squeak/${id}`)\r\n    }\r\n\r\n    const toggleModal = (e, type) => {\r\n        if(e){ e.stopPropagation() }\r\n        setStyleBody(!styleBody)\r\n        if(type === 'parent'){setParent(true)}else{setParent(false)}\r\n        setTimeout(()=>{ setModalOpen(!modalOpen) },20)\r\n    }\r\n\r\n    const handleModalClick = (e) => {\r\n        e.stopPropagation()\r\n    }\r\n\r\n    const isInitialMount = useRef(true);\r\n\r\n    useEffect(() => {\r\n        if (isInitialMount.current){ isInitialMount.current = false }\r\n        else {\r\n            document.getElementsByTagName(\"body\")[0].style.cssText = styleBody && \"overflow-y: hidden; margin-right: 17px\"\r\n        }\r\n      }, [styleBody])\r\n\r\n    useEffect( () => () => document.getElementsByTagName(\"body\")[0].style.cssText = \"\", [] )\r\n\r\n    useEffect(()=> {\r\n        if (isInitialMount.current){ isInitialMount.current = false;}\r\n        else if(document.getElementById(\"replyBox\")) {\r\n          document.getElementById(\"replyBox\").focus(); }\r\n      }, [modalOpen])\r\n\r\n    const goToUser = (e,username) => {\r\n        e.stopPropagation()\r\n        props.history.push(`/app/profile/${username}`)\r\n    }\r\n\r\n    moment.updateLocale('en', {\r\n        relativeTime: { future: 'in %s', past: '%s ago', s:  'few seconds ago', ss: '%ss',\r\n          m:  '1m', mm: '%dm', h:  '1h', hh: '%dh', d:  'a day', dd: '%dd', M:  'a month',\r\n          MM: '%dM', y:  'a year', yy: '%dY' }\r\n      });\r\n\r\n    const author = props.user;\r\n\r\n    return (\r\n        <div>\r\n\r\n        <div onClick={()=>goToSqueak(props.id)} key={props.id} className={props.squeak ? \"Squeak-card-wrapper\" : \"Squeak-card-wrapper missing-squeak\"} >\r\n\r\n            {props.squeak ?\r\n              <>\r\n              <div className=\"card-userPic-wrapper\">\r\n                  <Link onClick={(e)=>e.stopPropagation()} to={`/app/profile/${props.squeak.getAuthorPubkey()}`}>\r\n                      <img alt=\"\" style={{borderRadius:'50%', minWidth:'49px'}} width=\"100%\" height=\"49px\" src={author ? `${getProfileImageSrcString(author)}` : null}/>\r\n                  </Link>\r\n                  {props.hasReply? <div className=\"squeak-reply-thread\"></div> : null}\r\n              </div>\r\n              <div className=\"card-content-wrapper\">\r\n                  <div className=\"card-content-header\">\r\n                      <div className=\"card-header-detail\">\r\n                          <span className=\"card-header-user\">\r\n                              <Link onClick={(e)=>e.stopPropagation()} to={`/app/profile/${props.squeak.getAuthorPubkey()}`}>{author ? author.getProfileName(): 'Unknown Author'}</Link>\r\n                          </span>\r\n                          <span className=\"card-header-username\">\r\n                              <Link onClick={(e)=>e.stopPropagation()} to={`/app/profile/${props.squeak.getAuthorPubkey()}`}>{'@'+ props.squeak.getAuthorPubkey()}</Link>\r\n                          </span>\r\n                          <span className=\"card-header-dot\">·</span>\r\n                          <span className=\"card-header-date\">\r\n                                  {moment(props.squeak.getBlockTime() * 1000).fromNow(true)}\r\n                          </span>\r\n                      </div>\r\n                      <div className=\"card-header-more\">\r\n\r\n                      </div>\r\n                  </div>\r\n\r\n                  {props.squeak.getContentStr() ?\r\n                    <div className=\"card-content-info\">\r\n                        {props.squeak.getContentStr()}\r\n                    </div> :\r\n                    <div className=\"card-content-info card-content-locked-content\">\r\n                        <ICON_LOCKFILL styles={{width:'36px', height:\"36px\", padding: \"5px\"}} />\r\n                        <div>\r\n                        Locked content\r\n                        </div>\r\n                    </div>\r\n                  }\r\n\r\n                  <div className=\"card-buttons-wrapper\">\r\n                      <div onClick={(e)=>toggleModal(e)} className=\"card-button-wrap reply-wrap\">\r\n                          <div className=\"card-icon reply-icon\">\r\n                              <ICON_REPLY styles={{fill:'rgb(101, 119, 134)'}}/>\r\n                          </div>\r\n                          <div className=\"card-icon-value\">\r\n                              0\r\n                          </div>\r\n                      </div>\r\n                      <div onClick={(e)=>resqueak(e,props.id)} className=\"card-button-wrap resqueak-wrap\">\r\n                          <div className=\"card-icon resqueak-icon\">\r\n                              <ICON_RETWEET styles={false ? {stroke: 'rgb(23, 191, 99)'} : {fill:'rgb(101, 119, 134)'}}/>\r\n                          </div>\r\n                          <div className=\"card-icon-value\">\r\n                              0\r\n                          </div>\r\n                      </div>\r\n                      <div onClick={(e)=>\r\n                        props.squeak.getLikedTimeMs() ?\r\n                        unlikeSqueak(e, props.squeak.getSqueakHash()) :\r\n                        likeSqueak(e, props.squeak.getSqueakHash())\r\n                      } className=\"card-button-wrap heart-wrap\">\r\n                          <div className=\"card-icon heart-icon\">\r\n                              {props.squeak.getLikedTimeMs() ?\r\n                              <ICON_HEARTFULL styles={{fill:'rgb(224, 36, 94)'}}/> :\r\n                              <ICON_HEART styles={{fill:'rgb(101, 119, 134)'}}/>}\r\n                          </div>\r\n                      </div>\r\n                      <div onClick={(e)=>deleteSqueak(e,props.id)} className=\"card-button-wrap\">\r\n                          <div className=\"card-icon share-icon\">\r\n                              <ICON_DELETE styles={{fill:'rgb(101, 119, 134)'}} />\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </> :\r\n              <>\r\n              <div className=\"card-userPic-wrapper\">\r\n                      <img alt=\"\" style={{borderRadius:'50%', minWidth:'49px'}} width=\"100%\" height=\"49px\" src={null}/>\r\n                  {props.hasReply? <div className=\"squeak-reply-thread\"></div> : null}\r\n              </div>\r\n              <div className=\"card-content-wrapper\">\r\n                  <div className=\"card-content-info\">\r\n                  Missing Squeak\r\n                  </div>\r\n              </div>\r\n              </>\r\n            }\r\n\r\n        </div>\r\n\r\n        {/* squeak modal */}\r\n        {props.squeak ?\r\n            <div onClick={()=>toggleModal()} style={{display: modalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n            {modalOpen ?\r\n            <div style={{minHeight: '350px', height: 'initial'}} onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-closeIcon\">\r\n                        <div onClick={()=>toggleModal()} className=\"modal-closeIcon-wrap\">\r\n                            <ICON_CLOSE />\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"modal-title\">Reply</p>\r\n                </div>\r\n                <div style={{marginTop:'5px'}} className=\"modal-body\">\r\n                  <MakeSqueak replyToSqueak={props.squeak} submittedCallback={toggleModal} />\r\n                </div>\r\n            </div> : null}\r\n        </div> : null}\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default withRouter(SqueakCard)\r\n","function getImageSrcString(imageBase64) {\n  return `data:image/jpeg;base64,${imageBase64}`;\n}\n\nexport function getProfileImageSrcString(squeakProfile) {\n  const profileImage = squeakProfile.getProfileImage();\n  return getImageSrcString(profileImage);\n}\n","import {\n  createSlice,\n  createSelector,\n  createAsyncThunk,\n  createEntityAdapter,\n} from '@reduxjs/toolkit'\nimport {\n  getPeer,\n  getConnectedPeers,\n  connectPeer,\n  disconnectPeer,\n  getSavedPeers,\n  savePeer,\n  deletePeer,\n  enableAutoconnectPeer,\n  disableAutoconnectPeer,\n} from '../../api/client'\n\nconst initialState = {\n  currentPeerStatus: 'idle',\n  currentPeer: null,\n  connectedPeersStatus: 'idle',\n  connectedPeers: [],\n  savedPeersStatus: 'idle',\n  savedPeers: [],\n  connectPeerStatus: 'idle',\n  disconnectPeerStatus: 'idle',\n  savePeerStatus: 'idle',\n  deletePeerStatus: 'idle',\n}\n\n// Thunk functions\nexport const fetchPeer = createAsyncThunk(\n  'peers/fetchPeer',\n  async (values) => {\n    console.log('Fetching peer');\n    let network = values.network;\n    let host = values.host;\n    let port = values.port;\n    const response = await getPeer(\n      network,\n      host,\n      port,\n    );\n    console.log(response);\n    return response.getSqueakPeer();\n  }\n)\n\nexport const fetchConnectedPeers = createAsyncThunk(\n  'peers/fetchConnectedPeers',\n  async () => {\n    console.log('Fetching connected peers');\n    const response = await getConnectedPeers();\n    console.log(response);\n    return response.getConnectedPeersList();\n  }\n)\n\nexport const fetchSavedPeers = createAsyncThunk(\n  'peers/fetchSavedPeers',\n  async () => {\n    console.log('Fetching saved peers');\n    const response = await getSavedPeers();\n    console.log(response);\n    return response.getSqueakPeersList();\n  }\n)\n\nexport const setConnectPeer = createAsyncThunk(\n  'peers/setConnectPeer',\n  async (values) => {\n    console.log('Connecting peer');\n    let network = values.network;\n    let host = values.host;\n    let port = values.port;\n    await connectPeer(\n      network,\n      host,\n      port,\n    );\n    const response = await getConnectedPeers();\n    return response.getConnectedPeersList();\n  }\n)\n\nexport const setDisconnectPeer = createAsyncThunk(\n  'peers/setDisconnectPeer',\n  async (values) => {\n    console.log('Disconnecting peer');\n    let network = values.network;\n    let host = values.host;\n    let port = values.port;\n    await disconnectPeer(\n      network,\n      host,\n      port,\n    );\n    const response = await getConnectedPeers();\n    return response.getConnectedPeersList();\n  }\n)\n\nexport const setSavePeer = createAsyncThunk(\n  'peers/setSavePeer',\n  async (values) => {\n    console.log('Saving peer');\n    let name = values.name;\n    let network = values.network;\n    let host = values.host;\n    let port = values.port;\n    await savePeer(\n      name,\n      network,\n      host,\n      port,\n    );\n    const response = await getSavedPeers();\n    return response.getSqueakPeersList();\n  }\n)\n\nexport const setDeletePeer = createAsyncThunk(\n  'peers/setDeletePeer',\n  async (values) => {\n    console.log('Deleting peer');\n    let peerId = values.peerId;\n    await deletePeer(peerId);\n    const response = await getSavedPeers();\n    return response.getSqueakPeersList();\n  }\n)\n\nexport const setPeerAutoconnectEnabled = createAsyncThunk(\n  'peers/setPeerAutoconnectEnabled',\n  async (values) => {\n    console.log('Setting peer autoconnect enabled');\n    let peerId = values.peerId;\n    await enableAutoconnectPeer(peerId);\n    const response = await getSavedPeers();\n    return response.getSqueakPeersList();\n  }\n)\n\nexport const setPeerAutoconnectDisabled = createAsyncThunk(\n  'peers/setPeerAutoconnectDisabled',\n  async (values) => {\n    console.log('Setting peer autoconnect disabled');\n    let peerId = values.peerId;\n    await disableAutoconnectPeer(peerId);\n    const response = await getSavedPeers();\n    return response.getSqueakPeersList();\n  }\n)\n\n\nconst peersSlice = createSlice({\n  name: 'peers',\n  initialState,\n  reducers: {\n    clearAll(state, action) {\n      console.log('Clear current peer and status.');\n      state.currentPeerStatus = 'idle';\n      state.currentPeer = null;\n    },\n    clearSavedPeers(state, action) {\n      state.savedPeersStatus = 'idle'\n      state.savedPeers = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n    .addCase(fetchPeer.pending, (state, action) => {\n      state.currentPeerStatus = 'loading'\n    })\n    .addCase(fetchPeer.fulfilled, (state, action) => {\n      const newPeer = action.payload;\n      state.currentPeer = newPeer;\n      state.currentPeerStatus = 'idle';\n    })\n    .addCase(fetchConnectedPeers.pending, (state, action) => {\n      state.connectedPeersStatus = 'loading'\n    })\n    .addCase(fetchConnectedPeers.fulfilled, (state, action) => {\n      const newConnectedPeers = action.payload;\n      state.connectedPeers = newConnectedPeers;\n      state.connectedPeersStatus = 'idle';\n    })\n    .addCase(fetchSavedPeers.pending, (state, action) => {\n      state.savedPeersStatus = 'loading'\n    })\n    .addCase(fetchSavedPeers.fulfilled, (state, action) => {\n      const newSavedPeers = action.payload;\n      state.savedPeers = newSavedPeers;\n      state.savedPeersStatus = 'idle';\n    })\n    .addCase(setConnectPeer.pending, (state, action) => {\n      console.log(action);\n      state.connectPeerStatus = 'loading'\n    })\n    .addCase(setConnectPeer.fulfilled, (state, action) => {\n      console.log(action);\n      const newConnectedPeers = action.payload;\n      state.connectedPeers = newConnectedPeers;\n      state.connectPeerStatus = 'idle';\n    })\n    .addCase(setDisconnectPeer.pending, (state, action) => {\n      console.log(action);\n      state.disconnectPeerStatus = 'loading'\n    })\n    .addCase(setDisconnectPeer.fulfilled, (state, action) => {\n      console.log(action);\n      const newConnectedPeers = action.payload;\n      state.connectedPeers = newConnectedPeers;\n      state.disconnectPeerStatus = 'idle';\n    })\n    .addCase(setSavePeer.pending, (state, action) => {\n      console.log(action);\n      state.savePeerStatus = 'loading'\n    })\n    .addCase(setSavePeer.fulfilled, (state, action) => {\n      console.log(action);\n      const newSavedPeers = action.payload;\n      const savedAddress = action.meta.arg;\n      const newSavedPeer = newSavedPeers.find(savedPeer => {\n        return savedPeer.getPeerAddress().getNetwork() === savedAddress.network &&\n        savedPeer.getPeerAddress().getHost() === savedAddress.host &&\n        savedPeer.getPeerAddress().getPort() == savedAddress.port\n      });\n      state.currentPeer = newSavedPeer;\n      state.savedPeers = newSavedPeers;\n      state.savePeerStatus = 'idle';\n    })\n    .addCase(setDeletePeer.pending, (state, action) => {\n      console.log(action);\n      state.deletePeerStatus = 'loading'\n    })\n    .addCase(setDeletePeer.fulfilled, (state, action) => {\n      console.log(action);\n      const newSavedPeers = action.payload;\n      state.currentPeer = null;\n      state.savedPeers = newSavedPeers;\n      state.deletePeerStatus = 'idle';\n    })\n    .addCase(setPeerAutoconnectEnabled.fulfilled, (state, action) => {\n      console.log(action);\n      const newSavedPeers = action.payload;\n      const peerId = action.meta.arg.peerId;\n      const newSavedPeer = newSavedPeers.find(savedPeer => {\n        return savedPeer.getPeerId() === peerId\n      });\n      state.currentPeer = newSavedPeer;\n      state.savedPeers = newSavedPeers;\n    })\n    .addCase(setPeerAutoconnectDisabled.fulfilled, (state, action) => {\n      console.log(action);\n      const newSavedPeers = action.payload;\n      const peerId = action.meta.arg.peerId;\n      const newSavedPeer = newSavedPeers.find(savedPeer => {\n        return savedPeer.getPeerId() === peerId\n      });\n      state.currentPeer = newSavedPeer;\n      state.savedPeers = newSavedPeers;\n    })\n  },\n})\n\nexport const {\n  clearAll,\n  clearSavedPeers,\n} = peersSlice.actions\n\nexport default peersSlice.reducer\n\nexport const selectCurrentPeer = state => state.peers.currentPeer\n\nexport const selectCurrentPeerStatus = state => state.peers.currentPeerStatus\n\nexport const selectSavedPeers = state => state.peers.savedPeers\n\nexport const selectSavedPeersStatus = state => state.peers.savedPeersStatus\n\nexport const selectConnectedPeers = state => state.peers.connectedPeers\n\nexport const selectConnectedPeersStatus = state => state.peers.connectedPeersStatus\n\nexport const selectPeerConnectionByAddress = createSelector(\n  [\n    selectConnectedPeers,\n    (state, address) => address\n  ],\n  (connectedPeers, address) => {\n    return connectedPeers.find(obj => {\n      return obj.getPeerAddress().getNetwork() === address.network &&\n      obj.getPeerAddress().getHost() === address.host &&\n      obj.getPeerAddress().getPort() == address.port\n    });\n  }\n)\n","import {\n  createSlice,\n  createSelector,\n  createAsyncThunk,\n  createEntityAdapter,\n} from '@reduxjs/toolkit'\nimport {\n  getSellPrice,\n  updateSellPrice,\n  clearSellPrice,\n} from '../../api/client'\n\nconst initialState = {\n  sellPriceInfo: null,\n}\n\n// Thunk functions\nexport const fetchSellPrice = createAsyncThunk(\n  'sellPrice/fetchSellPrice',\n  async () => {\n    console.log('Fetching sellPrice');\n    const response = await getSellPrice();\n    console.log(response);\n    return response;\n  }\n)\n\nexport const setSellPrice = createAsyncThunk(\n  'sellPrice/setSellPrice',\n  async (sellPriceMsat) => {\n    console.log('Updating sellPrice');\n    await updateSellPrice(sellPriceMsat);\n    const response = await getSellPrice();\n    console.log(response);\n    return response;\n  }\n)\n\nexport const setClearSellPrice = createAsyncThunk(\n  'sellPrice/setClearSellPrice',\n  async (sellPriceMsat) => {\n    console.log('Clearing sellPrice');\n    await clearSellPrice();\n    const response = await getSellPrice();\n    console.log(response);\n    return response;\n  }\n)\n\nconst sellPriceSlice = createSlice({\n  name: 'sellPrice',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n    .addCase(fetchSellPrice.fulfilled, (state, action) => {\n      console.log(action);\n      const sellPriceInfo = action.payload;\n      state.sellPriceInfo = sellPriceInfo;\n    })\n    .addCase(setSellPrice.fulfilled, (state, action) => {\n      console.log(action);\n      const sellPriceInfo = action.payload;\n      state.sellPriceInfo = sellPriceInfo;\n    })\n    .addCase(setClearSellPrice.fulfilled, (state, action) => {\n      console.log(action);\n      const sellPriceInfo = action.payload;\n      state.sellPriceInfo = sellPriceInfo;\n    })\n  },\n})\n\nexport default sellPriceSlice.reducer\n\nexport const selectSellPriceInfo = state => state.sellPrice.sellPriceInfo\n\n// export const selectSellPriceUsingOverride = state => state.sellPrice.sellPriceInfo && state.sellPrice.sellPriceInfo.getPriceMsatIsSet()\n//\n// export const selectSellPriceOverride = state => state.sellPrice.sellPriceInfo && state.sellPrice.sellPriceInfo.getPriceMsat()\n//\n// export const selectSellPriceDefault = state => state.sellPrice.sellPriceInfo && state.sellPrice.sellPriceInfo.getDefaultPriceMsat()\n","import React, { useEffect, useState, useContext, useRef } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { unwrapResult } from '@reduxjs/toolkit'\n\nimport moment from 'moment'\nimport ContentEditable from 'react-contenteditable'\nimport { Link } from 'react-router-dom'\nimport { getProfileImageSrcString } from '../../squeakimages/images';\nimport Loader from '../../components/Loader'\nimport Select from 'react-select'\n\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\n\n\nimport {\n  setMakeSqueak,\n  selectMakeSqueakStatus,\n} from '../squeaks/squeaksSlice'\nimport {\n  selectSigningProfiles,\n  fetchSigningProfiles,\n} from '../../features/profiles/profilesSlice'\n\nconst MakeSqueak = (props) => {\n    const signingProfiles = useSelector(selectSigningProfiles);\n    const makeSqueakStatus = useSelector(selectMakeSqueakStatus);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchSigningProfiles());\n    }, [])\n\n    //used for contenteditable divs on react hooks\n    const squeakT = useRef('');\n    const handleChange = (evt, e) => {\n        if (squeakT.current.trim().length <= 280\n            && squeakT.current.split(/\\r\\n|\\r|\\n/).length <= 30) {\n            squeakT.current = evt.target.value;\n            setSqueakText(squeakT.current)\n        }\n        // document.getElementById('squeak-box').innerHTML = document.getElementById('squeak-box').innerHTML.replace(/(\\#\\w+)/g, '<span class=\"blue\">$1</span>')\n    };\n    const [signingProfile, setSigningProfile] = useState(null)\n    const [squeakText, setSqueakText] = useState(\"\")\n\n    const optionsFromProfiles = (profiles) => {\n      return profiles.map((p) => {\n          return { value: p, label: p.getProfileName() }\n          // return { value: 'chocolate', label: 'Chocolate' }\n        });\n    }\n\n    const handleChangeSigningProfile = (e) => {\n      setSigningProfile(e.value);\n    }\n\n    const pastePlainText = (e) => {\n      e.preventDefault();\n      var text = e.clipboardData.getData('text/plain');\n      document.execCommand('insertText', false, text);\n    }\n\n    const submitSqueak = () => {\n        // TODO: toggle modal off here.\n\n        if (!signingProfile) {\n          alert('Signing profile must be set.');\n          return;\n        }\n\n        if (!squeakText.length) { return }\n\n        const values = {\n            signingProfile: signingProfile.getProfileId(),\n            description: squeakText,\n            replyTo: props.replyToSqueak ? props.replyToSqueak.getSqueakHash() : null,\n            hasRecipient: null,\n            recipientProfileId: -1,\n        }\n        console.log('makeSqueak');\n        dispatch(setMakeSqueak(values))\n          .then(unwrapResult)\n          .then((squeakHash) => {\n            props.history.push(`/app/squeak/${squeakHash}`);\n          })\n          .catch((err) => {\n            alert(err.message);\n          });\n        squeakT.current = ''\n        setSqueakText('')\n        if (props.submittedCallback) {\n          props.submittedCallback();\n        }\n    }\n\n    const author = props.replyToSqueak && props.replyToSqueak.getAuthor();\n\n\n    return (\n      <>\n\n      {/* Squeak being replied to. */}\n      {props.replyToSqueak ?\n      <div className=\"reply-content-wrapper\">\n          <div className=\"card-userPic-wrapper\">\n              <Link onClick={(e)=>e.stopPropagation()} to={`/app/profile/${props.replyToSqueak.getAuthorPubkey()}`}>\n                  <img alt=\"\" style={{borderRadius:'50%', minWidth:'49px'}} width=\"100%\" height=\"49px\" src={author ? `${getProfileImageSrcString(props.replyToSqueak.getAuthor())}`: null}/>\n              </Link>\n          </div>\n          <div className=\"card-content-wrapper\">\n              <div className=\"card-content-header\">\n                  <div className=\"card-header-detail\">\n                      <span className=\"card-header-user\">\n                          <Link onClick={(e)=>e.stopPropagation()} to={`/app/profile/${props.replyToSqueak.getAuthorPubkey()}`}>{author ? author.getProfileName(): 'Unknown Author'}</Link>\n                      </span>\n                      <span className=\"card-header-username\">\n                          <Link onClick={(e)=>e.stopPropagation()} to={`/app/profile/${props.replyToSqueak.getAuthorPubkey()}`}>{'@'+props.replyToSqueak.getAuthorPubkey()}</Link>\n                      </span>\n                      <span className=\"card-header-dot\">·</span>\n                      <span className=\"card-header-date\">\n                                  {moment(props.replyToSqueak.getBlockTime() * 1000).fromNow()}\n                      </span>\n                  </div>\n              </div>\n              <div className=\"card-content-info\">\n              {props.replyToSqueak.getContentStr()}\n              </div>\n              <div className=\"reply-to-user\">\n                  <span className=\"reply-squeak-username\">\n                      Replying to\n                  </span>\n                  <span className=\"main-squeak-user\">\n                      @{props.replyToSqueak.getAuthorPubkey()}\n                  </span>\n              </div>\n          </div>\n      </div> : null }\n\n\n            {/* New squeak content input. */}\n            <div className=\"Squeak-input-wrapper\">\n                <div className=\"Squeak-profile-wrapper\">\n                    <Link to={`/app/profile/${signingProfile && signingProfile.getPubkey()}`}>\n                        {signingProfile && <img alt=\"\" style={{ borderRadius: '50%', minWidth: '49px' }} width=\"100%\" height=\"49px\" src={`${getProfileImageSrcString(signingProfile)}`} />}\n                    </Link>\n                </div>\n                <div className=\"Squeak-input-side\">\n                    <div className=\"inner-input-box\">\n                        <Select options={optionsFromProfiles(signingProfiles)} onChange={handleChangeSigningProfile} />\n                    </div>\n                    <div className=\"inner-input-box\">\n                        <ContentEditable onPaste={(e) => pastePlainText(e)} id=\"squeak-box\" className={squeakText.length ? 'squeak-input-active' : null} onKeyDown={(e)=>squeakT.current.length>279 ? e.keyCode !== 8 && e.preventDefault(): null} placeholder=\"What's happening?\" html={squeakT.current} onChange={(e) => handleChange(e)} />\n                    </div>\n                    <div className=\"inner-input-links\">\n                        <div className=\"input-links-side\">\n                        </div>\n                        <div className=\"squeak-btn-holder\">\n                            <div style={{ fontSize: '13px', color: squeakText.length >= 280 ? 'red' : null }}>\n                                {squeakText.length > 0 && squeakText.length + '/280'}\n                            </div>\n                            <div onClick={submitSqueak} className={squeakText.length ? 'squeak-btn-side squeak-btn-active' : 'squeak-btn-side'}>\n                                Squeak\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            </>\n    )\n}\n\nexport default withRouter(MakeSqueak)\n","import {\n  createSlice,\n  createSelector,\n  createAsyncThunk,\n  createEntityAdapter,\n} from '@reduxjs/toolkit'\nimport { client, getNetwork } from '../../api/client'\n\nconst initialState = {\n  network: null\n}\n\n// Thunk functions\nexport const fetchNetwork = createAsyncThunk(\n  'network/fetchNetwork',\n  async () => {\n    console.log('Fetching network');\n    const response = await getNetwork();\n    console.log(response);\n    return response.getNetwork();\n  }\n)\n\nconst networkSlice = createSlice({\n  name: 'network',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n    .addCase(fetchNetwork.fulfilled, (state, action) => {\n      console.log(action);\n      const network = action.payload;\n      state.network = network;\n    })\n  },\n})\n\nexport default networkSlice.reducer\n\nexport const selectNetwork = state => state.network.network\n","import {\n  createSlice,\n  createSelector,\n  createAsyncThunk,\n  createEntityAdapter,\n} from '@reduxjs/toolkit'\nimport {\n  getExternalAddress,\n} from '../../api/client'\n\nconst initialState = {\n  externalAddress: null\n}\n\n// Thunk functions\nexport const fetchExternalAddress = createAsyncThunk(\n  'externalAddress/fetchExternalAddress',\n  async () => {\n    console.log('Fetching external address');\n    const response = await getExternalAddress();\n    console.log(response);\n    return response.getPeerAddress();\n  }\n)\n\nconst externalAddressSlice = createSlice({\n  name: 'externalAddress',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n    .addCase(fetchExternalAddress.fulfilled, (state, action) => {\n      console.log(action);\n      const externalAddress = action.payload;\n      state.externalAddress = externalAddress;\n    })\n  },\n})\n\nexport default externalAddressSlice.reducer\n\nexport const selectExternalAddress = state => state.externalAddress.externalAddress\n","import { configureStore } from '@reduxjs/toolkit'\n\nimport networkReducer from './features/network/networkSlice'\nimport squeaksReducer from './features/squeaks/squeaksSlice'\nimport profilesReducer from './features/profiles/profilesSlice'\nimport peersReducer from './features/peers/peersSlice'\nimport externalAddressReducer from './features/externalAddress/externalAddressSlice'\nimport paymentsReducer from './features/payments/paymentsSlice'\nimport sellPriceReducer from './features/sellPrice/sellPriceSlice'\nimport accountReducer from './features/account/accountSlice'\n\nconst store = configureStore({\n  reducer: {\n    network: networkReducer,\n    squeaks: squeaksReducer,\n    profiles: profilesReducer,\n    peers: peersReducer,\n    externalAddress: externalAddressReducer,\n    payments: paymentsReducer,\n    sellPrice: sellPriceReducer,\n    account: accountReducer,\n  },\n})\n\nexport default store\n","import {\n  createSlice,\n  createSelector,\n  createAsyncThunk,\n  createEntityAdapter,\n} from '@reduxjs/toolkit'\nimport {\n  logout,\n} from '../../api/client'\n\nconst initialState = {\n  userName: null,\n}\n\n// Thunk functions\nexport const setLogout = createAsyncThunk(\n  'account/setLogout',\n  async () => {\n    console.log('Logging out');\n    await logout();\n    console.log('Logged out');\n    return null;\n  }\n)\n\nconst accountSlice = createSlice({\n  name: 'account',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n    .addCase(setLogout.pending, (state, action) => {\n      console.log('Logging out in reducer...');\n    })\n    .addCase(setLogout.fulfilled, (state, action) => {\n      console.log(action);\n      // Reload page to show logged out page.\n      window.location.replace('/')\n    })\n  },\n})\n\nexport default accountSlice.reducer\n\nexport const selectUsername = state => state.account.userName\n","/* eslint-disable */\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.lnrpc.AMP', null, global);\ngoog.exportSymbol('proto.lnrpc.AMPRecord', null, global);\ngoog.exportSymbol('proto.lnrpc.AbandonChannelRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.AbandonChannelResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.AddInvoiceResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.AddressType', null, global);\ngoog.exportSymbol('proto.lnrpc.Amount', null, global);\ngoog.exportSymbol('proto.lnrpc.BakeMacaroonRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.BakeMacaroonResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.BatchOpenChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.BatchOpenChannelRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.BatchOpenChannelResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.Chain', null, global);\ngoog.exportSymbol('proto.lnrpc.ChanBackupExportRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChanBackupSnapshot', null, global);\ngoog.exportSymbol('proto.lnrpc.ChanInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChanPointShim', null, global);\ngoog.exportSymbol('proto.lnrpc.Channel', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelAcceptRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelAcceptResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBackup', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBackupSubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBackups', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBalanceRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBalanceResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelCloseSummary', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelCloseSummary.ClosureType', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelCloseUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelConstraints', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEdge', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEdgeUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEventSubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEventUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEventUpdate.UpdateType', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelFeeReport', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelGraph', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelGraphRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelOpenUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelPoint', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.CheckMacPermRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.CheckMacPermResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.CloseChannelRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.CloseStatusUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ClosedChannelUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ClosedChannelsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ClosedChannelsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.CommitmentType', null, global);\ngoog.exportSymbol('proto.lnrpc.ConfirmationUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ConnectPeerRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ConnectPeerResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.DebugLevelRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.DebugLevelResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.DeleteAllPaymentsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.DeleteAllPaymentsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.DeleteMacaroonIDRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.DeleteMacaroonIDResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.DeletePaymentRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.DeletePaymentResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.DisconnectPeerRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.DisconnectPeerResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.EdgeLocator', null, global);\ngoog.exportSymbol('proto.lnrpc.EstimateFeeRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.EstimateFeeResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ExportChannelBackupRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.FailedUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.Failure', null, global);\ngoog.exportSymbol('proto.lnrpc.Failure.FailureCode', null, global);\ngoog.exportSymbol('proto.lnrpc.Feature', null, global);\ngoog.exportSymbol('proto.lnrpc.FeatureBit', null, global);\ngoog.exportSymbol('proto.lnrpc.FeeLimit', null, global);\ngoog.exportSymbol('proto.lnrpc.FeeReportRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.FeeReportResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.FloatMetric', null, global);\ngoog.exportSymbol('proto.lnrpc.ForwardingEvent', null, global);\ngoog.exportSymbol('proto.lnrpc.ForwardingHistoryRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ForwardingHistoryResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingPsbtFinalize', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingPsbtVerify', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingShim', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingShimCancel', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingStateStepResp', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingTransitionMsg', null, global);\ngoog.exportSymbol('proto.lnrpc.GetInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.GetInfoResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.GetRecoveryInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.GetRecoveryInfoResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.GetTransactionsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.GraphTopologySubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.GraphTopologyUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.HTLC', null, global);\ngoog.exportSymbol('proto.lnrpc.HTLCAttempt', null, global);\ngoog.exportSymbol('proto.lnrpc.HTLCAttempt.HTLCStatus', null, global);\ngoog.exportSymbol('proto.lnrpc.Hop', null, global);\ngoog.exportSymbol('proto.lnrpc.HopHint', null, global);\ngoog.exportSymbol('proto.lnrpc.Initiator', null, global);\ngoog.exportSymbol('proto.lnrpc.InterceptFeedback', null, global);\ngoog.exportSymbol('proto.lnrpc.Invoice', null, global);\ngoog.exportSymbol('proto.lnrpc.Invoice.InvoiceState', null, global);\ngoog.exportSymbol('proto.lnrpc.InvoiceHTLC', null, global);\ngoog.exportSymbol('proto.lnrpc.InvoiceHTLCState', null, global);\ngoog.exportSymbol('proto.lnrpc.InvoiceSubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.KeyDescriptor', null, global);\ngoog.exportSymbol('proto.lnrpc.KeyLocator', null, global);\ngoog.exportSymbol('proto.lnrpc.LightningAddress', null, global);\ngoog.exportSymbol('proto.lnrpc.LightningNode', null, global);\ngoog.exportSymbol('proto.lnrpc.ListChannelsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListChannelsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ListInvoiceRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListInvoiceResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ListMacaroonIDsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListMacaroonIDsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ListPaymentsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListPaymentsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ListPeersRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListPeersResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ListPermissionsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListPermissionsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ListUnspentRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListUnspentResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.MPPRecord', null, global);\ngoog.exportSymbol('proto.lnrpc.MacaroonId', null, global);\ngoog.exportSymbol('proto.lnrpc.MacaroonPermission', null, global);\ngoog.exportSymbol('proto.lnrpc.MacaroonPermissionList', null, global);\ngoog.exportSymbol('proto.lnrpc.MiddlewareRegistration', null, global);\ngoog.exportSymbol('proto.lnrpc.MultiChanBackup', null, global);\ngoog.exportSymbol('proto.lnrpc.NetworkInfo', null, global);\ngoog.exportSymbol('proto.lnrpc.NetworkInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.NewAddressRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.NewAddressResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeAddress', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeInfo', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeMetricType', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeMetricsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeMetricsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.NodePair', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.Op', null, global);\ngoog.exportSymbol('proto.lnrpc.OpenChannelRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.OpenStatusUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.OutPoint', null, global);\ngoog.exportSymbol('proto.lnrpc.PayReq', null, global);\ngoog.exportSymbol('proto.lnrpc.PayReqString', null, global);\ngoog.exportSymbol('proto.lnrpc.Payment', null, global);\ngoog.exportSymbol('proto.lnrpc.Payment.PaymentStatus', null, global);\ngoog.exportSymbol('proto.lnrpc.PaymentFailureReason', null, global);\ngoog.exportSymbol('proto.lnrpc.PaymentHash', null, global);\ngoog.exportSymbol('proto.lnrpc.Peer', null, global);\ngoog.exportSymbol('proto.lnrpc.Peer.SyncType', null, global);\ngoog.exportSymbol('proto.lnrpc.PeerEvent', null, global);\ngoog.exportSymbol('proto.lnrpc.PeerEvent.EventType', null, global);\ngoog.exportSymbol('proto.lnrpc.PeerEventSubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.ClosedChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.Commitments', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.ForceClosedChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.PendingChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.PendingOpenChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingHTLC', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.PolicyUpdateRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.PolicyUpdateResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.PsbtShim', null, global);\ngoog.exportSymbol('proto.lnrpc.QueryRoutesRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.QueryRoutesResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.RPCMessage', null, global);\ngoog.exportSymbol('proto.lnrpc.RPCMiddlewareRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.RPCMiddlewareResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ReadyForPsbtFunding', null, global);\ngoog.exportSymbol('proto.lnrpc.Resolution', null, global);\ngoog.exportSymbol('proto.lnrpc.ResolutionOutcome', null, global);\ngoog.exportSymbol('proto.lnrpc.ResolutionType', null, global);\ngoog.exportSymbol('proto.lnrpc.RestoreBackupResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.RestoreChanBackupRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.Route', null, global);\ngoog.exportSymbol('proto.lnrpc.RouteHint', null, global);\ngoog.exportSymbol('proto.lnrpc.RoutingPolicy', null, global);\ngoog.exportSymbol('proto.lnrpc.SendCoinsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SendCoinsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.SendManyRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SendManyResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.SendRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SendResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.SendToRouteRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SignMessageRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SignMessageResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.StopRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.StopResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.StreamAuth', null, global);\ngoog.exportSymbol('proto.lnrpc.TimestampedError', null, global);\ngoog.exportSymbol('proto.lnrpc.Transaction', null, global);\ngoog.exportSymbol('proto.lnrpc.TransactionDetails', null, global);\ngoog.exportSymbol('proto.lnrpc.UpdateFailure', null, global);\ngoog.exportSymbol('proto.lnrpc.Utxo', null, global);\ngoog.exportSymbol('proto.lnrpc.VerifyChanBackupResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.VerifyMessageRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.VerifyMessageResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.WalletAccountBalance', null, global);\ngoog.exportSymbol('proto.lnrpc.WalletBalanceRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.WalletBalanceResponse', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Utxo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Utxo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Utxo.displayName = 'proto.lnrpc.Utxo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Utxo.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Utxo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Utxo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Utxo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressType: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    address: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    amountSat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    pkScript: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    outpoint: (f = msg.getOutpoint()) && proto.lnrpc.OutPoint.toObject(includeInstance, f),\n    confirmations: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Utxo}\n */\nproto.lnrpc.Utxo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Utxo;\n  return proto.lnrpc.Utxo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Utxo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Utxo}\n */\nproto.lnrpc.Utxo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lnrpc.AddressType} */ (reader.readEnum());\n      msg.setAddressType(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmountSat(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPkScript(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.OutPoint;\n      reader.readMessage(value,proto.lnrpc.OutPoint.deserializeBinaryFromReader);\n      msg.setOutpoint(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setConfirmations(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Utxo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Utxo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Utxo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Utxo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmountSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getPkScript();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getOutpoint();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.lnrpc.OutPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getConfirmations();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional AddressType address_type = 1;\n * @return {!proto.lnrpc.AddressType}\n */\nproto.lnrpc.Utxo.prototype.getAddressType = function() {\n  return /** @type {!proto.lnrpc.AddressType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.AddressType} value */\nproto.lnrpc.Utxo.prototype.setAddressType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string address = 2;\n * @return {string}\n */\nproto.lnrpc.Utxo.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Utxo.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amount_sat = 3;\n * @return {number}\n */\nproto.lnrpc.Utxo.prototype.getAmountSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Utxo.prototype.setAmountSat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string pk_script = 4;\n * @return {string}\n */\nproto.lnrpc.Utxo.prototype.getPkScript = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Utxo.prototype.setPkScript = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional OutPoint outpoint = 5;\n * @return {?proto.lnrpc.OutPoint}\n */\nproto.lnrpc.Utxo.prototype.getOutpoint = function() {\n  return /** @type{?proto.lnrpc.OutPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.OutPoint, 5));\n};\n\n\n/** @param {?proto.lnrpc.OutPoint|undefined} value */\nproto.lnrpc.Utxo.prototype.setOutpoint = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.lnrpc.Utxo.prototype.clearOutpoint = function() {\n  this.setOutpoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Utxo.prototype.hasOutpoint = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional int64 confirmations = 6;\n * @return {number}\n */\nproto.lnrpc.Utxo.prototype.getConfirmations = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Utxo.prototype.setConfirmations = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Transaction = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Transaction.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Transaction, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Transaction.displayName = 'proto.lnrpc.Transaction';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Transaction.repeatedFields_ = [8];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Transaction.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Transaction.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Transaction} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Transaction.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txHash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    numConfirmations: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    blockHash: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    blockHeight: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    timeStamp: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    totalFees: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    destAddressesList: jspb.Message.getRepeatedField(msg, 8),\n    rawTxHex: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    label: jspb.Message.getFieldWithDefault(msg, 10, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Transaction}\n */\nproto.lnrpc.Transaction.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Transaction;\n  return proto.lnrpc.Transaction.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Transaction} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Transaction}\n */\nproto.lnrpc.Transaction.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumConfirmations(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBlockHash(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlockHeight(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimeStamp(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalFees(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addDestAddresses(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRawTxHex(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Transaction.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Transaction.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Transaction} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Transaction.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getNumConfirmations();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getBlockHash();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getBlockHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getTimeStamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getTotalFees();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getDestAddressesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      8,\n      f\n    );\n  }\n  f = message.getRawTxHex();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getLabel();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string tx_hash = 1;\n * @return {string}\n */\nproto.lnrpc.Transaction.prototype.getTxHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Transaction.prototype.setTxHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amount = 2;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 num_confirmations = 3;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getNumConfirmations = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setNumConfirmations = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string block_hash = 4;\n * @return {string}\n */\nproto.lnrpc.Transaction.prototype.getBlockHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Transaction.prototype.setBlockHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int32 block_height = 5;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setBlockHeight = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 time_stamp = 6;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getTimeStamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setTimeStamp = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 total_fees = 7;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getTotalFees = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setTotalFees = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * repeated string dest_addresses = 8;\n * @return {!Array.<string>}\n */\nproto.lnrpc.Transaction.prototype.getDestAddressesList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 8));\n};\n\n\n/** @param {!Array.<string>} value */\nproto.lnrpc.Transaction.prototype.setDestAddressesList = function(value) {\n  jspb.Message.setField(this, 8, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.lnrpc.Transaction.prototype.addDestAddresses = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 8, value, opt_index);\n};\n\n\nproto.lnrpc.Transaction.prototype.clearDestAddressesList = function() {\n  this.setDestAddressesList([]);\n};\n\n\n/**\n * optional string raw_tx_hex = 9;\n * @return {string}\n */\nproto.lnrpc.Transaction.prototype.getRawTxHex = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Transaction.prototype.setRawTxHex = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string label = 10;\n * @return {string}\n */\nproto.lnrpc.Transaction.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Transaction.prototype.setLabel = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetTransactionsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GetTransactionsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetTransactionsRequest.displayName = 'proto.lnrpc.GetTransactionsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetTransactionsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetTransactionsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetTransactionsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetTransactionsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    startHeight: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    endHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    account: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetTransactionsRequest}\n */\nproto.lnrpc.GetTransactionsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetTransactionsRequest;\n  return proto.lnrpc.GetTransactionsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetTransactionsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetTransactionsRequest}\n */\nproto.lnrpc.GetTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStartHeight(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setEndHeight(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetTransactionsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetTransactionsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetTransactionsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetTransactionsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStartHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getEndHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getAccount();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 start_height = 1;\n * @return {number}\n */\nproto.lnrpc.GetTransactionsRequest.prototype.getStartHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetTransactionsRequest.prototype.setStartHeight = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 end_height = 2;\n * @return {number}\n */\nproto.lnrpc.GetTransactionsRequest.prototype.getEndHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetTransactionsRequest.prototype.setEndHeight = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string account = 3;\n * @return {string}\n */\nproto.lnrpc.GetTransactionsRequest.prototype.getAccount = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetTransactionsRequest.prototype.setAccount = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.TransactionDetails = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.TransactionDetails.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.TransactionDetails, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.TransactionDetails.displayName = 'proto.lnrpc.TransactionDetails';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.TransactionDetails.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.TransactionDetails.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.TransactionDetails.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.TransactionDetails} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.TransactionDetails.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),\n    proto.lnrpc.Transaction.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.TransactionDetails}\n */\nproto.lnrpc.TransactionDetails.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.TransactionDetails;\n  return proto.lnrpc.TransactionDetails.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.TransactionDetails} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.TransactionDetails}\n */\nproto.lnrpc.TransactionDetails.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Transaction;\n      reader.readMessage(value,proto.lnrpc.Transaction.deserializeBinaryFromReader);\n      msg.addTransactions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.TransactionDetails.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.TransactionDetails.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.TransactionDetails} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.TransactionDetails.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTransactionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Transaction.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Transaction transactions = 1;\n * @return {!Array.<!proto.lnrpc.Transaction>}\n */\nproto.lnrpc.TransactionDetails.prototype.getTransactionsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Transaction>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Transaction, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Transaction>} value */\nproto.lnrpc.TransactionDetails.prototype.setTransactionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Transaction=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Transaction}\n */\nproto.lnrpc.TransactionDetails.prototype.addTransactions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Transaction, opt_index);\n};\n\n\nproto.lnrpc.TransactionDetails.prototype.clearTransactionsList = function() {\n  this.setTransactionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FeeLimit = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.FeeLimit.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.FeeLimit, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FeeLimit.displayName = 'proto.lnrpc.FeeLimit';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.FeeLimit.oneofGroups_ = [[1,3,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.FeeLimit.LimitCase = {\n  LIMIT_NOT_SET: 0,\n  FIXED: 1,\n  FIXED_MSAT: 3,\n  PERCENT: 2\n};\n\n/**\n * @return {proto.lnrpc.FeeLimit.LimitCase}\n */\nproto.lnrpc.FeeLimit.prototype.getLimitCase = function() {\n  return /** @type {proto.lnrpc.FeeLimit.LimitCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.FeeLimit.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FeeLimit.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FeeLimit.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FeeLimit} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeLimit.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fixed: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    fixedMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    percent: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FeeLimit}\n */\nproto.lnrpc.FeeLimit.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FeeLimit;\n  return proto.lnrpc.FeeLimit.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FeeLimit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FeeLimit}\n */\nproto.lnrpc.FeeLimit.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFixed(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFixedMsat(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPercent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FeeLimit.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FeeLimit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FeeLimit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeLimit.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 fixed = 1;\n * @return {number}\n */\nproto.lnrpc.FeeLimit.prototype.getFixed = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeLimit.prototype.setFixed = function(value) {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.FeeLimit.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FeeLimit.prototype.clearFixed = function() {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.FeeLimit.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FeeLimit.prototype.hasFixed = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 fixed_msat = 3;\n * @return {number}\n */\nproto.lnrpc.FeeLimit.prototype.getFixedMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeLimit.prototype.setFixedMsat = function(value) {\n  jspb.Message.setOneofField(this, 3, proto.lnrpc.FeeLimit.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FeeLimit.prototype.clearFixedMsat = function() {\n  jspb.Message.setOneofField(this, 3, proto.lnrpc.FeeLimit.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FeeLimit.prototype.hasFixedMsat = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional int64 percent = 2;\n * @return {number}\n */\nproto.lnrpc.FeeLimit.prototype.getPercent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeLimit.prototype.setPercent = function(value) {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.FeeLimit.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FeeLimit.prototype.clearPercent = function() {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.FeeLimit.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FeeLimit.prototype.hasPercent = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.SendRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.SendRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendRequest.displayName = 'proto.lnrpc.SendRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.SendRequest.repeatedFields_ = [15];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dest: msg.getDest_asB64(),\n    destString: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    amt: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    amtMsat: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    paymentHash: msg.getPaymentHash_asB64(),\n    paymentHashString: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    paymentRequest: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    finalCltvDelta: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    feeLimit: (f = msg.getFeeLimit()) && proto.lnrpc.FeeLimit.toObject(includeInstance, f),\n    outgoingChanId: jspb.Message.getFieldWithDefault(msg, 9, \"0\"),\n    lastHopPubkey: msg.getLastHopPubkey_asB64(),\n    cltvLimit: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    destCustomRecordsMap: (f = msg.getDestCustomRecordsMap()) ? f.toObject(includeInstance, undefined) : [],\n    allowSelfPayment: jspb.Message.getFieldWithDefault(msg, 14, false),\n    destFeaturesList: jspb.Message.getRepeatedField(msg, 15),\n    paymentAddr: msg.getPaymentAddr_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendRequest}\n */\nproto.lnrpc.SendRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendRequest;\n  return proto.lnrpc.SendRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendRequest}\n */\nproto.lnrpc.SendRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDest(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDestString(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmt(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentHash(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHashString(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentRequest(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setFinalCltvDelta(value);\n      break;\n    case 8:\n      var value = new proto.lnrpc.FeeLimit;\n      reader.readMessage(value,proto.lnrpc.FeeLimit.deserializeBinaryFromReader);\n      msg.setFeeLimit(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setOutgoingChanId(value);\n      break;\n    case 13:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setLastHopPubkey(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCltvLimit(value);\n      break;\n    case 11:\n      var value = msg.getDestCustomRecordsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readBytes);\n         });\n      break;\n    case 14:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAllowSelfPayment(value);\n      break;\n    case 15:\n      var value = /** @type {!Array.<!proto.lnrpc.FeatureBit>} */ (reader.readPackedEnum());\n      msg.setDestFeaturesList(value);\n      break;\n    case 16:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentAddr(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDest_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getDestString();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmt();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getPaymentHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getPaymentHashString();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getPaymentRequest();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getFinalCltvDelta();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n  f = message.getFeeLimit();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.lnrpc.FeeLimit.serializeBinaryToWriter\n    );\n  }\n  f = message.getOutgoingChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      9,\n      f\n    );\n  }\n  f = message.getLastHopPubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      13,\n      f\n    );\n  }\n  f = message.getCltvLimit();\n  if (f !== 0) {\n    writer.writeUint32(\n      10,\n      f\n    );\n  }\n  f = message.getDestCustomRecordsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getAllowSelfPayment();\n  if (f) {\n    writer.writeBool(\n      14,\n      f\n    );\n  }\n  f = message.getDestFeaturesList();\n  if (f.length > 0) {\n    writer.writePackedEnum(\n      15,\n      f\n    );\n  }\n  f = message.getPaymentAddr_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      16,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dest = 1;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getDest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dest = 1;\n * This is a type-conversion wrapper around `getDest()`\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getDest_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDest()));\n};\n\n\n/**\n * optional bytes dest = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDest()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendRequest.prototype.getDest_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDest()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendRequest.prototype.setDest = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string dest_string = 2;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getDestString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendRequest.prototype.setDestString = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt = 3;\n * @return {number}\n */\nproto.lnrpc.SendRequest.prototype.getAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendRequest.prototype.setAmt = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 amt_msat = 12;\n * @return {number}\n */\nproto.lnrpc.SendRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentHash()));\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendRequest.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string payment_hash_string = 5;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentHashString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendRequest.prototype.setPaymentHashString = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string payment_request = 6;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentRequest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendRequest.prototype.setPaymentRequest = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int32 final_cltv_delta = 7;\n * @return {number}\n */\nproto.lnrpc.SendRequest.prototype.getFinalCltvDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendRequest.prototype.setFinalCltvDelta = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional FeeLimit fee_limit = 8;\n * @return {?proto.lnrpc.FeeLimit}\n */\nproto.lnrpc.SendRequest.prototype.getFeeLimit = function() {\n  return /** @type{?proto.lnrpc.FeeLimit} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FeeLimit, 8));\n};\n\n\n/** @param {?proto.lnrpc.FeeLimit|undefined} value */\nproto.lnrpc.SendRequest.prototype.setFeeLimit = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.lnrpc.SendRequest.prototype.clearFeeLimit = function() {\n  this.setFeeLimit(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.SendRequest.prototype.hasFeeLimit = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional uint64 outgoing_chan_id = 9;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getOutgoingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendRequest.prototype.setOutgoingChanId = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 13;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getLastHopPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 13;\n * This is a type-conversion wrapper around `getLastHopPubkey()`\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getLastHopPubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getLastHopPubkey()));\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 13;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getLastHopPubkey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendRequest.prototype.getLastHopPubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getLastHopPubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendRequest.prototype.setLastHopPubkey = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional uint32 cltv_limit = 10;\n * @return {number}\n */\nproto.lnrpc.SendRequest.prototype.getCltvLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendRequest.prototype.setCltvLimit = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * map<uint64, bytes> dest_custom_records = 11;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!(string|Uint8Array)>}\n */\nproto.lnrpc.SendRequest.prototype.getDestCustomRecordsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 11, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.SendRequest.prototype.clearDestCustomRecordsMap = function() {\n  this.getDestCustomRecordsMap().clear();\n};\n\n\n/**\n * optional bool allow_self_payment = 14;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.SendRequest.prototype.getAllowSelfPayment = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.SendRequest.prototype.setAllowSelfPayment = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * repeated FeatureBit dest_features = 15;\n * @return {!Array.<!proto.lnrpc.FeatureBit>}\n */\nproto.lnrpc.SendRequest.prototype.getDestFeaturesList = function() {\n  return /** @type {!Array.<!proto.lnrpc.FeatureBit>} */ (jspb.Message.getRepeatedField(this, 15));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.FeatureBit>} value */\nproto.lnrpc.SendRequest.prototype.setDestFeaturesList = function(value) {\n  jspb.Message.setField(this, 15, value || []);\n};\n\n\n/**\n * @param {!proto.lnrpc.FeatureBit} value\n * @param {number=} opt_index\n */\nproto.lnrpc.SendRequest.prototype.addDestFeatures = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 15, value, opt_index);\n};\n\n\nproto.lnrpc.SendRequest.prototype.clearDestFeaturesList = function() {\n  this.setDestFeaturesList([]);\n};\n\n\n/**\n * optional bytes payment_addr = 16;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, \"\"));\n};\n\n\n/**\n * optional bytes payment_addr = 16;\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentAddr_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentAddr()));\n};\n\n\n/**\n * optional bytes payment_addr = 16;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentAddr_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentAddr()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendRequest.prototype.setPaymentAddr = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendResponse.displayName = 'proto.lnrpc.SendResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentError: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    paymentPreimage: msg.getPaymentPreimage_asB64(),\n    paymentRoute: (f = msg.getPaymentRoute()) && proto.lnrpc.Route.toObject(includeInstance, f),\n    paymentHash: msg.getPaymentHash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendResponse}\n */\nproto.lnrpc.SendResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendResponse;\n  return proto.lnrpc.SendResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendResponse}\n */\nproto.lnrpc.SendResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentError(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentPreimage(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.Route;\n      reader.readMessage(value,proto.lnrpc.Route.deserializeBinaryFromReader);\n      msg.setPaymentRoute(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPaymentPreimage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getPaymentRoute();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.Route.serializeBinaryToWriter\n    );\n  }\n  f = message.getPaymentHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string payment_error = 1;\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendResponse.prototype.setPaymentError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes payment_preimage = 2;\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes payment_preimage = 2;\n * This is a type-conversion wrapper around `getPaymentPreimage()`\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentPreimage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentPreimage()));\n};\n\n\n/**\n * optional bytes payment_preimage = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentPreimage()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentPreimage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentPreimage()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendResponse.prototype.setPaymentPreimage = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional Route payment_route = 3;\n * @return {?proto.lnrpc.Route}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentRoute = function() {\n  return /** @type{?proto.lnrpc.Route} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Route, 3));\n};\n\n\n/** @param {?proto.lnrpc.Route|undefined} value */\nproto.lnrpc.SendResponse.prototype.setPaymentRoute = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.SendResponse.prototype.clearPaymentRoute = function() {\n  this.setPaymentRoute(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.SendResponse.prototype.hasPaymentRoute = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentHash()));\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendResponse.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendToRouteRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendToRouteRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendToRouteRequest.displayName = 'proto.lnrpc.SendToRouteRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendToRouteRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendToRouteRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendToRouteRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendToRouteRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentHash: msg.getPaymentHash_asB64(),\n    paymentHashString: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    route: (f = msg.getRoute()) && proto.lnrpc.Route.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendToRouteRequest}\n */\nproto.lnrpc.SendToRouteRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendToRouteRequest;\n  return proto.lnrpc.SendToRouteRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendToRouteRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendToRouteRequest}\n */\nproto.lnrpc.SendToRouteRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentHash(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHashString(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.Route;\n      reader.readMessage(value,proto.lnrpc.Route.deserializeBinaryFromReader);\n      msg.setRoute(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendToRouteRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendToRouteRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendToRouteRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendToRouteRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPaymentHashString();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getRoute();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.Route.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes payment_hash = 1;\n * @return {string}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes payment_hash = 1;\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {string}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getPaymentHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentHash()));\n};\n\n\n/**\n * optional bytes payment_hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getPaymentHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendToRouteRequest.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string payment_hash_string = 2;\n * @return {string}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getPaymentHashString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendToRouteRequest.prototype.setPaymentHashString = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional Route route = 4;\n * @return {?proto.lnrpc.Route}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getRoute = function() {\n  return /** @type{?proto.lnrpc.Route} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Route, 4));\n};\n\n\n/** @param {?proto.lnrpc.Route|undefined} value */\nproto.lnrpc.SendToRouteRequest.prototype.setRoute = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.lnrpc.SendToRouteRequest.prototype.clearRoute = function() {\n  this.setRoute(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.SendToRouteRequest.prototype.hasRoute = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelAcceptRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelAcceptRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelAcceptRequest.displayName = 'proto.lnrpc.ChannelAcceptRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelAcceptRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelAcceptRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelAcceptRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodePubkey: msg.getNodePubkey_asB64(),\n    chainHash: msg.getChainHash_asB64(),\n    pendingChanId: msg.getPendingChanId_asB64(),\n    fundingAmt: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    pushAmt: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    dustLimit: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    maxValueInFlight: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    channelReserve: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    minHtlc: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    feePerKw: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    csvDelay: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    maxAcceptedHtlcs: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    channelFlags: jspb.Message.getFieldWithDefault(msg, 13, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelAcceptRequest}\n */\nproto.lnrpc.ChannelAcceptRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelAcceptRequest;\n  return proto.lnrpc.ChannelAcceptRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelAcceptRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelAcceptRequest}\n */\nproto.lnrpc.ChannelAcceptRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNodePubkey(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChainHash(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFundingAmt(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPushAmt(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDustLimit(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxValueInFlight(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChannelReserve(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMinHtlc(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFeePerKw(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCsvDelay(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaxAcceptedHtlcs(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setChannelFlags(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelAcceptRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelAcceptRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelAcceptRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodePubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getChainHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getFundingAmt();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getPushAmt();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getDustLimit();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getMaxValueInFlight();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getChannelReserve();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n  f = message.getMinHtlc();\n  if (f !== 0) {\n    writer.writeUint64(\n      9,\n      f\n    );\n  }\n  f = message.getFeePerKw();\n  if (f !== 0) {\n    writer.writeUint64(\n      10,\n      f\n    );\n  }\n  f = message.getCsvDelay();\n  if (f !== 0) {\n    writer.writeUint32(\n      11,\n      f\n    );\n  }\n  f = message.getMaxAcceptedHtlcs();\n  if (f !== 0) {\n    writer.writeUint32(\n      12,\n      f\n    );\n  }\n  f = message.getChannelFlags();\n  if (f !== 0) {\n    writer.writeUint32(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes node_pubkey = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getNodePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes node_pubkey = 1;\n * This is a type-conversion wrapper around `getNodePubkey()`\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getNodePubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNodePubkey()));\n};\n\n\n/**\n * optional bytes node_pubkey = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNodePubkey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getNodePubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNodePubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setNodePubkey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChainHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * This is a type-conversion wrapper around `getChainHash()`\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChainHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChainHash()));\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChainHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChainHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChainHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setChainHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 3;\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 3;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 funding_amt = 4;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getFundingAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setFundingAmt = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 push_amt = 5;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getPushAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setPushAmt = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 dust_limit = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getDustLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setDustLimit = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 max_value_in_flight = 7;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getMaxValueInFlight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setMaxValueInFlight = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional uint64 channel_reserve = 8;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChannelReserve = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setChannelReserve = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional uint64 min_htlc = 9;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getMinHtlc = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setMinHtlc = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional uint64 fee_per_kw = 10;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getFeePerKw = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setFeePerKw = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional uint32 csv_delay = 11;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getCsvDelay = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setCsvDelay = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional uint32 max_accepted_htlcs = 12;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getMaxAcceptedHtlcs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setMaxAcceptedHtlcs = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional uint32 channel_flags = 13;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChannelFlags = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setChannelFlags = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelAcceptResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelAcceptResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelAcceptResponse.displayName = 'proto.lnrpc.ChannelAcceptResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelAcceptResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelAcceptResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelAcceptResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accept: jspb.Message.getFieldWithDefault(msg, 1, false),\n    pendingChanId: msg.getPendingChanId_asB64(),\n    error: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    upfrontShutdown: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    csvDelay: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    reserveSat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    inFlightMaxMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    maxHtlcCount: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    minHtlcIn: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    minAcceptDepth: jspb.Message.getFieldWithDefault(msg, 10, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelAcceptResponse}\n */\nproto.lnrpc.ChannelAcceptResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelAcceptResponse;\n  return proto.lnrpc.ChannelAcceptResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelAcceptResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelAcceptResponse}\n */\nproto.lnrpc.ChannelAcceptResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAccept(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpfrontShutdown(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCsvDelay(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setReserveSat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setInFlightMaxMsat(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaxHtlcCount(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMinHtlcIn(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMinAcceptDepth(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelAcceptResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelAcceptResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelAcceptResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccept();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getUpfrontShutdown();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getCsvDelay();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getReserveSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getInFlightMaxMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getMaxHtlcCount();\n  if (f !== 0) {\n    writer.writeUint32(\n      8,\n      f\n    );\n  }\n  f = message.getMinHtlcIn();\n  if (f !== 0) {\n    writer.writeUint64(\n      9,\n      f\n    );\n  }\n  f = message.getMinAcceptDepth();\n  if (f !== 0) {\n    writer.writeUint32(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool accept = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getAccept = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ChannelAcceptResponse.prototype.setAccept = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelAcceptResponse.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string error = 3;\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelAcceptResponse.prototype.setError = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string upfront_shutdown = 4;\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getUpfrontShutdown = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelAcceptResponse.prototype.setUpfrontShutdown = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 csv_delay = 5;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getCsvDelay = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptResponse.prototype.setCsvDelay = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 reserve_sat = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptResponse.prototype.setReserveSat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 in_flight_max_msat = 7;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getInFlightMaxMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptResponse.prototype.setInFlightMaxMsat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional uint32 max_htlc_count = 8;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getMaxHtlcCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptResponse.prototype.setMaxHtlcCount = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional uint64 min_htlc_in = 9;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getMinHtlcIn = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptResponse.prototype.setMinHtlcIn = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional uint32 min_accept_depth = 10;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getMinAcceptDepth = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptResponse.prototype.setMinAcceptDepth = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelPoint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.ChannelPoint.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.ChannelPoint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelPoint.displayName = 'proto.lnrpc.ChannelPoint';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.ChannelPoint.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ChannelPoint.FundingTxidCase = {\n  FUNDING_TXID_NOT_SET: 0,\n  FUNDING_TXID_BYTES: 1,\n  FUNDING_TXID_STR: 2\n};\n\n/**\n * @return {proto.lnrpc.ChannelPoint.FundingTxidCase}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidCase = function() {\n  return /** @type {proto.lnrpc.ChannelPoint.FundingTxidCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.ChannelPoint.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelPoint.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelPoint.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelPoint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelPoint.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fundingTxidBytes: msg.getFundingTxidBytes_asB64(),\n    fundingTxidStr: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    outputIndex: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelPoint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelPoint;\n  return proto.lnrpc.ChannelPoint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelPoint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelPoint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFundingTxidBytes(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFundingTxidStr(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOutputIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelPoint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelPoint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelPoint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelPoint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getOutputIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes funding_txid_bytes = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidBytes = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes funding_txid_bytes = 1;\n * This is a type-conversion wrapper around `getFundingTxidBytes()`\n * @return {string}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidBytes_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFundingTxidBytes()));\n};\n\n\n/**\n * optional bytes funding_txid_bytes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFundingTxidBytes()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidBytes_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFundingTxidBytes()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelPoint.prototype.setFundingTxidBytes = function(value) {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.ChannelPoint.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelPoint.prototype.clearFundingTxidBytes = function() {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.ChannelPoint.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelPoint.prototype.hasFundingTxidBytes = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string funding_txid_str = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidStr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelPoint.prototype.setFundingTxidStr = function(value) {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.ChannelPoint.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelPoint.prototype.clearFundingTxidStr = function() {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.ChannelPoint.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelPoint.prototype.hasFundingTxidStr = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional uint32 output_index = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelPoint.prototype.getOutputIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelPoint.prototype.setOutputIndex = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.OutPoint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.OutPoint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.OutPoint.displayName = 'proto.lnrpc.OutPoint';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.OutPoint.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.OutPoint.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.OutPoint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OutPoint.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txidBytes: msg.getTxidBytes_asB64(),\n    txidStr: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    outputIndex: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.OutPoint}\n */\nproto.lnrpc.OutPoint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.OutPoint;\n  return proto.lnrpc.OutPoint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.OutPoint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.OutPoint}\n */\nproto.lnrpc.OutPoint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTxidBytes(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxidStr(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOutputIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.OutPoint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.OutPoint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.OutPoint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OutPoint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxidBytes_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getTxidStr();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getOutputIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes txid_bytes = 1;\n * @return {string}\n */\nproto.lnrpc.OutPoint.prototype.getTxidBytes = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes txid_bytes = 1;\n * This is a type-conversion wrapper around `getTxidBytes()`\n * @return {string}\n */\nproto.lnrpc.OutPoint.prototype.getTxidBytes_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTxidBytes()));\n};\n\n\n/**\n * optional bytes txid_bytes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxidBytes()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.OutPoint.prototype.getTxidBytes_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTxidBytes()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.OutPoint.prototype.setTxidBytes = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string txid_str = 2;\n * @return {string}\n */\nproto.lnrpc.OutPoint.prototype.getTxidStr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.OutPoint.prototype.setTxidStr = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 output_index = 3;\n * @return {number}\n */\nproto.lnrpc.OutPoint.prototype.getOutputIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OutPoint.prototype.setOutputIndex = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.LightningAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.LightningAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.LightningAddress.displayName = 'proto.lnrpc.LightningAddress';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.LightningAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.LightningAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.LightningAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.LightningAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubkey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    host: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.LightningAddress}\n */\nproto.lnrpc.LightningAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.LightningAddress;\n  return proto.lnrpc.LightningAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.LightningAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.LightningAddress}\n */\nproto.lnrpc.LightningAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubkey(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHost(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.LightningAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.LightningAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.LightningAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.LightningAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getHost();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pubkey = 1;\n * @return {string}\n */\nproto.lnrpc.LightningAddress.prototype.getPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningAddress.prototype.setPubkey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string host = 2;\n * @return {string}\n */\nproto.lnrpc.LightningAddress.prototype.getHost = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningAddress.prototype.setHost = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.EstimateFeeRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.EstimateFeeRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.EstimateFeeRequest.displayName = 'proto.lnrpc.EstimateFeeRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.EstimateFeeRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.EstimateFeeRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.EstimateFeeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EstimateFeeRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addrtoamountMap: (f = msg.getAddrtoamountMap()) ? f.toObject(includeInstance, undefined) : [],\n    targetConf: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    minConfs: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    spendUnconfirmed: jspb.Message.getFieldWithDefault(msg, 4, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.EstimateFeeRequest}\n */\nproto.lnrpc.EstimateFeeRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.EstimateFeeRequest;\n  return proto.lnrpc.EstimateFeeRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.EstimateFeeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.EstimateFeeRequest}\n */\nproto.lnrpc.EstimateFeeRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = msg.getAddrtoamountMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64);\n         });\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinConfs(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSpendUnconfirmed(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.EstimateFeeRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.EstimateFeeRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.EstimateFeeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EstimateFeeRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddrtoamountMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getMinConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getSpendUnconfirmed();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * map<string, int64> AddrToAmount = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nproto.lnrpc.EstimateFeeRequest.prototype.getAddrtoamountMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.EstimateFeeRequest.prototype.clearAddrtoamountMap = function() {\n  this.getAddrtoamountMap().clear();\n};\n\n\n/**\n * optional int32 target_conf = 2;\n * @return {number}\n */\nproto.lnrpc.EstimateFeeRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.EstimateFeeRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 min_confs = 3;\n * @return {number}\n */\nproto.lnrpc.EstimateFeeRequest.prototype.getMinConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.EstimateFeeRequest.prototype.setMinConfs = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool spend_unconfirmed = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.EstimateFeeRequest.prototype.getSpendUnconfirmed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.EstimateFeeRequest.prototype.setSpendUnconfirmed = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.EstimateFeeResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.EstimateFeeResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.EstimateFeeResponse.displayName = 'proto.lnrpc.EstimateFeeResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.EstimateFeeResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.EstimateFeeResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.EstimateFeeResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EstimateFeeResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    feeSat: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    feerateSatPerByte: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    satPerVbyte: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.EstimateFeeResponse}\n */\nproto.lnrpc.EstimateFeeResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.EstimateFeeResponse;\n  return proto.lnrpc.EstimateFeeResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.EstimateFeeResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.EstimateFeeResponse}\n */\nproto.lnrpc.EstimateFeeResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeSat(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeerateSatPerByte(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSatPerVbyte(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.EstimateFeeResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.EstimateFeeResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.EstimateFeeResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EstimateFeeResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFeeSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getFeerateSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getSatPerVbyte();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 fee_sat = 1;\n * @return {number}\n */\nproto.lnrpc.EstimateFeeResponse.prototype.getFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.EstimateFeeResponse.prototype.setFeeSat = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 feerate_sat_per_byte = 2;\n * @return {number}\n */\nproto.lnrpc.EstimateFeeResponse.prototype.getFeerateSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.EstimateFeeResponse.prototype.setFeerateSatPerByte = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 sat_per_vbyte = 3;\n * @return {number}\n */\nproto.lnrpc.EstimateFeeResponse.prototype.getSatPerVbyte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.EstimateFeeResponse.prototype.setSatPerVbyte = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendManyRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendManyRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendManyRequest.displayName = 'proto.lnrpc.SendManyRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendManyRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendManyRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendManyRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendManyRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addrtoamountMap: (f = msg.getAddrtoamountMap()) ? f.toObject(includeInstance, undefined) : [],\n    targetConf: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    satPerVbyte: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    satPerByte: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    label: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    minConfs: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    spendUnconfirmed: jspb.Message.getFieldWithDefault(msg, 8, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendManyRequest}\n */\nproto.lnrpc.SendManyRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendManyRequest;\n  return proto.lnrpc.SendManyRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendManyRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendManyRequest}\n */\nproto.lnrpc.SendManyRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = msg.getAddrtoamountMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64);\n         });\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSatPerVbyte(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatPerByte(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinConfs(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSpendUnconfirmed(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendManyRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendManyRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendManyRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendManyRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddrtoamountMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getSatPerVbyte();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getLabel();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getMinConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n  f = message.getSpendUnconfirmed();\n  if (f) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * map<string, int64> AddrToAmount = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nproto.lnrpc.SendManyRequest.prototype.getAddrtoamountMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.SendManyRequest.prototype.clearAddrtoamountMap = function() {\n  this.getAddrtoamountMap().clear();\n};\n\n\n/**\n * optional int32 target_conf = 3;\n * @return {number}\n */\nproto.lnrpc.SendManyRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendManyRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 sat_per_vbyte = 4;\n * @return {number}\n */\nproto.lnrpc.SendManyRequest.prototype.getSatPerVbyte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendManyRequest.prototype.setSatPerVbyte = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 sat_per_byte = 5;\n * @return {number}\n */\nproto.lnrpc.SendManyRequest.prototype.getSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendManyRequest.prototype.setSatPerByte = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string label = 6;\n * @return {string}\n */\nproto.lnrpc.SendManyRequest.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendManyRequest.prototype.setLabel = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int32 min_confs = 7;\n * @return {number}\n */\nproto.lnrpc.SendManyRequest.prototype.getMinConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendManyRequest.prototype.setMinConfs = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional bool spend_unconfirmed = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.SendManyRequest.prototype.getSpendUnconfirmed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.SendManyRequest.prototype.setSpendUnconfirmed = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendManyResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendManyResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendManyResponse.displayName = 'proto.lnrpc.SendManyResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendManyResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendManyResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendManyResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendManyResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendManyResponse}\n */\nproto.lnrpc.SendManyResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendManyResponse;\n  return proto.lnrpc.SendManyResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendManyResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendManyResponse}\n */\nproto.lnrpc.SendManyResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendManyResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendManyResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendManyResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendManyResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string txid = 1;\n * @return {string}\n */\nproto.lnrpc.SendManyResponse.prototype.getTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendManyResponse.prototype.setTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendCoinsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendCoinsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendCoinsRequest.displayName = 'proto.lnrpc.SendCoinsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendCoinsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendCoinsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendCoinsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendCoinsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addr: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    targetConf: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    satPerVbyte: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    satPerByte: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    sendAll: jspb.Message.getFieldWithDefault(msg, 6, false),\n    label: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    minConfs: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    spendUnconfirmed: jspb.Message.getFieldWithDefault(msg, 9, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendCoinsRequest}\n */\nproto.lnrpc.SendCoinsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendCoinsRequest;\n  return proto.lnrpc.SendCoinsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendCoinsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendCoinsRequest}\n */\nproto.lnrpc.SendCoinsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddr(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSatPerVbyte(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatPerByte(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSendAll(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinConfs(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSpendUnconfirmed(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendCoinsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendCoinsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendCoinsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendCoinsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getSatPerVbyte();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getSendAll();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = message.getLabel();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getMinConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      8,\n      f\n    );\n  }\n  f = message.getSpendUnconfirmed();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string addr = 1;\n * @return {string}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendCoinsRequest.prototype.setAddr = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amount = 2;\n * @return {number}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendCoinsRequest.prototype.setAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 target_conf = 3;\n * @return {number}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendCoinsRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 sat_per_vbyte = 4;\n * @return {number}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getSatPerVbyte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendCoinsRequest.prototype.setSatPerVbyte = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 sat_per_byte = 5;\n * @return {number}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendCoinsRequest.prototype.setSatPerByte = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional bool send_all = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getSendAll = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.SendCoinsRequest.prototype.setSendAll = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string label = 7;\n * @return {string}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendCoinsRequest.prototype.setLabel = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int32 min_confs = 8;\n * @return {number}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getMinConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendCoinsRequest.prototype.setMinConfs = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional bool spend_unconfirmed = 9;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getSpendUnconfirmed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.SendCoinsRequest.prototype.setSpendUnconfirmed = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendCoinsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendCoinsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendCoinsResponse.displayName = 'proto.lnrpc.SendCoinsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendCoinsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendCoinsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendCoinsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendCoinsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendCoinsResponse}\n */\nproto.lnrpc.SendCoinsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendCoinsResponse;\n  return proto.lnrpc.SendCoinsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendCoinsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendCoinsResponse}\n */\nproto.lnrpc.SendCoinsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendCoinsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendCoinsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendCoinsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendCoinsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string txid = 1;\n * @return {string}\n */\nproto.lnrpc.SendCoinsResponse.prototype.getTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendCoinsResponse.prototype.setTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListUnspentRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListUnspentRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListUnspentRequest.displayName = 'proto.lnrpc.ListUnspentRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListUnspentRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListUnspentRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListUnspentRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListUnspentRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    minConfs: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    maxConfs: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    account: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListUnspentRequest}\n */\nproto.lnrpc.ListUnspentRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListUnspentRequest;\n  return proto.lnrpc.ListUnspentRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListUnspentRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListUnspentRequest}\n */\nproto.lnrpc.ListUnspentRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinConfs(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMaxConfs(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListUnspentRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListUnspentRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListUnspentRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListUnspentRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMinConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMaxConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getAccount();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 min_confs = 1;\n * @return {number}\n */\nproto.lnrpc.ListUnspentRequest.prototype.getMinConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListUnspentRequest.prototype.setMinConfs = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 max_confs = 2;\n * @return {number}\n */\nproto.lnrpc.ListUnspentRequest.prototype.getMaxConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListUnspentRequest.prototype.setMaxConfs = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string account = 3;\n * @return {string}\n */\nproto.lnrpc.ListUnspentRequest.prototype.getAccount = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ListUnspentRequest.prototype.setAccount = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListUnspentResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListUnspentResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListUnspentResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListUnspentResponse.displayName = 'proto.lnrpc.ListUnspentResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListUnspentResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListUnspentResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListUnspentResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListUnspentResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListUnspentResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    utxosList: jspb.Message.toObjectList(msg.getUtxosList(),\n    proto.lnrpc.Utxo.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListUnspentResponse}\n */\nproto.lnrpc.ListUnspentResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListUnspentResponse;\n  return proto.lnrpc.ListUnspentResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListUnspentResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListUnspentResponse}\n */\nproto.lnrpc.ListUnspentResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Utxo;\n      reader.readMessage(value,proto.lnrpc.Utxo.deserializeBinaryFromReader);\n      msg.addUtxos(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListUnspentResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListUnspentResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListUnspentResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListUnspentResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUtxosList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Utxo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Utxo utxos = 1;\n * @return {!Array.<!proto.lnrpc.Utxo>}\n */\nproto.lnrpc.ListUnspentResponse.prototype.getUtxosList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Utxo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Utxo, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Utxo>} value */\nproto.lnrpc.ListUnspentResponse.prototype.setUtxosList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Utxo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Utxo}\n */\nproto.lnrpc.ListUnspentResponse.prototype.addUtxos = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Utxo, opt_index);\n};\n\n\nproto.lnrpc.ListUnspentResponse.prototype.clearUtxosList = function() {\n  this.setUtxosList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NewAddressRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NewAddressRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NewAddressRequest.displayName = 'proto.lnrpc.NewAddressRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NewAddressRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NewAddressRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NewAddressRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NewAddressRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    account: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NewAddressRequest}\n */\nproto.lnrpc.NewAddressRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NewAddressRequest;\n  return proto.lnrpc.NewAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NewAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NewAddressRequest}\n */\nproto.lnrpc.NewAddressRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lnrpc.AddressType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAccount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NewAddressRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NewAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NewAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NewAddressRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getAccount();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional AddressType type = 1;\n * @return {!proto.lnrpc.AddressType}\n */\nproto.lnrpc.NewAddressRequest.prototype.getType = function() {\n  return /** @type {!proto.lnrpc.AddressType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.AddressType} value */\nproto.lnrpc.NewAddressRequest.prototype.setType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string account = 2;\n * @return {string}\n */\nproto.lnrpc.NewAddressRequest.prototype.getAccount = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NewAddressRequest.prototype.setAccount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NewAddressResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NewAddressResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NewAddressResponse.displayName = 'proto.lnrpc.NewAddressResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NewAddressResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NewAddressResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NewAddressResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NewAddressResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NewAddressResponse}\n */\nproto.lnrpc.NewAddressResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NewAddressResponse;\n  return proto.lnrpc.NewAddressResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NewAddressResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NewAddressResponse}\n */\nproto.lnrpc.NewAddressResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NewAddressResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NewAddressResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NewAddressResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NewAddressResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.lnrpc.NewAddressResponse.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NewAddressResponse.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SignMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SignMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SignMessageRequest.displayName = 'proto.lnrpc.SignMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SignMessageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SignMessageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SignMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SignMessageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    msg: msg.getMsg_asB64(),\n    singleHash: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SignMessageRequest}\n */\nproto.lnrpc.SignMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SignMessageRequest;\n  return proto.lnrpc.SignMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SignMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SignMessageRequest}\n */\nproto.lnrpc.SignMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMsg(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSingleHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SignMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SignMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SignMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SignMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMsg_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getSingleHash();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes msg = 1;\n * @return {string}\n */\nproto.lnrpc.SignMessageRequest.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes msg = 1;\n * This is a type-conversion wrapper around `getMsg()`\n * @return {string}\n */\nproto.lnrpc.SignMessageRequest.prototype.getMsg_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMsg()));\n};\n\n\n/**\n * optional bytes msg = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMsg()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SignMessageRequest.prototype.getMsg_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMsg()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SignMessageRequest.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool single_hash = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.SignMessageRequest.prototype.getSingleHash = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.SignMessageRequest.prototype.setSingleHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SignMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SignMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SignMessageResponse.displayName = 'proto.lnrpc.SignMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SignMessageResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SignMessageResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SignMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SignMessageResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    signature: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SignMessageResponse}\n */\nproto.lnrpc.SignMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SignMessageResponse;\n  return proto.lnrpc.SignMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SignMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SignMessageResponse}\n */\nproto.lnrpc.SignMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SignMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SignMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SignMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SignMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSignature();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string signature = 1;\n * @return {string}\n */\nproto.lnrpc.SignMessageResponse.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SignMessageResponse.prototype.setSignature = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.VerifyMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.VerifyMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.VerifyMessageRequest.displayName = 'proto.lnrpc.VerifyMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.VerifyMessageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.VerifyMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyMessageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    msg: msg.getMsg_asB64(),\n    signature: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.VerifyMessageRequest}\n */\nproto.lnrpc.VerifyMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.VerifyMessageRequest;\n  return proto.lnrpc.VerifyMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.VerifyMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.VerifyMessageRequest}\n */\nproto.lnrpc.VerifyMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMsg(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.VerifyMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.VerifyMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMsg_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getSignature();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes msg = 1;\n * @return {string}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes msg = 1;\n * This is a type-conversion wrapper around `getMsg()`\n * @return {string}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.getMsg_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMsg()));\n};\n\n\n/**\n * optional bytes msg = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMsg()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.getMsg_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMsg()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.VerifyMessageRequest.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string signature = 2;\n * @return {string}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.VerifyMessageRequest.prototype.setSignature = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.VerifyMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.VerifyMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.VerifyMessageResponse.displayName = 'proto.lnrpc.VerifyMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.VerifyMessageResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.VerifyMessageResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.VerifyMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyMessageResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    valid: jspb.Message.getFieldWithDefault(msg, 1, false),\n    pubkey: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.VerifyMessageResponse}\n */\nproto.lnrpc.VerifyMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.VerifyMessageResponse;\n  return proto.lnrpc.VerifyMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.VerifyMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.VerifyMessageResponse}\n */\nproto.lnrpc.VerifyMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setValid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubkey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.VerifyMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.VerifyMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.VerifyMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValid();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool valid = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.VerifyMessageResponse.prototype.getValid = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.VerifyMessageResponse.prototype.setValid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string pubkey = 2;\n * @return {string}\n */\nproto.lnrpc.VerifyMessageResponse.prototype.getPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.VerifyMessageResponse.prototype.setPubkey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ConnectPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ConnectPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ConnectPeerRequest.displayName = 'proto.lnrpc.ConnectPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ConnectPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ConnectPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConnectPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addr: (f = msg.getAddr()) && proto.lnrpc.LightningAddress.toObject(includeInstance, f),\n    perm: jspb.Message.getFieldWithDefault(msg, 2, false),\n    timeout: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ConnectPeerRequest}\n */\nproto.lnrpc.ConnectPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ConnectPeerRequest;\n  return proto.lnrpc.ConnectPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ConnectPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ConnectPeerRequest}\n */\nproto.lnrpc.ConnectPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.LightningAddress;\n      reader.readMessage(value,proto.lnrpc.LightningAddress.deserializeBinaryFromReader);\n      msg.setAddr(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPerm(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setTimeout(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ConnectPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ConnectPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConnectPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddr();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.LightningAddress.serializeBinaryToWriter\n    );\n  }\n  f = message.getPerm();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getTimeout();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional LightningAddress addr = 1;\n * @return {?proto.lnrpc.LightningAddress}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.getAddr = function() {\n  return /** @type{?proto.lnrpc.LightningAddress} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.LightningAddress, 1));\n};\n\n\n/** @param {?proto.lnrpc.LightningAddress|undefined} value */\nproto.lnrpc.ConnectPeerRequest.prototype.setAddr = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ConnectPeerRequest.prototype.clearAddr = function() {\n  this.setAddr(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.hasAddr = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool perm = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.getPerm = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ConnectPeerRequest.prototype.setPerm = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 timeout = 3;\n * @return {number}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.getTimeout = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ConnectPeerRequest.prototype.setTimeout = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ConnectPeerResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ConnectPeerResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ConnectPeerResponse.displayName = 'proto.lnrpc.ConnectPeerResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ConnectPeerResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ConnectPeerResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ConnectPeerResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConnectPeerResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ConnectPeerResponse}\n */\nproto.lnrpc.ConnectPeerResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ConnectPeerResponse;\n  return proto.lnrpc.ConnectPeerResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ConnectPeerResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ConnectPeerResponse}\n */\nproto.lnrpc.ConnectPeerResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ConnectPeerResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ConnectPeerResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ConnectPeerResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConnectPeerResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DisconnectPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DisconnectPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DisconnectPeerRequest.displayName = 'proto.lnrpc.DisconnectPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DisconnectPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DisconnectPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DisconnectPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DisconnectPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DisconnectPeerRequest}\n */\nproto.lnrpc.DisconnectPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DisconnectPeerRequest;\n  return proto.lnrpc.DisconnectPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DisconnectPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DisconnectPeerRequest}\n */\nproto.lnrpc.DisconnectPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DisconnectPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DisconnectPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DisconnectPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DisconnectPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.DisconnectPeerRequest.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.DisconnectPeerRequest.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DisconnectPeerResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DisconnectPeerResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DisconnectPeerResponse.displayName = 'proto.lnrpc.DisconnectPeerResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DisconnectPeerResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DisconnectPeerResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DisconnectPeerResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DisconnectPeerResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DisconnectPeerResponse}\n */\nproto.lnrpc.DisconnectPeerResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DisconnectPeerResponse;\n  return proto.lnrpc.DisconnectPeerResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DisconnectPeerResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DisconnectPeerResponse}\n */\nproto.lnrpc.DisconnectPeerResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DisconnectPeerResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DisconnectPeerResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DisconnectPeerResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DisconnectPeerResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.HTLC = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.HTLC, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.HTLC.displayName = 'proto.lnrpc.HTLC';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.HTLC.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.HTLC.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.HTLC} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HTLC.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    incoming: jspb.Message.getFieldWithDefault(msg, 1, false),\n    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    hashLock: msg.getHashLock_asB64(),\n    expirationHeight: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    htlcIndex: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    forwardingChannel: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    forwardingHtlcIndex: jspb.Message.getFieldWithDefault(msg, 7, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.HTLC}\n */\nproto.lnrpc.HTLC.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.HTLC;\n  return proto.lnrpc.HTLC.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.HTLC} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.HTLC}\n */\nproto.lnrpc.HTLC.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncoming(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHashLock(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setExpirationHeight(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHtlcIndex(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setForwardingChannel(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setForwardingHtlcIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.HTLC.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.HTLC.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.HTLC} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HTLC.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIncoming();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getHashLock_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getExpirationHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getHtlcIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getForwardingChannel();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getForwardingHtlcIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool incoming = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.HTLC.prototype.getIncoming = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.HTLC.prototype.setIncoming = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amount = 2;\n * @return {number}\n */\nproto.lnrpc.HTLC.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLC.prototype.setAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bytes hash_lock = 3;\n * @return {string}\n */\nproto.lnrpc.HTLC.prototype.getHashLock = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes hash_lock = 3;\n * This is a type-conversion wrapper around `getHashLock()`\n * @return {string}\n */\nproto.lnrpc.HTLC.prototype.getHashLock_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHashLock()));\n};\n\n\n/**\n * optional bytes hash_lock = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHashLock()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.HTLC.prototype.getHashLock_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHashLock()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.HTLC.prototype.setHashLock = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 expiration_height = 4;\n * @return {number}\n */\nproto.lnrpc.HTLC.prototype.getExpirationHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLC.prototype.setExpirationHeight = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 htlc_index = 5;\n * @return {number}\n */\nproto.lnrpc.HTLC.prototype.getHtlcIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLC.prototype.setHtlcIndex = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 forwarding_channel = 6;\n * @return {number}\n */\nproto.lnrpc.HTLC.prototype.getForwardingChannel = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLC.prototype.setForwardingChannel = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 forwarding_htlc_index = 7;\n * @return {number}\n */\nproto.lnrpc.HTLC.prototype.getForwardingHtlcIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLC.prototype.setForwardingHtlcIndex = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelConstraints = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelConstraints, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelConstraints.displayName = 'proto.lnrpc.ChannelConstraints';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelConstraints.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelConstraints.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelConstraints} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelConstraints.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    csvDelay: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    chanReserveSat: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    dustLimitSat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    maxPendingAmtMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    minHtlcMsat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    maxAcceptedHtlcs: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelConstraints}\n */\nproto.lnrpc.ChannelConstraints.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelConstraints;\n  return proto.lnrpc.ChannelConstraints.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelConstraints} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelConstraints}\n */\nproto.lnrpc.ChannelConstraints.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCsvDelay(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChanReserveSat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDustLimitSat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxPendingAmtMsat(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMinHtlcMsat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaxAcceptedHtlcs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelConstraints.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelConstraints.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelConstraints} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelConstraints.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCsvDelay();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getChanReserveSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getDustLimitSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getMaxPendingAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getMinHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getMaxAcceptedHtlcs();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 csv_delay = 1;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getCsvDelay = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setCsvDelay = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 chan_reserve_sat = 2;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setChanReserveSat = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 dust_limit_sat = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getDustLimitSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setDustLimitSat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 max_pending_amt_msat = 4;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getMaxPendingAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setMaxPendingAmtMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 min_htlc_msat = 5;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getMinHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setMinHtlcMsat = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 max_accepted_htlcs = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getMaxAcceptedHtlcs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setMaxAcceptedHtlcs = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Channel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Channel.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Channel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Channel.displayName = 'proto.lnrpc.Channel';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Channel.repeatedFields_ = [15];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Channel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Channel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Channel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Channel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    active: jspb.Message.getFieldWithDefault(msg, 1, false),\n    remotePubkey: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    channelPoint: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    chanId: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    localBalance: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    remoteBalance: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    commitFee: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    commitWeight: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    feePerKw: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    unsettledBalance: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    totalSatoshisSent: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    totalSatoshisReceived: jspb.Message.getFieldWithDefault(msg, 13, 0),\n    numUpdates: jspb.Message.getFieldWithDefault(msg, 14, 0),\n    pendingHtlcsList: jspb.Message.toObjectList(msg.getPendingHtlcsList(),\n    proto.lnrpc.HTLC.toObject, includeInstance),\n    csvDelay: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    pb_private: jspb.Message.getFieldWithDefault(msg, 17, false),\n    initiator: jspb.Message.getFieldWithDefault(msg, 18, false),\n    chanStatusFlags: jspb.Message.getFieldWithDefault(msg, 19, \"\"),\n    localChanReserveSat: jspb.Message.getFieldWithDefault(msg, 20, 0),\n    remoteChanReserveSat: jspb.Message.getFieldWithDefault(msg, 21, 0),\n    staticRemoteKey: jspb.Message.getFieldWithDefault(msg, 22, false),\n    commitmentType: jspb.Message.getFieldWithDefault(msg, 26, 0),\n    lifetime: jspb.Message.getFieldWithDefault(msg, 23, 0),\n    uptime: jspb.Message.getFieldWithDefault(msg, 24, 0),\n    closeAddress: jspb.Message.getFieldWithDefault(msg, 25, \"\"),\n    pushAmountSat: jspb.Message.getFieldWithDefault(msg, 27, 0),\n    thawHeight: jspb.Message.getFieldWithDefault(msg, 28, 0),\n    localConstraints: (f = msg.getLocalConstraints()) && proto.lnrpc.ChannelConstraints.toObject(includeInstance, f),\n    remoteConstraints: (f = msg.getRemoteConstraints()) && proto.lnrpc.ChannelConstraints.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Channel}\n */\nproto.lnrpc.Channel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Channel;\n  return proto.lnrpc.Channel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Channel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Channel}\n */\nproto.lnrpc.Channel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActive(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemotePubkey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelPoint(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalBalance(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRemoteBalance(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommitFee(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommitWeight(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeePerKw(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUnsettledBalance(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalSatoshisSent(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalSatoshisReceived(value);\n      break;\n    case 14:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNumUpdates(value);\n      break;\n    case 15:\n      var value = new proto.lnrpc.HTLC;\n      reader.readMessage(value,proto.lnrpc.HTLC.deserializeBinaryFromReader);\n      msg.addPendingHtlcs(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCsvDelay(value);\n      break;\n    case 17:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivate(value);\n      break;\n    case 18:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setInitiator(value);\n      break;\n    case 19:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChanStatusFlags(value);\n      break;\n    case 20:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalChanReserveSat(value);\n      break;\n    case 21:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRemoteChanReserveSat(value);\n      break;\n    case 22:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setStaticRemoteKey(value);\n      break;\n    case 26:\n      var value = /** @type {!proto.lnrpc.CommitmentType} */ (reader.readEnum());\n      msg.setCommitmentType(value);\n      break;\n    case 23:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLifetime(value);\n      break;\n    case 24:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUptime(value);\n      break;\n    case 25:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCloseAddress(value);\n      break;\n    case 27:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPushAmountSat(value);\n      break;\n    case 28:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setThawHeight(value);\n      break;\n    case 29:\n      var value = new proto.lnrpc.ChannelConstraints;\n      reader.readMessage(value,proto.lnrpc.ChannelConstraints.deserializeBinaryFromReader);\n      msg.setLocalConstraints(value);\n      break;\n    case 30:\n      var value = new proto.lnrpc.ChannelConstraints;\n      reader.readMessage(value,proto.lnrpc.ChannelConstraints.deserializeBinaryFromReader);\n      msg.setRemoteConstraints(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Channel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Channel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Channel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Channel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getActive();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getRemotePubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getChannelPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      4,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getLocalBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getRemoteBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getCommitFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getCommitWeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getFeePerKw();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n  f = message.getUnsettledBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getTotalSatoshisSent();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getTotalSatoshisReceived();\n  if (f !== 0) {\n    writer.writeInt64(\n      13,\n      f\n    );\n  }\n  f = message.getNumUpdates();\n  if (f !== 0) {\n    writer.writeUint64(\n      14,\n      f\n    );\n  }\n  f = message.getPendingHtlcsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      15,\n      f,\n      proto.lnrpc.HTLC.serializeBinaryToWriter\n    );\n  }\n  f = message.getCsvDelay();\n  if (f !== 0) {\n    writer.writeUint32(\n      16,\n      f\n    );\n  }\n  f = message.getPrivate();\n  if (f) {\n    writer.writeBool(\n      17,\n      f\n    );\n  }\n  f = message.getInitiator();\n  if (f) {\n    writer.writeBool(\n      18,\n      f\n    );\n  }\n  f = message.getChanStatusFlags();\n  if (f.length > 0) {\n    writer.writeString(\n      19,\n      f\n    );\n  }\n  f = message.getLocalChanReserveSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      20,\n      f\n    );\n  }\n  f = message.getRemoteChanReserveSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      21,\n      f\n    );\n  }\n  f = message.getStaticRemoteKey();\n  if (f) {\n    writer.writeBool(\n      22,\n      f\n    );\n  }\n  f = message.getCommitmentType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      26,\n      f\n    );\n  }\n  f = message.getLifetime();\n  if (f !== 0) {\n    writer.writeInt64(\n      23,\n      f\n    );\n  }\n  f = message.getUptime();\n  if (f !== 0) {\n    writer.writeInt64(\n      24,\n      f\n    );\n  }\n  f = message.getCloseAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      25,\n      f\n    );\n  }\n  f = message.getPushAmountSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      27,\n      f\n    );\n  }\n  f = message.getThawHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      28,\n      f\n    );\n  }\n  f = message.getLocalConstraints();\n  if (f != null) {\n    writer.writeMessage(\n      29,\n      f,\n      proto.lnrpc.ChannelConstraints.serializeBinaryToWriter\n    );\n  }\n  f = message.getRemoteConstraints();\n  if (f != null) {\n    writer.writeMessage(\n      30,\n      f,\n      proto.lnrpc.ChannelConstraints.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bool active = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Channel.prototype.getActive = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Channel.prototype.setActive = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string remote_pubkey = 2;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getRemotePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setRemotePubkey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string channel_point = 3;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getChannelPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setChannelPoint = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 chan_id = 4;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 capacity = 5;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 local_balance = 6;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getLocalBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setLocalBalance = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 remote_balance = 7;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getRemoteBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setRemoteBalance = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 commit_fee = 8;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getCommitFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setCommitFee = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 commit_weight = 9;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getCommitWeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setCommitWeight = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional int64 fee_per_kw = 10;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getFeePerKw = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setFeePerKw = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional int64 unsettled_balance = 11;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getUnsettledBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setUnsettledBalance = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional int64 total_satoshis_sent = 12;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getTotalSatoshisSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setTotalSatoshisSent = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional int64 total_satoshis_received = 13;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getTotalSatoshisReceived = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setTotalSatoshisReceived = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional uint64 num_updates = 14;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getNumUpdates = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setNumUpdates = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * repeated HTLC pending_htlcs = 15;\n * @return {!Array.<!proto.lnrpc.HTLC>}\n */\nproto.lnrpc.Channel.prototype.getPendingHtlcsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.HTLC>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.HTLC, 15));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.HTLC>} value */\nproto.lnrpc.Channel.prototype.setPendingHtlcsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 15, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.HTLC=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.HTLC}\n */\nproto.lnrpc.Channel.prototype.addPendingHtlcs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.lnrpc.HTLC, opt_index);\n};\n\n\nproto.lnrpc.Channel.prototype.clearPendingHtlcsList = function() {\n  this.setPendingHtlcsList([]);\n};\n\n\n/**\n * optional uint32 csv_delay = 16;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getCsvDelay = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setCsvDelay = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n/**\n * optional bool private = 17;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Channel.prototype.getPrivate = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Channel.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\n/**\n * optional bool initiator = 18;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Channel.prototype.getInitiator = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Channel.prototype.setInitiator = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\n/**\n * optional string chan_status_flags = 19;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getChanStatusFlags = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setChanStatusFlags = function(value) {\n  jspb.Message.setField(this, 19, value);\n};\n\n\n/**\n * optional int64 local_chan_reserve_sat = 20;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getLocalChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setLocalChanReserveSat = function(value) {\n  jspb.Message.setField(this, 20, value);\n};\n\n\n/**\n * optional int64 remote_chan_reserve_sat = 21;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getRemoteChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setRemoteChanReserveSat = function(value) {\n  jspb.Message.setField(this, 21, value);\n};\n\n\n/**\n * optional bool static_remote_key = 22;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Channel.prototype.getStaticRemoteKey = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 22, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Channel.prototype.setStaticRemoteKey = function(value) {\n  jspb.Message.setField(this, 22, value);\n};\n\n\n/**\n * optional CommitmentType commitment_type = 26;\n * @return {!proto.lnrpc.CommitmentType}\n */\nproto.lnrpc.Channel.prototype.getCommitmentType = function() {\n  return /** @type {!proto.lnrpc.CommitmentType} */ (jspb.Message.getFieldWithDefault(this, 26, 0));\n};\n\n\n/** @param {!proto.lnrpc.CommitmentType} value */\nproto.lnrpc.Channel.prototype.setCommitmentType = function(value) {\n  jspb.Message.setField(this, 26, value);\n};\n\n\n/**\n * optional int64 lifetime = 23;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getLifetime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setLifetime = function(value) {\n  jspb.Message.setField(this, 23, value);\n};\n\n\n/**\n * optional int64 uptime = 24;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getUptime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setUptime = function(value) {\n  jspb.Message.setField(this, 24, value);\n};\n\n\n/**\n * optional string close_address = 25;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getCloseAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setCloseAddress = function(value) {\n  jspb.Message.setField(this, 25, value);\n};\n\n\n/**\n * optional uint64 push_amount_sat = 27;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getPushAmountSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setPushAmountSat = function(value) {\n  jspb.Message.setField(this, 27, value);\n};\n\n\n/**\n * optional uint32 thaw_height = 28;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getThawHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setThawHeight = function(value) {\n  jspb.Message.setField(this, 28, value);\n};\n\n\n/**\n * optional ChannelConstraints local_constraints = 29;\n * @return {?proto.lnrpc.ChannelConstraints}\n */\nproto.lnrpc.Channel.prototype.getLocalConstraints = function() {\n  return /** @type{?proto.lnrpc.ChannelConstraints} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelConstraints, 29));\n};\n\n\n/** @param {?proto.lnrpc.ChannelConstraints|undefined} value */\nproto.lnrpc.Channel.prototype.setLocalConstraints = function(value) {\n  jspb.Message.setWrapperField(this, 29, value);\n};\n\n\nproto.lnrpc.Channel.prototype.clearLocalConstraints = function() {\n  this.setLocalConstraints(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Channel.prototype.hasLocalConstraints = function() {\n  return jspb.Message.getField(this, 29) != null;\n};\n\n\n/**\n * optional ChannelConstraints remote_constraints = 30;\n * @return {?proto.lnrpc.ChannelConstraints}\n */\nproto.lnrpc.Channel.prototype.getRemoteConstraints = function() {\n  return /** @type{?proto.lnrpc.ChannelConstraints} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelConstraints, 30));\n};\n\n\n/** @param {?proto.lnrpc.ChannelConstraints|undefined} value */\nproto.lnrpc.Channel.prototype.setRemoteConstraints = function(value) {\n  jspb.Message.setWrapperField(this, 30, value);\n};\n\n\nproto.lnrpc.Channel.prototype.clearRemoteConstraints = function() {\n  this.setRemoteConstraints(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Channel.prototype.hasRemoteConstraints = function() {\n  return jspb.Message.getField(this, 30) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListChannelsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListChannelsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListChannelsRequest.displayName = 'proto.lnrpc.ListChannelsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListChannelsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListChannelsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListChannelsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListChannelsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    activeOnly: jspb.Message.getFieldWithDefault(msg, 1, false),\n    inactiveOnly: jspb.Message.getFieldWithDefault(msg, 2, false),\n    publicOnly: jspb.Message.getFieldWithDefault(msg, 3, false),\n    privateOnly: jspb.Message.getFieldWithDefault(msg, 4, false),\n    peer: msg.getPeer_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListChannelsRequest}\n */\nproto.lnrpc.ListChannelsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListChannelsRequest;\n  return proto.lnrpc.ListChannelsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListChannelsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListChannelsRequest}\n */\nproto.lnrpc.ListChannelsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActiveOnly(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setInactiveOnly(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPublicOnly(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivateOnly(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPeer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListChannelsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListChannelsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListChannelsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListChannelsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getActiveOnly();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getInactiveOnly();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getPublicOnly();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getPrivateOnly();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getPeer_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool active_only = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getActiveOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListChannelsRequest.prototype.setActiveOnly = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool inactive_only = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getInactiveOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListChannelsRequest.prototype.setInactiveOnly = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool public_only = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPublicOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListChannelsRequest.prototype.setPublicOnly = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool private_only = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPrivateOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListChannelsRequest.prototype.setPrivateOnly = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bytes peer = 5;\n * @return {string}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPeer = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes peer = 5;\n * This is a type-conversion wrapper around `getPeer()`\n * @return {string}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPeer_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPeer()));\n};\n\n\n/**\n * optional bytes peer = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPeer()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPeer_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPeer()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ListChannelsRequest.prototype.setPeer = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListChannelsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListChannelsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListChannelsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListChannelsResponse.displayName = 'proto.lnrpc.ListChannelsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListChannelsResponse.repeatedFields_ = [11];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListChannelsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListChannelsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListChannelsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListChannelsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),\n    proto.lnrpc.Channel.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListChannelsResponse}\n */\nproto.lnrpc.ListChannelsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListChannelsResponse;\n  return proto.lnrpc.ListChannelsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListChannelsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListChannelsResponse}\n */\nproto.lnrpc.ListChannelsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 11:\n      var value = new proto.lnrpc.Channel;\n      reader.readMessage(value,proto.lnrpc.Channel.deserializeBinaryFromReader);\n      msg.addChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListChannelsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListChannelsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListChannelsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListChannelsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      11,\n      f,\n      proto.lnrpc.Channel.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Channel channels = 11;\n * @return {!Array.<!proto.lnrpc.Channel>}\n */\nproto.lnrpc.ListChannelsResponse.prototype.getChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Channel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Channel, 11));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Channel>} value */\nproto.lnrpc.ListChannelsResponse.prototype.setChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 11, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Channel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Channel}\n */\nproto.lnrpc.ListChannelsResponse.prototype.addChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.lnrpc.Channel, opt_index);\n};\n\n\nproto.lnrpc.ListChannelsResponse.prototype.clearChannelsList = function() {\n  this.setChannelsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelCloseSummary = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ChannelCloseSummary.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ChannelCloseSummary, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelCloseSummary.displayName = 'proto.lnrpc.ChannelCloseSummary';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ChannelCloseSummary.repeatedFields_ = [13];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelCloseSummary.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelCloseSummary} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelCloseSummary.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelPoint: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    chanId: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\n    chainHash: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    closingTxHash: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    remotePubkey: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    closeHeight: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    settledBalance: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    timeLockedBalance: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    closeType: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    openInitiator: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    closeInitiator: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    resolutionsList: jspb.Message.toObjectList(msg.getResolutionsList(),\n    proto.lnrpc.Resolution.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelCloseSummary}\n */\nproto.lnrpc.ChannelCloseSummary.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelCloseSummary;\n  return proto.lnrpc.ChannelCloseSummary.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelCloseSummary} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelCloseSummary}\n */\nproto.lnrpc.ChannelCloseSummary.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelPoint(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChainHash(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClosingTxHash(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemotePubkey(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCloseHeight(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSettledBalance(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimeLockedBalance(value);\n      break;\n    case 10:\n      var value = /** @type {!proto.lnrpc.ChannelCloseSummary.ClosureType} */ (reader.readEnum());\n      msg.setCloseType(value);\n      break;\n    case 11:\n      var value = /** @type {!proto.lnrpc.Initiator} */ (reader.readEnum());\n      msg.setOpenInitiator(value);\n      break;\n    case 12:\n      var value = /** @type {!proto.lnrpc.Initiator} */ (reader.readEnum());\n      msg.setCloseInitiator(value);\n      break;\n    case 13:\n      var value = new proto.lnrpc.Resolution;\n      reader.readMessage(value,proto.lnrpc.Resolution.deserializeBinaryFromReader);\n      msg.addResolutions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelCloseSummary.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelCloseSummary} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelCloseSummary.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      2,\n      f\n    );\n  }\n  f = message.getChainHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getClosingTxHash();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getRemotePubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getCloseHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      7,\n      f\n    );\n  }\n  f = message.getSettledBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getTimeLockedBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getCloseType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getOpenInitiator();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      11,\n      f\n    );\n  }\n  f = message.getCloseInitiator();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      12,\n      f\n    );\n  }\n  f = message.getResolutionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      13,\n      f,\n      proto.lnrpc.Resolution.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ChannelCloseSummary.ClosureType = {\n  COOPERATIVE_CLOSE: 0,\n  LOCAL_FORCE_CLOSE: 1,\n  REMOTE_FORCE_CLOSE: 2,\n  BREACH_CLOSE: 3,\n  FUNDING_CANCELED: 4,\n  ABANDONED: 5\n};\n\n/**\n * optional string channel_point = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getChannelPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setChannelPoint = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string chain_hash = 3;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getChainHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setChainHash = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string closing_tx_hash = 4;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getClosingTxHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setClosingTxHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string remote_pubkey = 5;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getRemotePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setRemotePubkey = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 capacity = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint32 close_height = 7;\n * @return {number}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getCloseHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setCloseHeight = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 settled_balance = 8;\n * @return {number}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getSettledBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setSettledBalance = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 time_locked_balance = 9;\n * @return {number}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getTimeLockedBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setTimeLockedBalance = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional ClosureType close_type = 10;\n * @return {!proto.lnrpc.ChannelCloseSummary.ClosureType}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getCloseType = function() {\n  return /** @type {!proto.lnrpc.ChannelCloseSummary.ClosureType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {!proto.lnrpc.ChannelCloseSummary.ClosureType} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setCloseType = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional Initiator open_initiator = 11;\n * @return {!proto.lnrpc.Initiator}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getOpenInitiator = function() {\n  return /** @type {!proto.lnrpc.Initiator} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {!proto.lnrpc.Initiator} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setOpenInitiator = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional Initiator close_initiator = 12;\n * @return {!proto.lnrpc.Initiator}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getCloseInitiator = function() {\n  return /** @type {!proto.lnrpc.Initiator} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {!proto.lnrpc.Initiator} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setCloseInitiator = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * repeated Resolution resolutions = 13;\n * @return {!Array.<!proto.lnrpc.Resolution>}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getResolutionsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Resolution>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Resolution, 13));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Resolution>} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setResolutionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 13, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Resolution=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Resolution}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.addResolutions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.lnrpc.Resolution, opt_index);\n};\n\n\nproto.lnrpc.ChannelCloseSummary.prototype.clearResolutionsList = function() {\n  this.setResolutionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Resolution = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Resolution, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Resolution.displayName = 'proto.lnrpc.Resolution';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Resolution.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Resolution.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Resolution} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Resolution.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    resolutionType: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    outcome: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    outpoint: (f = msg.getOutpoint()) && proto.lnrpc.OutPoint.toObject(includeInstance, f),\n    amountSat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    sweepTxid: jspb.Message.getFieldWithDefault(msg, 5, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Resolution}\n */\nproto.lnrpc.Resolution.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Resolution;\n  return proto.lnrpc.Resolution.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Resolution} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Resolution}\n */\nproto.lnrpc.Resolution.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lnrpc.ResolutionType} */ (reader.readEnum());\n      msg.setResolutionType(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.lnrpc.ResolutionOutcome} */ (reader.readEnum());\n      msg.setOutcome(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.OutPoint;\n      reader.readMessage(value,proto.lnrpc.OutPoint.deserializeBinaryFromReader);\n      msg.setOutpoint(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmountSat(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSweepTxid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Resolution.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Resolution.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Resolution} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Resolution.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getResolutionType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getOutcome();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getOutpoint();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.OutPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getAmountSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getSweepTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ResolutionType resolution_type = 1;\n * @return {!proto.lnrpc.ResolutionType}\n */\nproto.lnrpc.Resolution.prototype.getResolutionType = function() {\n  return /** @type {!proto.lnrpc.ResolutionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.ResolutionType} value */\nproto.lnrpc.Resolution.prototype.setResolutionType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional ResolutionOutcome outcome = 2;\n * @return {!proto.lnrpc.ResolutionOutcome}\n */\nproto.lnrpc.Resolution.prototype.getOutcome = function() {\n  return /** @type {!proto.lnrpc.ResolutionOutcome} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {!proto.lnrpc.ResolutionOutcome} value */\nproto.lnrpc.Resolution.prototype.setOutcome = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional OutPoint outpoint = 3;\n * @return {?proto.lnrpc.OutPoint}\n */\nproto.lnrpc.Resolution.prototype.getOutpoint = function() {\n  return /** @type{?proto.lnrpc.OutPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.OutPoint, 3));\n};\n\n\n/** @param {?proto.lnrpc.OutPoint|undefined} value */\nproto.lnrpc.Resolution.prototype.setOutpoint = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.Resolution.prototype.clearOutpoint = function() {\n  this.setOutpoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Resolution.prototype.hasOutpoint = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint64 amount_sat = 4;\n * @return {number}\n */\nproto.lnrpc.Resolution.prototype.getAmountSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Resolution.prototype.setAmountSat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string sweep_txid = 5;\n * @return {string}\n */\nproto.lnrpc.Resolution.prototype.getSweepTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Resolution.prototype.setSweepTxid = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ClosedChannelsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ClosedChannelsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ClosedChannelsRequest.displayName = 'proto.lnrpc.ClosedChannelsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ClosedChannelsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ClosedChannelsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cooperative: jspb.Message.getFieldWithDefault(msg, 1, false),\n    localForce: jspb.Message.getFieldWithDefault(msg, 2, false),\n    remoteForce: jspb.Message.getFieldWithDefault(msg, 3, false),\n    breach: jspb.Message.getFieldWithDefault(msg, 4, false),\n    fundingCanceled: jspb.Message.getFieldWithDefault(msg, 5, false),\n    abandoned: jspb.Message.getFieldWithDefault(msg, 6, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ClosedChannelsRequest}\n */\nproto.lnrpc.ClosedChannelsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ClosedChannelsRequest;\n  return proto.lnrpc.ClosedChannelsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ClosedChannelsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ClosedChannelsRequest}\n */\nproto.lnrpc.ClosedChannelsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setCooperative(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setLocalForce(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRemoteForce(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setBreach(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFundingCanceled(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAbandoned(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ClosedChannelsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ClosedChannelsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCooperative();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getLocalForce();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getRemoteForce();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getBreach();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getFundingCanceled();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getAbandoned();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool cooperative = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getCooperative = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setCooperative = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool local_force = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getLocalForce = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setLocalForce = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool remote_force = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getRemoteForce = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setRemoteForce = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool breach = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getBreach = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setBreach = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bool funding_canceled = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getFundingCanceled = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setFundingCanceled = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional bool abandoned = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getAbandoned = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setAbandoned = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ClosedChannelsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ClosedChannelsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ClosedChannelsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ClosedChannelsResponse.displayName = 'proto.lnrpc.ClosedChannelsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ClosedChannelsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ClosedChannelsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ClosedChannelsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ClosedChannelsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),\n    proto.lnrpc.ChannelCloseSummary.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ClosedChannelsResponse}\n */\nproto.lnrpc.ClosedChannelsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ClosedChannelsResponse;\n  return proto.lnrpc.ClosedChannelsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ClosedChannelsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ClosedChannelsResponse}\n */\nproto.lnrpc.ClosedChannelsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelCloseSummary;\n      reader.readMessage(value,proto.lnrpc.ChannelCloseSummary.deserializeBinaryFromReader);\n      msg.addChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ClosedChannelsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ClosedChannelsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ClosedChannelsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelCloseSummary.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ChannelCloseSummary channels = 1;\n * @return {!Array.<!proto.lnrpc.ChannelCloseSummary>}\n */\nproto.lnrpc.ClosedChannelsResponse.prototype.getChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelCloseSummary>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelCloseSummary, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelCloseSummary>} value */\nproto.lnrpc.ClosedChannelsResponse.prototype.setChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelCloseSummary=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelCloseSummary}\n */\nproto.lnrpc.ClosedChannelsResponse.prototype.addChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ChannelCloseSummary, opt_index);\n};\n\n\nproto.lnrpc.ClosedChannelsResponse.prototype.clearChannelsList = function() {\n  this.setChannelsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Peer = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Peer.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Peer, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Peer.displayName = 'proto.lnrpc.Peer';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Peer.repeatedFields_ = [12];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Peer.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Peer.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Peer} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Peer.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    address: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    bytesSent: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    bytesRecv: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    satSent: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    satRecv: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    inbound: jspb.Message.getFieldWithDefault(msg, 8, false),\n    pingTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    syncType: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : [],\n    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),\n    proto.lnrpc.TimestampedError.toObject, includeInstance),\n    flapCount: jspb.Message.getFieldWithDefault(msg, 13, 0),\n    lastFlapNs: jspb.Message.getFieldWithDefault(msg, 14, 0),\n    lastPingPayload: msg.getLastPingPayload_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Peer}\n */\nproto.lnrpc.Peer.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Peer;\n  return proto.lnrpc.Peer.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Peer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Peer}\n */\nproto.lnrpc.Peer.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBytesSent(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBytesRecv(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatSent(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatRecv(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setInbound(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPingTime(value);\n      break;\n    case 10:\n      var value = /** @type {!proto.lnrpc.Peer.SyncType} */ (reader.readEnum());\n      msg.setSyncType(value);\n      break;\n    case 11:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    case 12:\n      var value = new proto.lnrpc.TimestampedError;\n      reader.readMessage(value,proto.lnrpc.TimestampedError.deserializeBinaryFromReader);\n      msg.addErrors(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setFlapCount(value);\n      break;\n    case 14:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLastFlapNs(value);\n      break;\n    case 15:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setLastPingPayload(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Peer.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Peer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Peer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Peer.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getBytesSent();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getBytesRecv();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getSatSent();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getSatRecv();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getInbound();\n  if (f) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n  f = message.getPingTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getSyncType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n  f = message.getErrorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      12,\n      f,\n      proto.lnrpc.TimestampedError.serializeBinaryToWriter\n    );\n  }\n  f = message.getFlapCount();\n  if (f !== 0) {\n    writer.writeInt32(\n      13,\n      f\n    );\n  }\n  f = message.getLastFlapNs();\n  if (f !== 0) {\n    writer.writeInt64(\n      14,\n      f\n    );\n  }\n  f = message.getLastPingPayload_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      15,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Peer.SyncType = {\n  UNKNOWN_SYNC: 0,\n  ACTIVE_SYNC: 1,\n  PASSIVE_SYNC: 2,\n  PINNED_SYNC: 3\n};\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.Peer.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Peer.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string address = 3;\n * @return {string}\n */\nproto.lnrpc.Peer.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Peer.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 bytes_sent = 4;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getBytesSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setBytesSent = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 bytes_recv = 5;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getBytesRecv = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setBytesRecv = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 sat_sent = 6;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getSatSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setSatSent = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 sat_recv = 7;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getSatRecv = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setSatRecv = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional bool inbound = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Peer.prototype.getInbound = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Peer.prototype.setInbound = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 ping_time = 9;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getPingTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setPingTime = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional SyncType sync_type = 10;\n * @return {!proto.lnrpc.Peer.SyncType}\n */\nproto.lnrpc.Peer.prototype.getSyncType = function() {\n  return /** @type {!proto.lnrpc.Peer.SyncType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {!proto.lnrpc.Peer.SyncType} value */\nproto.lnrpc.Peer.prototype.setSyncType = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * map<uint32, Feature> features = 11;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.Peer.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 11, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.Peer.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n/**\n * repeated TimestampedError errors = 12;\n * @return {!Array.<!proto.lnrpc.TimestampedError>}\n */\nproto.lnrpc.Peer.prototype.getErrorsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.TimestampedError>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.TimestampedError, 12));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.TimestampedError>} value */\nproto.lnrpc.Peer.prototype.setErrorsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 12, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.TimestampedError=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.TimestampedError}\n */\nproto.lnrpc.Peer.prototype.addErrors = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.lnrpc.TimestampedError, opt_index);\n};\n\n\nproto.lnrpc.Peer.prototype.clearErrorsList = function() {\n  this.setErrorsList([]);\n};\n\n\n/**\n * optional int32 flap_count = 13;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getFlapCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setFlapCount = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional int64 last_flap_ns = 14;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getLastFlapNs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setLastFlapNs = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * optional bytes last_ping_payload = 15;\n * @return {string}\n */\nproto.lnrpc.Peer.prototype.getLastPingPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, \"\"));\n};\n\n\n/**\n * optional bytes last_ping_payload = 15;\n * This is a type-conversion wrapper around `getLastPingPayload()`\n * @return {string}\n */\nproto.lnrpc.Peer.prototype.getLastPingPayload_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getLastPingPayload()));\n};\n\n\n/**\n * optional bytes last_ping_payload = 15;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getLastPingPayload()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.Peer.prototype.getLastPingPayload_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getLastPingPayload()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.Peer.prototype.setLastPingPayload = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.TimestampedError = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.TimestampedError, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.TimestampedError.displayName = 'proto.lnrpc.TimestampedError';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.TimestampedError.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.TimestampedError.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.TimestampedError} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.TimestampedError.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    error: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.TimestampedError}\n */\nproto.lnrpc.TimestampedError.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.TimestampedError;\n  return proto.lnrpc.TimestampedError.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.TimestampedError} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.TimestampedError}\n */\nproto.lnrpc.TimestampedError.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setTimestamp(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.TimestampedError.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.TimestampedError.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.TimestampedError} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.TimestampedError.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 timestamp = 1;\n * @return {number}\n */\nproto.lnrpc.TimestampedError.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.TimestampedError.prototype.setTimestamp = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string error = 2;\n * @return {string}\n */\nproto.lnrpc.TimestampedError.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.TimestampedError.prototype.setError = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListPeersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListPeersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListPeersRequest.displayName = 'proto.lnrpc.ListPeersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListPeersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListPeersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListPeersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPeersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    latestError: jspb.Message.getFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListPeersRequest}\n */\nproto.lnrpc.ListPeersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListPeersRequest;\n  return proto.lnrpc.ListPeersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListPeersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListPeersRequest}\n */\nproto.lnrpc.ListPeersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setLatestError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListPeersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListPeersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListPeersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPeersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLatestError();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool latest_error = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListPeersRequest.prototype.getLatestError = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListPeersRequest.prototype.setLatestError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListPeersResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListPeersResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListPeersResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListPeersResponse.displayName = 'proto.lnrpc.ListPeersResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListPeersResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListPeersResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListPeersResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListPeersResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPeersResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peersList: jspb.Message.toObjectList(msg.getPeersList(),\n    proto.lnrpc.Peer.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListPeersResponse}\n */\nproto.lnrpc.ListPeersResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListPeersResponse;\n  return proto.lnrpc.ListPeersResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListPeersResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListPeersResponse}\n */\nproto.lnrpc.ListPeersResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Peer;\n      reader.readMessage(value,proto.lnrpc.Peer.deserializeBinaryFromReader);\n      msg.addPeers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListPeersResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListPeersResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListPeersResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPeersResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Peer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Peer peers = 1;\n * @return {!Array.<!proto.lnrpc.Peer>}\n */\nproto.lnrpc.ListPeersResponse.prototype.getPeersList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Peer>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Peer, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Peer>} value */\nproto.lnrpc.ListPeersResponse.prototype.setPeersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Peer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Peer}\n */\nproto.lnrpc.ListPeersResponse.prototype.addPeers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Peer, opt_index);\n};\n\n\nproto.lnrpc.ListPeersResponse.prototype.clearPeersList = function() {\n  this.setPeersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PeerEventSubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PeerEventSubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PeerEventSubscription.displayName = 'proto.lnrpc.PeerEventSubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PeerEventSubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PeerEventSubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PeerEventSubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PeerEventSubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PeerEventSubscription}\n */\nproto.lnrpc.PeerEventSubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PeerEventSubscription;\n  return proto.lnrpc.PeerEventSubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PeerEventSubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PeerEventSubscription}\n */\nproto.lnrpc.PeerEventSubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PeerEventSubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PeerEventSubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PeerEventSubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PeerEventSubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PeerEvent = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PeerEvent, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PeerEvent.displayName = 'proto.lnrpc.PeerEvent';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PeerEvent.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PeerEvent.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PeerEvent} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PeerEvent.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    type: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PeerEvent}\n */\nproto.lnrpc.PeerEvent.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PeerEvent;\n  return proto.lnrpc.PeerEvent.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PeerEvent} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PeerEvent}\n */\nproto.lnrpc.PeerEvent.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.lnrpc.PeerEvent.EventType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PeerEvent.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PeerEvent.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PeerEvent} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PeerEvent.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.PeerEvent.EventType = {\n  PEER_ONLINE: 0,\n  PEER_OFFLINE: 1\n};\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.PeerEvent.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PeerEvent.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional EventType type = 2;\n * @return {!proto.lnrpc.PeerEvent.EventType}\n */\nproto.lnrpc.PeerEvent.prototype.getType = function() {\n  return /** @type {!proto.lnrpc.PeerEvent.EventType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {!proto.lnrpc.PeerEvent.EventType} value */\nproto.lnrpc.PeerEvent.prototype.setType = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GetInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetInfoRequest.displayName = 'proto.lnrpc.GetInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetInfoRequest}\n */\nproto.lnrpc.GetInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetInfoRequest;\n  return proto.lnrpc.GetInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetInfoRequest}\n */\nproto.lnrpc.GetInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.GetInfoResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.GetInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetInfoResponse.displayName = 'proto.lnrpc.GetInfoResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.GetInfoResponse.repeatedFields_ = [16,12];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetInfoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetInfoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetInfoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    version: jspb.Message.getFieldWithDefault(msg, 14, \"\"),\n    commitHash: jspb.Message.getFieldWithDefault(msg, 20, \"\"),\n    identityPubkey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    alias: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    color: jspb.Message.getFieldWithDefault(msg, 17, \"\"),\n    numPendingChannels: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    numActiveChannels: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    numInactiveChannels: jspb.Message.getFieldWithDefault(msg, 15, 0),\n    numPeers: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    blockHeight: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    blockHash: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    bestHeaderTimestamp: jspb.Message.getFieldWithDefault(msg, 13, 0),\n    syncedToChain: jspb.Message.getFieldWithDefault(msg, 9, false),\n    syncedToGraph: jspb.Message.getFieldWithDefault(msg, 18, false),\n    testnet: jspb.Message.getFieldWithDefault(msg, 10, false),\n    chainsList: jspb.Message.toObjectList(msg.getChainsList(),\n    proto.lnrpc.Chain.toObject, includeInstance),\n    urisList: jspb.Message.getRepeatedField(msg, 12),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetInfoResponse}\n */\nproto.lnrpc.GetInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetInfoResponse;\n  return proto.lnrpc.GetInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetInfoResponse}\n */\nproto.lnrpc.GetInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 20:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCommitHash(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIdentityPubkey(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    case 17:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setColor(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumPendingChannels(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumActiveChannels(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumInactiveChannels(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumPeers(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setBlockHeight(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBlockHash(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBestHeaderTimestamp(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSyncedToChain(value);\n      break;\n    case 18:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSyncedToGraph(value);\n      break;\n    case 10:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setTestnet(value);\n      break;\n    case 16:\n      var value = new proto.lnrpc.Chain;\n      reader.readMessage(value,proto.lnrpc.Chain.deserializeBinaryFromReader);\n      msg.addChains(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addUris(value);\n      break;\n    case 19:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n  f = message.getCommitHash();\n  if (f.length > 0) {\n    writer.writeString(\n      20,\n      f\n    );\n  }\n  f = message.getIdentityPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getColor();\n  if (f.length > 0) {\n    writer.writeString(\n      17,\n      f\n    );\n  }\n  f = message.getNumPendingChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getNumActiveChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getNumInactiveChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      15,\n      f\n    );\n  }\n  f = message.getNumPeers();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getBlockHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n  f = message.getBlockHash();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getBestHeaderTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      13,\n      f\n    );\n  }\n  f = message.getSyncedToChain();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n  f = message.getSyncedToGraph();\n  if (f) {\n    writer.writeBool(\n      18,\n      f\n    );\n  }\n  f = message.getTestnet();\n  if (f) {\n    writer.writeBool(\n      10,\n      f\n    );\n  }\n  f = message.getChainsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      16,\n      f,\n      proto.lnrpc.Chain.serializeBinaryToWriter\n    );\n  }\n  f = message.getUrisList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      12,\n      f\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(19, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * optional string version = 14;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setVersion = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * optional string commit_hash = 20;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getCommitHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setCommitHash = function(value) {\n  jspb.Message.setField(this, 20, value);\n};\n\n\n/**\n * optional string identity_pubkey = 1;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getIdentityPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setIdentityPubkey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string alias = 2;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setAlias = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string color = 17;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getColor = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setColor = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\n/**\n * optional uint32 num_pending_channels = 3;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getNumPendingChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setNumPendingChannels = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 num_active_channels = 4;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getNumActiveChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setNumActiveChannels = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 num_inactive_channels = 15;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getNumInactiveChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setNumInactiveChannels = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * optional uint32 num_peers = 5;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getNumPeers = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setNumPeers = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 block_height = 6;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setBlockHeight = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string block_hash = 8;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getBlockHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setBlockHash = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 best_header_timestamp = 13;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getBestHeaderTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setBestHeaderTimestamp = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional bool synced_to_chain = 9;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetInfoResponse.prototype.getSyncedToChain = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetInfoResponse.prototype.setSyncedToChain = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional bool synced_to_graph = 18;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetInfoResponse.prototype.getSyncedToGraph = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetInfoResponse.prototype.setSyncedToGraph = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\n/**\n * optional bool testnet = 10;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetInfoResponse.prototype.getTestnet = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetInfoResponse.prototype.setTestnet = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * repeated Chain chains = 16;\n * @return {!Array.<!proto.lnrpc.Chain>}\n */\nproto.lnrpc.GetInfoResponse.prototype.getChainsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Chain>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Chain, 16));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Chain>} value */\nproto.lnrpc.GetInfoResponse.prototype.setChainsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 16, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Chain=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Chain}\n */\nproto.lnrpc.GetInfoResponse.prototype.addChains = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.lnrpc.Chain, opt_index);\n};\n\n\nproto.lnrpc.GetInfoResponse.prototype.clearChainsList = function() {\n  this.setChainsList([]);\n};\n\n\n/**\n * repeated string uris = 12;\n * @return {!Array.<string>}\n */\nproto.lnrpc.GetInfoResponse.prototype.getUrisList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 12));\n};\n\n\n/** @param {!Array.<string>} value */\nproto.lnrpc.GetInfoResponse.prototype.setUrisList = function(value) {\n  jspb.Message.setField(this, 12, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.lnrpc.GetInfoResponse.prototype.addUris = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 12, value, opt_index);\n};\n\n\nproto.lnrpc.GetInfoResponse.prototype.clearUrisList = function() {\n  this.setUrisList([]);\n};\n\n\n/**\n * map<uint32, Feature> features = 19;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.GetInfoResponse.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 19, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.GetInfoResponse.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetRecoveryInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GetRecoveryInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetRecoveryInfoRequest.displayName = 'proto.lnrpc.GetRecoveryInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetRecoveryInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetRecoveryInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetRecoveryInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetRecoveryInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetRecoveryInfoRequest}\n */\nproto.lnrpc.GetRecoveryInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetRecoveryInfoRequest;\n  return proto.lnrpc.GetRecoveryInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetRecoveryInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetRecoveryInfoRequest}\n */\nproto.lnrpc.GetRecoveryInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetRecoveryInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetRecoveryInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetRecoveryInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetRecoveryInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetRecoveryInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GetRecoveryInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetRecoveryInfoResponse.displayName = 'proto.lnrpc.GetRecoveryInfoResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetRecoveryInfoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetRecoveryInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetRecoveryInfoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    recoveryMode: jspb.Message.getFieldWithDefault(msg, 1, false),\n    recoveryFinished: jspb.Message.getFieldWithDefault(msg, 2, false),\n    progress: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetRecoveryInfoResponse}\n */\nproto.lnrpc.GetRecoveryInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetRecoveryInfoResponse;\n  return proto.lnrpc.GetRecoveryInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetRecoveryInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetRecoveryInfoResponse}\n */\nproto.lnrpc.GetRecoveryInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRecoveryMode(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRecoveryFinished(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setProgress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetRecoveryInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetRecoveryInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetRecoveryInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRecoveryMode();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getRecoveryFinished();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getProgress();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool recovery_mode = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.getRecoveryMode = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.setRecoveryMode = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool recovery_finished = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.getRecoveryFinished = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.setRecoveryFinished = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional double progress = 3;\n * @return {number}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.getProgress = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.setProgress = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Chain = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Chain, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Chain.displayName = 'proto.lnrpc.Chain';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Chain.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Chain.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Chain} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Chain.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chain: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    network: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Chain}\n */\nproto.lnrpc.Chain.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Chain;\n  return proto.lnrpc.Chain.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Chain} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Chain}\n */\nproto.lnrpc.Chain.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChain(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNetwork(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Chain.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Chain.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Chain} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Chain.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChain();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getNetwork();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string chain = 1;\n * @return {string}\n */\nproto.lnrpc.Chain.prototype.getChain = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Chain.prototype.setChain = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string network = 2;\n * @return {string}\n */\nproto.lnrpc.Chain.prototype.getNetwork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Chain.prototype.setNetwork = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ConfirmationUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ConfirmationUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ConfirmationUpdate.displayName = 'proto.lnrpc.ConfirmationUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ConfirmationUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ConfirmationUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConfirmationUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    blockSha: msg.getBlockSha_asB64(),\n    blockHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    numConfsLeft: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ConfirmationUpdate}\n */\nproto.lnrpc.ConfirmationUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ConfirmationUpdate;\n  return proto.lnrpc.ConfirmationUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ConfirmationUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ConfirmationUpdate}\n */\nproto.lnrpc.ConfirmationUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBlockSha(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlockHeight(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumConfsLeft(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ConfirmationUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ConfirmationUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConfirmationUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBlockSha_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBlockHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getNumConfsLeft();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes block_sha = 1;\n * @return {string}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getBlockSha = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes block_sha = 1;\n * This is a type-conversion wrapper around `getBlockSha()`\n * @return {string}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getBlockSha_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBlockSha()));\n};\n\n\n/**\n * optional bytes block_sha = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBlockSha()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getBlockSha_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBlockSha()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ConfirmationUpdate.prototype.setBlockSha = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 block_height = 2;\n * @return {number}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ConfirmationUpdate.prototype.setBlockHeight = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 num_confs_left = 3;\n * @return {number}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getNumConfsLeft = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ConfirmationUpdate.prototype.setNumConfsLeft = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelOpenUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelOpenUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelOpenUpdate.displayName = 'proto.lnrpc.ChannelOpenUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelOpenUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelOpenUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelOpenUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelOpenUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelPoint: (f = msg.getChannelPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelOpenUpdate}\n */\nproto.lnrpc.ChannelOpenUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelOpenUpdate;\n  return proto.lnrpc.ChannelOpenUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelOpenUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelOpenUpdate}\n */\nproto.lnrpc.ChannelOpenUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChannelPoint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelOpenUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelOpenUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelOpenUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelOpenUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint channel_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelOpenUpdate.prototype.getChannelPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelOpenUpdate.prototype.setChannelPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ChannelOpenUpdate.prototype.clearChannelPoint = function() {\n  this.setChannelPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelOpenUpdate.prototype.hasChannelPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelCloseUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelCloseUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelCloseUpdate.displayName = 'proto.lnrpc.ChannelCloseUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelCloseUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelCloseUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelCloseUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    closingTxid: msg.getClosingTxid_asB64(),\n    success: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelCloseUpdate}\n */\nproto.lnrpc.ChannelCloseUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelCloseUpdate;\n  return proto.lnrpc.ChannelCloseUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelCloseUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelCloseUpdate}\n */\nproto.lnrpc.ChannelCloseUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setClosingTxid(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSuccess(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelCloseUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelCloseUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelCloseUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getClosingTxid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getSuccess();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes closing_txid = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.getClosingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes closing_txid = 1;\n * This is a type-conversion wrapper around `getClosingTxid()`\n * @return {string}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.getClosingTxid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getClosingTxid()));\n};\n\n\n/**\n * optional bytes closing_txid = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getClosingTxid()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.getClosingTxid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getClosingTxid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelCloseUpdate.prototype.setClosingTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool success = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.getSuccess = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ChannelCloseUpdate.prototype.setSuccess = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.CloseChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.CloseChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.CloseChannelRequest.displayName = 'proto.lnrpc.CloseChannelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.CloseChannelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.CloseChannelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.CloseChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CloseChannelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelPoint: (f = msg.getChannelPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    force: jspb.Message.getFieldWithDefault(msg, 2, false),\n    targetConf: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    satPerByte: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    deliveryAddress: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    satPerVbyte: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.CloseChannelRequest}\n */\nproto.lnrpc.CloseChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.CloseChannelRequest;\n  return proto.lnrpc.CloseChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.CloseChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.CloseChannelRequest}\n */\nproto.lnrpc.CloseChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChannelPoint(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setForce(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatPerByte(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeliveryAddress(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSatPerVbyte(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.CloseChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.CloseChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.CloseChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CloseChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getForce();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getDeliveryAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getSatPerVbyte();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint channel_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getChannelPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.CloseChannelRequest.prototype.setChannelPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.CloseChannelRequest.prototype.clearChannelPoint = function() {\n  this.setChannelPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.CloseChannelRequest.prototype.hasChannelPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool force = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getForce = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.CloseChannelRequest.prototype.setForce = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 target_conf = 3;\n * @return {number}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.CloseChannelRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 sat_per_byte = 4;\n * @return {number}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.CloseChannelRequest.prototype.setSatPerByte = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string delivery_address = 5;\n * @return {string}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getDeliveryAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.CloseChannelRequest.prototype.setDeliveryAddress = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 sat_per_vbyte = 6;\n * @return {number}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getSatPerVbyte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.CloseChannelRequest.prototype.setSatPerVbyte = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.CloseStatusUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.CloseStatusUpdate.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.CloseStatusUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.CloseStatusUpdate.displayName = 'proto.lnrpc.CloseStatusUpdate';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.CloseStatusUpdate.oneofGroups_ = [[1,3]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.CloseStatusUpdate.UpdateCase = {\n  UPDATE_NOT_SET: 0,\n  CLOSE_PENDING: 1,\n  CHAN_CLOSE: 3\n};\n\n/**\n * @return {proto.lnrpc.CloseStatusUpdate.UpdateCase}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.getUpdateCase = function() {\n  return /** @type {proto.lnrpc.CloseStatusUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.CloseStatusUpdate.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.CloseStatusUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.CloseStatusUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CloseStatusUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    closePending: (f = msg.getClosePending()) && proto.lnrpc.PendingUpdate.toObject(includeInstance, f),\n    chanClose: (f = msg.getChanClose()) && proto.lnrpc.ChannelCloseUpdate.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.CloseStatusUpdate}\n */\nproto.lnrpc.CloseStatusUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.CloseStatusUpdate;\n  return proto.lnrpc.CloseStatusUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.CloseStatusUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.CloseStatusUpdate}\n */\nproto.lnrpc.CloseStatusUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingUpdate;\n      reader.readMessage(value,proto.lnrpc.PendingUpdate.deserializeBinaryFromReader);\n      msg.setClosePending(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ChannelCloseUpdate;\n      reader.readMessage(value,proto.lnrpc.ChannelCloseUpdate.deserializeBinaryFromReader);\n      msg.setChanClose(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.CloseStatusUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.CloseStatusUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CloseStatusUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getClosePending();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getChanClose();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.ChannelCloseUpdate.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PendingUpdate close_pending = 1;\n * @return {?proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.getClosePending = function() {\n  return /** @type{?proto.lnrpc.PendingUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingUpdate, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingUpdate|undefined} value */\nproto.lnrpc.CloseStatusUpdate.prototype.setClosePending = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.CloseStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.CloseStatusUpdate.prototype.clearClosePending = function() {\n  this.setClosePending(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.hasClosePending = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ChannelCloseUpdate chan_close = 3;\n * @return {?proto.lnrpc.ChannelCloseUpdate}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.getChanClose = function() {\n  return /** @type{?proto.lnrpc.ChannelCloseUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelCloseUpdate, 3));\n};\n\n\n/** @param {?proto.lnrpc.ChannelCloseUpdate|undefined} value */\nproto.lnrpc.CloseStatusUpdate.prototype.setChanClose = function(value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.lnrpc.CloseStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.CloseStatusUpdate.prototype.clearChanClose = function() {\n  this.setChanClose(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.hasChanClose = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingUpdate.displayName = 'proto.lnrpc.PendingUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txid: msg.getTxid_asB64(),\n    outputIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.PendingUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingUpdate;\n  return proto.lnrpc.PendingUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.PendingUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTxid(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOutputIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOutputIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes txid = 1;\n * @return {string}\n */\nproto.lnrpc.PendingUpdate.prototype.getTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes txid = 1;\n * This is a type-conversion wrapper around `getTxid()`\n * @return {string}\n */\nproto.lnrpc.PendingUpdate.prototype.getTxid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTxid()));\n};\n\n\n/**\n * optional bytes txid = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxid()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingUpdate.prototype.getTxid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTxid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PendingUpdate.prototype.setTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint32 output_index = 2;\n * @return {number}\n */\nproto.lnrpc.PendingUpdate.prototype.getOutputIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingUpdate.prototype.setOutputIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ReadyForPsbtFunding = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ReadyForPsbtFunding, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ReadyForPsbtFunding.displayName = 'proto.lnrpc.ReadyForPsbtFunding';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ReadyForPsbtFunding.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ReadyForPsbtFunding} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ReadyForPsbtFunding.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fundingAddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    fundingAmount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    psbt: msg.getPsbt_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ReadyForPsbtFunding}\n */\nproto.lnrpc.ReadyForPsbtFunding.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ReadyForPsbtFunding;\n  return proto.lnrpc.ReadyForPsbtFunding.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ReadyForPsbtFunding} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ReadyForPsbtFunding}\n */\nproto.lnrpc.ReadyForPsbtFunding.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFundingAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFundingAmount(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPsbt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ReadyForPsbtFunding.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ReadyForPsbtFunding} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ReadyForPsbtFunding.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFundingAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getFundingAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getPsbt_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string funding_address = 1;\n * @return {string}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getFundingAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ReadyForPsbtFunding.prototype.setFundingAddress = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 funding_amount = 2;\n * @return {number}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getFundingAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ReadyForPsbtFunding.prototype.setFundingAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bytes psbt = 3;\n * @return {string}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getPsbt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes psbt = 3;\n * This is a type-conversion wrapper around `getPsbt()`\n * @return {string}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getPsbt_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPsbt()));\n};\n\n\n/**\n * optional bytes psbt = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPsbt()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getPsbt_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPsbt()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ReadyForPsbtFunding.prototype.setPsbt = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.BatchOpenChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.BatchOpenChannelRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.BatchOpenChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.BatchOpenChannelRequest.displayName = 'proto.lnrpc.BatchOpenChannelRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.BatchOpenChannelRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.BatchOpenChannelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.BatchOpenChannelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.BatchOpenChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BatchOpenChannelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),\n    proto.lnrpc.BatchOpenChannel.toObject, includeInstance),\n    targetConf: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    satPerVbyte: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    minConfs: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    spendUnconfirmed: jspb.Message.getFieldWithDefault(msg, 5, false),\n    label: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.BatchOpenChannelRequest}\n */\nproto.lnrpc.BatchOpenChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.BatchOpenChannelRequest;\n  return proto.lnrpc.BatchOpenChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.BatchOpenChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.BatchOpenChannelRequest}\n */\nproto.lnrpc.BatchOpenChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.BatchOpenChannel;\n      reader.readMessage(value,proto.lnrpc.BatchOpenChannel.deserializeBinaryFromReader);\n      msg.addChannels(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatPerVbyte(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinConfs(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSpendUnconfirmed(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.BatchOpenChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.BatchOpenChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.BatchOpenChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BatchOpenChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.BatchOpenChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getSatPerVbyte();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getMinConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getSpendUnconfirmed();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getLabel();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated BatchOpenChannel channels = 1;\n * @return {!Array.<!proto.lnrpc.BatchOpenChannel>}\n */\nproto.lnrpc.BatchOpenChannelRequest.prototype.getChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.BatchOpenChannel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.BatchOpenChannel, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.BatchOpenChannel>} value */\nproto.lnrpc.BatchOpenChannelRequest.prototype.setChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.BatchOpenChannel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.BatchOpenChannel}\n */\nproto.lnrpc.BatchOpenChannelRequest.prototype.addChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.BatchOpenChannel, opt_index);\n};\n\n\nproto.lnrpc.BatchOpenChannelRequest.prototype.clearChannelsList = function() {\n  this.setChannelsList([]);\n};\n\n\n/**\n * optional int32 target_conf = 2;\n * @return {number}\n */\nproto.lnrpc.BatchOpenChannelRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.BatchOpenChannelRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 sat_per_vbyte = 3;\n * @return {number}\n */\nproto.lnrpc.BatchOpenChannelRequest.prototype.getSatPerVbyte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.BatchOpenChannelRequest.prototype.setSatPerVbyte = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int32 min_confs = 4;\n * @return {number}\n */\nproto.lnrpc.BatchOpenChannelRequest.prototype.getMinConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.BatchOpenChannelRequest.prototype.setMinConfs = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bool spend_unconfirmed = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.BatchOpenChannelRequest.prototype.getSpendUnconfirmed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.BatchOpenChannelRequest.prototype.setSpendUnconfirmed = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string label = 6;\n * @return {string}\n */\nproto.lnrpc.BatchOpenChannelRequest.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.BatchOpenChannelRequest.prototype.setLabel = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.BatchOpenChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.BatchOpenChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.BatchOpenChannel.displayName = 'proto.lnrpc.BatchOpenChannel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.BatchOpenChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.BatchOpenChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.BatchOpenChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BatchOpenChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodePubkey: msg.getNodePubkey_asB64(),\n    localFundingAmount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    pushSat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    pb_private: jspb.Message.getFieldWithDefault(msg, 4, false),\n    minHtlcMsat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    remoteCsvDelay: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    closeAddress: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    pendingChanId: msg.getPendingChanId_asB64(),\n    commitmentType: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.BatchOpenChannel}\n */\nproto.lnrpc.BatchOpenChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.BatchOpenChannel;\n  return proto.lnrpc.BatchOpenChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.BatchOpenChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.BatchOpenChannel}\n */\nproto.lnrpc.BatchOpenChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNodePubkey(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalFundingAmount(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPushSat(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivate(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMinHtlcMsat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setRemoteCsvDelay(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCloseAddress(value);\n      break;\n    case 8:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    case 9:\n      var value = /** @type {!proto.lnrpc.CommitmentType} */ (reader.readEnum());\n      msg.setCommitmentType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.BatchOpenChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.BatchOpenChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.BatchOpenChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BatchOpenChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodePubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getLocalFundingAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getPushSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getPrivate();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getMinHtlcMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getRemoteCsvDelay();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n  f = message.getCloseAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      8,\n      f\n    );\n  }\n  f = message.getCommitmentType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes node_pubkey = 1;\n * @return {string}\n */\nproto.lnrpc.BatchOpenChannel.prototype.getNodePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes node_pubkey = 1;\n * This is a type-conversion wrapper around `getNodePubkey()`\n * @return {string}\n */\nproto.lnrpc.BatchOpenChannel.prototype.getNodePubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNodePubkey()));\n};\n\n\n/**\n * optional bytes node_pubkey = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNodePubkey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.BatchOpenChannel.prototype.getNodePubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNodePubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.BatchOpenChannel.prototype.setNodePubkey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 local_funding_amount = 2;\n * @return {number}\n */\nproto.lnrpc.BatchOpenChannel.prototype.getLocalFundingAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.BatchOpenChannel.prototype.setLocalFundingAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 push_sat = 3;\n * @return {number}\n */\nproto.lnrpc.BatchOpenChannel.prototype.getPushSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.BatchOpenChannel.prototype.setPushSat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool private = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.BatchOpenChannel.prototype.getPrivate = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.BatchOpenChannel.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 min_htlc_msat = 5;\n * @return {number}\n */\nproto.lnrpc.BatchOpenChannel.prototype.getMinHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.BatchOpenChannel.prototype.setMinHtlcMsat = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 remote_csv_delay = 6;\n * @return {number}\n */\nproto.lnrpc.BatchOpenChannel.prototype.getRemoteCsvDelay = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.BatchOpenChannel.prototype.setRemoteCsvDelay = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string close_address = 7;\n * @return {string}\n */\nproto.lnrpc.BatchOpenChannel.prototype.getCloseAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.BatchOpenChannel.prototype.setCloseAddress = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 8;\n * @return {string}\n */\nproto.lnrpc.BatchOpenChannel.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 8;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.BatchOpenChannel.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 8;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.BatchOpenChannel.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.BatchOpenChannel.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional CommitmentType commitment_type = 9;\n * @return {!proto.lnrpc.CommitmentType}\n */\nproto.lnrpc.BatchOpenChannel.prototype.getCommitmentType = function() {\n  return /** @type {!proto.lnrpc.CommitmentType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {!proto.lnrpc.CommitmentType} value */\nproto.lnrpc.BatchOpenChannel.prototype.setCommitmentType = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.BatchOpenChannelResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.BatchOpenChannelResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.BatchOpenChannelResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.BatchOpenChannelResponse.displayName = 'proto.lnrpc.BatchOpenChannelResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.BatchOpenChannelResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.BatchOpenChannelResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.BatchOpenChannelResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.BatchOpenChannelResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BatchOpenChannelResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pendingChannelsList: jspb.Message.toObjectList(msg.getPendingChannelsList(),\n    proto.lnrpc.PendingUpdate.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.BatchOpenChannelResponse}\n */\nproto.lnrpc.BatchOpenChannelResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.BatchOpenChannelResponse;\n  return proto.lnrpc.BatchOpenChannelResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.BatchOpenChannelResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.BatchOpenChannelResponse}\n */\nproto.lnrpc.BatchOpenChannelResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingUpdate;\n      reader.readMessage(value,proto.lnrpc.PendingUpdate.deserializeBinaryFromReader);\n      msg.addPendingChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.BatchOpenChannelResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.BatchOpenChannelResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.BatchOpenChannelResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BatchOpenChannelResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPendingChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.PendingUpdate.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated PendingUpdate pending_channels = 1;\n * @return {!Array.<!proto.lnrpc.PendingUpdate>}\n */\nproto.lnrpc.BatchOpenChannelResponse.prototype.getPendingChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingUpdate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingUpdate, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingUpdate>} value */\nproto.lnrpc.BatchOpenChannelResponse.prototype.setPendingChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingUpdate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.BatchOpenChannelResponse.prototype.addPendingChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.PendingUpdate, opt_index);\n};\n\n\nproto.lnrpc.BatchOpenChannelResponse.prototype.clearPendingChannelsList = function() {\n  this.setPendingChannelsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.OpenChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.OpenChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.OpenChannelRequest.displayName = 'proto.lnrpc.OpenChannelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.OpenChannelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.OpenChannelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.OpenChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OpenChannelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    satPerVbyte: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    nodePubkey: msg.getNodePubkey_asB64(),\n    nodePubkeyString: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    localFundingAmount: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    pushSat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    targetConf: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    satPerByte: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    pb_private: jspb.Message.getFieldWithDefault(msg, 8, false),\n    minHtlcMsat: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    remoteCsvDelay: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    minConfs: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    spendUnconfirmed: jspb.Message.getFieldWithDefault(msg, 12, false),\n    closeAddress: jspb.Message.getFieldWithDefault(msg, 13, \"\"),\n    fundingShim: (f = msg.getFundingShim()) && proto.lnrpc.FundingShim.toObject(includeInstance, f),\n    remoteMaxValueInFlightMsat: jspb.Message.getFieldWithDefault(msg, 15, 0),\n    remoteMaxHtlcs: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    maxLocalCsv: jspb.Message.getFieldWithDefault(msg, 17, 0),\n    commitmentType: jspb.Message.getFieldWithDefault(msg, 18, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.OpenChannelRequest}\n */\nproto.lnrpc.OpenChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.OpenChannelRequest;\n  return proto.lnrpc.OpenChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.OpenChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.OpenChannelRequest}\n */\nproto.lnrpc.OpenChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSatPerVbyte(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNodePubkey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodePubkeyString(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalFundingAmount(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPushSat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatPerByte(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivate(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMinHtlcMsat(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setRemoteCsvDelay(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinConfs(value);\n      break;\n    case 12:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSpendUnconfirmed(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCloseAddress(value);\n      break;\n    case 14:\n      var value = new proto.lnrpc.FundingShim;\n      reader.readMessage(value,proto.lnrpc.FundingShim.deserializeBinaryFromReader);\n      msg.setFundingShim(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRemoteMaxValueInFlightMsat(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setRemoteMaxHtlcs(value);\n      break;\n    case 17:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaxLocalCsv(value);\n      break;\n    case 18:\n      var value = /** @type {!proto.lnrpc.CommitmentType} */ (reader.readEnum());\n      msg.setCommitmentType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.OpenChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.OpenChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.OpenChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OpenChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSatPerVbyte();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getNodePubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getNodePubkeyString();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getLocalFundingAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getPushSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getPrivate();\n  if (f) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n  f = message.getMinHtlcMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getRemoteCsvDelay();\n  if (f !== 0) {\n    writer.writeUint32(\n      10,\n      f\n    );\n  }\n  f = message.getMinConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      11,\n      f\n    );\n  }\n  f = message.getSpendUnconfirmed();\n  if (f) {\n    writer.writeBool(\n      12,\n      f\n    );\n  }\n  f = message.getCloseAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = message.getFundingShim();\n  if (f != null) {\n    writer.writeMessage(\n      14,\n      f,\n      proto.lnrpc.FundingShim.serializeBinaryToWriter\n    );\n  }\n  f = message.getRemoteMaxValueInFlightMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      15,\n      f\n    );\n  }\n  f = message.getRemoteMaxHtlcs();\n  if (f !== 0) {\n    writer.writeUint32(\n      16,\n      f\n    );\n  }\n  f = message.getMaxLocalCsv();\n  if (f !== 0) {\n    writer.writeUint32(\n      17,\n      f\n    );\n  }\n  f = message.getCommitmentType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      18,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 sat_per_vbyte = 1;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getSatPerVbyte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setSatPerVbyte = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes node_pubkey = 2;\n * @return {string}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getNodePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes node_pubkey = 2;\n * This is a type-conversion wrapper around `getNodePubkey()`\n * @return {string}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getNodePubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNodePubkey()));\n};\n\n\n/**\n * optional bytes node_pubkey = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNodePubkey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getNodePubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNodePubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.OpenChannelRequest.prototype.setNodePubkey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string node_pubkey_string = 3;\n * @return {string}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getNodePubkeyString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.OpenChannelRequest.prototype.setNodePubkeyString = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 local_funding_amount = 4;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getLocalFundingAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setLocalFundingAmount = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 push_sat = 5;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getPushSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setPushSat = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int32 target_conf = 6;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 sat_per_byte = 7;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setSatPerByte = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional bool private = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getPrivate = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.OpenChannelRequest.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 min_htlc_msat = 9;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getMinHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setMinHtlcMsat = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional uint32 remote_csv_delay = 10;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getRemoteCsvDelay = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setRemoteCsvDelay = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional int32 min_confs = 11;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getMinConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setMinConfs = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional bool spend_unconfirmed = 12;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getSpendUnconfirmed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.OpenChannelRequest.prototype.setSpendUnconfirmed = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string close_address = 13;\n * @return {string}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getCloseAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.OpenChannelRequest.prototype.setCloseAddress = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional FundingShim funding_shim = 14;\n * @return {?proto.lnrpc.FundingShim}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getFundingShim = function() {\n  return /** @type{?proto.lnrpc.FundingShim} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingShim, 14));\n};\n\n\n/** @param {?proto.lnrpc.FundingShim|undefined} value */\nproto.lnrpc.OpenChannelRequest.prototype.setFundingShim = function(value) {\n  jspb.Message.setWrapperField(this, 14, value);\n};\n\n\nproto.lnrpc.OpenChannelRequest.prototype.clearFundingShim = function() {\n  this.setFundingShim(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.OpenChannelRequest.prototype.hasFundingShim = function() {\n  return jspb.Message.getField(this, 14) != null;\n};\n\n\n/**\n * optional uint64 remote_max_value_in_flight_msat = 15;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getRemoteMaxValueInFlightMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setRemoteMaxValueInFlightMsat = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * optional uint32 remote_max_htlcs = 16;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getRemoteMaxHtlcs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setRemoteMaxHtlcs = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n/**\n * optional uint32 max_local_csv = 17;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getMaxLocalCsv = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setMaxLocalCsv = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\n/**\n * optional CommitmentType commitment_type = 18;\n * @return {!proto.lnrpc.CommitmentType}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getCommitmentType = function() {\n  return /** @type {!proto.lnrpc.CommitmentType} */ (jspb.Message.getFieldWithDefault(this, 18, 0));\n};\n\n\n/** @param {!proto.lnrpc.CommitmentType} value */\nproto.lnrpc.OpenChannelRequest.prototype.setCommitmentType = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.OpenStatusUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.OpenStatusUpdate.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.OpenStatusUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.OpenStatusUpdate.displayName = 'proto.lnrpc.OpenStatusUpdate';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.OpenStatusUpdate.oneofGroups_ = [[1,3,5]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.OpenStatusUpdate.UpdateCase = {\n  UPDATE_NOT_SET: 0,\n  CHAN_PENDING: 1,\n  CHAN_OPEN: 3,\n  PSBT_FUND: 5\n};\n\n/**\n * @return {proto.lnrpc.OpenStatusUpdate.UpdateCase}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getUpdateCase = function() {\n  return /** @type {proto.lnrpc.OpenStatusUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.OpenStatusUpdate.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.OpenStatusUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.OpenStatusUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OpenStatusUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPending: (f = msg.getChanPending()) && proto.lnrpc.PendingUpdate.toObject(includeInstance, f),\n    chanOpen: (f = msg.getChanOpen()) && proto.lnrpc.ChannelOpenUpdate.toObject(includeInstance, f),\n    psbtFund: (f = msg.getPsbtFund()) && proto.lnrpc.ReadyForPsbtFunding.toObject(includeInstance, f),\n    pendingChanId: msg.getPendingChanId_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.OpenStatusUpdate}\n */\nproto.lnrpc.OpenStatusUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.OpenStatusUpdate;\n  return proto.lnrpc.OpenStatusUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.OpenStatusUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.OpenStatusUpdate}\n */\nproto.lnrpc.OpenStatusUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingUpdate;\n      reader.readMessage(value,proto.lnrpc.PendingUpdate.deserializeBinaryFromReader);\n      msg.setChanPending(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ChannelOpenUpdate;\n      reader.readMessage(value,proto.lnrpc.ChannelOpenUpdate.deserializeBinaryFromReader);\n      msg.setChanOpen(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.ReadyForPsbtFunding;\n      reader.readMessage(value,proto.lnrpc.ReadyForPsbtFunding.deserializeBinaryFromReader);\n      msg.setPsbtFund(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.OpenStatusUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.OpenStatusUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OpenStatusUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPending();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getChanOpen();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.ChannelOpenUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getPsbtFund();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.lnrpc.ReadyForPsbtFunding.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PendingUpdate chan_pending = 1;\n * @return {?proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getChanPending = function() {\n  return /** @type{?proto.lnrpc.PendingUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingUpdate, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingUpdate|undefined} value */\nproto.lnrpc.OpenStatusUpdate.prototype.setChanPending = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.OpenStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.OpenStatusUpdate.prototype.clearChanPending = function() {\n  this.setChanPending(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.hasChanPending = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ChannelOpenUpdate chan_open = 3;\n * @return {?proto.lnrpc.ChannelOpenUpdate}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getChanOpen = function() {\n  return /** @type{?proto.lnrpc.ChannelOpenUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelOpenUpdate, 3));\n};\n\n\n/** @param {?proto.lnrpc.ChannelOpenUpdate|undefined} value */\nproto.lnrpc.OpenStatusUpdate.prototype.setChanOpen = function(value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.lnrpc.OpenStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.OpenStatusUpdate.prototype.clearChanOpen = function() {\n  this.setChanOpen(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.hasChanOpen = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional ReadyForPsbtFunding psbt_fund = 5;\n * @return {?proto.lnrpc.ReadyForPsbtFunding}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getPsbtFund = function() {\n  return /** @type{?proto.lnrpc.ReadyForPsbtFunding} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ReadyForPsbtFunding, 5));\n};\n\n\n/** @param {?proto.lnrpc.ReadyForPsbtFunding|undefined} value */\nproto.lnrpc.OpenStatusUpdate.prototype.setPsbtFund = function(value) {\n  jspb.Message.setOneofWrapperField(this, 5, proto.lnrpc.OpenStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.OpenStatusUpdate.prototype.clearPsbtFund = function() {\n  this.setPsbtFund(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.hasPsbtFund = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bytes pending_chan_id = 4;\n * @return {string}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 4;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.OpenStatusUpdate.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.KeyLocator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.KeyLocator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.KeyLocator.displayName = 'proto.lnrpc.KeyLocator';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.KeyLocator.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.KeyLocator.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.KeyLocator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.KeyLocator.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    keyFamily: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    keyIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.KeyLocator}\n */\nproto.lnrpc.KeyLocator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.KeyLocator;\n  return proto.lnrpc.KeyLocator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.KeyLocator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.KeyLocator}\n */\nproto.lnrpc.KeyLocator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setKeyFamily(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setKeyIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.KeyLocator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.KeyLocator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.KeyLocator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.KeyLocator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKeyFamily();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getKeyIndex();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 key_family = 1;\n * @return {number}\n */\nproto.lnrpc.KeyLocator.prototype.getKeyFamily = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.KeyLocator.prototype.setKeyFamily = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 key_index = 2;\n * @return {number}\n */\nproto.lnrpc.KeyLocator.prototype.getKeyIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.KeyLocator.prototype.setKeyIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.KeyDescriptor = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.KeyDescriptor, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.KeyDescriptor.displayName = 'proto.lnrpc.KeyDescriptor';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.KeyDescriptor.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.KeyDescriptor.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.KeyDescriptor} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.KeyDescriptor.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rawKeyBytes: msg.getRawKeyBytes_asB64(),\n    keyLoc: (f = msg.getKeyLoc()) && proto.lnrpc.KeyLocator.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.KeyDescriptor}\n */\nproto.lnrpc.KeyDescriptor.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.KeyDescriptor;\n  return proto.lnrpc.KeyDescriptor.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.KeyDescriptor} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.KeyDescriptor}\n */\nproto.lnrpc.KeyDescriptor.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRawKeyBytes(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.KeyLocator;\n      reader.readMessage(value,proto.lnrpc.KeyLocator.deserializeBinaryFromReader);\n      msg.setKeyLoc(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.KeyDescriptor.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.KeyDescriptor.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.KeyDescriptor} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.KeyDescriptor.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRawKeyBytes_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getKeyLoc();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.KeyLocator.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes raw_key_bytes = 1;\n * @return {string}\n */\nproto.lnrpc.KeyDescriptor.prototype.getRawKeyBytes = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes raw_key_bytes = 1;\n * This is a type-conversion wrapper around `getRawKeyBytes()`\n * @return {string}\n */\nproto.lnrpc.KeyDescriptor.prototype.getRawKeyBytes_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRawKeyBytes()));\n};\n\n\n/**\n * optional bytes raw_key_bytes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRawKeyBytes()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.KeyDescriptor.prototype.getRawKeyBytes_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRawKeyBytes()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.KeyDescriptor.prototype.setRawKeyBytes = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional KeyLocator key_loc = 2;\n * @return {?proto.lnrpc.KeyLocator}\n */\nproto.lnrpc.KeyDescriptor.prototype.getKeyLoc = function() {\n  return /** @type{?proto.lnrpc.KeyLocator} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.KeyLocator, 2));\n};\n\n\n/** @param {?proto.lnrpc.KeyLocator|undefined} value */\nproto.lnrpc.KeyDescriptor.prototype.setKeyLoc = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.KeyDescriptor.prototype.clearKeyLoc = function() {\n  this.setKeyLoc(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.KeyDescriptor.prototype.hasKeyLoc = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChanPointShim = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChanPointShim, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChanPointShim.displayName = 'proto.lnrpc.ChanPointShim';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChanPointShim.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChanPointShim.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChanPointShim} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanPointShim.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    amt: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    localKey: (f = msg.getLocalKey()) && proto.lnrpc.KeyDescriptor.toObject(includeInstance, f),\n    remoteKey: msg.getRemoteKey_asB64(),\n    pendingChanId: msg.getPendingChanId_asB64(),\n    thawHeight: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChanPointShim}\n */\nproto.lnrpc.ChanPointShim.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChanPointShim;\n  return proto.lnrpc.ChanPointShim.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChanPointShim} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChanPointShim}\n */\nproto.lnrpc.ChanPointShim.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmt(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.KeyDescriptor;\n      reader.readMessage(value,proto.lnrpc.KeyDescriptor.deserializeBinaryFromReader);\n      msg.setLocalKey(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRemoteKey(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setThawHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanPointShim.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChanPointShim.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChanPointShim} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanPointShim.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAmt();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getLocalKey();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.KeyDescriptor.serializeBinaryToWriter\n    );\n  }\n  f = message.getRemoteKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getThawHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 amt = 1;\n * @return {number}\n */\nproto.lnrpc.ChanPointShim.prototype.getAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChanPointShim.prototype.setAmt = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional ChannelPoint chan_point = 2;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChanPointShim.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 2));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChanPointShim.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.ChanPointShim.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChanPointShim.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional KeyDescriptor local_key = 3;\n * @return {?proto.lnrpc.KeyDescriptor}\n */\nproto.lnrpc.ChanPointShim.prototype.getLocalKey = function() {\n  return /** @type{?proto.lnrpc.KeyDescriptor} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.KeyDescriptor, 3));\n};\n\n\n/** @param {?proto.lnrpc.KeyDescriptor|undefined} value */\nproto.lnrpc.ChanPointShim.prototype.setLocalKey = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.ChanPointShim.prototype.clearLocalKey = function() {\n  this.setLocalKey(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChanPointShim.prototype.hasLocalKey = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bytes remote_key = 4;\n * @return {string}\n */\nproto.lnrpc.ChanPointShim.prototype.getRemoteKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes remote_key = 4;\n * This is a type-conversion wrapper around `getRemoteKey()`\n * @return {string}\n */\nproto.lnrpc.ChanPointShim.prototype.getRemoteKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRemoteKey()));\n};\n\n\n/**\n * optional bytes remote_key = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRemoteKey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanPointShim.prototype.getRemoteKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRemoteKey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChanPointShim.prototype.setRemoteKey = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 5;\n * @return {string}\n */\nproto.lnrpc.ChanPointShim.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 5;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.ChanPointShim.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanPointShim.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChanPointShim.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 thaw_height = 6;\n * @return {number}\n */\nproto.lnrpc.ChanPointShim.prototype.getThawHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChanPointShim.prototype.setThawHeight = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PsbtShim = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PsbtShim, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PsbtShim.displayName = 'proto.lnrpc.PsbtShim';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PsbtShim.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PsbtShim.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PsbtShim} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PsbtShim.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pendingChanId: msg.getPendingChanId_asB64(),\n    basePsbt: msg.getBasePsbt_asB64(),\n    noPublish: jspb.Message.getFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PsbtShim}\n */\nproto.lnrpc.PsbtShim.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PsbtShim;\n  return proto.lnrpc.PsbtShim.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PsbtShim} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PsbtShim}\n */\nproto.lnrpc.PsbtShim.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBasePsbt(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setNoPublish(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PsbtShim.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PsbtShim.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PsbtShim} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PsbtShim.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBasePsbt_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getNoPublish();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.PsbtShim.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.PsbtShim.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PsbtShim.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PsbtShim.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes base_psbt = 2;\n * @return {string}\n */\nproto.lnrpc.PsbtShim.prototype.getBasePsbt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes base_psbt = 2;\n * This is a type-conversion wrapper around `getBasePsbt()`\n * @return {string}\n */\nproto.lnrpc.PsbtShim.prototype.getBasePsbt_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBasePsbt()));\n};\n\n\n/**\n * optional bytes base_psbt = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBasePsbt()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PsbtShim.prototype.getBasePsbt_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBasePsbt()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PsbtShim.prototype.setBasePsbt = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool no_publish = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.PsbtShim.prototype.getNoPublish = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.PsbtShim.prototype.setNoPublish = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingShim = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.FundingShim.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.FundingShim, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingShim.displayName = 'proto.lnrpc.FundingShim';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.FundingShim.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.FundingShim.ShimCase = {\n  SHIM_NOT_SET: 0,\n  CHAN_POINT_SHIM: 1,\n  PSBT_SHIM: 2\n};\n\n/**\n * @return {proto.lnrpc.FundingShim.ShimCase}\n */\nproto.lnrpc.FundingShim.prototype.getShimCase = function() {\n  return /** @type {proto.lnrpc.FundingShim.ShimCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.FundingShim.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingShim.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingShim.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingShim} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingShim.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPointShim: (f = msg.getChanPointShim()) && proto.lnrpc.ChanPointShim.toObject(includeInstance, f),\n    psbtShim: (f = msg.getPsbtShim()) && proto.lnrpc.PsbtShim.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingShim}\n */\nproto.lnrpc.FundingShim.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingShim;\n  return proto.lnrpc.FundingShim.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingShim} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingShim}\n */\nproto.lnrpc.FundingShim.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChanPointShim;\n      reader.readMessage(value,proto.lnrpc.ChanPointShim.deserializeBinaryFromReader);\n      msg.setChanPointShim(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.PsbtShim;\n      reader.readMessage(value,proto.lnrpc.PsbtShim.deserializeBinaryFromReader);\n      msg.setPsbtShim(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingShim.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingShim.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingShim} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingShim.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPointShim();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChanPointShim.serializeBinaryToWriter\n    );\n  }\n  f = message.getPsbtShim();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.PsbtShim.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ChanPointShim chan_point_shim = 1;\n * @return {?proto.lnrpc.ChanPointShim}\n */\nproto.lnrpc.FundingShim.prototype.getChanPointShim = function() {\n  return /** @type{?proto.lnrpc.ChanPointShim} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChanPointShim, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChanPointShim|undefined} value */\nproto.lnrpc.FundingShim.prototype.setChanPointShim = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.FundingShim.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingShim.prototype.clearChanPointShim = function() {\n  this.setChanPointShim(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingShim.prototype.hasChanPointShim = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional PsbtShim psbt_shim = 2;\n * @return {?proto.lnrpc.PsbtShim}\n */\nproto.lnrpc.FundingShim.prototype.getPsbtShim = function() {\n  return /** @type{?proto.lnrpc.PsbtShim} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PsbtShim, 2));\n};\n\n\n/** @param {?proto.lnrpc.PsbtShim|undefined} value */\nproto.lnrpc.FundingShim.prototype.setPsbtShim = function(value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.lnrpc.FundingShim.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingShim.prototype.clearPsbtShim = function() {\n  this.setPsbtShim(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingShim.prototype.hasPsbtShim = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingShimCancel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FundingShimCancel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingShimCancel.displayName = 'proto.lnrpc.FundingShimCancel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingShimCancel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingShimCancel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingShimCancel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingShimCancel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pendingChanId: msg.getPendingChanId_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingShimCancel}\n */\nproto.lnrpc.FundingShimCancel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingShimCancel;\n  return proto.lnrpc.FundingShimCancel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingShimCancel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingShimCancel}\n */\nproto.lnrpc.FundingShimCancel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingShimCancel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingShimCancel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingShimCancel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingShimCancel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.FundingShimCancel.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.FundingShimCancel.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingShimCancel.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingShimCancel.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingPsbtVerify = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FundingPsbtVerify, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingPsbtVerify.displayName = 'proto.lnrpc.FundingPsbtVerify';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingPsbtVerify.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingPsbtVerify} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingPsbtVerify.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fundedPsbt: msg.getFundedPsbt_asB64(),\n    pendingChanId: msg.getPendingChanId_asB64(),\n    skipFinalize: jspb.Message.getFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingPsbtVerify}\n */\nproto.lnrpc.FundingPsbtVerify.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingPsbtVerify;\n  return proto.lnrpc.FundingPsbtVerify.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingPsbtVerify} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingPsbtVerify}\n */\nproto.lnrpc.FundingPsbtVerify.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFundedPsbt(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSkipFinalize(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingPsbtVerify.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingPsbtVerify} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingPsbtVerify.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFundedPsbt_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getSkipFinalize();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes funded_psbt = 1;\n * @return {string}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getFundedPsbt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes funded_psbt = 1;\n * This is a type-conversion wrapper around `getFundedPsbt()`\n * @return {string}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getFundedPsbt_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFundedPsbt()));\n};\n\n\n/**\n * optional bytes funded_psbt = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFundedPsbt()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getFundedPsbt_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFundedPsbt()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingPsbtVerify.prototype.setFundedPsbt = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingPsbtVerify.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool skip_finalize = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getSkipFinalize = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.FundingPsbtVerify.prototype.setSkipFinalize = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingPsbtFinalize = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FundingPsbtFinalize, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingPsbtFinalize.displayName = 'proto.lnrpc.FundingPsbtFinalize';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingPsbtFinalize.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingPsbtFinalize} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingPsbtFinalize.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    signedPsbt: msg.getSignedPsbt_asB64(),\n    pendingChanId: msg.getPendingChanId_asB64(),\n    finalRawTx: msg.getFinalRawTx_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingPsbtFinalize}\n */\nproto.lnrpc.FundingPsbtFinalize.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingPsbtFinalize;\n  return proto.lnrpc.FundingPsbtFinalize.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingPsbtFinalize} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingPsbtFinalize}\n */\nproto.lnrpc.FundingPsbtFinalize.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignedPsbt(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFinalRawTx(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingPsbtFinalize.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingPsbtFinalize} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingPsbtFinalize.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSignedPsbt_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getFinalRawTx_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes signed_psbt = 1;\n * @return {string}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getSignedPsbt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes signed_psbt = 1;\n * This is a type-conversion wrapper around `getSignedPsbt()`\n * @return {string}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getSignedPsbt_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignedPsbt()));\n};\n\n\n/**\n * optional bytes signed_psbt = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignedPsbt()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getSignedPsbt_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignedPsbt()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingPsbtFinalize.prototype.setSignedPsbt = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingPsbtFinalize.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bytes final_raw_tx = 3;\n * @return {string}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getFinalRawTx = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes final_raw_tx = 3;\n * This is a type-conversion wrapper around `getFinalRawTx()`\n * @return {string}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getFinalRawTx_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFinalRawTx()));\n};\n\n\n/**\n * optional bytes final_raw_tx = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFinalRawTx()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getFinalRawTx_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFinalRawTx()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingPsbtFinalize.prototype.setFinalRawTx = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingTransitionMsg = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.FundingTransitionMsg.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.FundingTransitionMsg, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingTransitionMsg.displayName = 'proto.lnrpc.FundingTransitionMsg';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.FundingTransitionMsg.oneofGroups_ = [[1,2,3,4]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.FundingTransitionMsg.TriggerCase = {\n  TRIGGER_NOT_SET: 0,\n  SHIM_REGISTER: 1,\n  SHIM_CANCEL: 2,\n  PSBT_VERIFY: 3,\n  PSBT_FINALIZE: 4\n};\n\n/**\n * @return {proto.lnrpc.FundingTransitionMsg.TriggerCase}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getTriggerCase = function() {\n  return /** @type {proto.lnrpc.FundingTransitionMsg.TriggerCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingTransitionMsg.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingTransitionMsg} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingTransitionMsg.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    shimRegister: (f = msg.getShimRegister()) && proto.lnrpc.FundingShim.toObject(includeInstance, f),\n    shimCancel: (f = msg.getShimCancel()) && proto.lnrpc.FundingShimCancel.toObject(includeInstance, f),\n    psbtVerify: (f = msg.getPsbtVerify()) && proto.lnrpc.FundingPsbtVerify.toObject(includeInstance, f),\n    psbtFinalize: (f = msg.getPsbtFinalize()) && proto.lnrpc.FundingPsbtFinalize.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingTransitionMsg}\n */\nproto.lnrpc.FundingTransitionMsg.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingTransitionMsg;\n  return proto.lnrpc.FundingTransitionMsg.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingTransitionMsg} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingTransitionMsg}\n */\nproto.lnrpc.FundingTransitionMsg.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.FundingShim;\n      reader.readMessage(value,proto.lnrpc.FundingShim.deserializeBinaryFromReader);\n      msg.setShimRegister(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.FundingShimCancel;\n      reader.readMessage(value,proto.lnrpc.FundingShimCancel.deserializeBinaryFromReader);\n      msg.setShimCancel(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.FundingPsbtVerify;\n      reader.readMessage(value,proto.lnrpc.FundingPsbtVerify.deserializeBinaryFromReader);\n      msg.setPsbtVerify(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.FundingPsbtFinalize;\n      reader.readMessage(value,proto.lnrpc.FundingPsbtFinalize.deserializeBinaryFromReader);\n      msg.setPsbtFinalize(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingTransitionMsg.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingTransitionMsg} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingTransitionMsg.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getShimRegister();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.FundingShim.serializeBinaryToWriter\n    );\n  }\n  f = message.getShimCancel();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.FundingShimCancel.serializeBinaryToWriter\n    );\n  }\n  f = message.getPsbtVerify();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.FundingPsbtVerify.serializeBinaryToWriter\n    );\n  }\n  f = message.getPsbtFinalize();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.FundingPsbtFinalize.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional FundingShim shim_register = 1;\n * @return {?proto.lnrpc.FundingShim}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getShimRegister = function() {\n  return /** @type{?proto.lnrpc.FundingShim} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingShim, 1));\n};\n\n\n/** @param {?proto.lnrpc.FundingShim|undefined} value */\nproto.lnrpc.FundingTransitionMsg.prototype.setShimRegister = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingTransitionMsg.prototype.clearShimRegister = function() {\n  this.setShimRegister(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.hasShimRegister = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional FundingShimCancel shim_cancel = 2;\n * @return {?proto.lnrpc.FundingShimCancel}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getShimCancel = function() {\n  return /** @type{?proto.lnrpc.FundingShimCancel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingShimCancel, 2));\n};\n\n\n/** @param {?proto.lnrpc.FundingShimCancel|undefined} value */\nproto.lnrpc.FundingTransitionMsg.prototype.setShimCancel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingTransitionMsg.prototype.clearShimCancel = function() {\n  this.setShimCancel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.hasShimCancel = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional FundingPsbtVerify psbt_verify = 3;\n * @return {?proto.lnrpc.FundingPsbtVerify}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getPsbtVerify = function() {\n  return /** @type{?proto.lnrpc.FundingPsbtVerify} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingPsbtVerify, 3));\n};\n\n\n/** @param {?proto.lnrpc.FundingPsbtVerify|undefined} value */\nproto.lnrpc.FundingTransitionMsg.prototype.setPsbtVerify = function(value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingTransitionMsg.prototype.clearPsbtVerify = function() {\n  this.setPsbtVerify(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.hasPsbtVerify = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional FundingPsbtFinalize psbt_finalize = 4;\n * @return {?proto.lnrpc.FundingPsbtFinalize}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getPsbtFinalize = function() {\n  return /** @type{?proto.lnrpc.FundingPsbtFinalize} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingPsbtFinalize, 4));\n};\n\n\n/** @param {?proto.lnrpc.FundingPsbtFinalize|undefined} value */\nproto.lnrpc.FundingTransitionMsg.prototype.setPsbtFinalize = function(value) {\n  jspb.Message.setOneofWrapperField(this, 4, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingTransitionMsg.prototype.clearPsbtFinalize = function() {\n  this.setPsbtFinalize(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.hasPsbtFinalize = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingStateStepResp = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FundingStateStepResp, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingStateStepResp.displayName = 'proto.lnrpc.FundingStateStepResp';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingStateStepResp.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingStateStepResp.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingStateStepResp} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingStateStepResp.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingStateStepResp}\n */\nproto.lnrpc.FundingStateStepResp.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingStateStepResp;\n  return proto.lnrpc.FundingStateStepResp.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingStateStepResp} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingStateStepResp}\n */\nproto.lnrpc.FundingStateStepResp.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingStateStepResp.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingStateStepResp.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingStateStepResp} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingStateStepResp.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingHTLC = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingHTLC, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingHTLC.displayName = 'proto.lnrpc.PendingHTLC';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingHTLC.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingHTLC.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingHTLC} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingHTLC.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    incoming: jspb.Message.getFieldWithDefault(msg, 1, false),\n    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    outpoint: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    maturityHeight: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    blocksTilMaturity: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    stage: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingHTLC}\n */\nproto.lnrpc.PendingHTLC.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingHTLC;\n  return proto.lnrpc.PendingHTLC.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingHTLC} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingHTLC}\n */\nproto.lnrpc.PendingHTLC.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncoming(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOutpoint(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaturityHeight(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlocksTilMaturity(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setStage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingHTLC.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingHTLC.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingHTLC} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingHTLC.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIncoming();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getOutpoint();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getMaturityHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getBlocksTilMaturity();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getStage();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool incoming = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.PendingHTLC.prototype.getIncoming = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.PendingHTLC.prototype.setIncoming = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amount = 2;\n * @return {number}\n */\nproto.lnrpc.PendingHTLC.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingHTLC.prototype.setAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string outpoint = 3;\n * @return {string}\n */\nproto.lnrpc.PendingHTLC.prototype.getOutpoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingHTLC.prototype.setOutpoint = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 maturity_height = 4;\n * @return {number}\n */\nproto.lnrpc.PendingHTLC.prototype.getMaturityHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingHTLC.prototype.setMaturityHeight = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int32 blocks_til_maturity = 5;\n * @return {number}\n */\nproto.lnrpc.PendingHTLC.prototype.getBlocksTilMaturity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingHTLC.prototype.setBlocksTilMaturity = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 stage = 6;\n * @return {number}\n */\nproto.lnrpc.PendingHTLC.prototype.getStage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingHTLC.prototype.setStage = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsRequest.displayName = 'proto.lnrpc.PendingChannelsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsRequest}\n */\nproto.lnrpc.PendingChannelsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsRequest;\n  return proto.lnrpc.PendingChannelsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsRequest}\n */\nproto.lnrpc.PendingChannelsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.PendingChannelsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.displayName = 'proto.lnrpc.PendingChannelsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.PendingChannelsResponse.repeatedFields_ = [2,3,4,5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    totalLimboBalance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    pendingOpenChannelsList: jspb.Message.toObjectList(msg.getPendingOpenChannelsList(),\n    proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.toObject, includeInstance),\n    pendingClosingChannelsList: jspb.Message.toObjectList(msg.getPendingClosingChannelsList(),\n    proto.lnrpc.PendingChannelsResponse.ClosedChannel.toObject, includeInstance),\n    pendingForceClosingChannelsList: jspb.Message.toObjectList(msg.getPendingForceClosingChannelsList(),\n    proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.toObject, includeInstance),\n    waitingCloseChannelsList: jspb.Message.toObjectList(msg.getWaitingCloseChannelsList(),\n    proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse}\n */\nproto.lnrpc.PendingChannelsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse;\n  return proto.lnrpc.PendingChannelsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse}\n */\nproto.lnrpc.PendingChannelsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalLimboBalance(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingOpenChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.deserializeBinaryFromReader);\n      msg.addPendingOpenChannels(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.PendingChannelsResponse.ClosedChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.ClosedChannel.deserializeBinaryFromReader);\n      msg.addPendingClosingChannels(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.PendingChannelsResponse.ForceClosedChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.deserializeBinaryFromReader);\n      msg.addPendingForceClosingChannels(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.deserializeBinaryFromReader);\n      msg.addWaitingCloseChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTotalLimboBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPendingOpenChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingClosingChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.lnrpc.PendingChannelsResponse.ClosedChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingForceClosingChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getWaitingCloseChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.PendingChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.PendingChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.PendingChannel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    remoteNodePub: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    channelPoint: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    localBalance: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    remoteBalance: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    localChanReserveSat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    remoteChanReserveSat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    initiator: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    commitmentType: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    numForwardingPackages: jspb.Message.getFieldWithDefault(msg, 10, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n  return proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemoteNodePub(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelPoint(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalBalance(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRemoteBalance(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalChanReserveSat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRemoteChanReserveSat(value);\n      break;\n    case 8:\n      var value = /** @type {!proto.lnrpc.Initiator} */ (reader.readEnum());\n      msg.setInitiator(value);\n      break;\n    case 9:\n      var value = /** @type {!proto.lnrpc.CommitmentType} */ (reader.readEnum());\n      msg.setCommitmentType(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumForwardingPackages(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRemoteNodePub();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getChannelPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getLocalBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getRemoteBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getLocalChanReserveSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getRemoteChanReserveSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getInitiator();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      8,\n      f\n    );\n  }\n  f = message.getCommitmentType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      9,\n      f\n    );\n  }\n  f = message.getNumForwardingPackages();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string remote_node_pub = 1;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getRemoteNodePub = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setRemoteNodePub = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string channel_point = 2;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getChannelPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setChannelPoint = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 capacity = 3;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 local_balance = 4;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getLocalBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setLocalBalance = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 remote_balance = 5;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getRemoteBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setRemoteBalance = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 local_chan_reserve_sat = 6;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getLocalChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setLocalChanReserveSat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 remote_chan_reserve_sat = 7;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getRemoteChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setRemoteChanReserveSat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional Initiator initiator = 8;\n * @return {!proto.lnrpc.Initiator}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getInitiator = function() {\n  return /** @type {!proto.lnrpc.Initiator} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {!proto.lnrpc.Initiator} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setInitiator = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional CommitmentType commitment_type = 9;\n * @return {!proto.lnrpc.CommitmentType}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getCommitmentType = function() {\n  return /** @type {!proto.lnrpc.CommitmentType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {!proto.lnrpc.CommitmentType} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setCommitmentType = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional int64 num_forwarding_packages = 10;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getNumForwardingPackages = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setNumForwardingPackages = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.PendingOpenChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.PendingOpenChannel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channel: (f = msg.getChannel()) && proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(includeInstance, f),\n    confirmationHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    commitFee: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    commitWeight: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    feePerKw: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.PendingOpenChannel;\n  return proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader);\n      msg.setChannel(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setConfirmationHeight(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommitFee(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommitWeight(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeePerKw(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getConfirmationHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getCommitFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getCommitWeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getFeePerKw();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PendingChannel channel = 1;\n * @return {?proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getChannel = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.PendingChannel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingChannel, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.PendingChannel|undefined} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setChannel = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.clearChannel = function() {\n  this.setChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.hasChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 confirmation_height = 2;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getConfirmationHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setConfirmationHeight = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 commit_fee = 4;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getCommitFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setCommitFee = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 commit_weight = 5;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getCommitWeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setCommitWeight = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 fee_per_kw = 6;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getFeePerKw = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setFeePerKw = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channel: (f = msg.getChannel()) && proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(includeInstance, f),\n    limboBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    commitments: (f = msg.getCommitments()) && proto.lnrpc.PendingChannelsResponse.Commitments.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel;\n  return proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader);\n      msg.setChannel(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLimboBalance(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.PendingChannelsResponse.Commitments;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.Commitments.deserializeBinaryFromReader);\n      msg.setCommitments(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getLimboBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getCommitments();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.PendingChannelsResponse.Commitments.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PendingChannel channel = 1;\n * @return {?proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.getChannel = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.PendingChannel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingChannel, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.PendingChannel|undefined} value */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.setChannel = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.clearChannel = function() {\n  this.setChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.hasChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 limbo_balance = 2;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.getLimboBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.setLimboBalance = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional Commitments commitments = 3;\n * @return {?proto.lnrpc.PendingChannelsResponse.Commitments}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.getCommitments = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.Commitments} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.Commitments, 3));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.Commitments|undefined} value */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.setCommitments = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.clearCommitments = function() {\n  this.setCommitments(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.hasCommitments = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.Commitments = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.Commitments, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.Commitments.displayName = 'proto.lnrpc.PendingChannelsResponse.Commitments';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.Commitments.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.Commitments} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    localTxid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    remoteTxid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    remotePendingTxid: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    localCommitFeeSat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    remoteCommitFeeSat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    remotePendingCommitFeeSat: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.Commitments}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.Commitments;\n  return proto.lnrpc.PendingChannelsResponse.Commitments.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.Commitments} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.Commitments}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLocalTxid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemoteTxid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemotePendingTxid(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLocalCommitFeeSat(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRemoteCommitFeeSat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRemotePendingCommitFeeSat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.Commitments.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.Commitments} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLocalTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRemoteTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getRemotePendingTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getLocalCommitFeeSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getRemoteCommitFeeSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getRemotePendingCommitFeeSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string local_txid = 1;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getLocalTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setLocalTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string remote_txid = 2;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getRemoteTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setRemoteTxid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string remote_pending_txid = 3;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getRemotePendingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setRemotePendingTxid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 local_commit_fee_sat = 4;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getLocalCommitFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setLocalCommitFeeSat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 remote_commit_fee_sat = 5;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getRemoteCommitFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setRemoteCommitFeeSat = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 remote_pending_commit_fee_sat = 6;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getRemotePendingCommitFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setRemotePendingCommitFeeSat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.ClosedChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.ClosedChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.ClosedChannel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.ClosedChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.ClosedChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channel: (f = msg.getChannel()) && proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(includeInstance, f),\n    closingTxid: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.ClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.ClosedChannel;\n  return proto.lnrpc.PendingChannelsResponse.ClosedChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.ClosedChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.ClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader);\n      msg.setChannel(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClosingTxid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.ClosedChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.ClosedChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getClosingTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PendingChannel channel = 1;\n * @return {?proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.getChannel = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.PendingChannel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingChannel, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.PendingChannel|undefined} value */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.setChannel = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.clearChannel = function() {\n  this.setChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.hasChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string closing_txid = 2;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.getClosingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.setClosingTxid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.ForceClosedChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.ForceClosedChannel';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.repeatedFields_ = [8];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channel: (f = msg.getChannel()) && proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(includeInstance, f),\n    closingTxid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    limboBalance: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    maturityHeight: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    blocksTilMaturity: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    recoveredBalance: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    pendingHtlcsList: jspb.Message.toObjectList(msg.getPendingHtlcsList(),\n    proto.lnrpc.PendingHTLC.toObject, includeInstance),\n    anchor: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.ForceClosedChannel;\n  return proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader);\n      msg.setChannel(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClosingTxid(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLimboBalance(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaturityHeight(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlocksTilMaturity(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRecoveredBalance(value);\n      break;\n    case 8:\n      var value = new proto.lnrpc.PendingHTLC;\n      reader.readMessage(value,proto.lnrpc.PendingHTLC.deserializeBinaryFromReader);\n      msg.addPendingHtlcs(value);\n      break;\n    case 9:\n      var value = /** @type {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState} */ (reader.readEnum());\n      msg.setAnchor(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getClosingTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getLimboBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getMaturityHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getBlocksTilMaturity();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getRecoveredBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getPendingHtlcsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      8,\n      f,\n      proto.lnrpc.PendingHTLC.serializeBinaryToWriter\n    );\n  }\n  f = message.getAnchor();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState = {\n  LIMBO: 0,\n  RECOVERED: 1,\n  LOST: 2\n};\n\n/**\n * optional PendingChannel channel = 1;\n * @return {?proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getChannel = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.PendingChannel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingChannel, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.PendingChannel|undefined} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setChannel = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.clearChannel = function() {\n  this.setChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.hasChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string closing_txid = 2;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getClosingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setClosingTxid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 limbo_balance = 3;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getLimboBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setLimboBalance = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 maturity_height = 4;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getMaturityHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setMaturityHeight = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int32 blocks_til_maturity = 5;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getBlocksTilMaturity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setBlocksTilMaturity = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 recovered_balance = 6;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getRecoveredBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setRecoveredBalance = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * repeated PendingHTLC pending_htlcs = 8;\n * @return {!Array.<!proto.lnrpc.PendingHTLC>}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getPendingHtlcsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingHTLC>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingHTLC, 8));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingHTLC>} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setPendingHtlcsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 8, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingHTLC=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingHTLC}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.addPendingHtlcs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.lnrpc.PendingHTLC, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.clearPendingHtlcsList = function() {\n  this.setPendingHtlcsList([]);\n};\n\n\n/**\n * optional AnchorState anchor = 9;\n * @return {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getAnchor = function() {\n  return /** @type {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setAnchor = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional int64 total_limbo_balance = 1;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getTotalLimboBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setTotalLimboBalance = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * repeated PendingOpenChannel pending_open_channels = 2;\n * @return {!Array.<!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel>}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getPendingOpenChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingOpenChannel, 2));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel>} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setPendingOpenChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.addPendingOpenChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.lnrpc.PendingChannelsResponse.PendingOpenChannel, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.prototype.clearPendingOpenChannelsList = function() {\n  this.setPendingOpenChannelsList([]);\n};\n\n\n/**\n * repeated ClosedChannel pending_closing_channels = 3;\n * @return {!Array.<!proto.lnrpc.PendingChannelsResponse.ClosedChannel>}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getPendingClosingChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingChannelsResponse.ClosedChannel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingChannelsResponse.ClosedChannel, 3));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingChannelsResponse.ClosedChannel>} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setPendingClosingChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingChannelsResponse.ClosedChannel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingChannelsResponse.ClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.addPendingClosingChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.lnrpc.PendingChannelsResponse.ClosedChannel, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.prototype.clearPendingClosingChannelsList = function() {\n  this.setPendingClosingChannelsList([]);\n};\n\n\n/**\n * repeated ForceClosedChannel pending_force_closing_channels = 4;\n * @return {!Array.<!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel>}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getPendingForceClosingChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingChannelsResponse.ForceClosedChannel, 4));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel>} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setPendingForceClosingChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.addPendingForceClosingChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.lnrpc.PendingChannelsResponse.ForceClosedChannel, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.prototype.clearPendingForceClosingChannelsList = function() {\n  this.setPendingForceClosingChannelsList([]);\n};\n\n\n/**\n * repeated WaitingCloseChannel waiting_close_channels = 5;\n * @return {!Array.<!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel>}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getWaitingCloseChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel, 5));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel>} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setWaitingCloseChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.addWaitingCloseChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.prototype.clearWaitingCloseChannelsList = function() {\n  this.setWaitingCloseChannelsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelEventSubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelEventSubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelEventSubscription.displayName = 'proto.lnrpc.ChannelEventSubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelEventSubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelEventSubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelEventSubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEventSubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelEventSubscription}\n */\nproto.lnrpc.ChannelEventSubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelEventSubscription;\n  return proto.lnrpc.ChannelEventSubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelEventSubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelEventSubscription}\n */\nproto.lnrpc.ChannelEventSubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelEventSubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelEventSubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelEventSubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEventSubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelEventUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.ChannelEventUpdate.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.ChannelEventUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelEventUpdate.displayName = 'proto.lnrpc.ChannelEventUpdate';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.ChannelEventUpdate.oneofGroups_ = [[1,2,3,4,6,7]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ChannelEventUpdate.ChannelCase = {\n  CHANNEL_NOT_SET: 0,\n  OPEN_CHANNEL: 1,\n  CLOSED_CHANNEL: 2,\n  ACTIVE_CHANNEL: 3,\n  INACTIVE_CHANNEL: 4,\n  PENDING_OPEN_CHANNEL: 6,\n  FULLY_RESOLVED_CHANNEL: 7\n};\n\n/**\n * @return {proto.lnrpc.ChannelEventUpdate.ChannelCase}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getChannelCase = function() {\n  return /** @type {proto.lnrpc.ChannelEventUpdate.ChannelCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelEventUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelEventUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEventUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    openChannel: (f = msg.getOpenChannel()) && proto.lnrpc.Channel.toObject(includeInstance, f),\n    closedChannel: (f = msg.getClosedChannel()) && proto.lnrpc.ChannelCloseSummary.toObject(includeInstance, f),\n    activeChannel: (f = msg.getActiveChannel()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    inactiveChannel: (f = msg.getInactiveChannel()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    pendingOpenChannel: (f = msg.getPendingOpenChannel()) && proto.lnrpc.PendingUpdate.toObject(includeInstance, f),\n    fullyResolvedChannel: (f = msg.getFullyResolvedChannel()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    type: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelEventUpdate}\n */\nproto.lnrpc.ChannelEventUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelEventUpdate;\n  return proto.lnrpc.ChannelEventUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelEventUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelEventUpdate}\n */\nproto.lnrpc.ChannelEventUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Channel;\n      reader.readMessage(value,proto.lnrpc.Channel.deserializeBinaryFromReader);\n      msg.setOpenChannel(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelCloseSummary;\n      reader.readMessage(value,proto.lnrpc.ChannelCloseSummary.deserializeBinaryFromReader);\n      msg.setClosedChannel(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setActiveChannel(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setInactiveChannel(value);\n      break;\n    case 6:\n      var value = new proto.lnrpc.PendingUpdate;\n      reader.readMessage(value,proto.lnrpc.PendingUpdate.deserializeBinaryFromReader);\n      msg.setPendingOpenChannel(value);\n      break;\n    case 7:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setFullyResolvedChannel(value);\n      break;\n    case 5:\n      var value = /** @type {!proto.lnrpc.ChannelEventUpdate.UpdateType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelEventUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelEventUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEventUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOpenChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.Channel.serializeBinaryToWriter\n    );\n  }\n  f = message.getClosedChannel();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelCloseSummary.serializeBinaryToWriter\n    );\n  }\n  f = message.getActiveChannel();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getInactiveChannel();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingOpenChannel();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.lnrpc.PendingUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getFullyResolvedChannel();\n  if (f != null) {\n    writer.writeMessage(\n      7,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ChannelEventUpdate.UpdateType = {\n  OPEN_CHANNEL: 0,\n  CLOSED_CHANNEL: 1,\n  ACTIVE_CHANNEL: 2,\n  INACTIVE_CHANNEL: 3,\n  PENDING_OPEN_CHANNEL: 4,\n  FULLY_RESOLVED_CHANNEL: 5\n};\n\n/**\n * optional Channel open_channel = 1;\n * @return {?proto.lnrpc.Channel}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getOpenChannel = function() {\n  return /** @type{?proto.lnrpc.Channel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Channel, 1));\n};\n\n\n/** @param {?proto.lnrpc.Channel|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setOpenChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearOpenChannel = function() {\n  this.setOpenChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasOpenChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ChannelCloseSummary closed_channel = 2;\n * @return {?proto.lnrpc.ChannelCloseSummary}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getClosedChannel = function() {\n  return /** @type{?proto.lnrpc.ChannelCloseSummary} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelCloseSummary, 2));\n};\n\n\n/** @param {?proto.lnrpc.ChannelCloseSummary|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setClosedChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearClosedChannel = function() {\n  this.setClosedChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasClosedChannel = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional ChannelPoint active_channel = 3;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getActiveChannel = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 3));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setActiveChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearActiveChannel = function() {\n  this.setActiveChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasActiveChannel = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional ChannelPoint inactive_channel = 4;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getInactiveChannel = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 4));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setInactiveChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 4, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearInactiveChannel = function() {\n  this.setInactiveChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasInactiveChannel = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional PendingUpdate pending_open_channel = 6;\n * @return {?proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getPendingOpenChannel = function() {\n  return /** @type{?proto.lnrpc.PendingUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingUpdate, 6));\n};\n\n\n/** @param {?proto.lnrpc.PendingUpdate|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setPendingOpenChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 6, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearPendingOpenChannel = function() {\n  this.setPendingOpenChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasPendingOpenChannel = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional ChannelPoint fully_resolved_channel = 7;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getFullyResolvedChannel = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 7));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setFullyResolvedChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 7, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearFullyResolvedChannel = function() {\n  this.setFullyResolvedChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasFullyResolvedChannel = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional UpdateType type = 5;\n * @return {!proto.lnrpc.ChannelEventUpdate.UpdateType}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getType = function() {\n  return /** @type {!proto.lnrpc.ChannelEventUpdate.UpdateType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {!proto.lnrpc.ChannelEventUpdate.UpdateType} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setType = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.WalletAccountBalance = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.WalletAccountBalance, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.WalletAccountBalance.displayName = 'proto.lnrpc.WalletAccountBalance';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.WalletAccountBalance.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.WalletAccountBalance.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.WalletAccountBalance} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.WalletAccountBalance.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    confirmedBalance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    unconfirmedBalance: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.WalletAccountBalance}\n */\nproto.lnrpc.WalletAccountBalance.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.WalletAccountBalance;\n  return proto.lnrpc.WalletAccountBalance.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.WalletAccountBalance} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.WalletAccountBalance}\n */\nproto.lnrpc.WalletAccountBalance.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setConfirmedBalance(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUnconfirmedBalance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.WalletAccountBalance.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.WalletAccountBalance.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.WalletAccountBalance} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.WalletAccountBalance.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConfirmedBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getUnconfirmedBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 confirmed_balance = 1;\n * @return {number}\n */\nproto.lnrpc.WalletAccountBalance.prototype.getConfirmedBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.WalletAccountBalance.prototype.setConfirmedBalance = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 unconfirmed_balance = 2;\n * @return {number}\n */\nproto.lnrpc.WalletAccountBalance.prototype.getUnconfirmedBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.WalletAccountBalance.prototype.setUnconfirmedBalance = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.WalletBalanceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.WalletBalanceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.WalletBalanceRequest.displayName = 'proto.lnrpc.WalletBalanceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.WalletBalanceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.WalletBalanceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.WalletBalanceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.WalletBalanceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.WalletBalanceRequest}\n */\nproto.lnrpc.WalletBalanceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.WalletBalanceRequest;\n  return proto.lnrpc.WalletBalanceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.WalletBalanceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.WalletBalanceRequest}\n */\nproto.lnrpc.WalletBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.WalletBalanceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.WalletBalanceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.WalletBalanceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.WalletBalanceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.WalletBalanceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.WalletBalanceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.WalletBalanceResponse.displayName = 'proto.lnrpc.WalletBalanceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.WalletBalanceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.WalletBalanceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.WalletBalanceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    totalBalance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    confirmedBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    unconfirmedBalance: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    accountBalanceMap: (f = msg.getAccountBalanceMap()) ? f.toObject(includeInstance, proto.lnrpc.WalletAccountBalance.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.WalletBalanceResponse}\n */\nproto.lnrpc.WalletBalanceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.WalletBalanceResponse;\n  return proto.lnrpc.WalletBalanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.WalletBalanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.WalletBalanceResponse}\n */\nproto.lnrpc.WalletBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalBalance(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setConfirmedBalance(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUnconfirmedBalance(value);\n      break;\n    case 4:\n      var value = msg.getAccountBalanceMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.WalletAccountBalance.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.WalletBalanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.WalletBalanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.WalletBalanceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTotalBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getConfirmedBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getUnconfirmedBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getAccountBalanceMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.WalletAccountBalance.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * optional int64 total_balance = 1;\n * @return {number}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.getTotalBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.WalletBalanceResponse.prototype.setTotalBalance = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 confirmed_balance = 2;\n * @return {number}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.getConfirmedBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.WalletBalanceResponse.prototype.setConfirmedBalance = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 unconfirmed_balance = 3;\n * @return {number}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.getUnconfirmedBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.WalletBalanceResponse.prototype.setUnconfirmedBalance = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * map<string, WalletAccountBalance> account_balance = 4;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!proto.lnrpc.WalletAccountBalance>}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.getAccountBalanceMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!proto.lnrpc.WalletAccountBalance>} */ (\n      jspb.Message.getMapField(this, 4, opt_noLazyCreate,\n      proto.lnrpc.WalletAccountBalance));\n};\n\n\nproto.lnrpc.WalletBalanceResponse.prototype.clearAccountBalanceMap = function() {\n  this.getAccountBalanceMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Amount = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Amount, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Amount.displayName = 'proto.lnrpc.Amount';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Amount.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Amount.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Amount} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Amount.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sat: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    msat: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Amount}\n */\nproto.lnrpc.Amount.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Amount;\n  return proto.lnrpc.Amount.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Amount} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Amount}\n */\nproto.lnrpc.Amount.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSat(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Amount.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Amount.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Amount} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Amount.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 sat = 1;\n * @return {number}\n */\nproto.lnrpc.Amount.prototype.getSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Amount.prototype.setSat = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 msat = 2;\n * @return {number}\n */\nproto.lnrpc.Amount.prototype.getMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Amount.prototype.setMsat = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBalanceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBalanceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBalanceRequest.displayName = 'proto.lnrpc.ChannelBalanceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBalanceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBalanceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBalanceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBalanceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBalanceRequest}\n */\nproto.lnrpc.ChannelBalanceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBalanceRequest;\n  return proto.lnrpc.ChannelBalanceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBalanceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBalanceRequest}\n */\nproto.lnrpc.ChannelBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBalanceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBalanceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBalanceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBalanceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBalanceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBalanceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBalanceResponse.displayName = 'proto.lnrpc.ChannelBalanceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBalanceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBalanceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBalanceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    balance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    pendingOpenBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    localBalance: (f = msg.getLocalBalance()) && proto.lnrpc.Amount.toObject(includeInstance, f),\n    remoteBalance: (f = msg.getRemoteBalance()) && proto.lnrpc.Amount.toObject(includeInstance, f),\n    unsettledLocalBalance: (f = msg.getUnsettledLocalBalance()) && proto.lnrpc.Amount.toObject(includeInstance, f),\n    unsettledRemoteBalance: (f = msg.getUnsettledRemoteBalance()) && proto.lnrpc.Amount.toObject(includeInstance, f),\n    pendingOpenLocalBalance: (f = msg.getPendingOpenLocalBalance()) && proto.lnrpc.Amount.toObject(includeInstance, f),\n    pendingOpenRemoteBalance: (f = msg.getPendingOpenRemoteBalance()) && proto.lnrpc.Amount.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBalanceResponse}\n */\nproto.lnrpc.ChannelBalanceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBalanceResponse;\n  return proto.lnrpc.ChannelBalanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBalanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBalanceResponse}\n */\nproto.lnrpc.ChannelBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPendingOpenBalance(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.Amount;\n      reader.readMessage(value,proto.lnrpc.Amount.deserializeBinaryFromReader);\n      msg.setLocalBalance(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.Amount;\n      reader.readMessage(value,proto.lnrpc.Amount.deserializeBinaryFromReader);\n      msg.setRemoteBalance(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.Amount;\n      reader.readMessage(value,proto.lnrpc.Amount.deserializeBinaryFromReader);\n      msg.setUnsettledLocalBalance(value);\n      break;\n    case 6:\n      var value = new proto.lnrpc.Amount;\n      reader.readMessage(value,proto.lnrpc.Amount.deserializeBinaryFromReader);\n      msg.setUnsettledRemoteBalance(value);\n      break;\n    case 7:\n      var value = new proto.lnrpc.Amount;\n      reader.readMessage(value,proto.lnrpc.Amount.deserializeBinaryFromReader);\n      msg.setPendingOpenLocalBalance(value);\n      break;\n    case 8:\n      var value = new proto.lnrpc.Amount;\n      reader.readMessage(value,proto.lnrpc.Amount.deserializeBinaryFromReader);\n      msg.setPendingOpenRemoteBalance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBalanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBalanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBalanceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPendingOpenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getLocalBalance();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.Amount.serializeBinaryToWriter\n    );\n  }\n  f = message.getRemoteBalance();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.Amount.serializeBinaryToWriter\n    );\n  }\n  f = message.getUnsettledLocalBalance();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.lnrpc.Amount.serializeBinaryToWriter\n    );\n  }\n  f = message.getUnsettledRemoteBalance();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.lnrpc.Amount.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingOpenLocalBalance();\n  if (f != null) {\n    writer.writeMessage(\n      7,\n      f,\n      proto.lnrpc.Amount.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingOpenRemoteBalance();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.lnrpc.Amount.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int64 balance = 1;\n * @return {number}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelBalanceResponse.prototype.setBalance = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 pending_open_balance = 2;\n * @return {number}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.getPendingOpenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelBalanceResponse.prototype.setPendingOpenBalance = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional Amount local_balance = 3;\n * @return {?proto.lnrpc.Amount}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.getLocalBalance = function() {\n  return /** @type{?proto.lnrpc.Amount} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Amount, 3));\n};\n\n\n/** @param {?proto.lnrpc.Amount|undefined} value */\nproto.lnrpc.ChannelBalanceResponse.prototype.setLocalBalance = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.ChannelBalanceResponse.prototype.clearLocalBalance = function() {\n  this.setLocalBalance(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.hasLocalBalance = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional Amount remote_balance = 4;\n * @return {?proto.lnrpc.Amount}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.getRemoteBalance = function() {\n  return /** @type{?proto.lnrpc.Amount} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Amount, 4));\n};\n\n\n/** @param {?proto.lnrpc.Amount|undefined} value */\nproto.lnrpc.ChannelBalanceResponse.prototype.setRemoteBalance = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.lnrpc.ChannelBalanceResponse.prototype.clearRemoteBalance = function() {\n  this.setRemoteBalance(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.hasRemoteBalance = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional Amount unsettled_local_balance = 5;\n * @return {?proto.lnrpc.Amount}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.getUnsettledLocalBalance = function() {\n  return /** @type{?proto.lnrpc.Amount} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Amount, 5));\n};\n\n\n/** @param {?proto.lnrpc.Amount|undefined} value */\nproto.lnrpc.ChannelBalanceResponse.prototype.setUnsettledLocalBalance = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.lnrpc.ChannelBalanceResponse.prototype.clearUnsettledLocalBalance = function() {\n  this.setUnsettledLocalBalance(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.hasUnsettledLocalBalance = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional Amount unsettled_remote_balance = 6;\n * @return {?proto.lnrpc.Amount}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.getUnsettledRemoteBalance = function() {\n  return /** @type{?proto.lnrpc.Amount} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Amount, 6));\n};\n\n\n/** @param {?proto.lnrpc.Amount|undefined} value */\nproto.lnrpc.ChannelBalanceResponse.prototype.setUnsettledRemoteBalance = function(value) {\n  jspb.Message.setWrapperField(this, 6, value);\n};\n\n\nproto.lnrpc.ChannelBalanceResponse.prototype.clearUnsettledRemoteBalance = function() {\n  this.setUnsettledRemoteBalance(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.hasUnsettledRemoteBalance = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional Amount pending_open_local_balance = 7;\n * @return {?proto.lnrpc.Amount}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.getPendingOpenLocalBalance = function() {\n  return /** @type{?proto.lnrpc.Amount} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Amount, 7));\n};\n\n\n/** @param {?proto.lnrpc.Amount|undefined} value */\nproto.lnrpc.ChannelBalanceResponse.prototype.setPendingOpenLocalBalance = function(value) {\n  jspb.Message.setWrapperField(this, 7, value);\n};\n\n\nproto.lnrpc.ChannelBalanceResponse.prototype.clearPendingOpenLocalBalance = function() {\n  this.setPendingOpenLocalBalance(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.hasPendingOpenLocalBalance = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional Amount pending_open_remote_balance = 8;\n * @return {?proto.lnrpc.Amount}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.getPendingOpenRemoteBalance = function() {\n  return /** @type{?proto.lnrpc.Amount} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Amount, 8));\n};\n\n\n/** @param {?proto.lnrpc.Amount|undefined} value */\nproto.lnrpc.ChannelBalanceResponse.prototype.setPendingOpenRemoteBalance = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.lnrpc.ChannelBalanceResponse.prototype.clearPendingOpenRemoteBalance = function() {\n  this.setPendingOpenRemoteBalance(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.hasPendingOpenRemoteBalance = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.QueryRoutesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.QueryRoutesRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.QueryRoutesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.QueryRoutesRequest.displayName = 'proto.lnrpc.QueryRoutesRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.QueryRoutesRequest.repeatedFields_ = [6,7,10,16,17];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.QueryRoutesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.QueryRoutesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.QueryRoutesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    amt: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    amtMsat: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    finalCltvDelta: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    feeLimit: (f = msg.getFeeLimit()) && proto.lnrpc.FeeLimit.toObject(includeInstance, f),\n    ignoredNodesList: msg.getIgnoredNodesList_asB64(),\n    ignoredEdgesList: jspb.Message.toObjectList(msg.getIgnoredEdgesList(),\n    proto.lnrpc.EdgeLocator.toObject, includeInstance),\n    sourcePubKey: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    useMissionControl: jspb.Message.getFieldWithDefault(msg, 9, false),\n    ignoredPairsList: jspb.Message.toObjectList(msg.getIgnoredPairsList(),\n    proto.lnrpc.NodePair.toObject, includeInstance),\n    cltvLimit: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    destCustomRecordsMap: (f = msg.getDestCustomRecordsMap()) ? f.toObject(includeInstance, undefined) : [],\n    outgoingChanId: jspb.Message.getFieldWithDefault(msg, 14, \"0\"),\n    lastHopPubkey: msg.getLastHopPubkey_asB64(),\n    routeHintsList: jspb.Message.toObjectList(msg.getRouteHintsList(),\n    proto.lnrpc.RouteHint.toObject, includeInstance),\n    destFeaturesList: jspb.Message.getRepeatedField(msg, 17)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.QueryRoutesRequest}\n */\nproto.lnrpc.QueryRoutesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.QueryRoutesRequest;\n  return proto.lnrpc.QueryRoutesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.QueryRoutesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.QueryRoutesRequest}\n */\nproto.lnrpc.QueryRoutesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmt(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setFinalCltvDelta(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.FeeLimit;\n      reader.readMessage(value,proto.lnrpc.FeeLimit.deserializeBinaryFromReader);\n      msg.setFeeLimit(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addIgnoredNodes(value);\n      break;\n    case 7:\n      var value = new proto.lnrpc.EdgeLocator;\n      reader.readMessage(value,proto.lnrpc.EdgeLocator.deserializeBinaryFromReader);\n      msg.addIgnoredEdges(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSourcePubKey(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setUseMissionControl(value);\n      break;\n    case 10:\n      var value = new proto.lnrpc.NodePair;\n      reader.readMessage(value,proto.lnrpc.NodePair.deserializeBinaryFromReader);\n      msg.addIgnoredPairs(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCltvLimit(value);\n      break;\n    case 13:\n      var value = msg.getDestCustomRecordsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readBytes);\n         });\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setOutgoingChanId(value);\n      break;\n    case 15:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setLastHopPubkey(value);\n      break;\n    case 16:\n      var value = new proto.lnrpc.RouteHint;\n      reader.readMessage(value,proto.lnrpc.RouteHint.deserializeBinaryFromReader);\n      msg.addRouteHints(value);\n      break;\n    case 17:\n      var value = /** @type {!Array.<!proto.lnrpc.FeatureBit>} */ (reader.readPackedEnum());\n      msg.setDestFeaturesList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.QueryRoutesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.QueryRoutesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.QueryRoutesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmt();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getFinalCltvDelta();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getFeeLimit();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.lnrpc.FeeLimit.serializeBinaryToWriter\n    );\n  }\n  f = message.getIgnoredNodesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      6,\n      f\n    );\n  }\n  f = message.getIgnoredEdgesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      proto.lnrpc.EdgeLocator.serializeBinaryToWriter\n    );\n  }\n  f = message.getSourcePubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getUseMissionControl();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n  f = message.getIgnoredPairsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      10,\n      f,\n      proto.lnrpc.NodePair.serializeBinaryToWriter\n    );\n  }\n  f = message.getCltvLimit();\n  if (f !== 0) {\n    writer.writeUint32(\n      11,\n      f\n    );\n  }\n  f = message.getDestCustomRecordsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getOutgoingChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      14,\n      f\n    );\n  }\n  f = message.getLastHopPubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      15,\n      f\n    );\n  }\n  f = message.getRouteHintsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      16,\n      f,\n      proto.lnrpc.RouteHint.serializeBinaryToWriter\n    );\n  }\n  f = message.getDestFeaturesList();\n  if (f.length > 0) {\n    writer.writePackedEnum(\n      17,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amt = 2;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setAmt = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_msat = 12;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional int32 final_cltv_delta = 4;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getFinalCltvDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setFinalCltvDelta = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional FeeLimit fee_limit = 5;\n * @return {?proto.lnrpc.FeeLimit}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getFeeLimit = function() {\n  return /** @type{?proto.lnrpc.FeeLimit} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FeeLimit, 5));\n};\n\n\n/** @param {?proto.lnrpc.FeeLimit|undefined} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setFeeLimit = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearFeeLimit = function() {\n  this.setFeeLimit(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.hasFeeLimit = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * repeated bytes ignored_nodes = 6;\n * @return {!Array.<string>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredNodesList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 6));\n};\n\n\n/**\n * repeated bytes ignored_nodes = 6;\n * This is a type-conversion wrapper around `getIgnoredNodesList()`\n * @return {!Array.<string>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredNodesList_asB64 = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(\n      this.getIgnoredNodesList()));\n};\n\n\n/**\n * repeated bytes ignored_nodes = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getIgnoredNodesList()`\n * @return {!Array.<!Uint8Array>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredNodesList_asU8 = function() {\n  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getIgnoredNodesList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setIgnoredNodesList = function(value) {\n  jspb.Message.setField(this, 6, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addIgnoredNodes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 6, value, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearIgnoredNodesList = function() {\n  this.setIgnoredNodesList([]);\n};\n\n\n/**\n * repeated EdgeLocator ignored_edges = 7;\n * @return {!Array.<!proto.lnrpc.EdgeLocator>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredEdgesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.EdgeLocator>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.EdgeLocator, 7));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.EdgeLocator>} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setIgnoredEdgesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.EdgeLocator=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.EdgeLocator}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addIgnoredEdges = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.lnrpc.EdgeLocator, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearIgnoredEdgesList = function() {\n  this.setIgnoredEdgesList([]);\n};\n\n\n/**\n * optional string source_pub_key = 8;\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getSourcePubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setSourcePubKey = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional bool use_mission_control = 9;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getUseMissionControl = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setUseMissionControl = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * repeated NodePair ignored_pairs = 10;\n * @return {!Array.<!proto.lnrpc.NodePair>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredPairsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.NodePair>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.NodePair, 10));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.NodePair>} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setIgnoredPairsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 10, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.NodePair=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.NodePair}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addIgnoredPairs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.lnrpc.NodePair, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearIgnoredPairsList = function() {\n  this.setIgnoredPairsList([]);\n};\n\n\n/**\n * optional uint32 cltv_limit = 11;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getCltvLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setCltvLimit = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * map<uint64, bytes> dest_custom_records = 13;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!(string|Uint8Array)>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getDestCustomRecordsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 13, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearDestCustomRecordsMap = function() {\n  this.getDestCustomRecordsMap().clear();\n};\n\n\n/**\n * optional uint64 outgoing_chan_id = 14;\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getOutgoingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setOutgoingChanId = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 15;\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getLastHopPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, \"\"));\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 15;\n * This is a type-conversion wrapper around `getLastHopPubkey()`\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getLastHopPubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getLastHopPubkey()));\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 15;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getLastHopPubkey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getLastHopPubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getLastHopPubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setLastHopPubkey = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * repeated RouteHint route_hints = 16;\n * @return {!Array.<!proto.lnrpc.RouteHint>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getRouteHintsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.RouteHint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.RouteHint, 16));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.RouteHint>} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setRouteHintsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 16, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.RouteHint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addRouteHints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.lnrpc.RouteHint, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearRouteHintsList = function() {\n  this.setRouteHintsList([]);\n};\n\n\n/**\n * repeated FeatureBit dest_features = 17;\n * @return {!Array.<!proto.lnrpc.FeatureBit>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getDestFeaturesList = function() {\n  return /** @type {!Array.<!proto.lnrpc.FeatureBit>} */ (jspb.Message.getRepeatedField(this, 17));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.FeatureBit>} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setDestFeaturesList = function(value) {\n  jspb.Message.setField(this, 17, value || []);\n};\n\n\n/**\n * @param {!proto.lnrpc.FeatureBit} value\n * @param {number=} opt_index\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addDestFeatures = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 17, value, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearDestFeaturesList = function() {\n  this.setDestFeaturesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodePair = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NodePair, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodePair.displayName = 'proto.lnrpc.NodePair';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodePair.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodePair.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodePair} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodePair.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: msg.getFrom_asB64(),\n    to: msg.getTo_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodePair}\n */\nproto.lnrpc.NodePair.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodePair;\n  return proto.lnrpc.NodePair.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodePair} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodePair}\n */\nproto.lnrpc.NodePair.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodePair.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodePair.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodePair} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodePair.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getTo_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes from = 1;\n * @return {string}\n */\nproto.lnrpc.NodePair.prototype.getFrom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes from = 1;\n * This is a type-conversion wrapper around `getFrom()`\n * @return {string}\n */\nproto.lnrpc.NodePair.prototype.getFrom_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFrom()));\n};\n\n\n/**\n * optional bytes from = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFrom()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodePair.prototype.getFrom_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFrom()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.NodePair.prototype.setFrom = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes to = 2;\n * @return {string}\n */\nproto.lnrpc.NodePair.prototype.getTo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes to = 2;\n * This is a type-conversion wrapper around `getTo()`\n * @return {string}\n */\nproto.lnrpc.NodePair.prototype.getTo_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTo()));\n};\n\n\n/**\n * optional bytes to = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTo()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodePair.prototype.getTo_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTo()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.NodePair.prototype.setTo = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.EdgeLocator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.EdgeLocator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.EdgeLocator.displayName = 'proto.lnrpc.EdgeLocator';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.EdgeLocator.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.EdgeLocator.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.EdgeLocator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EdgeLocator.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    directionReverse: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.EdgeLocator}\n */\nproto.lnrpc.EdgeLocator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.EdgeLocator;\n  return proto.lnrpc.EdgeLocator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.EdgeLocator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.EdgeLocator}\n */\nproto.lnrpc.EdgeLocator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChannelId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDirectionReverse(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.EdgeLocator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.EdgeLocator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.EdgeLocator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EdgeLocator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getDirectionReverse();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 channel_id = 1;\n * @return {string}\n */\nproto.lnrpc.EdgeLocator.prototype.getChannelId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.EdgeLocator.prototype.setChannelId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool direction_reverse = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.EdgeLocator.prototype.getDirectionReverse = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.EdgeLocator.prototype.setDirectionReverse = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.QueryRoutesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.QueryRoutesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.QueryRoutesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.QueryRoutesResponse.displayName = 'proto.lnrpc.QueryRoutesResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.QueryRoutesResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.QueryRoutesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.QueryRoutesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.QueryRoutesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    routesList: jspb.Message.toObjectList(msg.getRoutesList(),\n    proto.lnrpc.Route.toObject, includeInstance),\n    successProb: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.QueryRoutesResponse}\n */\nproto.lnrpc.QueryRoutesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.QueryRoutesResponse;\n  return proto.lnrpc.QueryRoutesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.QueryRoutesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.QueryRoutesResponse}\n */\nproto.lnrpc.QueryRoutesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Route;\n      reader.readMessage(value,proto.lnrpc.Route.deserializeBinaryFromReader);\n      msg.addRoutes(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setSuccessProb(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.QueryRoutesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.QueryRoutesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.QueryRoutesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRoutesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Route.serializeBinaryToWriter\n    );\n  }\n  f = message.getSuccessProb();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated Route routes = 1;\n * @return {!Array.<!proto.lnrpc.Route>}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.getRoutesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Route>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Route, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Route>} value */\nproto.lnrpc.QueryRoutesResponse.prototype.setRoutesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Route=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Route}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.addRoutes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Route, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesResponse.prototype.clearRoutesList = function() {\n  this.setRoutesList([]);\n};\n\n\n/**\n * optional double success_prob = 2;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.getSuccessProb = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesResponse.prototype.setSuccessProb = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Hop = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Hop, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Hop.displayName = 'proto.lnrpc.Hop';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Hop.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Hop.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Hop} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Hop.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    chanCapacity: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    amtToForward: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    fee: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    expiry: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    amtToForwardMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    feeMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    pubKey: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    tlvPayload: jspb.Message.getFieldWithDefault(msg, 9, false),\n    mppRecord: (f = msg.getMppRecord()) && proto.lnrpc.MPPRecord.toObject(includeInstance, f),\n    ampRecord: (f = msg.getAmpRecord()) && proto.lnrpc.AMPRecord.toObject(includeInstance, f),\n    customRecordsMap: (f = msg.getCustomRecordsMap()) ? f.toObject(includeInstance, undefined) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Hop}\n */\nproto.lnrpc.Hop.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Hop;\n  return proto.lnrpc.Hop.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Hop} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Hop}\n */\nproto.lnrpc.Hop.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setChanCapacity(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtToForward(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFee(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setExpiry(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtToForwardMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeMsat(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setTlvPayload(value);\n      break;\n    case 10:\n      var value = new proto.lnrpc.MPPRecord;\n      reader.readMessage(value,proto.lnrpc.MPPRecord.deserializeBinaryFromReader);\n      msg.setMppRecord(value);\n      break;\n    case 12:\n      var value = new proto.lnrpc.AMPRecord;\n      reader.readMessage(value,proto.lnrpc.AMPRecord.deserializeBinaryFromReader);\n      msg.setAmpRecord(value);\n      break;\n    case 11:\n      var value = msg.getCustomRecordsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readBytes);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Hop.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Hop.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Hop} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Hop.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getChanCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getAmtToForward();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getExpiry();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getAmtToForwardMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getTlvPayload();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n  f = message.getMppRecord();\n  if (f != null) {\n    writer.writeMessage(\n      10,\n      f,\n      proto.lnrpc.MPPRecord.serializeBinaryToWriter\n    );\n  }\n  f = message.getAmpRecord();\n  if (f != null) {\n    writer.writeMessage(\n      12,\n      f,\n      proto.lnrpc.AMPRecord.serializeBinaryToWriter\n    );\n  }\n  f = message.getCustomRecordsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeBytes);\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.Hop.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Hop.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 chan_capacity = 2;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getChanCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setChanCapacity = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_to_forward = 3;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getAmtToForward = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setAmtToForward = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 fee = 4;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setFee = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 expiry = 5;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setExpiry = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 amt_to_forward_msat = 6;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getAmtToForwardMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setAmtToForwardMsat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 fee_msat = 7;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setFeeMsat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string pub_key = 8;\n * @return {string}\n */\nproto.lnrpc.Hop.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Hop.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional bool tlv_payload = 9;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Hop.prototype.getTlvPayload = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Hop.prototype.setTlvPayload = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional MPPRecord mpp_record = 10;\n * @return {?proto.lnrpc.MPPRecord}\n */\nproto.lnrpc.Hop.prototype.getMppRecord = function() {\n  return /** @type{?proto.lnrpc.MPPRecord} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.MPPRecord, 10));\n};\n\n\n/** @param {?proto.lnrpc.MPPRecord|undefined} value */\nproto.lnrpc.Hop.prototype.setMppRecord = function(value) {\n  jspb.Message.setWrapperField(this, 10, value);\n};\n\n\nproto.lnrpc.Hop.prototype.clearMppRecord = function() {\n  this.setMppRecord(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Hop.prototype.hasMppRecord = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * optional AMPRecord amp_record = 12;\n * @return {?proto.lnrpc.AMPRecord}\n */\nproto.lnrpc.Hop.prototype.getAmpRecord = function() {\n  return /** @type{?proto.lnrpc.AMPRecord} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.AMPRecord, 12));\n};\n\n\n/** @param {?proto.lnrpc.AMPRecord|undefined} value */\nproto.lnrpc.Hop.prototype.setAmpRecord = function(value) {\n  jspb.Message.setWrapperField(this, 12, value);\n};\n\n\nproto.lnrpc.Hop.prototype.clearAmpRecord = function() {\n  this.setAmpRecord(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Hop.prototype.hasAmpRecord = function() {\n  return jspb.Message.getField(this, 12) != null;\n};\n\n\n/**\n * map<uint64, bytes> custom_records = 11;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!(string|Uint8Array)>}\n */\nproto.lnrpc.Hop.prototype.getCustomRecordsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 11, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.Hop.prototype.clearCustomRecordsMap = function() {\n  this.getCustomRecordsMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.MPPRecord = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.MPPRecord, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.MPPRecord.displayName = 'proto.lnrpc.MPPRecord';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.MPPRecord.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.MPPRecord.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.MPPRecord} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MPPRecord.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentAddr: msg.getPaymentAddr_asB64(),\n    totalAmtMsat: jspb.Message.getFieldWithDefault(msg, 10, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.MPPRecord}\n */\nproto.lnrpc.MPPRecord.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.MPPRecord;\n  return proto.lnrpc.MPPRecord.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.MPPRecord} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.MPPRecord}\n */\nproto.lnrpc.MPPRecord.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 11:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentAddr(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalAmtMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.MPPRecord.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.MPPRecord.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.MPPRecord} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MPPRecord.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentAddr_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      11,\n      f\n    );\n  }\n  f = message.getTotalAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * @return {string}\n */\nproto.lnrpc.MPPRecord.prototype.getPaymentAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {string}\n */\nproto.lnrpc.MPPRecord.prototype.getPaymentAddr_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentAddr()));\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.MPPRecord.prototype.getPaymentAddr_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentAddr()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.MPPRecord.prototype.setPaymentAddr = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional int64 total_amt_msat = 10;\n * @return {number}\n */\nproto.lnrpc.MPPRecord.prototype.getTotalAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.MPPRecord.prototype.setTotalAmtMsat = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.AMPRecord = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.AMPRecord, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.AMPRecord.displayName = 'proto.lnrpc.AMPRecord';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.AMPRecord.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.AMPRecord.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.AMPRecord} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AMPRecord.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rootShare: msg.getRootShare_asB64(),\n    setId: msg.getSetId_asB64(),\n    childIndex: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.AMPRecord}\n */\nproto.lnrpc.AMPRecord.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.AMPRecord;\n  return proto.lnrpc.AMPRecord.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.AMPRecord} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.AMPRecord}\n */\nproto.lnrpc.AMPRecord.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRootShare(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSetId(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setChildIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.AMPRecord.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.AMPRecord.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.AMPRecord} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AMPRecord.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRootShare_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getSetId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getChildIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes root_share = 1;\n * @return {string}\n */\nproto.lnrpc.AMPRecord.prototype.getRootShare = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes root_share = 1;\n * This is a type-conversion wrapper around `getRootShare()`\n * @return {string}\n */\nproto.lnrpc.AMPRecord.prototype.getRootShare_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRootShare()));\n};\n\n\n/**\n * optional bytes root_share = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRootShare()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.AMPRecord.prototype.getRootShare_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRootShare()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.AMPRecord.prototype.setRootShare = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes set_id = 2;\n * @return {string}\n */\nproto.lnrpc.AMPRecord.prototype.getSetId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes set_id = 2;\n * This is a type-conversion wrapper around `getSetId()`\n * @return {string}\n */\nproto.lnrpc.AMPRecord.prototype.getSetId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSetId()));\n};\n\n\n/**\n * optional bytes set_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSetId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.AMPRecord.prototype.getSetId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSetId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.AMPRecord.prototype.setSetId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 child_index = 3;\n * @return {number}\n */\nproto.lnrpc.AMPRecord.prototype.getChildIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.AMPRecord.prototype.setChildIndex = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Route = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Route.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Route, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Route.displayName = 'proto.lnrpc.Route';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Route.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Route.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Route.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Route} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Route.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    totalTimeLock: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    totalFees: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    totalAmt: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    hopsList: jspb.Message.toObjectList(msg.getHopsList(),\n    proto.lnrpc.Hop.toObject, includeInstance),\n    totalFeesMsat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    totalAmtMsat: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Route}\n */\nproto.lnrpc.Route.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Route;\n  return proto.lnrpc.Route.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Route} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Route}\n */\nproto.lnrpc.Route.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTotalTimeLock(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalFees(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalAmt(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.Hop;\n      reader.readMessage(value,proto.lnrpc.Hop.deserializeBinaryFromReader);\n      msg.addHops(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalFeesMsat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalAmtMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Route.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Route.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Route} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Route.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTotalTimeLock();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getTotalFees();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTotalAmt();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getHopsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.lnrpc.Hop.serializeBinaryToWriter\n    );\n  }\n  f = message.getTotalFeesMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getTotalAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 total_time_lock = 1;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalTimeLock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalTimeLock = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 total_fees = 2;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalFees = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalFees = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 total_amt = 3;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalAmt = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * repeated Hop hops = 4;\n * @return {!Array.<!proto.lnrpc.Hop>}\n */\nproto.lnrpc.Route.prototype.getHopsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Hop>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Hop, 4));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Hop>} value */\nproto.lnrpc.Route.prototype.setHopsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Hop=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Hop}\n */\nproto.lnrpc.Route.prototype.addHops = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.lnrpc.Hop, opt_index);\n};\n\n\nproto.lnrpc.Route.prototype.clearHopsList = function() {\n  this.setHopsList([]);\n};\n\n\n/**\n * optional int64 total_fees_msat = 5;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalFeesMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalFeesMsat = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 total_amt_msat = 6;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalAmtMsat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NodeInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeInfoRequest.displayName = 'proto.lnrpc.NodeInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    includeChannels: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeInfoRequest}\n */\nproto.lnrpc.NodeInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeInfoRequest;\n  return proto.lnrpc.NodeInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeInfoRequest}\n */\nproto.lnrpc.NodeInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getIncludeChannels();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.NodeInfoRequest.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeInfoRequest.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool include_channels = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.NodeInfoRequest.prototype.getIncludeChannels = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.NodeInfoRequest.prototype.setIncludeChannels = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.NodeInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.NodeInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeInfo.displayName = 'proto.lnrpc.NodeInfo';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.NodeInfo.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    node: (f = msg.getNode()) && proto.lnrpc.LightningNode.toObject(includeInstance, f),\n    numChannels: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    totalCapacity: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),\n    proto.lnrpc.ChannelEdge.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeInfo}\n */\nproto.lnrpc.NodeInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeInfo;\n  return proto.lnrpc.NodeInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeInfo}\n */\nproto.lnrpc.NodeInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.LightningNode;\n      reader.readMessage(value,proto.lnrpc.LightningNode.deserializeBinaryFromReader);\n      msg.setNode(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumChannels(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalCapacity(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.ChannelEdge;\n      reader.readMessage(value,proto.lnrpc.ChannelEdge.deserializeBinaryFromReader);\n      msg.addChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNode();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.LightningNode.serializeBinaryToWriter\n    );\n  }\n  f = message.getNumChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getTotalCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.lnrpc.ChannelEdge.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional LightningNode node = 1;\n * @return {?proto.lnrpc.LightningNode}\n */\nproto.lnrpc.NodeInfo.prototype.getNode = function() {\n  return /** @type{?proto.lnrpc.LightningNode} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.LightningNode, 1));\n};\n\n\n/** @param {?proto.lnrpc.LightningNode|undefined} value */\nproto.lnrpc.NodeInfo.prototype.setNode = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.NodeInfo.prototype.clearNode = function() {\n  this.setNode(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.NodeInfo.prototype.hasNode = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 num_channels = 2;\n * @return {number}\n */\nproto.lnrpc.NodeInfo.prototype.getNumChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NodeInfo.prototype.setNumChannels = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 total_capacity = 3;\n * @return {number}\n */\nproto.lnrpc.NodeInfo.prototype.getTotalCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NodeInfo.prototype.setTotalCapacity = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * repeated ChannelEdge channels = 4;\n * @return {!Array.<!proto.lnrpc.ChannelEdge>}\n */\nproto.lnrpc.NodeInfo.prototype.getChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelEdge>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelEdge, 4));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelEdge>} value */\nproto.lnrpc.NodeInfo.prototype.setChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelEdge=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelEdge}\n */\nproto.lnrpc.NodeInfo.prototype.addChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.lnrpc.ChannelEdge, opt_index);\n};\n\n\nproto.lnrpc.NodeInfo.prototype.clearChannelsList = function() {\n  this.setChannelsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.LightningNode = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.LightningNode.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.LightningNode, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.LightningNode.displayName = 'proto.lnrpc.LightningNode';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.LightningNode.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.LightningNode.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.LightningNode.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.LightningNode} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.LightningNode.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    lastUpdate: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    pubKey: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    alias: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    addressesList: jspb.Message.toObjectList(msg.getAddressesList(),\n    proto.lnrpc.NodeAddress.toObject, includeInstance),\n    color: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.LightningNode}\n */\nproto.lnrpc.LightningNode.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.LightningNode;\n  return proto.lnrpc.LightningNode.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.LightningNode} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.LightningNode}\n */\nproto.lnrpc.LightningNode.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLastUpdate(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.NodeAddress;\n      reader.readMessage(value,proto.lnrpc.NodeAddress.deserializeBinaryFromReader);\n      msg.addAddresses(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setColor(value);\n      break;\n    case 6:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.LightningNode.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.LightningNode.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.LightningNode} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.LightningNode.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLastUpdate();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getAddressesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.lnrpc.NodeAddress.serializeBinaryToWriter\n    );\n  }\n  f = message.getColor();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * optional uint32 last_update = 1;\n * @return {number}\n */\nproto.lnrpc.LightningNode.prototype.getLastUpdate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.LightningNode.prototype.setLastUpdate = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string pub_key = 2;\n * @return {string}\n */\nproto.lnrpc.LightningNode.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningNode.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string alias = 3;\n * @return {string}\n */\nproto.lnrpc.LightningNode.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningNode.prototype.setAlias = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * repeated NodeAddress addresses = 4;\n * @return {!Array.<!proto.lnrpc.NodeAddress>}\n */\nproto.lnrpc.LightningNode.prototype.getAddressesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.NodeAddress>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.NodeAddress, 4));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.NodeAddress>} value */\nproto.lnrpc.LightningNode.prototype.setAddressesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.NodeAddress=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.NodeAddress}\n */\nproto.lnrpc.LightningNode.prototype.addAddresses = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.lnrpc.NodeAddress, opt_index);\n};\n\n\nproto.lnrpc.LightningNode.prototype.clearAddressesList = function() {\n  this.setAddressesList([]);\n};\n\n\n/**\n * optional string color = 5;\n * @return {string}\n */\nproto.lnrpc.LightningNode.prototype.getColor = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningNode.prototype.setColor = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * map<uint32, Feature> features = 6;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.LightningNode.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 6, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.LightningNode.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NodeAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeAddress.displayName = 'proto.lnrpc.NodeAddress';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    network: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    addr: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeAddress}\n */\nproto.lnrpc.NodeAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeAddress;\n  return proto.lnrpc.NodeAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeAddress}\n */\nproto.lnrpc.NodeAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNetwork(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddr(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNetwork();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string network = 1;\n * @return {string}\n */\nproto.lnrpc.NodeAddress.prototype.getNetwork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeAddress.prototype.setNetwork = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string addr = 2;\n * @return {string}\n */\nproto.lnrpc.NodeAddress.prototype.getAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeAddress.prototype.setAddr = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RoutingPolicy = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.RoutingPolicy, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RoutingPolicy.displayName = 'proto.lnrpc.RoutingPolicy';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RoutingPolicy.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RoutingPolicy.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RoutingPolicy} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RoutingPolicy.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    timeLockDelta: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    minHtlc: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    feeBaseMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    feeRateMilliMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    disabled: jspb.Message.getFieldWithDefault(msg, 5, false),\n    maxHtlcMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    lastUpdate: jspb.Message.getFieldWithDefault(msg, 7, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.RoutingPolicy.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RoutingPolicy;\n  return proto.lnrpc.RoutingPolicy.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RoutingPolicy} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.RoutingPolicy.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTimeLockDelta(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMinHtlc(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeBaseMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeRateMilliMsat(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDisabled(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxHtlcMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLastUpdate(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RoutingPolicy.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RoutingPolicy.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RoutingPolicy} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RoutingPolicy.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTimeLockDelta();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getMinHtlc();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getFeeBaseMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFeeRateMilliMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getDisabled();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getMaxHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getLastUpdate();\n  if (f !== 0) {\n    writer.writeUint32(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 time_lock_delta = 1;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getTimeLockDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setTimeLockDelta = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 min_htlc = 2;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getMinHtlc = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setMinHtlc = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 fee_base_msat = 3;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getFeeBaseMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setFeeBaseMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 fee_rate_milli_msat = 4;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getFeeRateMilliMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setFeeRateMilliMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bool disabled = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.RoutingPolicy.prototype.getDisabled = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.RoutingPolicy.prototype.setDisabled = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 max_htlc_msat = 6;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getMaxHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setMaxHtlcMsat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint32 last_update = 7;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getLastUpdate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setLastUpdate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelEdge = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelEdge, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelEdge.displayName = 'proto.lnrpc.ChannelEdge';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelEdge.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelEdge.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelEdge} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEdge.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    chanPoint: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    lastUpdate: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    node1Pub: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    node2Pub: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    node1Policy: (f = msg.getNode1Policy()) && proto.lnrpc.RoutingPolicy.toObject(includeInstance, f),\n    node2Policy: (f = msg.getNode2Policy()) && proto.lnrpc.RoutingPolicy.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelEdge}\n */\nproto.lnrpc.ChannelEdge.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelEdge;\n  return proto.lnrpc.ChannelEdge.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelEdge} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelEdge}\n */\nproto.lnrpc.ChannelEdge.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChannelId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChanPoint(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLastUpdate(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNode1Pub(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNode2Pub(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 7:\n      var value = new proto.lnrpc.RoutingPolicy;\n      reader.readMessage(value,proto.lnrpc.RoutingPolicy.deserializeBinaryFromReader);\n      msg.setNode1Policy(value);\n      break;\n    case 8:\n      var value = new proto.lnrpc.RoutingPolicy;\n      reader.readMessage(value,proto.lnrpc.RoutingPolicy.deserializeBinaryFromReader);\n      msg.setNode2Policy(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelEdge.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelEdge.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelEdge} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEdge.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getLastUpdate();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getNode1Pub();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getNode2Pub();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getNode1Policy();\n  if (f != null) {\n    writer.writeMessage(\n      7,\n      f,\n      proto.lnrpc.RoutingPolicy.serializeBinaryToWriter\n    );\n  }\n  f = message.getNode2Policy();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.lnrpc.RoutingPolicy.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 channel_id = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelEdge.prototype.getChannelId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdge.prototype.setChannelId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string chan_point = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelEdge.prototype.getChanPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdge.prototype.setChanPoint = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 last_update = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelEdge.prototype.getLastUpdate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelEdge.prototype.setLastUpdate = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string node1_pub = 4;\n * @return {string}\n */\nproto.lnrpc.ChannelEdge.prototype.getNode1Pub = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdge.prototype.setNode1Pub = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string node2_pub = 5;\n * @return {string}\n */\nproto.lnrpc.ChannelEdge.prototype.getNode2Pub = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdge.prototype.setNode2Pub = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 capacity = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelEdge.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelEdge.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional RoutingPolicy node1_policy = 7;\n * @return {?proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.ChannelEdge.prototype.getNode1Policy = function() {\n  return /** @type{?proto.lnrpc.RoutingPolicy} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.RoutingPolicy, 7));\n};\n\n\n/** @param {?proto.lnrpc.RoutingPolicy|undefined} value */\nproto.lnrpc.ChannelEdge.prototype.setNode1Policy = function(value) {\n  jspb.Message.setWrapperField(this, 7, value);\n};\n\n\nproto.lnrpc.ChannelEdge.prototype.clearNode1Policy = function() {\n  this.setNode1Policy(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEdge.prototype.hasNode1Policy = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional RoutingPolicy node2_policy = 8;\n * @return {?proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.ChannelEdge.prototype.getNode2Policy = function() {\n  return /** @type{?proto.lnrpc.RoutingPolicy} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.RoutingPolicy, 8));\n};\n\n\n/** @param {?proto.lnrpc.RoutingPolicy|undefined} value */\nproto.lnrpc.ChannelEdge.prototype.setNode2Policy = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.lnrpc.ChannelEdge.prototype.clearNode2Policy = function() {\n  this.setNode2Policy(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEdge.prototype.hasNode2Policy = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelGraphRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelGraphRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelGraphRequest.displayName = 'proto.lnrpc.ChannelGraphRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelGraphRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelGraphRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelGraphRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelGraphRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    includeUnannounced: jspb.Message.getFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelGraphRequest}\n */\nproto.lnrpc.ChannelGraphRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelGraphRequest;\n  return proto.lnrpc.ChannelGraphRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelGraphRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelGraphRequest}\n */\nproto.lnrpc.ChannelGraphRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeUnannounced(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelGraphRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelGraphRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelGraphRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelGraphRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIncludeUnannounced();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool include_unannounced = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ChannelGraphRequest.prototype.getIncludeUnannounced = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ChannelGraphRequest.prototype.setIncludeUnannounced = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelGraph = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ChannelGraph.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ChannelGraph, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelGraph.displayName = 'proto.lnrpc.ChannelGraph';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ChannelGraph.repeatedFields_ = [1,2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelGraph.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelGraph.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelGraph} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelGraph.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodesList: jspb.Message.toObjectList(msg.getNodesList(),\n    proto.lnrpc.LightningNode.toObject, includeInstance),\n    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),\n    proto.lnrpc.ChannelEdge.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelGraph}\n */\nproto.lnrpc.ChannelGraph.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelGraph;\n  return proto.lnrpc.ChannelGraph.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelGraph} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelGraph}\n */\nproto.lnrpc.ChannelGraph.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.LightningNode;\n      reader.readMessage(value,proto.lnrpc.LightningNode.deserializeBinaryFromReader);\n      msg.addNodes(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelEdge;\n      reader.readMessage(value,proto.lnrpc.ChannelEdge.deserializeBinaryFromReader);\n      msg.addEdges(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelGraph.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelGraph.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelGraph} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelGraph.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.LightningNode.serializeBinaryToWriter\n    );\n  }\n  f = message.getEdgesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelEdge.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated LightningNode nodes = 1;\n * @return {!Array.<!proto.lnrpc.LightningNode>}\n */\nproto.lnrpc.ChannelGraph.prototype.getNodesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.LightningNode>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.LightningNode, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.LightningNode>} value */\nproto.lnrpc.ChannelGraph.prototype.setNodesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.LightningNode=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.LightningNode}\n */\nproto.lnrpc.ChannelGraph.prototype.addNodes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.LightningNode, opt_index);\n};\n\n\nproto.lnrpc.ChannelGraph.prototype.clearNodesList = function() {\n  this.setNodesList([]);\n};\n\n\n/**\n * repeated ChannelEdge edges = 2;\n * @return {!Array.<!proto.lnrpc.ChannelEdge>}\n */\nproto.lnrpc.ChannelGraph.prototype.getEdgesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelEdge>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelEdge, 2));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelEdge>} value */\nproto.lnrpc.ChannelGraph.prototype.setEdgesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelEdge=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelEdge}\n */\nproto.lnrpc.ChannelGraph.prototype.addEdges = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.lnrpc.ChannelEdge, opt_index);\n};\n\n\nproto.lnrpc.ChannelGraph.prototype.clearEdgesList = function() {\n  this.setEdgesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeMetricsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.NodeMetricsRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.NodeMetricsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeMetricsRequest.displayName = 'proto.lnrpc.NodeMetricsRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.NodeMetricsRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeMetricsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeMetricsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeMetricsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeMetricsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    typesList: jspb.Message.getRepeatedField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeMetricsRequest}\n */\nproto.lnrpc.NodeMetricsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeMetricsRequest;\n  return proto.lnrpc.NodeMetricsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeMetricsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeMetricsRequest}\n */\nproto.lnrpc.NodeMetricsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Array.<!proto.lnrpc.NodeMetricType>} */ (reader.readPackedEnum());\n      msg.setTypesList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeMetricsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeMetricsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeMetricsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeMetricsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTypesList();\n  if (f.length > 0) {\n    writer.writePackedEnum(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated NodeMetricType types = 1;\n * @return {!Array.<!proto.lnrpc.NodeMetricType>}\n */\nproto.lnrpc.NodeMetricsRequest.prototype.getTypesList = function() {\n  return /** @type {!Array.<!proto.lnrpc.NodeMetricType>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.NodeMetricType>} value */\nproto.lnrpc.NodeMetricsRequest.prototype.setTypesList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!proto.lnrpc.NodeMetricType} value\n * @param {number=} opt_index\n */\nproto.lnrpc.NodeMetricsRequest.prototype.addTypes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.lnrpc.NodeMetricsRequest.prototype.clearTypesList = function() {\n  this.setTypesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeMetricsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NodeMetricsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeMetricsResponse.displayName = 'proto.lnrpc.NodeMetricsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeMetricsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeMetricsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeMetricsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeMetricsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    betweennessCentralityMap: (f = msg.getBetweennessCentralityMap()) ? f.toObject(includeInstance, proto.lnrpc.FloatMetric.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeMetricsResponse}\n */\nproto.lnrpc.NodeMetricsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeMetricsResponse;\n  return proto.lnrpc.NodeMetricsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeMetricsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeMetricsResponse}\n */\nproto.lnrpc.NodeMetricsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = msg.getBetweennessCentralityMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.FloatMetric.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeMetricsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeMetricsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeMetricsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeMetricsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBetweennessCentralityMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.FloatMetric.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * map<string, FloatMetric> betweenness_centrality = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!proto.lnrpc.FloatMetric>}\n */\nproto.lnrpc.NodeMetricsResponse.prototype.getBetweennessCentralityMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!proto.lnrpc.FloatMetric>} */ (\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\n      proto.lnrpc.FloatMetric));\n};\n\n\nproto.lnrpc.NodeMetricsResponse.prototype.clearBetweennessCentralityMap = function() {\n  this.getBetweennessCentralityMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FloatMetric = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FloatMetric, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FloatMetric.displayName = 'proto.lnrpc.FloatMetric';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FloatMetric.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FloatMetric.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FloatMetric} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FloatMetric.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),\n    normalizedValue: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FloatMetric}\n */\nproto.lnrpc.FloatMetric.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FloatMetric;\n  return proto.lnrpc.FloatMetric.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FloatMetric} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FloatMetric}\n */\nproto.lnrpc.FloatMetric.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setValue(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setNormalizedValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FloatMetric.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FloatMetric.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FloatMetric} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FloatMetric.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      1,\n      f\n    );\n  }\n  f = message.getNormalizedValue();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional double value = 1;\n * @return {number}\n */\nproto.lnrpc.FloatMetric.prototype.getValue = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FloatMetric.prototype.setValue = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional double normalized_value = 2;\n * @return {number}\n */\nproto.lnrpc.FloatMetric.prototype.getNormalizedValue = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FloatMetric.prototype.setNormalizedValue = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChanInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChanInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChanInfoRequest.displayName = 'proto.lnrpc.ChanInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChanInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChanInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChanInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChanInfoRequest}\n */\nproto.lnrpc.ChanInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChanInfoRequest;\n  return proto.lnrpc.ChanInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChanInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChanInfoRequest}\n */\nproto.lnrpc.ChanInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChanInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChanInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.ChanInfoRequest.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChanInfoRequest.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NetworkInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NetworkInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NetworkInfoRequest.displayName = 'proto.lnrpc.NetworkInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NetworkInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NetworkInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NetworkInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NetworkInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NetworkInfoRequest}\n */\nproto.lnrpc.NetworkInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NetworkInfoRequest;\n  return proto.lnrpc.NetworkInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NetworkInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NetworkInfoRequest}\n */\nproto.lnrpc.NetworkInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NetworkInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NetworkInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NetworkInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NetworkInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NetworkInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NetworkInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NetworkInfo.displayName = 'proto.lnrpc.NetworkInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NetworkInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NetworkInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NetworkInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NetworkInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    graphDiameter: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    avgOutDegree: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),\n    maxOutDegree: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    numNodes: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    numChannels: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    totalNetworkCapacity: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    avgChannelSize: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),\n    minChannelSize: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    maxChannelSize: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    medianChannelSizeSat: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    numZombieChans: jspb.Message.getFieldWithDefault(msg, 11, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NetworkInfo}\n */\nproto.lnrpc.NetworkInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NetworkInfo;\n  return proto.lnrpc.NetworkInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NetworkInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NetworkInfo}\n */\nproto.lnrpc.NetworkInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setGraphDiameter(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setAvgOutDegree(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaxOutDegree(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumNodes(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumChannels(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalNetworkCapacity(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setAvgChannelSize(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMinChannelSize(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMaxChannelSize(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMedianChannelSizeSat(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNumZombieChans(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NetworkInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NetworkInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NetworkInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NetworkInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getGraphDiameter();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getAvgOutDegree();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      2,\n      f\n    );\n  }\n  f = message.getMaxOutDegree();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getNumNodes();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getNumChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getTotalNetworkCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getAvgChannelSize();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      7,\n      f\n    );\n  }\n  f = message.getMinChannelSize();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getMaxChannelSize();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getMedianChannelSizeSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n  f = message.getNumZombieChans();\n  if (f !== 0) {\n    writer.writeUint64(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 graph_diameter = 1;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getGraphDiameter = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setGraphDiameter = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional double avg_out_degree = 2;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getAvgOutDegree = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setAvgOutDegree = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 max_out_degree = 3;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getMaxOutDegree = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setMaxOutDegree = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 num_nodes = 4;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getNumNodes = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setNumNodes = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 num_channels = 5;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getNumChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setNumChannels = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 total_network_capacity = 6;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getTotalNetworkCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setTotalNetworkCapacity = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional double avg_channel_size = 7;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getAvgChannelSize = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setAvgChannelSize = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 min_channel_size = 8;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getMinChannelSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setMinChannelSize = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 max_channel_size = 9;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getMaxChannelSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setMaxChannelSize = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional int64 median_channel_size_sat = 10;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getMedianChannelSizeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setMedianChannelSizeSat = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional uint64 num_zombie_chans = 11;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getNumZombieChans = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setNumZombieChans = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.StopRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.StopRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.StopRequest.displayName = 'proto.lnrpc.StopRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.StopRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.StopRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.StopRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.StopRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.StopRequest}\n */\nproto.lnrpc.StopRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.StopRequest;\n  return proto.lnrpc.StopRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.StopRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.StopRequest}\n */\nproto.lnrpc.StopRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.StopRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.StopRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.StopRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.StopRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.StopResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.StopResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.StopResponse.displayName = 'proto.lnrpc.StopResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.StopResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.StopResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.StopResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.StopResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.StopResponse}\n */\nproto.lnrpc.StopResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.StopResponse;\n  return proto.lnrpc.StopResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.StopResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.StopResponse}\n */\nproto.lnrpc.StopResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.StopResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.StopResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.StopResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.StopResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GraphTopologySubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GraphTopologySubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GraphTopologySubscription.displayName = 'proto.lnrpc.GraphTopologySubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GraphTopologySubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GraphTopologySubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GraphTopologySubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GraphTopologySubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GraphTopologySubscription}\n */\nproto.lnrpc.GraphTopologySubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GraphTopologySubscription;\n  return proto.lnrpc.GraphTopologySubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GraphTopologySubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GraphTopologySubscription}\n */\nproto.lnrpc.GraphTopologySubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GraphTopologySubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GraphTopologySubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GraphTopologySubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GraphTopologySubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GraphTopologyUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.GraphTopologyUpdate.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.GraphTopologyUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GraphTopologyUpdate.displayName = 'proto.lnrpc.GraphTopologyUpdate';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.GraphTopologyUpdate.repeatedFields_ = [1,2,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GraphTopologyUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GraphTopologyUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GraphTopologyUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodeUpdatesList: jspb.Message.toObjectList(msg.getNodeUpdatesList(),\n    proto.lnrpc.NodeUpdate.toObject, includeInstance),\n    channelUpdatesList: jspb.Message.toObjectList(msg.getChannelUpdatesList(),\n    proto.lnrpc.ChannelEdgeUpdate.toObject, includeInstance),\n    closedChansList: jspb.Message.toObjectList(msg.getClosedChansList(),\n    proto.lnrpc.ClosedChannelUpdate.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GraphTopologyUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GraphTopologyUpdate;\n  return proto.lnrpc.GraphTopologyUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GraphTopologyUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GraphTopologyUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.NodeUpdate;\n      reader.readMessage(value,proto.lnrpc.NodeUpdate.deserializeBinaryFromReader);\n      msg.addNodeUpdates(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelEdgeUpdate;\n      reader.readMessage(value,proto.lnrpc.ChannelEdgeUpdate.deserializeBinaryFromReader);\n      msg.addChannelUpdates(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ClosedChannelUpdate;\n      reader.readMessage(value,proto.lnrpc.ClosedChannelUpdate.deserializeBinaryFromReader);\n      msg.addClosedChans(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GraphTopologyUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GraphTopologyUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GraphTopologyUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodeUpdatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.NodeUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getChannelUpdatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelEdgeUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getClosedChansList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.lnrpc.ClosedChannelUpdate.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated NodeUpdate node_updates = 1;\n * @return {!Array.<!proto.lnrpc.NodeUpdate>}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.getNodeUpdatesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.NodeUpdate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.NodeUpdate, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.NodeUpdate>} value */\nproto.lnrpc.GraphTopologyUpdate.prototype.setNodeUpdatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.NodeUpdate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.NodeUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.addNodeUpdates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.NodeUpdate, opt_index);\n};\n\n\nproto.lnrpc.GraphTopologyUpdate.prototype.clearNodeUpdatesList = function() {\n  this.setNodeUpdatesList([]);\n};\n\n\n/**\n * repeated ChannelEdgeUpdate channel_updates = 2;\n * @return {!Array.<!proto.lnrpc.ChannelEdgeUpdate>}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.getChannelUpdatesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelEdgeUpdate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelEdgeUpdate, 2));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelEdgeUpdate>} value */\nproto.lnrpc.GraphTopologyUpdate.prototype.setChannelUpdatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelEdgeUpdate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelEdgeUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.addChannelUpdates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.lnrpc.ChannelEdgeUpdate, opt_index);\n};\n\n\nproto.lnrpc.GraphTopologyUpdate.prototype.clearChannelUpdatesList = function() {\n  this.setChannelUpdatesList([]);\n};\n\n\n/**\n * repeated ClosedChannelUpdate closed_chans = 3;\n * @return {!Array.<!proto.lnrpc.ClosedChannelUpdate>}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.getClosedChansList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ClosedChannelUpdate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ClosedChannelUpdate, 3));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ClosedChannelUpdate>} value */\nproto.lnrpc.GraphTopologyUpdate.prototype.setClosedChansList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ClosedChannelUpdate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ClosedChannelUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.addClosedChans = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.lnrpc.ClosedChannelUpdate, opt_index);\n};\n\n\nproto.lnrpc.GraphTopologyUpdate.prototype.clearClosedChansList = function() {\n  this.setClosedChansList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.NodeUpdate.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.NodeUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeUpdate.displayName = 'proto.lnrpc.NodeUpdate';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.NodeUpdate.repeatedFields_ = [1,7];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressesList: jspb.Message.getRepeatedField(msg, 1),\n    identityKey: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    globalFeatures: msg.getGlobalFeatures_asB64(),\n    alias: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    color: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    nodeAddressesList: jspb.Message.toObjectList(msg.getNodeAddressesList(),\n    proto.lnrpc.NodeAddress.toObject, includeInstance),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeUpdate}\n */\nproto.lnrpc.NodeUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeUpdate;\n  return proto.lnrpc.NodeUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeUpdate}\n */\nproto.lnrpc.NodeUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addAddresses(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIdentityKey(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setGlobalFeatures(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setColor(value);\n      break;\n    case 7:\n      var value = new proto.lnrpc.NodeAddress;\n      reader.readMessage(value,proto.lnrpc.NodeAddress.deserializeBinaryFromReader);\n      msg.addNodeAddresses(value);\n      break;\n    case 6:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n  f = message.getIdentityKey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getGlobalFeatures_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getColor();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getNodeAddressesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      proto.lnrpc.NodeAddress.serializeBinaryToWriter\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * repeated string addresses = 1;\n * @return {!Array.<string>}\n */\nproto.lnrpc.NodeUpdate.prototype.getAddressesList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array.<string>} value */\nproto.lnrpc.NodeUpdate.prototype.setAddressesList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.lnrpc.NodeUpdate.prototype.addAddresses = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.lnrpc.NodeUpdate.prototype.clearAddressesList = function() {\n  this.setAddressesList([]);\n};\n\n\n/**\n * optional string identity_key = 2;\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getIdentityKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeUpdate.prototype.setIdentityKey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bytes global_features = 3;\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getGlobalFeatures = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes global_features = 3;\n * This is a type-conversion wrapper around `getGlobalFeatures()`\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getGlobalFeatures_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getGlobalFeatures()));\n};\n\n\n/**\n * optional bytes global_features = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getGlobalFeatures()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeUpdate.prototype.getGlobalFeatures_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getGlobalFeatures()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.NodeUpdate.prototype.setGlobalFeatures = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string alias = 4;\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeUpdate.prototype.setAlias = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string color = 5;\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getColor = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeUpdate.prototype.setColor = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * repeated NodeAddress node_addresses = 7;\n * @return {!Array.<!proto.lnrpc.NodeAddress>}\n */\nproto.lnrpc.NodeUpdate.prototype.getNodeAddressesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.NodeAddress>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.NodeAddress, 7));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.NodeAddress>} value */\nproto.lnrpc.NodeUpdate.prototype.setNodeAddressesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.NodeAddress=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.NodeAddress}\n */\nproto.lnrpc.NodeUpdate.prototype.addNodeAddresses = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.lnrpc.NodeAddress, opt_index);\n};\n\n\nproto.lnrpc.NodeUpdate.prototype.clearNodeAddressesList = function() {\n  this.setNodeAddressesList([]);\n};\n\n\n/**\n * map<uint32, Feature> features = 6;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.NodeUpdate.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 6, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.NodeUpdate.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelEdgeUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelEdgeUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelEdgeUpdate.displayName = 'proto.lnrpc.ChannelEdgeUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelEdgeUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelEdgeUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEdgeUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    capacity: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    routingPolicy: (f = msg.getRoutingPolicy()) && proto.lnrpc.RoutingPolicy.toObject(includeInstance, f),\n    advertisingNode: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    connectingNode: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelEdgeUpdate}\n */\nproto.lnrpc.ChannelEdgeUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelEdgeUpdate;\n  return proto.lnrpc.ChannelEdgeUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelEdgeUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelEdgeUpdate}\n */\nproto.lnrpc.ChannelEdgeUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.RoutingPolicy;\n      reader.readMessage(value,proto.lnrpc.RoutingPolicy.deserializeBinaryFromReader);\n      msg.setRoutingPolicy(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAdvertisingNode(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setConnectingNode(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelEdgeUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelEdgeUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEdgeUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getRoutingPolicy();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.RoutingPolicy.serializeBinaryToWriter\n    );\n  }\n  f = message.getAdvertisingNode();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getConnectingNode();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional ChannelPoint chan_point = 2;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 2));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.ChannelEdgeUpdate.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 capacity = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional RoutingPolicy routing_policy = 4;\n * @return {?proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getRoutingPolicy = function() {\n  return /** @type{?proto.lnrpc.RoutingPolicy} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.RoutingPolicy, 4));\n};\n\n\n/** @param {?proto.lnrpc.RoutingPolicy|undefined} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setRoutingPolicy = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.lnrpc.ChannelEdgeUpdate.prototype.clearRoutingPolicy = function() {\n  this.setRoutingPolicy(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.hasRoutingPolicy = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional string advertising_node = 5;\n * @return {string}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getAdvertisingNode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setAdvertisingNode = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string connecting_node = 6;\n * @return {string}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getConnectingNode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setConnectingNode = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ClosedChannelUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ClosedChannelUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ClosedChannelUpdate.displayName = 'proto.lnrpc.ClosedChannelUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ClosedChannelUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ClosedChannelUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    closedHeight: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ClosedChannelUpdate}\n */\nproto.lnrpc.ClosedChannelUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ClosedChannelUpdate;\n  return proto.lnrpc.ClosedChannelUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ClosedChannelUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ClosedChannelUpdate}\n */\nproto.lnrpc.ClosedChannelUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setClosedHeight(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ClosedChannelUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ClosedChannelUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getClosedHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ClosedChannelUpdate.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 capacity = 2;\n * @return {number}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ClosedChannelUpdate.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 closed_height = 3;\n * @return {number}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.getClosedHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ClosedChannelUpdate.prototype.setClosedHeight = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional ChannelPoint chan_point = 4;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 4));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ClosedChannelUpdate.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.lnrpc.ClosedChannelUpdate.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.HopHint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.HopHint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.HopHint.displayName = 'proto.lnrpc.HopHint';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.HopHint.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.HopHint.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.HopHint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HopHint.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodeId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    chanId: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\n    feeBaseMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    feeProportionalMillionths: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    cltvExpiryDelta: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.HopHint}\n */\nproto.lnrpc.HopHint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.HopHint;\n  return proto.lnrpc.HopHint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.HopHint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.HopHint}\n */\nproto.lnrpc.HopHint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodeId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFeeBaseMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFeeProportionalMillionths(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCltvExpiryDelta(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.HopHint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.HopHint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.HopHint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HopHint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodeId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      2,\n      f\n    );\n  }\n  f = message.getFeeBaseMsat();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getFeeProportionalMillionths();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getCltvExpiryDelta();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string node_id = 1;\n * @return {string}\n */\nproto.lnrpc.HopHint.prototype.getNodeId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.HopHint.prototype.setNodeId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.HopHint.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.HopHint.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 fee_base_msat = 3;\n * @return {number}\n */\nproto.lnrpc.HopHint.prototype.getFeeBaseMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HopHint.prototype.setFeeBaseMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 fee_proportional_millionths = 4;\n * @return {number}\n */\nproto.lnrpc.HopHint.prototype.getFeeProportionalMillionths = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HopHint.prototype.setFeeProportionalMillionths = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 cltv_expiry_delta = 5;\n * @return {number}\n */\nproto.lnrpc.HopHint.prototype.getCltvExpiryDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HopHint.prototype.setCltvExpiryDelta = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RouteHint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.RouteHint.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.RouteHint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RouteHint.displayName = 'proto.lnrpc.RouteHint';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.RouteHint.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RouteHint.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RouteHint.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RouteHint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RouteHint.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hopHintsList: jspb.Message.toObjectList(msg.getHopHintsList(),\n    proto.lnrpc.HopHint.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.RouteHint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RouteHint;\n  return proto.lnrpc.RouteHint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RouteHint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.RouteHint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.HopHint;\n      reader.readMessage(value,proto.lnrpc.HopHint.deserializeBinaryFromReader);\n      msg.addHopHints(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RouteHint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RouteHint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RouteHint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RouteHint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHopHintsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.HopHint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated HopHint hop_hints = 1;\n * @return {!Array.<!proto.lnrpc.HopHint>}\n */\nproto.lnrpc.RouteHint.prototype.getHopHintsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.HopHint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.HopHint, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.HopHint>} value */\nproto.lnrpc.RouteHint.prototype.setHopHintsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.HopHint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.HopHint}\n */\nproto.lnrpc.RouteHint.prototype.addHopHints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.HopHint, opt_index);\n};\n\n\nproto.lnrpc.RouteHint.prototype.clearHopHintsList = function() {\n  this.setHopHintsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Invoice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Invoice.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Invoice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Invoice.displayName = 'proto.lnrpc.Invoice';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Invoice.repeatedFields_ = [14,22];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Invoice.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Invoice.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Invoice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Invoice.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    memo: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    rPreimage: msg.getRPreimage_asB64(),\n    rHash: msg.getRHash_asB64(),\n    value: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    valueMsat: jspb.Message.getFieldWithDefault(msg, 23, 0),\n    settled: jspb.Message.getFieldWithDefault(msg, 6, false),\n    creationDate: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    settleDate: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    paymentRequest: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    descriptionHash: msg.getDescriptionHash_asB64(),\n    expiry: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    fallbackAddr: jspb.Message.getFieldWithDefault(msg, 12, \"\"),\n    cltvExpiry: jspb.Message.getFieldWithDefault(msg, 13, 0),\n    routeHintsList: jspb.Message.toObjectList(msg.getRouteHintsList(),\n    proto.lnrpc.RouteHint.toObject, includeInstance),\n    pb_private: jspb.Message.getFieldWithDefault(msg, 15, false),\n    addIndex: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    settleIndex: jspb.Message.getFieldWithDefault(msg, 17, 0),\n    amtPaid: jspb.Message.getFieldWithDefault(msg, 18, 0),\n    amtPaidSat: jspb.Message.getFieldWithDefault(msg, 19, 0),\n    amtPaidMsat: jspb.Message.getFieldWithDefault(msg, 20, 0),\n    state: jspb.Message.getFieldWithDefault(msg, 21, 0),\n    htlcsList: jspb.Message.toObjectList(msg.getHtlcsList(),\n    proto.lnrpc.InvoiceHTLC.toObject, includeInstance),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : [],\n    isKeysend: jspb.Message.getFieldWithDefault(msg, 25, false),\n    paymentAddr: msg.getPaymentAddr_asB64(),\n    isAmp: jspb.Message.getFieldWithDefault(msg, 27, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Invoice}\n */\nproto.lnrpc.Invoice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Invoice;\n  return proto.lnrpc.Invoice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Invoice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Invoice}\n */\nproto.lnrpc.Invoice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMemo(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRPreimage(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRHash(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValue(value);\n      break;\n    case 23:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValueMsat(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSettled(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreationDate(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSettleDate(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentRequest(value);\n      break;\n    case 10:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDescriptionHash(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpiry(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFallbackAddr(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setCltvExpiry(value);\n      break;\n    case 14:\n      var value = new proto.lnrpc.RouteHint;\n      reader.readMessage(value,proto.lnrpc.RouteHint.deserializeBinaryFromReader);\n      msg.addRouteHints(value);\n      break;\n    case 15:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivate(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAddIndex(value);\n      break;\n    case 17:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSettleIndex(value);\n      break;\n    case 18:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtPaid(value);\n      break;\n    case 19:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtPaidSat(value);\n      break;\n    case 20:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtPaidMsat(value);\n      break;\n    case 21:\n      var value = /** @type {!proto.lnrpc.Invoice.InvoiceState} */ (reader.readEnum());\n      msg.setState(value);\n      break;\n    case 22:\n      var value = new proto.lnrpc.InvoiceHTLC;\n      reader.readMessage(value,proto.lnrpc.InvoiceHTLC.deserializeBinaryFromReader);\n      msg.addHtlcs(value);\n      break;\n    case 24:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    case 25:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsKeysend(value);\n      break;\n    case 26:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentAddr(value);\n      break;\n    case 27:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsAmp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Invoice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Invoice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Invoice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Invoice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMemo();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRPreimage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getRHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getValueMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      23,\n      f\n    );\n  }\n  f = message.getSettled();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = message.getCreationDate();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getSettleDate();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getPaymentRequest();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getDescriptionHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      10,\n      f\n    );\n  }\n  f = message.getExpiry();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getFallbackAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = message.getCltvExpiry();\n  if (f !== 0) {\n    writer.writeUint64(\n      13,\n      f\n    );\n  }\n  f = message.getRouteHintsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      14,\n      f,\n      proto.lnrpc.RouteHint.serializeBinaryToWriter\n    );\n  }\n  f = message.getPrivate();\n  if (f) {\n    writer.writeBool(\n      15,\n      f\n    );\n  }\n  f = message.getAddIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      16,\n      f\n    );\n  }\n  f = message.getSettleIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      17,\n      f\n    );\n  }\n  f = message.getAmtPaid();\n  if (f !== 0) {\n    writer.writeInt64(\n      18,\n      f\n    );\n  }\n  f = message.getAmtPaidSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      19,\n      f\n    );\n  }\n  f = message.getAmtPaidMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      20,\n      f\n    );\n  }\n  f = message.getState();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      21,\n      f\n    );\n  }\n  f = message.getHtlcsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      22,\n      f,\n      proto.lnrpc.InvoiceHTLC.serializeBinaryToWriter\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(24, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n  f = message.getIsKeysend();\n  if (f) {\n    writer.writeBool(\n      25,\n      f\n    );\n  }\n  f = message.getPaymentAddr_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      26,\n      f\n    );\n  }\n  f = message.getIsAmp();\n  if (f) {\n    writer.writeBool(\n      27,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Invoice.InvoiceState = {\n  OPEN: 0,\n  SETTLED: 1,\n  CANCELED: 2,\n  ACCEPTED: 3\n};\n\n/**\n * optional string memo = 1;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getMemo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Invoice.prototype.setMemo = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes r_preimage = 3;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getRPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes r_preimage = 3;\n * This is a type-conversion wrapper around `getRPreimage()`\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getRPreimage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRPreimage()));\n};\n\n\n/**\n * optional bytes r_preimage = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRPreimage()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.Invoice.prototype.getRPreimage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRPreimage()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.Invoice.prototype.setRPreimage = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bytes r_hash = 4;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getRHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes r_hash = 4;\n * This is a type-conversion wrapper around `getRHash()`\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getRHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRHash()));\n};\n\n\n/**\n * optional bytes r_hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.Invoice.prototype.getRHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.Invoice.prototype.setRHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 value = 5;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setValue = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 value_msat = 23;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getValueMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setValueMsat = function(value) {\n  jspb.Message.setField(this, 23, value);\n};\n\n\n/**\n * optional bool settled = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Invoice.prototype.getSettled = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Invoice.prototype.setSettled = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 creation_date = 7;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getCreationDate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setCreationDate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 settle_date = 8;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getSettleDate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setSettleDate = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string payment_request = 9;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getPaymentRequest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Invoice.prototype.setPaymentRequest = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional bytes description_hash = 10;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getDescriptionHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * optional bytes description_hash = 10;\n * This is a type-conversion wrapper around `getDescriptionHash()`\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getDescriptionHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDescriptionHash()));\n};\n\n\n/**\n * optional bytes description_hash = 10;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDescriptionHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.Invoice.prototype.getDescriptionHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDescriptionHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.Invoice.prototype.setDescriptionHash = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional int64 expiry = 11;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setExpiry = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string fallback_addr = 12;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getFallbackAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Invoice.prototype.setFallbackAddr = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional uint64 cltv_expiry = 13;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getCltvExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setCltvExpiry = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * repeated RouteHint route_hints = 14;\n * @return {!Array.<!proto.lnrpc.RouteHint>}\n */\nproto.lnrpc.Invoice.prototype.getRouteHintsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.RouteHint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.RouteHint, 14));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.RouteHint>} value */\nproto.lnrpc.Invoice.prototype.setRouteHintsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 14, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.RouteHint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.Invoice.prototype.addRouteHints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.lnrpc.RouteHint, opt_index);\n};\n\n\nproto.lnrpc.Invoice.prototype.clearRouteHintsList = function() {\n  this.setRouteHintsList([]);\n};\n\n\n/**\n * optional bool private = 15;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Invoice.prototype.getPrivate = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Invoice.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * optional uint64 add_index = 16;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getAddIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setAddIndex = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n/**\n * optional uint64 settle_index = 17;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getSettleIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setSettleIndex = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\n/**\n * optional int64 amt_paid = 18;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getAmtPaid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setAmtPaid = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\n/**\n * optional int64 amt_paid_sat = 19;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getAmtPaidSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setAmtPaidSat = function(value) {\n  jspb.Message.setField(this, 19, value);\n};\n\n\n/**\n * optional int64 amt_paid_msat = 20;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getAmtPaidMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setAmtPaidMsat = function(value) {\n  jspb.Message.setField(this, 20, value);\n};\n\n\n/**\n * optional InvoiceState state = 21;\n * @return {!proto.lnrpc.Invoice.InvoiceState}\n */\nproto.lnrpc.Invoice.prototype.getState = function() {\n  return /** @type {!proto.lnrpc.Invoice.InvoiceState} */ (jspb.Message.getFieldWithDefault(this, 21, 0));\n};\n\n\n/** @param {!proto.lnrpc.Invoice.InvoiceState} value */\nproto.lnrpc.Invoice.prototype.setState = function(value) {\n  jspb.Message.setField(this, 21, value);\n};\n\n\n/**\n * repeated InvoiceHTLC htlcs = 22;\n * @return {!Array.<!proto.lnrpc.InvoiceHTLC>}\n */\nproto.lnrpc.Invoice.prototype.getHtlcsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.InvoiceHTLC>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.InvoiceHTLC, 22));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.InvoiceHTLC>} value */\nproto.lnrpc.Invoice.prototype.setHtlcsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 22, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.InvoiceHTLC=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.InvoiceHTLC}\n */\nproto.lnrpc.Invoice.prototype.addHtlcs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.lnrpc.InvoiceHTLC, opt_index);\n};\n\n\nproto.lnrpc.Invoice.prototype.clearHtlcsList = function() {\n  this.setHtlcsList([]);\n};\n\n\n/**\n * map<uint32, Feature> features = 24;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.Invoice.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 24, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.Invoice.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n/**\n * optional bool is_keysend = 25;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Invoice.prototype.getIsKeysend = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 25, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Invoice.prototype.setIsKeysend = function(value) {\n  jspb.Message.setField(this, 25, value);\n};\n\n\n/**\n * optional bytes payment_addr = 26;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getPaymentAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, \"\"));\n};\n\n\n/**\n * optional bytes payment_addr = 26;\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getPaymentAddr_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentAddr()));\n};\n\n\n/**\n * optional bytes payment_addr = 26;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.Invoice.prototype.getPaymentAddr_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentAddr()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.Invoice.prototype.setPaymentAddr = function(value) {\n  jspb.Message.setField(this, 26, value);\n};\n\n\n/**\n * optional bool is_amp = 27;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Invoice.prototype.getIsAmp = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 27, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Invoice.prototype.setIsAmp = function(value) {\n  jspb.Message.setField(this, 27, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.InvoiceHTLC = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.InvoiceHTLC, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.InvoiceHTLC.displayName = 'proto.lnrpc.InvoiceHTLC';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.InvoiceHTLC.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.InvoiceHTLC.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.InvoiceHTLC} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.InvoiceHTLC.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    htlcIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    amtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    acceptHeight: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    acceptTime: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    resolveTime: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    expiryHeight: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    state: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    customRecordsMap: (f = msg.getCustomRecordsMap()) ? f.toObject(includeInstance, undefined) : [],\n    mppTotalAmtMsat: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    amp: (f = msg.getAmp()) && proto.lnrpc.AMP.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.InvoiceHTLC}\n */\nproto.lnrpc.InvoiceHTLC.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.InvoiceHTLC;\n  return proto.lnrpc.InvoiceHTLC.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.InvoiceHTLC} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.InvoiceHTLC}\n */\nproto.lnrpc.InvoiceHTLC.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHtlcIndex(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setAcceptHeight(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAcceptTime(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setResolveTime(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setExpiryHeight(value);\n      break;\n    case 8:\n      var value = /** @type {!proto.lnrpc.InvoiceHTLCState} */ (reader.readEnum());\n      msg.setState(value);\n      break;\n    case 9:\n      var value = msg.getCustomRecordsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readBytes);\n         });\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMppTotalAmtMsat(value);\n      break;\n    case 11:\n      var value = new proto.lnrpc.AMP;\n      reader.readMessage(value,proto.lnrpc.AMP.deserializeBinaryFromReader);\n      msg.setAmp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.InvoiceHTLC.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.InvoiceHTLC.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.InvoiceHTLC} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.InvoiceHTLC.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getHtlcIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getAcceptHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getAcceptTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getResolveTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getExpiryHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n  f = message.getState();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      8,\n      f\n    );\n  }\n  f = message.getCustomRecordsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getMppTotalAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      10,\n      f\n    );\n  }\n  f = message.getAmp();\n  if (f != null) {\n    writer.writeMessage(\n      11,\n      f,\n      proto.lnrpc.AMP.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.InvoiceHTLC.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 htlc_index = 2;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getHtlcIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setHtlcIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 amt_msat = 3;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setAmtMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int32 accept_height = 4;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getAcceptHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setAcceptHeight = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 accept_time = 5;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getAcceptTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setAcceptTime = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 resolve_time = 6;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getResolveTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setResolveTime = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int32 expiry_height = 7;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getExpiryHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setExpiryHeight = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional InvoiceHTLCState state = 8;\n * @return {!proto.lnrpc.InvoiceHTLCState}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getState = function() {\n  return /** @type {!proto.lnrpc.InvoiceHTLCState} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {!proto.lnrpc.InvoiceHTLCState} value */\nproto.lnrpc.InvoiceHTLC.prototype.setState = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * map<uint64, bytes> custom_records = 9;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!(string|Uint8Array)>}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getCustomRecordsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 9, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.InvoiceHTLC.prototype.clearCustomRecordsMap = function() {\n  this.getCustomRecordsMap().clear();\n};\n\n\n/**\n * optional uint64 mpp_total_amt_msat = 10;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getMppTotalAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setMppTotalAmtMsat = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional AMP amp = 11;\n * @return {?proto.lnrpc.AMP}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getAmp = function() {\n  return /** @type{?proto.lnrpc.AMP} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.AMP, 11));\n};\n\n\n/** @param {?proto.lnrpc.AMP|undefined} value */\nproto.lnrpc.InvoiceHTLC.prototype.setAmp = function(value) {\n  jspb.Message.setWrapperField(this, 11, value);\n};\n\n\nproto.lnrpc.InvoiceHTLC.prototype.clearAmp = function() {\n  this.setAmp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.InvoiceHTLC.prototype.hasAmp = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.AMP = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.AMP, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.AMP.displayName = 'proto.lnrpc.AMP';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.AMP.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.AMP.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.AMP} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AMP.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rootShare: msg.getRootShare_asB64(),\n    setId: msg.getSetId_asB64(),\n    childIndex: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    hash: msg.getHash_asB64(),\n    preimage: msg.getPreimage_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.AMP}\n */\nproto.lnrpc.AMP.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.AMP;\n  return proto.lnrpc.AMP.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.AMP} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.AMP}\n */\nproto.lnrpc.AMP.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRootShare(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSetId(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setChildIndex(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPreimage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.AMP.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.AMP.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.AMP} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AMP.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRootShare_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getSetId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getChildIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getPreimage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes root_share = 1;\n * @return {string}\n */\nproto.lnrpc.AMP.prototype.getRootShare = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes root_share = 1;\n * This is a type-conversion wrapper around `getRootShare()`\n * @return {string}\n */\nproto.lnrpc.AMP.prototype.getRootShare_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRootShare()));\n};\n\n\n/**\n * optional bytes root_share = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRootShare()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.AMP.prototype.getRootShare_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRootShare()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.AMP.prototype.setRootShare = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes set_id = 2;\n * @return {string}\n */\nproto.lnrpc.AMP.prototype.getSetId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes set_id = 2;\n * This is a type-conversion wrapper around `getSetId()`\n * @return {string}\n */\nproto.lnrpc.AMP.prototype.getSetId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSetId()));\n};\n\n\n/**\n * optional bytes set_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSetId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.AMP.prototype.getSetId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSetId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.AMP.prototype.setSetId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 child_index = 3;\n * @return {number}\n */\nproto.lnrpc.AMP.prototype.getChildIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.AMP.prototype.setChildIndex = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bytes hash = 4;\n * @return {string}\n */\nproto.lnrpc.AMP.prototype.getHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes hash = 4;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nproto.lnrpc.AMP.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.AMP.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.AMP.prototype.setHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bytes preimage = 5;\n * @return {string}\n */\nproto.lnrpc.AMP.prototype.getPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes preimage = 5;\n * This is a type-conversion wrapper around `getPreimage()`\n * @return {string}\n */\nproto.lnrpc.AMP.prototype.getPreimage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPreimage()));\n};\n\n\n/**\n * optional bytes preimage = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPreimage()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.AMP.prototype.getPreimage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPreimage()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.AMP.prototype.setPreimage = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.AddInvoiceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.AddInvoiceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.AddInvoiceResponse.displayName = 'proto.lnrpc.AddInvoiceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.AddInvoiceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.AddInvoiceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AddInvoiceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rHash: msg.getRHash_asB64(),\n    paymentRequest: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    addIndex: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    paymentAddr: msg.getPaymentAddr_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.AddInvoiceResponse}\n */\nproto.lnrpc.AddInvoiceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.AddInvoiceResponse;\n  return proto.lnrpc.AddInvoiceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.AddInvoiceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.AddInvoiceResponse}\n */\nproto.lnrpc.AddInvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRHash(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentRequest(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAddIndex(value);\n      break;\n    case 17:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentAddr(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.AddInvoiceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.AddInvoiceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AddInvoiceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPaymentRequest();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAddIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      16,\n      f\n    );\n  }\n  f = message.getPaymentAddr_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      17,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes r_hash = 1;\n * @return {string}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getRHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes r_hash = 1;\n * This is a type-conversion wrapper around `getRHash()`\n * @return {string}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getRHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRHash()));\n};\n\n\n/**\n * optional bytes r_hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getRHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.AddInvoiceResponse.prototype.setRHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string payment_request = 2;\n * @return {string}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getPaymentRequest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.AddInvoiceResponse.prototype.setPaymentRequest = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 add_index = 16;\n * @return {number}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getAddIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.AddInvoiceResponse.prototype.setAddIndex = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n/**\n * optional bytes payment_addr = 17;\n * @return {string}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getPaymentAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, \"\"));\n};\n\n\n/**\n * optional bytes payment_addr = 17;\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {string}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getPaymentAddr_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentAddr()));\n};\n\n\n/**\n * optional bytes payment_addr = 17;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getPaymentAddr_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentAddr()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.AddInvoiceResponse.prototype.setPaymentAddr = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PaymentHash = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PaymentHash, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PaymentHash.displayName = 'proto.lnrpc.PaymentHash';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PaymentHash.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PaymentHash.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PaymentHash} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PaymentHash.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rHashStr: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    rHash: msg.getRHash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PaymentHash}\n */\nproto.lnrpc.PaymentHash.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PaymentHash;\n  return proto.lnrpc.PaymentHash.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PaymentHash} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PaymentHash}\n */\nproto.lnrpc.PaymentHash.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRHashStr(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PaymentHash.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PaymentHash.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PaymentHash} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PaymentHash.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRHashStr();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string r_hash_str = 1;\n * @return {string}\n */\nproto.lnrpc.PaymentHash.prototype.getRHashStr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PaymentHash.prototype.setRHashStr = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes r_hash = 2;\n * @return {string}\n */\nproto.lnrpc.PaymentHash.prototype.getRHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes r_hash = 2;\n * This is a type-conversion wrapper around `getRHash()`\n * @return {string}\n */\nproto.lnrpc.PaymentHash.prototype.getRHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRHash()));\n};\n\n\n/**\n * optional bytes r_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PaymentHash.prototype.getRHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PaymentHash.prototype.setRHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListInvoiceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListInvoiceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListInvoiceRequest.displayName = 'proto.lnrpc.ListInvoiceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListInvoiceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListInvoiceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListInvoiceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pendingOnly: jspb.Message.getFieldWithDefault(msg, 1, false),\n    indexOffset: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    numMaxInvoices: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    reversed: jspb.Message.getFieldWithDefault(msg, 6, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListInvoiceRequest}\n */\nproto.lnrpc.ListInvoiceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListInvoiceRequest;\n  return proto.lnrpc.ListInvoiceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListInvoiceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListInvoiceRequest}\n */\nproto.lnrpc.ListInvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPendingOnly(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setIndexOffset(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNumMaxInvoices(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setReversed(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListInvoiceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListInvoiceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListInvoiceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPendingOnly();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getNumMaxInvoices();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getReversed();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool pending_only = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.getPendingOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListInvoiceRequest.prototype.setPendingOnly = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 index_offset = 4;\n * @return {number}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.getIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListInvoiceRequest.prototype.setIndexOffset = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 num_max_invoices = 5;\n * @return {number}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.getNumMaxInvoices = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListInvoiceRequest.prototype.setNumMaxInvoices = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional bool reversed = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.getReversed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListInvoiceRequest.prototype.setReversed = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListInvoiceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListInvoiceResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListInvoiceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListInvoiceResponse.displayName = 'proto.lnrpc.ListInvoiceResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListInvoiceResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListInvoiceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListInvoiceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListInvoiceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    invoicesList: jspb.Message.toObjectList(msg.getInvoicesList(),\n    proto.lnrpc.Invoice.toObject, includeInstance),\n    lastIndexOffset: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    firstIndexOffset: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListInvoiceResponse}\n */\nproto.lnrpc.ListInvoiceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListInvoiceResponse;\n  return proto.lnrpc.ListInvoiceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListInvoiceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListInvoiceResponse}\n */\nproto.lnrpc.ListInvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Invoice;\n      reader.readMessage(value,proto.lnrpc.Invoice.deserializeBinaryFromReader);\n      msg.addInvoices(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastIndexOffset(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFirstIndexOffset(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListInvoiceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListInvoiceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListInvoiceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInvoicesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Invoice.serializeBinaryToWriter\n    );\n  }\n  f = message.getLastIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getFirstIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated Invoice invoices = 1;\n * @return {!Array.<!proto.lnrpc.Invoice>}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.getInvoicesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Invoice>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Invoice, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Invoice>} value */\nproto.lnrpc.ListInvoiceResponse.prototype.setInvoicesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Invoice=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Invoice}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.addInvoices = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Invoice, opt_index);\n};\n\n\nproto.lnrpc.ListInvoiceResponse.prototype.clearInvoicesList = function() {\n  this.setInvoicesList([]);\n};\n\n\n/**\n * optional uint64 last_index_offset = 2;\n * @return {number}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.getLastIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListInvoiceResponse.prototype.setLastIndexOffset = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 first_index_offset = 3;\n * @return {number}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.getFirstIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListInvoiceResponse.prototype.setFirstIndexOffset = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.InvoiceSubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.InvoiceSubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.InvoiceSubscription.displayName = 'proto.lnrpc.InvoiceSubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.InvoiceSubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.InvoiceSubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.InvoiceSubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.InvoiceSubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addIndex: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    settleIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.InvoiceSubscription}\n */\nproto.lnrpc.InvoiceSubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.InvoiceSubscription;\n  return proto.lnrpc.InvoiceSubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.InvoiceSubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.InvoiceSubscription}\n */\nproto.lnrpc.InvoiceSubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAddIndex(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSettleIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.InvoiceSubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.InvoiceSubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.InvoiceSubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.InvoiceSubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getSettleIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 add_index = 1;\n * @return {number}\n */\nproto.lnrpc.InvoiceSubscription.prototype.getAddIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceSubscription.prototype.setAddIndex = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 settle_index = 2;\n * @return {number}\n */\nproto.lnrpc.InvoiceSubscription.prototype.getSettleIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceSubscription.prototype.setSettleIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Payment = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Payment.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Payment, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Payment.displayName = 'proto.lnrpc.Payment';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Payment.repeatedFields_ = [14];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Payment.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Payment.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Payment} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Payment.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    value: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    creationDate: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    fee: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    paymentPreimage: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    valueSat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    valueMsat: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    paymentRequest: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    status: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    feeSat: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    feeMsat: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    creationTimeNs: jspb.Message.getFieldWithDefault(msg, 13, 0),\n    htlcsList: jspb.Message.toObjectList(msg.getHtlcsList(),\n    proto.lnrpc.HTLCAttempt.toObject, includeInstance),\n    paymentIndex: jspb.Message.getFieldWithDefault(msg, 15, 0),\n    failureReason: jspb.Message.getFieldWithDefault(msg, 16, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Payment}\n */\nproto.lnrpc.Payment.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Payment;\n  return proto.lnrpc.Payment.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Payment} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Payment}\n */\nproto.lnrpc.Payment.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValue(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreationDate(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFee(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentPreimage(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValueSat(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValueMsat(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentRequest(value);\n      break;\n    case 10:\n      var value = /** @type {!proto.lnrpc.Payment.PaymentStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeSat(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeMsat(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreationTimeNs(value);\n      break;\n    case 14:\n      var value = new proto.lnrpc.HTLCAttempt;\n      reader.readMessage(value,proto.lnrpc.HTLCAttempt.deserializeBinaryFromReader);\n      msg.addHtlcs(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPaymentIndex(value);\n      break;\n    case 16:\n      var value = /** @type {!proto.lnrpc.PaymentFailureReason} */ (reader.readEnum());\n      msg.setFailureReason(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Payment.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Payment.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Payment} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Payment.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getCreationDate();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getPaymentPreimage();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getValueSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getValueMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getPaymentRequest();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getFeeSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getCreationTimeNs();\n  if (f !== 0) {\n    writer.writeInt64(\n      13,\n      f\n    );\n  }\n  f = message.getHtlcsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      14,\n      f,\n      proto.lnrpc.HTLCAttempt.serializeBinaryToWriter\n    );\n  }\n  f = message.getPaymentIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      15,\n      f\n    );\n  }\n  f = message.getFailureReason();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      16,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Payment.PaymentStatus = {\n  UNKNOWN: 0,\n  IN_FLIGHT: 1,\n  SUCCEEDED: 2,\n  FAILED: 3\n};\n\n/**\n * optional string payment_hash = 1;\n * @return {string}\n */\nproto.lnrpc.Payment.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Payment.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 value = 2;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setValue = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 creation_date = 3;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getCreationDate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setCreationDate = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 fee = 5;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setFee = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string payment_preimage = 6;\n * @return {string}\n */\nproto.lnrpc.Payment.prototype.getPaymentPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Payment.prototype.setPaymentPreimage = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 value_sat = 7;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getValueSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setValueSat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 value_msat = 8;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getValueMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setValueMsat = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string payment_request = 9;\n * @return {string}\n */\nproto.lnrpc.Payment.prototype.getPaymentRequest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Payment.prototype.setPaymentRequest = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional PaymentStatus status = 10;\n * @return {!proto.lnrpc.Payment.PaymentStatus}\n */\nproto.lnrpc.Payment.prototype.getStatus = function() {\n  return /** @type {!proto.lnrpc.Payment.PaymentStatus} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {!proto.lnrpc.Payment.PaymentStatus} value */\nproto.lnrpc.Payment.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional int64 fee_sat = 11;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setFeeSat = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional int64 fee_msat = 12;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setFeeMsat = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional int64 creation_time_ns = 13;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getCreationTimeNs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setCreationTimeNs = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * repeated HTLCAttempt htlcs = 14;\n * @return {!Array.<!proto.lnrpc.HTLCAttempt>}\n */\nproto.lnrpc.Payment.prototype.getHtlcsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.HTLCAttempt>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.HTLCAttempt, 14));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.HTLCAttempt>} value */\nproto.lnrpc.Payment.prototype.setHtlcsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 14, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.HTLCAttempt=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.HTLCAttempt}\n */\nproto.lnrpc.Payment.prototype.addHtlcs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.lnrpc.HTLCAttempt, opt_index);\n};\n\n\nproto.lnrpc.Payment.prototype.clearHtlcsList = function() {\n  this.setHtlcsList([]);\n};\n\n\n/**\n * optional uint64 payment_index = 15;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getPaymentIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setPaymentIndex = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * optional PaymentFailureReason failure_reason = 16;\n * @return {!proto.lnrpc.PaymentFailureReason}\n */\nproto.lnrpc.Payment.prototype.getFailureReason = function() {\n  return /** @type {!proto.lnrpc.PaymentFailureReason} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {!proto.lnrpc.PaymentFailureReason} value */\nproto.lnrpc.Payment.prototype.setFailureReason = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.HTLCAttempt = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.HTLCAttempt, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.HTLCAttempt.displayName = 'proto.lnrpc.HTLCAttempt';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.HTLCAttempt.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.HTLCAttempt.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.HTLCAttempt} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HTLCAttempt.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    attemptId: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    route: (f = msg.getRoute()) && proto.lnrpc.Route.toObject(includeInstance, f),\n    attemptTimeNs: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    resolveTimeNs: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    failure: (f = msg.getFailure()) && proto.lnrpc.Failure.toObject(includeInstance, f),\n    preimage: msg.getPreimage_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.HTLCAttempt}\n */\nproto.lnrpc.HTLCAttempt.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.HTLCAttempt;\n  return proto.lnrpc.HTLCAttempt.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.HTLCAttempt} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.HTLCAttempt}\n */\nproto.lnrpc.HTLCAttempt.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAttemptId(value);\n      break;\n    case 1:\n      var value = /** @type {!proto.lnrpc.HTLCAttempt.HTLCStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.Route;\n      reader.readMessage(value,proto.lnrpc.Route.deserializeBinaryFromReader);\n      msg.setRoute(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAttemptTimeNs(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setResolveTimeNs(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.Failure;\n      reader.readMessage(value,proto.lnrpc.Failure.deserializeBinaryFromReader);\n      msg.setFailure(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPreimage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.HTLCAttempt.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.HTLCAttempt.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.HTLCAttempt} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HTLCAttempt.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAttemptId();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getRoute();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.Route.serializeBinaryToWriter\n    );\n  }\n  f = message.getAttemptTimeNs();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getResolveTimeNs();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getFailure();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.lnrpc.Failure.serializeBinaryToWriter\n    );\n  }\n  f = message.getPreimage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.HTLCAttempt.HTLCStatus = {\n  IN_FLIGHT: 0,\n  SUCCEEDED: 1,\n  FAILED: 2\n};\n\n/**\n * optional uint64 attempt_id = 7;\n * @return {number}\n */\nproto.lnrpc.HTLCAttempt.prototype.getAttemptId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLCAttempt.prototype.setAttemptId = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional HTLCStatus status = 1;\n * @return {!proto.lnrpc.HTLCAttempt.HTLCStatus}\n */\nproto.lnrpc.HTLCAttempt.prototype.getStatus = function() {\n  return /** @type {!proto.lnrpc.HTLCAttempt.HTLCStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.HTLCAttempt.HTLCStatus} value */\nproto.lnrpc.HTLCAttempt.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional Route route = 2;\n * @return {?proto.lnrpc.Route}\n */\nproto.lnrpc.HTLCAttempt.prototype.getRoute = function() {\n  return /** @type{?proto.lnrpc.Route} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Route, 2));\n};\n\n\n/** @param {?proto.lnrpc.Route|undefined} value */\nproto.lnrpc.HTLCAttempt.prototype.setRoute = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.HTLCAttempt.prototype.clearRoute = function() {\n  this.setRoute(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.HTLCAttempt.prototype.hasRoute = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 attempt_time_ns = 3;\n * @return {number}\n */\nproto.lnrpc.HTLCAttempt.prototype.getAttemptTimeNs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLCAttempt.prototype.setAttemptTimeNs = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 resolve_time_ns = 4;\n * @return {number}\n */\nproto.lnrpc.HTLCAttempt.prototype.getResolveTimeNs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLCAttempt.prototype.setResolveTimeNs = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional Failure failure = 5;\n * @return {?proto.lnrpc.Failure}\n */\nproto.lnrpc.HTLCAttempt.prototype.getFailure = function() {\n  return /** @type{?proto.lnrpc.Failure} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Failure, 5));\n};\n\n\n/** @param {?proto.lnrpc.Failure|undefined} value */\nproto.lnrpc.HTLCAttempt.prototype.setFailure = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.lnrpc.HTLCAttempt.prototype.clearFailure = function() {\n  this.setFailure(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.HTLCAttempt.prototype.hasFailure = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bytes preimage = 6;\n * @return {string}\n */\nproto.lnrpc.HTLCAttempt.prototype.getPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes preimage = 6;\n * This is a type-conversion wrapper around `getPreimage()`\n * @return {string}\n */\nproto.lnrpc.HTLCAttempt.prototype.getPreimage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPreimage()));\n};\n\n\n/**\n * optional bytes preimage = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPreimage()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.HTLCAttempt.prototype.getPreimage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPreimage()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.HTLCAttempt.prototype.setPreimage = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListPaymentsRequest.displayName = 'proto.lnrpc.ListPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    includeIncomplete: jspb.Message.getFieldWithDefault(msg, 1, false),\n    indexOffset: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    maxPayments: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    reversed: jspb.Message.getFieldWithDefault(msg, 4, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListPaymentsRequest}\n */\nproto.lnrpc.ListPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListPaymentsRequest;\n  return proto.lnrpc.ListPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListPaymentsRequest}\n */\nproto.lnrpc.ListPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeIncomplete(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setIndexOffset(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxPayments(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setReversed(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIncludeIncomplete();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getMaxPayments();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getReversed();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool include_incomplete = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.getIncludeIncomplete = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListPaymentsRequest.prototype.setIncludeIncomplete = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 index_offset = 2;\n * @return {number}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.getIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListPaymentsRequest.prototype.setIndexOffset = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 max_payments = 3;\n * @return {number}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.getMaxPayments = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListPaymentsRequest.prototype.setMaxPayments = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool reversed = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.getReversed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListPaymentsRequest.prototype.setReversed = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListPaymentsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListPaymentsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListPaymentsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListPaymentsResponse.displayName = 'proto.lnrpc.ListPaymentsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListPaymentsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListPaymentsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListPaymentsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPaymentsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentsList: jspb.Message.toObjectList(msg.getPaymentsList(),\n    proto.lnrpc.Payment.toObject, includeInstance),\n    firstIndexOffset: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    lastIndexOffset: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListPaymentsResponse}\n */\nproto.lnrpc.ListPaymentsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListPaymentsResponse;\n  return proto.lnrpc.ListPaymentsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListPaymentsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListPaymentsResponse}\n */\nproto.lnrpc.ListPaymentsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Payment;\n      reader.readMessage(value,proto.lnrpc.Payment.deserializeBinaryFromReader);\n      msg.addPayments(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFirstIndexOffset(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastIndexOffset(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListPaymentsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListPaymentsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPaymentsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Payment.serializeBinaryToWriter\n    );\n  }\n  f = message.getFirstIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getLastIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated Payment payments = 1;\n * @return {!Array.<!proto.lnrpc.Payment>}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.getPaymentsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Payment>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Payment, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Payment>} value */\nproto.lnrpc.ListPaymentsResponse.prototype.setPaymentsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Payment=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Payment}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.addPayments = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Payment, opt_index);\n};\n\n\nproto.lnrpc.ListPaymentsResponse.prototype.clearPaymentsList = function() {\n  this.setPaymentsList([]);\n};\n\n\n/**\n * optional uint64 first_index_offset = 2;\n * @return {number}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.getFirstIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListPaymentsResponse.prototype.setFirstIndexOffset = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 last_index_offset = 3;\n * @return {number}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.getLastIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListPaymentsResponse.prototype.setLastIndexOffset = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DeletePaymentRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DeletePaymentRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DeletePaymentRequest.displayName = 'proto.lnrpc.DeletePaymentRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DeletePaymentRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DeletePaymentRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DeletePaymentRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeletePaymentRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentHash: msg.getPaymentHash_asB64(),\n    failedHtlcsOnly: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DeletePaymentRequest}\n */\nproto.lnrpc.DeletePaymentRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DeletePaymentRequest;\n  return proto.lnrpc.DeletePaymentRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DeletePaymentRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DeletePaymentRequest}\n */\nproto.lnrpc.DeletePaymentRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentHash(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFailedHtlcsOnly(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DeletePaymentRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DeletePaymentRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DeletePaymentRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeletePaymentRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getFailedHtlcsOnly();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes payment_hash = 1;\n * @return {string}\n */\nproto.lnrpc.DeletePaymentRequest.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes payment_hash = 1;\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {string}\n */\nproto.lnrpc.DeletePaymentRequest.prototype.getPaymentHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentHash()));\n};\n\n\n/**\n * optional bytes payment_hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.DeletePaymentRequest.prototype.getPaymentHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.DeletePaymentRequest.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool failed_htlcs_only = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.DeletePaymentRequest.prototype.getFailedHtlcsOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.DeletePaymentRequest.prototype.setFailedHtlcsOnly = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DeleteAllPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DeleteAllPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DeleteAllPaymentsRequest.displayName = 'proto.lnrpc.DeleteAllPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DeleteAllPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DeleteAllPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DeleteAllPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteAllPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    failedPaymentsOnly: jspb.Message.getFieldWithDefault(msg, 1, false),\n    failedHtlcsOnly: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DeleteAllPaymentsRequest}\n */\nproto.lnrpc.DeleteAllPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DeleteAllPaymentsRequest;\n  return proto.lnrpc.DeleteAllPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DeleteAllPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DeleteAllPaymentsRequest}\n */\nproto.lnrpc.DeleteAllPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFailedPaymentsOnly(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFailedHtlcsOnly(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DeleteAllPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DeleteAllPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DeleteAllPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteAllPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFailedPaymentsOnly();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getFailedHtlcsOnly();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool failed_payments_only = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.DeleteAllPaymentsRequest.prototype.getFailedPaymentsOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.DeleteAllPaymentsRequest.prototype.setFailedPaymentsOnly = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool failed_htlcs_only = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.DeleteAllPaymentsRequest.prototype.getFailedHtlcsOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.DeleteAllPaymentsRequest.prototype.setFailedHtlcsOnly = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DeletePaymentResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DeletePaymentResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DeletePaymentResponse.displayName = 'proto.lnrpc.DeletePaymentResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DeletePaymentResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DeletePaymentResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DeletePaymentResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeletePaymentResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DeletePaymentResponse}\n */\nproto.lnrpc.DeletePaymentResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DeletePaymentResponse;\n  return proto.lnrpc.DeletePaymentResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DeletePaymentResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DeletePaymentResponse}\n */\nproto.lnrpc.DeletePaymentResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DeletePaymentResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DeletePaymentResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DeletePaymentResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeletePaymentResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DeleteAllPaymentsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DeleteAllPaymentsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DeleteAllPaymentsResponse.displayName = 'proto.lnrpc.DeleteAllPaymentsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DeleteAllPaymentsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DeleteAllPaymentsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DeleteAllPaymentsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteAllPaymentsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DeleteAllPaymentsResponse}\n */\nproto.lnrpc.DeleteAllPaymentsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DeleteAllPaymentsResponse;\n  return proto.lnrpc.DeleteAllPaymentsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DeleteAllPaymentsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DeleteAllPaymentsResponse}\n */\nproto.lnrpc.DeleteAllPaymentsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DeleteAllPaymentsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DeleteAllPaymentsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DeleteAllPaymentsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteAllPaymentsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.AbandonChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.AbandonChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.AbandonChannelRequest.displayName = 'proto.lnrpc.AbandonChannelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.AbandonChannelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.AbandonChannelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.AbandonChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AbandonChannelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelPoint: (f = msg.getChannelPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    pendingFundingShimOnly: jspb.Message.getFieldWithDefault(msg, 2, false),\n    iKnowWhatIAmDoing: jspb.Message.getFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.AbandonChannelRequest}\n */\nproto.lnrpc.AbandonChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.AbandonChannelRequest;\n  return proto.lnrpc.AbandonChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.AbandonChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.AbandonChannelRequest}\n */\nproto.lnrpc.AbandonChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChannelPoint(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPendingFundingShimOnly(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIKnowWhatIAmDoing(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.AbandonChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.AbandonChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.AbandonChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AbandonChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingFundingShimOnly();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getIKnowWhatIAmDoing();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint channel_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.AbandonChannelRequest.prototype.getChannelPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.AbandonChannelRequest.prototype.setChannelPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.AbandonChannelRequest.prototype.clearChannelPoint = function() {\n  this.setChannelPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.AbandonChannelRequest.prototype.hasChannelPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool pending_funding_shim_only = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.AbandonChannelRequest.prototype.getPendingFundingShimOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.AbandonChannelRequest.prototype.setPendingFundingShimOnly = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool i_know_what_i_am_doing = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.AbandonChannelRequest.prototype.getIKnowWhatIAmDoing = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.AbandonChannelRequest.prototype.setIKnowWhatIAmDoing = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.AbandonChannelResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.AbandonChannelResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.AbandonChannelResponse.displayName = 'proto.lnrpc.AbandonChannelResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.AbandonChannelResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.AbandonChannelResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.AbandonChannelResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AbandonChannelResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.AbandonChannelResponse}\n */\nproto.lnrpc.AbandonChannelResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.AbandonChannelResponse;\n  return proto.lnrpc.AbandonChannelResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.AbandonChannelResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.AbandonChannelResponse}\n */\nproto.lnrpc.AbandonChannelResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.AbandonChannelResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.AbandonChannelResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.AbandonChannelResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AbandonChannelResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DebugLevelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DebugLevelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DebugLevelRequest.displayName = 'proto.lnrpc.DebugLevelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DebugLevelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DebugLevelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DebugLevelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DebugLevelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    show: jspb.Message.getFieldWithDefault(msg, 1, false),\n    levelSpec: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DebugLevelRequest}\n */\nproto.lnrpc.DebugLevelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DebugLevelRequest;\n  return proto.lnrpc.DebugLevelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DebugLevelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DebugLevelRequest}\n */\nproto.lnrpc.DebugLevelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setShow(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLevelSpec(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DebugLevelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DebugLevelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DebugLevelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DebugLevelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getShow();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getLevelSpec();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool show = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.DebugLevelRequest.prototype.getShow = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.DebugLevelRequest.prototype.setShow = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string level_spec = 2;\n * @return {string}\n */\nproto.lnrpc.DebugLevelRequest.prototype.getLevelSpec = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.DebugLevelRequest.prototype.setLevelSpec = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DebugLevelResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DebugLevelResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DebugLevelResponse.displayName = 'proto.lnrpc.DebugLevelResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DebugLevelResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DebugLevelResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DebugLevelResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DebugLevelResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    subSystems: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DebugLevelResponse}\n */\nproto.lnrpc.DebugLevelResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DebugLevelResponse;\n  return proto.lnrpc.DebugLevelResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DebugLevelResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DebugLevelResponse}\n */\nproto.lnrpc.DebugLevelResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSubSystems(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DebugLevelResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DebugLevelResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DebugLevelResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DebugLevelResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSubSystems();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string sub_systems = 1;\n * @return {string}\n */\nproto.lnrpc.DebugLevelResponse.prototype.getSubSystems = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.DebugLevelResponse.prototype.setSubSystems = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PayReqString = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PayReqString, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PayReqString.displayName = 'proto.lnrpc.PayReqString';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PayReqString.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PayReqString.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PayReqString} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PayReqString.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    payReq: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PayReqString}\n */\nproto.lnrpc.PayReqString.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PayReqString;\n  return proto.lnrpc.PayReqString.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PayReqString} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PayReqString}\n */\nproto.lnrpc.PayReqString.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayReq(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PayReqString.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PayReqString.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PayReqString} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PayReqString.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPayReq();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pay_req = 1;\n * @return {string}\n */\nproto.lnrpc.PayReqString.prototype.getPayReq = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReqString.prototype.setPayReq = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PayReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.PayReq.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.PayReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PayReq.displayName = 'proto.lnrpc.PayReq';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.PayReq.repeatedFields_ = [10];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PayReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PayReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PayReq} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PayReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    destination: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    numSatoshis: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    expiry: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    description: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    descriptionHash: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    fallbackAddr: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    cltvExpiry: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    routeHintsList: jspb.Message.toObjectList(msg.getRouteHintsList(),\n    proto.lnrpc.RouteHint.toObject, includeInstance),\n    paymentAddr: msg.getPaymentAddr_asB64(),\n    numMsat: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PayReq}\n */\nproto.lnrpc.PayReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PayReq;\n  return proto.lnrpc.PayReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PayReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PayReq}\n */\nproto.lnrpc.PayReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDestination(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumSatoshis(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpiry(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescriptionHash(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFallbackAddr(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCltvExpiry(value);\n      break;\n    case 10:\n      var value = new proto.lnrpc.RouteHint;\n      reader.readMessage(value,proto.lnrpc.RouteHint.deserializeBinaryFromReader);\n      msg.addRouteHints(value);\n      break;\n    case 11:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentAddr(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumMsat(value);\n      break;\n    case 13:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PayReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PayReq.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PayReq} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PayReq.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDestination();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getNumSatoshis();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getExpiry();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getDescriptionHash();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getFallbackAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getCltvExpiry();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getRouteHintsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      10,\n      f,\n      proto.lnrpc.RouteHint.serializeBinaryToWriter\n    );\n  }\n  f = message.getPaymentAddr_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      11,\n      f\n    );\n  }\n  f = message.getNumMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * optional string destination = 1;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getDestination = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setDestination = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string payment_hash = 2;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 num_satoshis = 3;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getNumSatoshis = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setNumSatoshis = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 timestamp = 4;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setTimestamp = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 expiry = 5;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setExpiry = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string description = 6;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string description_hash = 7;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getDescriptionHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setDescriptionHash = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string fallback_addr = 8;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getFallbackAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setFallbackAddr = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 cltv_expiry = 9;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getCltvExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setCltvExpiry = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * repeated RouteHint route_hints = 10;\n * @return {!Array.<!proto.lnrpc.RouteHint>}\n */\nproto.lnrpc.PayReq.prototype.getRouteHintsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.RouteHint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.RouteHint, 10));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.RouteHint>} value */\nproto.lnrpc.PayReq.prototype.setRouteHintsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 10, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.RouteHint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.PayReq.prototype.addRouteHints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.lnrpc.RouteHint, opt_index);\n};\n\n\nproto.lnrpc.PayReq.prototype.clearRouteHintsList = function() {\n  this.setRouteHintsList([]);\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getPaymentAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getPaymentAddr_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentAddr()));\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PayReq.prototype.getPaymentAddr_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentAddr()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PayReq.prototype.setPaymentAddr = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional int64 num_msat = 12;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getNumMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setNumMsat = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * map<uint32, Feature> features = 13;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.PayReq.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 13, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.PayReq.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Feature = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Feature, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Feature.displayName = 'proto.lnrpc.Feature';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Feature.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Feature.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Feature} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Feature.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    isRequired: jspb.Message.getFieldWithDefault(msg, 3, false),\n    isKnown: jspb.Message.getFieldWithDefault(msg, 4, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Feature}\n */\nproto.lnrpc.Feature.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Feature;\n  return proto.lnrpc.Feature.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Feature} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Feature}\n */\nproto.lnrpc.Feature.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsRequired(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsKnown(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Feature.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Feature.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Feature} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Feature.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getIsRequired();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getIsKnown();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.lnrpc.Feature.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Feature.prototype.setName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool is_required = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Feature.prototype.getIsRequired = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Feature.prototype.setIsRequired = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool is_known = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Feature.prototype.getIsKnown = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Feature.prototype.setIsKnown = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FeeReportRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FeeReportRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FeeReportRequest.displayName = 'proto.lnrpc.FeeReportRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FeeReportRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FeeReportRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FeeReportRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeReportRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FeeReportRequest}\n */\nproto.lnrpc.FeeReportRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FeeReportRequest;\n  return proto.lnrpc.FeeReportRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FeeReportRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FeeReportRequest}\n */\nproto.lnrpc.FeeReportRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FeeReportRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FeeReportRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FeeReportRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeReportRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelFeeReport = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelFeeReport, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelFeeReport.displayName = 'proto.lnrpc.ChannelFeeReport';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelFeeReport.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelFeeReport.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelFeeReport} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelFeeReport.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 5, \"0\"),\n    channelPoint: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    baseFeeMsat: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    feePerMil: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    feeRate: +jspb.Message.getFieldWithDefault(msg, 4, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelFeeReport}\n */\nproto.lnrpc.ChannelFeeReport.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelFeeReport;\n  return proto.lnrpc.ChannelFeeReport.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelFeeReport} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelFeeReport}\n */\nproto.lnrpc.ChannelFeeReport.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 5:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelPoint(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBaseFeeMsat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeePerMil(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFeeRate(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelFeeReport.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelFeeReport.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelFeeReport} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelFeeReport.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      5,\n      f\n    );\n  }\n  f = message.getChannelPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getBaseFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getFeePerMil();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFeeRate();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 5;\n * @return {string}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelFeeReport.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string channel_point = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getChannelPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelFeeReport.prototype.setChannelPoint = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 base_fee_msat = 2;\n * @return {number}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getBaseFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelFeeReport.prototype.setBaseFeeMsat = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 fee_per_mil = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getFeePerMil = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelFeeReport.prototype.setFeePerMil = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional double fee_rate = 4;\n * @return {number}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getFeeRate = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelFeeReport.prototype.setFeeRate = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FeeReportResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.FeeReportResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.FeeReportResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FeeReportResponse.displayName = 'proto.lnrpc.FeeReportResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.FeeReportResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FeeReportResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FeeReportResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FeeReportResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeReportResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelFeesList: jspb.Message.toObjectList(msg.getChannelFeesList(),\n    proto.lnrpc.ChannelFeeReport.toObject, includeInstance),\n    dayFeeSum: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    weekFeeSum: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    monthFeeSum: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FeeReportResponse}\n */\nproto.lnrpc.FeeReportResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FeeReportResponse;\n  return proto.lnrpc.FeeReportResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FeeReportResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FeeReportResponse}\n */\nproto.lnrpc.FeeReportResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelFeeReport;\n      reader.readMessage(value,proto.lnrpc.ChannelFeeReport.deserializeBinaryFromReader);\n      msg.addChannelFees(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDayFeeSum(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setWeekFeeSum(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMonthFeeSum(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FeeReportResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FeeReportResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FeeReportResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeReportResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelFeesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelFeeReport.serializeBinaryToWriter\n    );\n  }\n  f = message.getDayFeeSum();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getWeekFeeSum();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getMonthFeeSum();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated ChannelFeeReport channel_fees = 1;\n * @return {!Array.<!proto.lnrpc.ChannelFeeReport>}\n */\nproto.lnrpc.FeeReportResponse.prototype.getChannelFeesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelFeeReport>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelFeeReport, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelFeeReport>} value */\nproto.lnrpc.FeeReportResponse.prototype.setChannelFeesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelFeeReport=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelFeeReport}\n */\nproto.lnrpc.FeeReportResponse.prototype.addChannelFees = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ChannelFeeReport, opt_index);\n};\n\n\nproto.lnrpc.FeeReportResponse.prototype.clearChannelFeesList = function() {\n  this.setChannelFeesList([]);\n};\n\n\n/**\n * optional uint64 day_fee_sum = 2;\n * @return {number}\n */\nproto.lnrpc.FeeReportResponse.prototype.getDayFeeSum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeReportResponse.prototype.setDayFeeSum = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 week_fee_sum = 3;\n * @return {number}\n */\nproto.lnrpc.FeeReportResponse.prototype.getWeekFeeSum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeReportResponse.prototype.setWeekFeeSum = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 month_fee_sum = 4;\n * @return {number}\n */\nproto.lnrpc.FeeReportResponse.prototype.getMonthFeeSum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeReportResponse.prototype.setMonthFeeSum = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PolicyUpdateRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.PolicyUpdateRequest.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.PolicyUpdateRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PolicyUpdateRequest.displayName = 'proto.lnrpc.PolicyUpdateRequest';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.PolicyUpdateRequest.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.PolicyUpdateRequest.ScopeCase = {\n  SCOPE_NOT_SET: 0,\n  GLOBAL: 1,\n  CHAN_POINT: 2\n};\n\n/**\n * @return {proto.lnrpc.PolicyUpdateRequest.ScopeCase}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getScopeCase = function() {\n  return /** @type {proto.lnrpc.PolicyUpdateRequest.ScopeCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.PolicyUpdateRequest.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PolicyUpdateRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PolicyUpdateRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PolicyUpdateRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    global: jspb.Message.getFieldWithDefault(msg, 1, false),\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    baseFeeMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    feeRate: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),\n    timeLockDelta: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    maxHtlcMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    minHtlcMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    minHtlcMsatSpecified: jspb.Message.getFieldWithDefault(msg, 8, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PolicyUpdateRequest}\n */\nproto.lnrpc.PolicyUpdateRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PolicyUpdateRequest;\n  return proto.lnrpc.PolicyUpdateRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PolicyUpdateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PolicyUpdateRequest}\n */\nproto.lnrpc.PolicyUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setGlobal(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBaseFeeMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFeeRate(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTimeLockDelta(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxHtlcMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMinHtlcMsat(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setMinHtlcMsatSpecified(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PolicyUpdateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PolicyUpdateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PolicyUpdateRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getBaseFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFeeRate();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      4,\n      f\n    );\n  }\n  f = message.getTimeLockDelta();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getMaxHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getMinHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getMinHtlcMsatSpecified();\n  if (f) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool global = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getGlobal = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setGlobal = function(value) {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.PolicyUpdateRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.PolicyUpdateRequest.prototype.clearGlobal = function() {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.PolicyUpdateRequest.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.hasGlobal = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ChannelPoint chan_point = 2;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 2));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setChanPoint = function(value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.lnrpc.PolicyUpdateRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.PolicyUpdateRequest.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 base_fee_msat = 3;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getBaseFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setBaseFeeMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional double fee_rate = 4;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getFeeRate = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setFeeRate = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 time_lock_delta = 5;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getTimeLockDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setTimeLockDelta = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 max_htlc_msat = 6;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getMaxHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setMaxHtlcMsat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 min_htlc_msat = 7;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getMinHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setMinHtlcMsat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional bool min_htlc_msat_specified = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getMinHtlcMsatSpecified = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setMinHtlcMsatSpecified = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FailedUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FailedUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FailedUpdate.displayName = 'proto.lnrpc.FailedUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FailedUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FailedUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FailedUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FailedUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    outpoint: (f = msg.getOutpoint()) && proto.lnrpc.OutPoint.toObject(includeInstance, f),\n    reason: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    updateError: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FailedUpdate}\n */\nproto.lnrpc.FailedUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FailedUpdate;\n  return proto.lnrpc.FailedUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FailedUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FailedUpdate}\n */\nproto.lnrpc.FailedUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.OutPoint;\n      reader.readMessage(value,proto.lnrpc.OutPoint.deserializeBinaryFromReader);\n      msg.setOutpoint(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.lnrpc.UpdateFailure} */ (reader.readEnum());\n      msg.setReason(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdateError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FailedUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FailedUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FailedUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FailedUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOutpoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.OutPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getReason();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getUpdateError();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional OutPoint outpoint = 1;\n * @return {?proto.lnrpc.OutPoint}\n */\nproto.lnrpc.FailedUpdate.prototype.getOutpoint = function() {\n  return /** @type{?proto.lnrpc.OutPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.OutPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.OutPoint|undefined} value */\nproto.lnrpc.FailedUpdate.prototype.setOutpoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.FailedUpdate.prototype.clearOutpoint = function() {\n  this.setOutpoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FailedUpdate.prototype.hasOutpoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional UpdateFailure reason = 2;\n * @return {!proto.lnrpc.UpdateFailure}\n */\nproto.lnrpc.FailedUpdate.prototype.getReason = function() {\n  return /** @type {!proto.lnrpc.UpdateFailure} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {!proto.lnrpc.UpdateFailure} value */\nproto.lnrpc.FailedUpdate.prototype.setReason = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string update_error = 3;\n * @return {string}\n */\nproto.lnrpc.FailedUpdate.prototype.getUpdateError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.FailedUpdate.prototype.setUpdateError = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PolicyUpdateResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.PolicyUpdateResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.PolicyUpdateResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PolicyUpdateResponse.displayName = 'proto.lnrpc.PolicyUpdateResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.PolicyUpdateResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PolicyUpdateResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PolicyUpdateResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PolicyUpdateResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PolicyUpdateResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    failedUpdatesList: jspb.Message.toObjectList(msg.getFailedUpdatesList(),\n    proto.lnrpc.FailedUpdate.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PolicyUpdateResponse}\n */\nproto.lnrpc.PolicyUpdateResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PolicyUpdateResponse;\n  return proto.lnrpc.PolicyUpdateResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PolicyUpdateResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PolicyUpdateResponse}\n */\nproto.lnrpc.PolicyUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.FailedUpdate;\n      reader.readMessage(value,proto.lnrpc.FailedUpdate.deserializeBinaryFromReader);\n      msg.addFailedUpdates(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PolicyUpdateResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PolicyUpdateResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PolicyUpdateResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PolicyUpdateResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFailedUpdatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.FailedUpdate.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated FailedUpdate failed_updates = 1;\n * @return {!Array.<!proto.lnrpc.FailedUpdate>}\n */\nproto.lnrpc.PolicyUpdateResponse.prototype.getFailedUpdatesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.FailedUpdate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.FailedUpdate, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.FailedUpdate>} value */\nproto.lnrpc.PolicyUpdateResponse.prototype.setFailedUpdatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.FailedUpdate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.FailedUpdate}\n */\nproto.lnrpc.PolicyUpdateResponse.prototype.addFailedUpdates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.FailedUpdate, opt_index);\n};\n\n\nproto.lnrpc.PolicyUpdateResponse.prototype.clearFailedUpdatesList = function() {\n  this.setFailedUpdatesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ForwardingHistoryRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ForwardingHistoryRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ForwardingHistoryRequest.displayName = 'proto.lnrpc.ForwardingHistoryRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ForwardingHistoryRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ForwardingHistoryRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingHistoryRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    startTime: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    endTime: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    indexOffset: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    numMaxEvents: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ForwardingHistoryRequest}\n */\nproto.lnrpc.ForwardingHistoryRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ForwardingHistoryRequest;\n  return proto.lnrpc.ForwardingHistoryRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ForwardingHistoryRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ForwardingHistoryRequest}\n */\nproto.lnrpc.ForwardingHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setStartTime(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setEndTime(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setIndexOffset(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumMaxEvents(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ForwardingHistoryRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ForwardingHistoryRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingHistoryRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStartTime();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getEndTime();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getIndexOffset();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getNumMaxEvents();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 start_time = 1;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.getStartTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryRequest.prototype.setStartTime = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 end_time = 2;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.getEndTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryRequest.prototype.setEndTime = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 index_offset = 3;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.getIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryRequest.prototype.setIndexOffset = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 num_max_events = 4;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.getNumMaxEvents = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryRequest.prototype.setNumMaxEvents = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ForwardingEvent = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ForwardingEvent, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ForwardingEvent.displayName = 'proto.lnrpc.ForwardingEvent';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ForwardingEvent.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ForwardingEvent.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ForwardingEvent} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingEvent.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    chanIdIn: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\n    chanIdOut: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\n    amtIn: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    amtOut: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    fee: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    feeMsat: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    amtInMsat: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    amtOutMsat: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    timestampNs: jspb.Message.getFieldWithDefault(msg, 11, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ForwardingEvent}\n */\nproto.lnrpc.ForwardingEvent.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ForwardingEvent;\n  return proto.lnrpc.ForwardingEvent.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ForwardingEvent} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ForwardingEvent}\n */\nproto.lnrpc.ForwardingEvent.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setTimestamp(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanIdIn(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanIdOut(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtIn(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtOut(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFee(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFeeMsat(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtInMsat(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtOutMsat(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setTimestampNs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ForwardingEvent.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ForwardingEvent.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ForwardingEvent} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingEvent.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getChanIdIn();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      2,\n      f\n    );\n  }\n  f = message.getChanIdOut();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      4,\n      f\n    );\n  }\n  f = message.getAmtIn();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getAmtOut();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getFee();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getFeeMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n  f = message.getAmtInMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      9,\n      f\n    );\n  }\n  f = message.getAmtOutMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      10,\n      f\n    );\n  }\n  f = message.getTimestampNs();\n  if (f !== 0) {\n    writer.writeUint64(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 timestamp = 1;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setTimestamp = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 chan_id_in = 2;\n * @return {string}\n */\nproto.lnrpc.ForwardingEvent.prototype.getChanIdIn = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ForwardingEvent.prototype.setChanIdIn = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 chan_id_out = 4;\n * @return {string}\n */\nproto.lnrpc.ForwardingEvent.prototype.getChanIdOut = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ForwardingEvent.prototype.setChanIdOut = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 amt_in = 5;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getAmtIn = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setAmtIn = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 amt_out = 6;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getAmtOut = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setAmtOut = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 fee = 7;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setFee = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional uint64 fee_msat = 8;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setFeeMsat = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional uint64 amt_in_msat = 9;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getAmtInMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setAmtInMsat = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional uint64 amt_out_msat = 10;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getAmtOutMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setAmtOutMsat = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional uint64 timestamp_ns = 11;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getTimestampNs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setTimestampNs = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ForwardingHistoryResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ForwardingHistoryResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ForwardingHistoryResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ForwardingHistoryResponse.displayName = 'proto.lnrpc.ForwardingHistoryResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ForwardingHistoryResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ForwardingHistoryResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ForwardingHistoryResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingHistoryResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    forwardingEventsList: jspb.Message.toObjectList(msg.getForwardingEventsList(),\n    proto.lnrpc.ForwardingEvent.toObject, includeInstance),\n    lastOffsetIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ForwardingHistoryResponse}\n */\nproto.lnrpc.ForwardingHistoryResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ForwardingHistoryResponse;\n  return proto.lnrpc.ForwardingHistoryResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ForwardingHistoryResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ForwardingHistoryResponse}\n */\nproto.lnrpc.ForwardingHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ForwardingEvent;\n      reader.readMessage(value,proto.lnrpc.ForwardingEvent.deserializeBinaryFromReader);\n      msg.addForwardingEvents(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLastOffsetIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ForwardingHistoryResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ForwardingHistoryResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingHistoryResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getForwardingEventsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ForwardingEvent.serializeBinaryToWriter\n    );\n  }\n  f = message.getLastOffsetIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated ForwardingEvent forwarding_events = 1;\n * @return {!Array.<!proto.lnrpc.ForwardingEvent>}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.getForwardingEventsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ForwardingEvent>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ForwardingEvent, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ForwardingEvent>} value */\nproto.lnrpc.ForwardingHistoryResponse.prototype.setForwardingEventsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ForwardingEvent=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ForwardingEvent}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.addForwardingEvents = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ForwardingEvent, opt_index);\n};\n\n\nproto.lnrpc.ForwardingHistoryResponse.prototype.clearForwardingEventsList = function() {\n  this.setForwardingEventsList([]);\n};\n\n\n/**\n * optional uint32 last_offset_index = 2;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.getLastOffsetIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryResponse.prototype.setLastOffsetIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ExportChannelBackupRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ExportChannelBackupRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ExportChannelBackupRequest.displayName = 'proto.lnrpc.ExportChannelBackupRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ExportChannelBackupRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ExportChannelBackupRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ExportChannelBackupRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ExportChannelBackupRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ExportChannelBackupRequest}\n */\nproto.lnrpc.ExportChannelBackupRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ExportChannelBackupRequest;\n  return proto.lnrpc.ExportChannelBackupRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ExportChannelBackupRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ExportChannelBackupRequest}\n */\nproto.lnrpc.ExportChannelBackupRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ExportChannelBackupRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ExportChannelBackupRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ExportChannelBackupRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ExportChannelBackupRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint chan_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ExportChannelBackupRequest.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ExportChannelBackupRequest.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ExportChannelBackupRequest.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ExportChannelBackupRequest.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBackup = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBackup, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBackup.displayName = 'proto.lnrpc.ChannelBackup';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBackup.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBackup.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBackup} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackup.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    chanBackup: msg.getChanBackup_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBackup}\n */\nproto.lnrpc.ChannelBackup.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBackup;\n  return proto.lnrpc.ChannelBackup.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBackup} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBackup}\n */\nproto.lnrpc.ChannelBackup.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChanBackup(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBackup.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBackup.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBackup} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackup.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getChanBackup_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint chan_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelBackup.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelBackup.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ChannelBackup.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelBackup.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes chan_backup = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelBackup.prototype.getChanBackup = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes chan_backup = 2;\n * This is a type-conversion wrapper around `getChanBackup()`\n * @return {string}\n */\nproto.lnrpc.ChannelBackup.prototype.getChanBackup_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChanBackup()));\n};\n\n\n/**\n * optional bytes chan_backup = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChanBackup()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBackup.prototype.getChanBackup_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChanBackup()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelBackup.prototype.setChanBackup = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.MultiChanBackup = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.MultiChanBackup.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.MultiChanBackup, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.MultiChanBackup.displayName = 'proto.lnrpc.MultiChanBackup';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.MultiChanBackup.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.MultiChanBackup.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.MultiChanBackup.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.MultiChanBackup} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MultiChanBackup.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPointsList: jspb.Message.toObjectList(msg.getChanPointsList(),\n    proto.lnrpc.ChannelPoint.toObject, includeInstance),\n    multiChanBackup: msg.getMultiChanBackup_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.MultiChanBackup}\n */\nproto.lnrpc.MultiChanBackup.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.MultiChanBackup;\n  return proto.lnrpc.MultiChanBackup.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.MultiChanBackup} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.MultiChanBackup}\n */\nproto.lnrpc.MultiChanBackup.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.addChanPoints(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMultiChanBackup(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.MultiChanBackup.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.MultiChanBackup.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.MultiChanBackup} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MultiChanBackup.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPointsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getMultiChanBackup_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated ChannelPoint chan_points = 1;\n * @return {!Array.<!proto.lnrpc.ChannelPoint>}\n */\nproto.lnrpc.MultiChanBackup.prototype.getChanPointsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelPoint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelPoint>} value */\nproto.lnrpc.MultiChanBackup.prototype.setChanPointsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelPoint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.MultiChanBackup.prototype.addChanPoints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ChannelPoint, opt_index);\n};\n\n\nproto.lnrpc.MultiChanBackup.prototype.clearChanPointsList = function() {\n  this.setChanPointsList([]);\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * @return {string}\n */\nproto.lnrpc.MultiChanBackup.prototype.getMultiChanBackup = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * This is a type-conversion wrapper around `getMultiChanBackup()`\n * @return {string}\n */\nproto.lnrpc.MultiChanBackup.prototype.getMultiChanBackup_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMultiChanBackup()));\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMultiChanBackup()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.MultiChanBackup.prototype.getMultiChanBackup_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMultiChanBackup()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.MultiChanBackup.prototype.setMultiChanBackup = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChanBackupExportRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChanBackupExportRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChanBackupExportRequest.displayName = 'proto.lnrpc.ChanBackupExportRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChanBackupExportRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChanBackupExportRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChanBackupExportRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanBackupExportRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChanBackupExportRequest}\n */\nproto.lnrpc.ChanBackupExportRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChanBackupExportRequest;\n  return proto.lnrpc.ChanBackupExportRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChanBackupExportRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChanBackupExportRequest}\n */\nproto.lnrpc.ChanBackupExportRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanBackupExportRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChanBackupExportRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChanBackupExportRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanBackupExportRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChanBackupSnapshot = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChanBackupSnapshot, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChanBackupSnapshot.displayName = 'proto.lnrpc.ChanBackupSnapshot';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChanBackupSnapshot.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChanBackupSnapshot} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanBackupSnapshot.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    singleChanBackups: (f = msg.getSingleChanBackups()) && proto.lnrpc.ChannelBackups.toObject(includeInstance, f),\n    multiChanBackup: (f = msg.getMultiChanBackup()) && proto.lnrpc.MultiChanBackup.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChanBackupSnapshot}\n */\nproto.lnrpc.ChanBackupSnapshot.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChanBackupSnapshot;\n  return proto.lnrpc.ChanBackupSnapshot.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChanBackupSnapshot} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChanBackupSnapshot}\n */\nproto.lnrpc.ChanBackupSnapshot.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelBackups;\n      reader.readMessage(value,proto.lnrpc.ChannelBackups.deserializeBinaryFromReader);\n      msg.setSingleChanBackups(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.MultiChanBackup;\n      reader.readMessage(value,proto.lnrpc.MultiChanBackup.deserializeBinaryFromReader);\n      msg.setMultiChanBackup(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChanBackupSnapshot.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChanBackupSnapshot} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanBackupSnapshot.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSingleChanBackups();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelBackups.serializeBinaryToWriter\n    );\n  }\n  f = message.getMultiChanBackup();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.MultiChanBackup.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ChannelBackups single_chan_backups = 1;\n * @return {?proto.lnrpc.ChannelBackups}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.getSingleChanBackups = function() {\n  return /** @type{?proto.lnrpc.ChannelBackups} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelBackups, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelBackups|undefined} value */\nproto.lnrpc.ChanBackupSnapshot.prototype.setSingleChanBackups = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ChanBackupSnapshot.prototype.clearSingleChanBackups = function() {\n  this.setSingleChanBackups(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.hasSingleChanBackups = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional MultiChanBackup multi_chan_backup = 2;\n * @return {?proto.lnrpc.MultiChanBackup}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.getMultiChanBackup = function() {\n  return /** @type{?proto.lnrpc.MultiChanBackup} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.MultiChanBackup, 2));\n};\n\n\n/** @param {?proto.lnrpc.MultiChanBackup|undefined} value */\nproto.lnrpc.ChanBackupSnapshot.prototype.setMultiChanBackup = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.ChanBackupSnapshot.prototype.clearMultiChanBackup = function() {\n  this.setMultiChanBackup(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.hasMultiChanBackup = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBackups = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ChannelBackups.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBackups, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBackups.displayName = 'proto.lnrpc.ChannelBackups';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ChannelBackups.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBackups.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBackups.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBackups} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackups.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanBackupsList: jspb.Message.toObjectList(msg.getChanBackupsList(),\n    proto.lnrpc.ChannelBackup.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBackups}\n */\nproto.lnrpc.ChannelBackups.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBackups;\n  return proto.lnrpc.ChannelBackups.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBackups} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBackups}\n */\nproto.lnrpc.ChannelBackups.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelBackup;\n      reader.readMessage(value,proto.lnrpc.ChannelBackup.deserializeBinaryFromReader);\n      msg.addChanBackups(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBackups.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBackups.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBackups} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackups.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanBackupsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelBackup.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ChannelBackup chan_backups = 1;\n * @return {!Array.<!proto.lnrpc.ChannelBackup>}\n */\nproto.lnrpc.ChannelBackups.prototype.getChanBackupsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelBackup>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelBackup, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelBackup>} value */\nproto.lnrpc.ChannelBackups.prototype.setChanBackupsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelBackup=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelBackup}\n */\nproto.lnrpc.ChannelBackups.prototype.addChanBackups = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ChannelBackup, opt_index);\n};\n\n\nproto.lnrpc.ChannelBackups.prototype.clearChanBackupsList = function() {\n  this.setChanBackupsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RestoreChanBackupRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.RestoreChanBackupRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RestoreChanBackupRequest.displayName = 'proto.lnrpc.RestoreChanBackupRequest';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.RestoreChanBackupRequest.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.RestoreChanBackupRequest.BackupCase = {\n  BACKUP_NOT_SET: 0,\n  CHAN_BACKUPS: 1,\n  MULTI_CHAN_BACKUP: 2\n};\n\n/**\n * @return {proto.lnrpc.RestoreChanBackupRequest.BackupCase}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getBackupCase = function() {\n  return /** @type {proto.lnrpc.RestoreChanBackupRequest.BackupCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RestoreChanBackupRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RestoreChanBackupRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RestoreChanBackupRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanBackups: (f = msg.getChanBackups()) && proto.lnrpc.ChannelBackups.toObject(includeInstance, f),\n    multiChanBackup: msg.getMultiChanBackup_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RestoreChanBackupRequest}\n */\nproto.lnrpc.RestoreChanBackupRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RestoreChanBackupRequest;\n  return proto.lnrpc.RestoreChanBackupRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RestoreChanBackupRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RestoreChanBackupRequest}\n */\nproto.lnrpc.RestoreChanBackupRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelBackups;\n      reader.readMessage(value,proto.lnrpc.ChannelBackups.deserializeBinaryFromReader);\n      msg.setChanBackups(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMultiChanBackup(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RestoreChanBackupRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RestoreChanBackupRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RestoreChanBackupRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanBackups();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelBackups.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ChannelBackups chan_backups = 1;\n * @return {?proto.lnrpc.ChannelBackups}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getChanBackups = function() {\n  return /** @type{?proto.lnrpc.ChannelBackups} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelBackups, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelBackups|undefined} value */\nproto.lnrpc.RestoreChanBackupRequest.prototype.setChanBackups = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.RestoreChanBackupRequest.prototype.clearChanBackups = function() {\n  this.setChanBackups(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.hasChanBackups = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * @return {string}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getMultiChanBackup = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * This is a type-conversion wrapper around `getMultiChanBackup()`\n * @return {string}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getMultiChanBackup_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMultiChanBackup()));\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMultiChanBackup()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getMultiChanBackup_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMultiChanBackup()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.RestoreChanBackupRequest.prototype.setMultiChanBackup = function(value) {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.RestoreChanBackupRequest.prototype.clearMultiChanBackup = function() {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.hasMultiChanBackup = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RestoreBackupResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.RestoreBackupResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RestoreBackupResponse.displayName = 'proto.lnrpc.RestoreBackupResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RestoreBackupResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RestoreBackupResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RestoreBackupResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RestoreBackupResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RestoreBackupResponse}\n */\nproto.lnrpc.RestoreBackupResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RestoreBackupResponse;\n  return proto.lnrpc.RestoreBackupResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RestoreBackupResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RestoreBackupResponse}\n */\nproto.lnrpc.RestoreBackupResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RestoreBackupResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RestoreBackupResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RestoreBackupResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RestoreBackupResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBackupSubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBackupSubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBackupSubscription.displayName = 'proto.lnrpc.ChannelBackupSubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBackupSubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBackupSubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBackupSubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackupSubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBackupSubscription}\n */\nproto.lnrpc.ChannelBackupSubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBackupSubscription;\n  return proto.lnrpc.ChannelBackupSubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBackupSubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBackupSubscription}\n */\nproto.lnrpc.ChannelBackupSubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBackupSubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBackupSubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBackupSubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackupSubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.VerifyChanBackupResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.VerifyChanBackupResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.VerifyChanBackupResponse.displayName = 'proto.lnrpc.VerifyChanBackupResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.VerifyChanBackupResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.VerifyChanBackupResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.VerifyChanBackupResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyChanBackupResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.VerifyChanBackupResponse}\n */\nproto.lnrpc.VerifyChanBackupResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.VerifyChanBackupResponse;\n  return proto.lnrpc.VerifyChanBackupResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.VerifyChanBackupResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.VerifyChanBackupResponse}\n */\nproto.lnrpc.VerifyChanBackupResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.VerifyChanBackupResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.VerifyChanBackupResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.VerifyChanBackupResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyChanBackupResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.MacaroonPermission = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.MacaroonPermission, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.MacaroonPermission.displayName = 'proto.lnrpc.MacaroonPermission';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.MacaroonPermission.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.MacaroonPermission.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.MacaroonPermission} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MacaroonPermission.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    entity: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    action: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.MacaroonPermission}\n */\nproto.lnrpc.MacaroonPermission.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.MacaroonPermission;\n  return proto.lnrpc.MacaroonPermission.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.MacaroonPermission} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.MacaroonPermission}\n */\nproto.lnrpc.MacaroonPermission.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEntity(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAction(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.MacaroonPermission.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.MacaroonPermission.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.MacaroonPermission} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MacaroonPermission.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEntity();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAction();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string entity = 1;\n * @return {string}\n */\nproto.lnrpc.MacaroonPermission.prototype.getEntity = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.MacaroonPermission.prototype.setEntity = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string action = 2;\n * @return {string}\n */\nproto.lnrpc.MacaroonPermission.prototype.getAction = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.MacaroonPermission.prototype.setAction = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.BakeMacaroonRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.BakeMacaroonRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.BakeMacaroonRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.BakeMacaroonRequest.displayName = 'proto.lnrpc.BakeMacaroonRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.BakeMacaroonRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.BakeMacaroonRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.BakeMacaroonRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.BakeMacaroonRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BakeMacaroonRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    permissionsList: jspb.Message.toObjectList(msg.getPermissionsList(),\n    proto.lnrpc.MacaroonPermission.toObject, includeInstance),\n    rootKeyId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    allowExternalPermissions: jspb.Message.getFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.BakeMacaroonRequest}\n */\nproto.lnrpc.BakeMacaroonRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.BakeMacaroonRequest;\n  return proto.lnrpc.BakeMacaroonRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.BakeMacaroonRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.BakeMacaroonRequest}\n */\nproto.lnrpc.BakeMacaroonRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.MacaroonPermission;\n      reader.readMessage(value,proto.lnrpc.MacaroonPermission.deserializeBinaryFromReader);\n      msg.addPermissions(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRootKeyId(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAllowExternalPermissions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.BakeMacaroonRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.BakeMacaroonRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.BakeMacaroonRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BakeMacaroonRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPermissionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.MacaroonPermission.serializeBinaryToWriter\n    );\n  }\n  f = message.getRootKeyId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getAllowExternalPermissions();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated MacaroonPermission permissions = 1;\n * @return {!Array.<!proto.lnrpc.MacaroonPermission>}\n */\nproto.lnrpc.BakeMacaroonRequest.prototype.getPermissionsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.MacaroonPermission>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.MacaroonPermission, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.MacaroonPermission>} value */\nproto.lnrpc.BakeMacaroonRequest.prototype.setPermissionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.MacaroonPermission=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.MacaroonPermission}\n */\nproto.lnrpc.BakeMacaroonRequest.prototype.addPermissions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.MacaroonPermission, opt_index);\n};\n\n\nproto.lnrpc.BakeMacaroonRequest.prototype.clearPermissionsList = function() {\n  this.setPermissionsList([]);\n};\n\n\n/**\n * optional uint64 root_key_id = 2;\n * @return {number}\n */\nproto.lnrpc.BakeMacaroonRequest.prototype.getRootKeyId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.BakeMacaroonRequest.prototype.setRootKeyId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool allow_external_permissions = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.BakeMacaroonRequest.prototype.getAllowExternalPermissions = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.BakeMacaroonRequest.prototype.setAllowExternalPermissions = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.BakeMacaroonResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.BakeMacaroonResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.BakeMacaroonResponse.displayName = 'proto.lnrpc.BakeMacaroonResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.BakeMacaroonResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.BakeMacaroonResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.BakeMacaroonResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BakeMacaroonResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    macaroon: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.BakeMacaroonResponse}\n */\nproto.lnrpc.BakeMacaroonResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.BakeMacaroonResponse;\n  return proto.lnrpc.BakeMacaroonResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.BakeMacaroonResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.BakeMacaroonResponse}\n */\nproto.lnrpc.BakeMacaroonResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMacaroon(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.BakeMacaroonResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.BakeMacaroonResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.BakeMacaroonResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BakeMacaroonResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMacaroon();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string macaroon = 1;\n * @return {string}\n */\nproto.lnrpc.BakeMacaroonResponse.prototype.getMacaroon = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.BakeMacaroonResponse.prototype.setMacaroon = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListMacaroonIDsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListMacaroonIDsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListMacaroonIDsRequest.displayName = 'proto.lnrpc.ListMacaroonIDsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListMacaroonIDsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListMacaroonIDsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListMacaroonIDsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListMacaroonIDsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListMacaroonIDsRequest}\n */\nproto.lnrpc.ListMacaroonIDsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListMacaroonIDsRequest;\n  return proto.lnrpc.ListMacaroonIDsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListMacaroonIDsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListMacaroonIDsRequest}\n */\nproto.lnrpc.ListMacaroonIDsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListMacaroonIDsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListMacaroonIDsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListMacaroonIDsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListMacaroonIDsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListMacaroonIDsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListMacaroonIDsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListMacaroonIDsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListMacaroonIDsResponse.displayName = 'proto.lnrpc.ListMacaroonIDsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListMacaroonIDsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListMacaroonIDsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListMacaroonIDsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListMacaroonIDsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListMacaroonIDsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rootKeyIdsList: jspb.Message.getRepeatedField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListMacaroonIDsResponse}\n */\nproto.lnrpc.ListMacaroonIDsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListMacaroonIDsResponse;\n  return proto.lnrpc.ListMacaroonIDsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListMacaroonIDsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListMacaroonIDsResponse}\n */\nproto.lnrpc.ListMacaroonIDsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Array.<number>} */ (reader.readPackedUint64());\n      msg.setRootKeyIdsList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListMacaroonIDsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListMacaroonIDsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListMacaroonIDsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListMacaroonIDsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRootKeyIdsList();\n  if (f.length > 0) {\n    writer.writePackedUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint64 root_key_ids = 1;\n * @return {!Array.<number>}\n */\nproto.lnrpc.ListMacaroonIDsResponse.prototype.getRootKeyIdsList = function() {\n  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array.<number>} value */\nproto.lnrpc.ListMacaroonIDsResponse.prototype.setRootKeyIdsList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!number} value\n * @param {number=} opt_index\n */\nproto.lnrpc.ListMacaroonIDsResponse.prototype.addRootKeyIds = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.lnrpc.ListMacaroonIDsResponse.prototype.clearRootKeyIdsList = function() {\n  this.setRootKeyIdsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DeleteMacaroonIDRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DeleteMacaroonIDRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DeleteMacaroonIDRequest.displayName = 'proto.lnrpc.DeleteMacaroonIDRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DeleteMacaroonIDRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DeleteMacaroonIDRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DeleteMacaroonIDRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteMacaroonIDRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rootKeyId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DeleteMacaroonIDRequest}\n */\nproto.lnrpc.DeleteMacaroonIDRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DeleteMacaroonIDRequest;\n  return proto.lnrpc.DeleteMacaroonIDRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DeleteMacaroonIDRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DeleteMacaroonIDRequest}\n */\nproto.lnrpc.DeleteMacaroonIDRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRootKeyId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DeleteMacaroonIDRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DeleteMacaroonIDRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DeleteMacaroonIDRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteMacaroonIDRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRootKeyId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 root_key_id = 1;\n * @return {number}\n */\nproto.lnrpc.DeleteMacaroonIDRequest.prototype.getRootKeyId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.DeleteMacaroonIDRequest.prototype.setRootKeyId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DeleteMacaroonIDResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DeleteMacaroonIDResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DeleteMacaroonIDResponse.displayName = 'proto.lnrpc.DeleteMacaroonIDResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DeleteMacaroonIDResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DeleteMacaroonIDResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DeleteMacaroonIDResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteMacaroonIDResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    deleted: jspb.Message.getFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DeleteMacaroonIDResponse}\n */\nproto.lnrpc.DeleteMacaroonIDResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DeleteMacaroonIDResponse;\n  return proto.lnrpc.DeleteMacaroonIDResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DeleteMacaroonIDResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DeleteMacaroonIDResponse}\n */\nproto.lnrpc.DeleteMacaroonIDResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDeleted(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DeleteMacaroonIDResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DeleteMacaroonIDResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DeleteMacaroonIDResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteMacaroonIDResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDeleted();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool deleted = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.DeleteMacaroonIDResponse.prototype.getDeleted = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.DeleteMacaroonIDResponse.prototype.setDeleted = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.MacaroonPermissionList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.MacaroonPermissionList.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.MacaroonPermissionList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.MacaroonPermissionList.displayName = 'proto.lnrpc.MacaroonPermissionList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.MacaroonPermissionList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.MacaroonPermissionList.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.MacaroonPermissionList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.MacaroonPermissionList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MacaroonPermissionList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    permissionsList: jspb.Message.toObjectList(msg.getPermissionsList(),\n    proto.lnrpc.MacaroonPermission.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.MacaroonPermissionList}\n */\nproto.lnrpc.MacaroonPermissionList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.MacaroonPermissionList;\n  return proto.lnrpc.MacaroonPermissionList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.MacaroonPermissionList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.MacaroonPermissionList}\n */\nproto.lnrpc.MacaroonPermissionList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.MacaroonPermission;\n      reader.readMessage(value,proto.lnrpc.MacaroonPermission.deserializeBinaryFromReader);\n      msg.addPermissions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.MacaroonPermissionList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.MacaroonPermissionList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.MacaroonPermissionList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MacaroonPermissionList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPermissionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.MacaroonPermission.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated MacaroonPermission permissions = 1;\n * @return {!Array.<!proto.lnrpc.MacaroonPermission>}\n */\nproto.lnrpc.MacaroonPermissionList.prototype.getPermissionsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.MacaroonPermission>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.MacaroonPermission, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.MacaroonPermission>} value */\nproto.lnrpc.MacaroonPermissionList.prototype.setPermissionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.MacaroonPermission=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.MacaroonPermission}\n */\nproto.lnrpc.MacaroonPermissionList.prototype.addPermissions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.MacaroonPermission, opt_index);\n};\n\n\nproto.lnrpc.MacaroonPermissionList.prototype.clearPermissionsList = function() {\n  this.setPermissionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListPermissionsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListPermissionsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListPermissionsRequest.displayName = 'proto.lnrpc.ListPermissionsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListPermissionsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListPermissionsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListPermissionsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPermissionsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListPermissionsRequest}\n */\nproto.lnrpc.ListPermissionsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListPermissionsRequest;\n  return proto.lnrpc.ListPermissionsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListPermissionsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListPermissionsRequest}\n */\nproto.lnrpc.ListPermissionsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListPermissionsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListPermissionsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListPermissionsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPermissionsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListPermissionsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListPermissionsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListPermissionsResponse.displayName = 'proto.lnrpc.ListPermissionsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListPermissionsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListPermissionsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListPermissionsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPermissionsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    methodPermissionsMap: (f = msg.getMethodPermissionsMap()) ? f.toObject(includeInstance, proto.lnrpc.MacaroonPermissionList.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListPermissionsResponse}\n */\nproto.lnrpc.ListPermissionsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListPermissionsResponse;\n  return proto.lnrpc.ListPermissionsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListPermissionsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListPermissionsResponse}\n */\nproto.lnrpc.ListPermissionsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = msg.getMethodPermissionsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.MacaroonPermissionList.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListPermissionsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListPermissionsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListPermissionsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPermissionsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMethodPermissionsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.MacaroonPermissionList.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * map<string, MacaroonPermissionList> method_permissions = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!proto.lnrpc.MacaroonPermissionList>}\n */\nproto.lnrpc.ListPermissionsResponse.prototype.getMethodPermissionsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!proto.lnrpc.MacaroonPermissionList>} */ (\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\n      proto.lnrpc.MacaroonPermissionList));\n};\n\n\nproto.lnrpc.ListPermissionsResponse.prototype.clearMethodPermissionsMap = function() {\n  this.getMethodPermissionsMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Failure = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Failure, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Failure.displayName = 'proto.lnrpc.Failure';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Failure.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Failure.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Failure} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Failure.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    channelUpdate: (f = msg.getChannelUpdate()) && proto.lnrpc.ChannelUpdate.toObject(includeInstance, f),\n    htlcMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    onionSha256: msg.getOnionSha256_asB64(),\n    cltvExpiry: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    flags: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    failureSourceIndex: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    height: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Failure}\n */\nproto.lnrpc.Failure.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Failure;\n  return proto.lnrpc.Failure.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Failure} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Failure}\n */\nproto.lnrpc.Failure.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lnrpc.Failure.FailureCode} */ (reader.readEnum());\n      msg.setCode(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ChannelUpdate;\n      reader.readMessage(value,proto.lnrpc.ChannelUpdate.deserializeBinaryFromReader);\n      msg.setChannelUpdate(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHtlcMsat(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOnionSha256(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCltvExpiry(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFlags(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFailureSourceIndex(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Failure.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Failure.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Failure} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Failure.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getChannelUpdate();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.ChannelUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getOnionSha256_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getCltvExpiry();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n  f = message.getFlags();\n  if (f !== 0) {\n    writer.writeUint32(\n      7,\n      f\n    );\n  }\n  f = message.getFailureSourceIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      8,\n      f\n    );\n  }\n  f = message.getHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Failure.FailureCode = {\n  RESERVED: 0,\n  INCORRECT_OR_UNKNOWN_PAYMENT_DETAILS: 1,\n  INCORRECT_PAYMENT_AMOUNT: 2,\n  FINAL_INCORRECT_CLTV_EXPIRY: 3,\n  FINAL_INCORRECT_HTLC_AMOUNT: 4,\n  FINAL_EXPIRY_TOO_SOON: 5,\n  INVALID_REALM: 6,\n  EXPIRY_TOO_SOON: 7,\n  INVALID_ONION_VERSION: 8,\n  INVALID_ONION_HMAC: 9,\n  INVALID_ONION_KEY: 10,\n  AMOUNT_BELOW_MINIMUM: 11,\n  FEE_INSUFFICIENT: 12,\n  INCORRECT_CLTV_EXPIRY: 13,\n  CHANNEL_DISABLED: 14,\n  TEMPORARY_CHANNEL_FAILURE: 15,\n  REQUIRED_NODE_FEATURE_MISSING: 16,\n  REQUIRED_CHANNEL_FEATURE_MISSING: 17,\n  UNKNOWN_NEXT_PEER: 18,\n  TEMPORARY_NODE_FAILURE: 19,\n  PERMANENT_NODE_FAILURE: 20,\n  PERMANENT_CHANNEL_FAILURE: 21,\n  EXPIRY_TOO_FAR: 22,\n  MPP_TIMEOUT: 23,\n  INVALID_ONION_PAYLOAD: 24,\n  INTERNAL_FAILURE: 997,\n  UNKNOWN_FAILURE: 998,\n  UNREADABLE_FAILURE: 999\n};\n\n/**\n * optional FailureCode code = 1;\n * @return {!proto.lnrpc.Failure.FailureCode}\n */\nproto.lnrpc.Failure.prototype.getCode = function() {\n  return /** @type {!proto.lnrpc.Failure.FailureCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.Failure.FailureCode} value */\nproto.lnrpc.Failure.prototype.setCode = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional ChannelUpdate channel_update = 3;\n * @return {?proto.lnrpc.ChannelUpdate}\n */\nproto.lnrpc.Failure.prototype.getChannelUpdate = function() {\n  return /** @type{?proto.lnrpc.ChannelUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelUpdate, 3));\n};\n\n\n/** @param {?proto.lnrpc.ChannelUpdate|undefined} value */\nproto.lnrpc.Failure.prototype.setChannelUpdate = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.Failure.prototype.clearChannelUpdate = function() {\n  this.setChannelUpdate(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Failure.prototype.hasChannelUpdate = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint64 htlc_msat = 4;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setHtlcMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bytes onion_sha_256 = 5;\n * @return {string}\n */\nproto.lnrpc.Failure.prototype.getOnionSha256 = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes onion_sha_256 = 5;\n * This is a type-conversion wrapper around `getOnionSha256()`\n * @return {string}\n */\nproto.lnrpc.Failure.prototype.getOnionSha256_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOnionSha256()));\n};\n\n\n/**\n * optional bytes onion_sha_256 = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOnionSha256()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.Failure.prototype.getOnionSha256_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOnionSha256()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.Failure.prototype.setOnionSha256 = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 cltv_expiry = 6;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getCltvExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setCltvExpiry = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint32 flags = 7;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getFlags = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setFlags = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional uint32 failure_source_index = 8;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getFailureSourceIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setFailureSourceIndex = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional uint32 height = 9;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setHeight = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelUpdate.displayName = 'proto.lnrpc.ChannelUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    signature: msg.getSignature_asB64(),\n    chainHash: msg.getChainHash_asB64(),\n    chanId: jspb.Message.getFieldWithDefault(msg, 3, \"0\"),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    messageFlags: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    channelFlags: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    timeLockDelta: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    htlcMinimumMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    baseFee: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    feeRate: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    htlcMaximumMsat: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    extraOpaqueData: msg.getExtraOpaqueData_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelUpdate}\n */\nproto.lnrpc.ChannelUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelUpdate;\n  return proto.lnrpc.ChannelUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelUpdate}\n */\nproto.lnrpc.ChannelUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChainHash(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTimestamp(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMessageFlags(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setChannelFlags(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTimeLockDelta(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHtlcMinimumMsat(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setBaseFee(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFeeRate(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHtlcMaximumMsat(value);\n      break;\n    case 12:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setExtraOpaqueData(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getChainHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      3,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getMessageFlags();\n  if (f !== 0) {\n    writer.writeUint32(\n      10,\n      f\n    );\n  }\n  f = message.getChannelFlags();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getTimeLockDelta();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n  f = message.getHtlcMinimumMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getBaseFee();\n  if (f !== 0) {\n    writer.writeUint32(\n      8,\n      f\n    );\n  }\n  f = message.getFeeRate();\n  if (f !== 0) {\n    writer.writeUint32(\n      9,\n      f\n    );\n  }\n  f = message.getHtlcMaximumMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      11,\n      f\n    );\n  }\n  f = message.getExtraOpaqueData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      12,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes signature = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes signature = 1;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelUpdate.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelUpdate.prototype.setSignature = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChainHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * This is a type-conversion wrapper around `getChainHash()`\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChainHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChainHash()));\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChainHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChainHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChainHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelUpdate.prototype.setChainHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 chan_id = 3;\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelUpdate.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 timestamp = 4;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setTimestamp = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 message_flags = 10;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getMessageFlags = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setMessageFlags = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional uint32 channel_flags = 5;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChannelFlags = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setChannelFlags = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 time_lock_delta = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getTimeLockDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setTimeLockDelta = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 htlc_minimum_msat = 7;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getHtlcMinimumMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setHtlcMinimumMsat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional uint32 base_fee = 8;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getBaseFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setBaseFee = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional uint32 fee_rate = 9;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getFeeRate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setFeeRate = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional uint64 htlc_maximum_msat = 11;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getHtlcMaximumMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setHtlcMaximumMsat = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional bytes extra_opaque_data = 12;\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getExtraOpaqueData = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * optional bytes extra_opaque_data = 12;\n * This is a type-conversion wrapper around `getExtraOpaqueData()`\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getExtraOpaqueData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getExtraOpaqueData()));\n};\n\n\n/**\n * optional bytes extra_opaque_data = 12;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getExtraOpaqueData()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelUpdate.prototype.getExtraOpaqueData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getExtraOpaqueData()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelUpdate.prototype.setExtraOpaqueData = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.MacaroonId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.MacaroonId.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.MacaroonId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.MacaroonId.displayName = 'proto.lnrpc.MacaroonId';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.MacaroonId.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.MacaroonId.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.MacaroonId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.MacaroonId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MacaroonId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nonce: msg.getNonce_asB64(),\n    storageid: msg.getStorageid_asB64(),\n    opsList: jspb.Message.toObjectList(msg.getOpsList(),\n    proto.lnrpc.Op.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.MacaroonId}\n */\nproto.lnrpc.MacaroonId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.MacaroonId;\n  return proto.lnrpc.MacaroonId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.MacaroonId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.MacaroonId}\n */\nproto.lnrpc.MacaroonId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNonce(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setStorageid(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.Op;\n      reader.readMessage(value,proto.lnrpc.Op.deserializeBinaryFromReader);\n      msg.addOps(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.MacaroonId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.MacaroonId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.MacaroonId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MacaroonId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNonce_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getStorageid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getOpsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.lnrpc.Op.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes nonce = 1;\n * @return {string}\n */\nproto.lnrpc.MacaroonId.prototype.getNonce = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes nonce = 1;\n * This is a type-conversion wrapper around `getNonce()`\n * @return {string}\n */\nproto.lnrpc.MacaroonId.prototype.getNonce_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNonce()));\n};\n\n\n/**\n * optional bytes nonce = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNonce()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.MacaroonId.prototype.getNonce_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNonce()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.MacaroonId.prototype.setNonce = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes storageId = 2;\n * @return {string}\n */\nproto.lnrpc.MacaroonId.prototype.getStorageid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes storageId = 2;\n * This is a type-conversion wrapper around `getStorageid()`\n * @return {string}\n */\nproto.lnrpc.MacaroonId.prototype.getStorageid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getStorageid()));\n};\n\n\n/**\n * optional bytes storageId = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getStorageid()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.MacaroonId.prototype.getStorageid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getStorageid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.MacaroonId.prototype.setStorageid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * repeated Op ops = 3;\n * @return {!Array.<!proto.lnrpc.Op>}\n */\nproto.lnrpc.MacaroonId.prototype.getOpsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Op>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Op, 3));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Op>} value */\nproto.lnrpc.MacaroonId.prototype.setOpsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Op=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Op}\n */\nproto.lnrpc.MacaroonId.prototype.addOps = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.lnrpc.Op, opt_index);\n};\n\n\nproto.lnrpc.MacaroonId.prototype.clearOpsList = function() {\n  this.setOpsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Op = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Op.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Op, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Op.displayName = 'proto.lnrpc.Op';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Op.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Op.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Op.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Op} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Op.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    entity: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    actionsList: jspb.Message.getRepeatedField(msg, 2)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Op}\n */\nproto.lnrpc.Op.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Op;\n  return proto.lnrpc.Op.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Op} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Op}\n */\nproto.lnrpc.Op.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEntity(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addActions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Op.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Op.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Op} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Op.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEntity();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getActionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string entity = 1;\n * @return {string}\n */\nproto.lnrpc.Op.prototype.getEntity = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Op.prototype.setEntity = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * repeated string actions = 2;\n * @return {!Array.<string>}\n */\nproto.lnrpc.Op.prototype.getActionsList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/** @param {!Array.<string>} value */\nproto.lnrpc.Op.prototype.setActionsList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.lnrpc.Op.prototype.addActions = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.lnrpc.Op.prototype.clearActionsList = function() {\n  this.setActionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.CheckMacPermRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.CheckMacPermRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.CheckMacPermRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.CheckMacPermRequest.displayName = 'proto.lnrpc.CheckMacPermRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.CheckMacPermRequest.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.CheckMacPermRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.CheckMacPermRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.CheckMacPermRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CheckMacPermRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    macaroon: msg.getMacaroon_asB64(),\n    permissionsList: jspb.Message.toObjectList(msg.getPermissionsList(),\n    proto.lnrpc.MacaroonPermission.toObject, includeInstance),\n    fullmethod: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.CheckMacPermRequest}\n */\nproto.lnrpc.CheckMacPermRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.CheckMacPermRequest;\n  return proto.lnrpc.CheckMacPermRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.CheckMacPermRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.CheckMacPermRequest}\n */\nproto.lnrpc.CheckMacPermRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMacaroon(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.MacaroonPermission;\n      reader.readMessage(value,proto.lnrpc.MacaroonPermission.deserializeBinaryFromReader);\n      msg.addPermissions(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFullmethod(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.CheckMacPermRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.CheckMacPermRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.CheckMacPermRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CheckMacPermRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMacaroon_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPermissionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.lnrpc.MacaroonPermission.serializeBinaryToWriter\n    );\n  }\n  f = message.getFullmethod();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes macaroon = 1;\n * @return {string}\n */\nproto.lnrpc.CheckMacPermRequest.prototype.getMacaroon = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes macaroon = 1;\n * This is a type-conversion wrapper around `getMacaroon()`\n * @return {string}\n */\nproto.lnrpc.CheckMacPermRequest.prototype.getMacaroon_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMacaroon()));\n};\n\n\n/**\n * optional bytes macaroon = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMacaroon()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.CheckMacPermRequest.prototype.getMacaroon_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMacaroon()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.CheckMacPermRequest.prototype.setMacaroon = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * repeated MacaroonPermission permissions = 2;\n * @return {!Array.<!proto.lnrpc.MacaroonPermission>}\n */\nproto.lnrpc.CheckMacPermRequest.prototype.getPermissionsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.MacaroonPermission>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.MacaroonPermission, 2));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.MacaroonPermission>} value */\nproto.lnrpc.CheckMacPermRequest.prototype.setPermissionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.MacaroonPermission=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.MacaroonPermission}\n */\nproto.lnrpc.CheckMacPermRequest.prototype.addPermissions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.lnrpc.MacaroonPermission, opt_index);\n};\n\n\nproto.lnrpc.CheckMacPermRequest.prototype.clearPermissionsList = function() {\n  this.setPermissionsList([]);\n};\n\n\n/**\n * optional string fullMethod = 3;\n * @return {string}\n */\nproto.lnrpc.CheckMacPermRequest.prototype.getFullmethod = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.CheckMacPermRequest.prototype.setFullmethod = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.CheckMacPermResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.CheckMacPermResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.CheckMacPermResponse.displayName = 'proto.lnrpc.CheckMacPermResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.CheckMacPermResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.CheckMacPermResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.CheckMacPermResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CheckMacPermResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    valid: jspb.Message.getFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.CheckMacPermResponse}\n */\nproto.lnrpc.CheckMacPermResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.CheckMacPermResponse;\n  return proto.lnrpc.CheckMacPermResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.CheckMacPermResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.CheckMacPermResponse}\n */\nproto.lnrpc.CheckMacPermResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setValid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.CheckMacPermResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.CheckMacPermResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.CheckMacPermResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CheckMacPermResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValid();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool valid = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.CheckMacPermResponse.prototype.getValid = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.CheckMacPermResponse.prototype.setValid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RPCMiddlewareRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.RPCMiddlewareRequest.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.RPCMiddlewareRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RPCMiddlewareRequest.displayName = 'proto.lnrpc.RPCMiddlewareRequest';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.RPCMiddlewareRequest.oneofGroups_ = [[4,5,6]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.RPCMiddlewareRequest.InterceptTypeCase = {\n  INTERCEPT_TYPE_NOT_SET: 0,\n  STREAM_AUTH: 4,\n  REQUEST: 5,\n  RESPONSE: 6\n};\n\n/**\n * @return {proto.lnrpc.RPCMiddlewareRequest.InterceptTypeCase}\n */\nproto.lnrpc.RPCMiddlewareRequest.prototype.getInterceptTypeCase = function() {\n  return /** @type {proto.lnrpc.RPCMiddlewareRequest.InterceptTypeCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.RPCMiddlewareRequest.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RPCMiddlewareRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RPCMiddlewareRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RPCMiddlewareRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RPCMiddlewareRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requestId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    rawMacaroon: msg.getRawMacaroon_asB64(),\n    customCaveatCondition: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    streamAuth: (f = msg.getStreamAuth()) && proto.lnrpc.StreamAuth.toObject(includeInstance, f),\n    request: (f = msg.getRequest()) && proto.lnrpc.RPCMessage.toObject(includeInstance, f),\n    response: (f = msg.getResponse()) && proto.lnrpc.RPCMessage.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RPCMiddlewareRequest}\n */\nproto.lnrpc.RPCMiddlewareRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RPCMiddlewareRequest;\n  return proto.lnrpc.RPCMiddlewareRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RPCMiddlewareRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RPCMiddlewareRequest}\n */\nproto.lnrpc.RPCMiddlewareRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRequestId(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRawMacaroon(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCustomCaveatCondition(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.StreamAuth;\n      reader.readMessage(value,proto.lnrpc.StreamAuth.deserializeBinaryFromReader);\n      msg.setStreamAuth(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.RPCMessage;\n      reader.readMessage(value,proto.lnrpc.RPCMessage.deserializeBinaryFromReader);\n      msg.setRequest(value);\n      break;\n    case 6:\n      var value = new proto.lnrpc.RPCMessage;\n      reader.readMessage(value,proto.lnrpc.RPCMessage.deserializeBinaryFromReader);\n      msg.setResponse(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RPCMiddlewareRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RPCMiddlewareRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RPCMiddlewareRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RPCMiddlewareRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRequestId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getRawMacaroon_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getCustomCaveatCondition();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getStreamAuth();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.StreamAuth.serializeBinaryToWriter\n    );\n  }\n  f = message.getRequest();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.lnrpc.RPCMessage.serializeBinaryToWriter\n    );\n  }\n  f = message.getResponse();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.lnrpc.RPCMessage.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 request_id = 1;\n * @return {number}\n */\nproto.lnrpc.RPCMiddlewareRequest.prototype.getRequestId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RPCMiddlewareRequest.prototype.setRequestId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes raw_macaroon = 2;\n * @return {string}\n */\nproto.lnrpc.RPCMiddlewareRequest.prototype.getRawMacaroon = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes raw_macaroon = 2;\n * This is a type-conversion wrapper around `getRawMacaroon()`\n * @return {string}\n */\nproto.lnrpc.RPCMiddlewareRequest.prototype.getRawMacaroon_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRawMacaroon()));\n};\n\n\n/**\n * optional bytes raw_macaroon = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRawMacaroon()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.RPCMiddlewareRequest.prototype.getRawMacaroon_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRawMacaroon()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.RPCMiddlewareRequest.prototype.setRawMacaroon = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string custom_caveat_condition = 3;\n * @return {string}\n */\nproto.lnrpc.RPCMiddlewareRequest.prototype.getCustomCaveatCondition = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.RPCMiddlewareRequest.prototype.setCustomCaveatCondition = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional StreamAuth stream_auth = 4;\n * @return {?proto.lnrpc.StreamAuth}\n */\nproto.lnrpc.RPCMiddlewareRequest.prototype.getStreamAuth = function() {\n  return /** @type{?proto.lnrpc.StreamAuth} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.StreamAuth, 4));\n};\n\n\n/** @param {?proto.lnrpc.StreamAuth|undefined} value */\nproto.lnrpc.RPCMiddlewareRequest.prototype.setStreamAuth = function(value) {\n  jspb.Message.setOneofWrapperField(this, 4, proto.lnrpc.RPCMiddlewareRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.RPCMiddlewareRequest.prototype.clearStreamAuth = function() {\n  this.setStreamAuth(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.RPCMiddlewareRequest.prototype.hasStreamAuth = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional RPCMessage request = 5;\n * @return {?proto.lnrpc.RPCMessage}\n */\nproto.lnrpc.RPCMiddlewareRequest.prototype.getRequest = function() {\n  return /** @type{?proto.lnrpc.RPCMessage} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.RPCMessage, 5));\n};\n\n\n/** @param {?proto.lnrpc.RPCMessage|undefined} value */\nproto.lnrpc.RPCMiddlewareRequest.prototype.setRequest = function(value) {\n  jspb.Message.setOneofWrapperField(this, 5, proto.lnrpc.RPCMiddlewareRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.RPCMiddlewareRequest.prototype.clearRequest = function() {\n  this.setRequest(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.RPCMiddlewareRequest.prototype.hasRequest = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional RPCMessage response = 6;\n * @return {?proto.lnrpc.RPCMessage}\n */\nproto.lnrpc.RPCMiddlewareRequest.prototype.getResponse = function() {\n  return /** @type{?proto.lnrpc.RPCMessage} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.RPCMessage, 6));\n};\n\n\n/** @param {?proto.lnrpc.RPCMessage|undefined} value */\nproto.lnrpc.RPCMiddlewareRequest.prototype.setResponse = function(value) {\n  jspb.Message.setOneofWrapperField(this, 6, proto.lnrpc.RPCMiddlewareRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.RPCMiddlewareRequest.prototype.clearResponse = function() {\n  this.setResponse(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.RPCMiddlewareRequest.prototype.hasResponse = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.StreamAuth = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.StreamAuth, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.StreamAuth.displayName = 'proto.lnrpc.StreamAuth';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.StreamAuth.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.StreamAuth.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.StreamAuth} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.StreamAuth.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    methodFullUri: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.StreamAuth}\n */\nproto.lnrpc.StreamAuth.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.StreamAuth;\n  return proto.lnrpc.StreamAuth.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.StreamAuth} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.StreamAuth}\n */\nproto.lnrpc.StreamAuth.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMethodFullUri(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.StreamAuth.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.StreamAuth.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.StreamAuth} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.StreamAuth.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMethodFullUri();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string method_full_uri = 1;\n * @return {string}\n */\nproto.lnrpc.StreamAuth.prototype.getMethodFullUri = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.StreamAuth.prototype.setMethodFullUri = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RPCMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.RPCMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RPCMessage.displayName = 'proto.lnrpc.RPCMessage';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RPCMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RPCMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RPCMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RPCMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    methodFullUri: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    streamRpc: jspb.Message.getFieldWithDefault(msg, 2, false),\n    typeName: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    serialized: msg.getSerialized_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RPCMessage}\n */\nproto.lnrpc.RPCMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RPCMessage;\n  return proto.lnrpc.RPCMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RPCMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RPCMessage}\n */\nproto.lnrpc.RPCMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMethodFullUri(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setStreamRpc(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTypeName(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSerialized(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RPCMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RPCMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RPCMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RPCMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMethodFullUri();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getStreamRpc();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getTypeName();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getSerialized_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string method_full_uri = 1;\n * @return {string}\n */\nproto.lnrpc.RPCMessage.prototype.getMethodFullUri = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.RPCMessage.prototype.setMethodFullUri = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool stream_rpc = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.RPCMessage.prototype.getStreamRpc = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.RPCMessage.prototype.setStreamRpc = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string type_name = 3;\n * @return {string}\n */\nproto.lnrpc.RPCMessage.prototype.getTypeName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.RPCMessage.prototype.setTypeName = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bytes serialized = 4;\n * @return {string}\n */\nproto.lnrpc.RPCMessage.prototype.getSerialized = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes serialized = 4;\n * This is a type-conversion wrapper around `getSerialized()`\n * @return {string}\n */\nproto.lnrpc.RPCMessage.prototype.getSerialized_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSerialized()));\n};\n\n\n/**\n * optional bytes serialized = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSerialized()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.RPCMessage.prototype.getSerialized_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSerialized()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.RPCMessage.prototype.setSerialized = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RPCMiddlewareResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.RPCMiddlewareResponse.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.RPCMiddlewareResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RPCMiddlewareResponse.displayName = 'proto.lnrpc.RPCMiddlewareResponse';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.RPCMiddlewareResponse.oneofGroups_ = [[2,3]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.RPCMiddlewareResponse.MiddlewareMessageCase = {\n  MIDDLEWARE_MESSAGE_NOT_SET: 0,\n  REGISTER: 2,\n  FEEDBACK: 3\n};\n\n/**\n * @return {proto.lnrpc.RPCMiddlewareResponse.MiddlewareMessageCase}\n */\nproto.lnrpc.RPCMiddlewareResponse.prototype.getMiddlewareMessageCase = function() {\n  return /** @type {proto.lnrpc.RPCMiddlewareResponse.MiddlewareMessageCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.RPCMiddlewareResponse.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RPCMiddlewareResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RPCMiddlewareResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RPCMiddlewareResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RPCMiddlewareResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requestId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    register: (f = msg.getRegister()) && proto.lnrpc.MiddlewareRegistration.toObject(includeInstance, f),\n    feedback: (f = msg.getFeedback()) && proto.lnrpc.InterceptFeedback.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RPCMiddlewareResponse}\n */\nproto.lnrpc.RPCMiddlewareResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RPCMiddlewareResponse;\n  return proto.lnrpc.RPCMiddlewareResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RPCMiddlewareResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RPCMiddlewareResponse}\n */\nproto.lnrpc.RPCMiddlewareResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRequestId(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.MiddlewareRegistration;\n      reader.readMessage(value,proto.lnrpc.MiddlewareRegistration.deserializeBinaryFromReader);\n      msg.setRegister(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.InterceptFeedback;\n      reader.readMessage(value,proto.lnrpc.InterceptFeedback.deserializeBinaryFromReader);\n      msg.setFeedback(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RPCMiddlewareResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RPCMiddlewareResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RPCMiddlewareResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RPCMiddlewareResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRequestId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getRegister();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.MiddlewareRegistration.serializeBinaryToWriter\n    );\n  }\n  f = message.getFeedback();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.InterceptFeedback.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 request_id = 1;\n * @return {number}\n */\nproto.lnrpc.RPCMiddlewareResponse.prototype.getRequestId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RPCMiddlewareResponse.prototype.setRequestId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional MiddlewareRegistration register = 2;\n * @return {?proto.lnrpc.MiddlewareRegistration}\n */\nproto.lnrpc.RPCMiddlewareResponse.prototype.getRegister = function() {\n  return /** @type{?proto.lnrpc.MiddlewareRegistration} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.MiddlewareRegistration, 2));\n};\n\n\n/** @param {?proto.lnrpc.MiddlewareRegistration|undefined} value */\nproto.lnrpc.RPCMiddlewareResponse.prototype.setRegister = function(value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.lnrpc.RPCMiddlewareResponse.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.RPCMiddlewareResponse.prototype.clearRegister = function() {\n  this.setRegister(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.RPCMiddlewareResponse.prototype.hasRegister = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional InterceptFeedback feedback = 3;\n * @return {?proto.lnrpc.InterceptFeedback}\n */\nproto.lnrpc.RPCMiddlewareResponse.prototype.getFeedback = function() {\n  return /** @type{?proto.lnrpc.InterceptFeedback} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.InterceptFeedback, 3));\n};\n\n\n/** @param {?proto.lnrpc.InterceptFeedback|undefined} value */\nproto.lnrpc.RPCMiddlewareResponse.prototype.setFeedback = function(value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.lnrpc.RPCMiddlewareResponse.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.RPCMiddlewareResponse.prototype.clearFeedback = function() {\n  this.setFeedback(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.RPCMiddlewareResponse.prototype.hasFeedback = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.MiddlewareRegistration = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.MiddlewareRegistration, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.MiddlewareRegistration.displayName = 'proto.lnrpc.MiddlewareRegistration';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.MiddlewareRegistration.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.MiddlewareRegistration.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.MiddlewareRegistration} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MiddlewareRegistration.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    middlewareName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    customMacaroonCaveatName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    readOnlyMode: jspb.Message.getFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.MiddlewareRegistration}\n */\nproto.lnrpc.MiddlewareRegistration.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.MiddlewareRegistration;\n  return proto.lnrpc.MiddlewareRegistration.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.MiddlewareRegistration} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.MiddlewareRegistration}\n */\nproto.lnrpc.MiddlewareRegistration.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMiddlewareName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCustomMacaroonCaveatName(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setReadOnlyMode(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.MiddlewareRegistration.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.MiddlewareRegistration.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.MiddlewareRegistration} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MiddlewareRegistration.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMiddlewareName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCustomMacaroonCaveatName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getReadOnlyMode();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string middleware_name = 1;\n * @return {string}\n */\nproto.lnrpc.MiddlewareRegistration.prototype.getMiddlewareName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.MiddlewareRegistration.prototype.setMiddlewareName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string custom_macaroon_caveat_name = 2;\n * @return {string}\n */\nproto.lnrpc.MiddlewareRegistration.prototype.getCustomMacaroonCaveatName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.MiddlewareRegistration.prototype.setCustomMacaroonCaveatName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool read_only_mode = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.MiddlewareRegistration.prototype.getReadOnlyMode = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.MiddlewareRegistration.prototype.setReadOnlyMode = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.InterceptFeedback = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.InterceptFeedback, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.InterceptFeedback.displayName = 'proto.lnrpc.InterceptFeedback';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.InterceptFeedback.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.InterceptFeedback.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.InterceptFeedback} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.InterceptFeedback.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    error: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    replaceResponse: jspb.Message.getFieldWithDefault(msg, 2, false),\n    replacementSerialized: msg.getReplacementSerialized_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.InterceptFeedback}\n */\nproto.lnrpc.InterceptFeedback.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.InterceptFeedback;\n  return proto.lnrpc.InterceptFeedback.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.InterceptFeedback} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.InterceptFeedback}\n */\nproto.lnrpc.InterceptFeedback.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setReplaceResponse(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setReplacementSerialized(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.InterceptFeedback.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.InterceptFeedback.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.InterceptFeedback} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.InterceptFeedback.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getReplaceResponse();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getReplacementSerialized_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string error = 1;\n * @return {string}\n */\nproto.lnrpc.InterceptFeedback.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.InterceptFeedback.prototype.setError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool replace_response = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.InterceptFeedback.prototype.getReplaceResponse = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.InterceptFeedback.prototype.setReplaceResponse = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bytes replacement_serialized = 3;\n * @return {string}\n */\nproto.lnrpc.InterceptFeedback.prototype.getReplacementSerialized = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes replacement_serialized = 3;\n * This is a type-conversion wrapper around `getReplacementSerialized()`\n * @return {string}\n */\nproto.lnrpc.InterceptFeedback.prototype.getReplacementSerialized_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getReplacementSerialized()));\n};\n\n\n/**\n * optional bytes replacement_serialized = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getReplacementSerialized()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.InterceptFeedback.prototype.getReplacementSerialized_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getReplacementSerialized()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.InterceptFeedback.prototype.setReplacementSerialized = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.AddressType = {\n  WITNESS_PUBKEY_HASH: 0,\n  NESTED_PUBKEY_HASH: 1,\n  UNUSED_WITNESS_PUBKEY_HASH: 2,\n  UNUSED_NESTED_PUBKEY_HASH: 3\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.CommitmentType = {\n  UNKNOWN_COMMITMENT_TYPE: 0,\n  LEGACY: 1,\n  STATIC_REMOTE_KEY: 2,\n  ANCHORS: 3\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Initiator = {\n  INITIATOR_UNKNOWN: 0,\n  INITIATOR_LOCAL: 1,\n  INITIATOR_REMOTE: 2,\n  INITIATOR_BOTH: 3\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ResolutionType = {\n  TYPE_UNKNOWN: 0,\n  ANCHOR: 1,\n  INCOMING_HTLC: 2,\n  OUTGOING_HTLC: 3,\n  COMMIT: 4\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ResolutionOutcome = {\n  OUTCOME_UNKNOWN: 0,\n  CLAIMED: 1,\n  UNCLAIMED: 2,\n  ABANDONED: 3,\n  FIRST_STAGE: 4,\n  TIMEOUT: 5\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.NodeMetricType = {\n  UNKNOWN: 0,\n  BETWEENNESS_CENTRALITY: 1\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.InvoiceHTLCState = {\n  ACCEPTED: 0,\n  SETTLED: 1,\n  CANCELED: 2\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.PaymentFailureReason = {\n  FAILURE_REASON_NONE: 0,\n  FAILURE_REASON_TIMEOUT: 1,\n  FAILURE_REASON_NO_ROUTE: 2,\n  FAILURE_REASON_ERROR: 3,\n  FAILURE_REASON_INCORRECT_PAYMENT_DETAILS: 4,\n  FAILURE_REASON_INSUFFICIENT_BALANCE: 5\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.FeatureBit = {\n  DATALOSS_PROTECT_REQ: 0,\n  DATALOSS_PROTECT_OPT: 1,\n  INITIAL_ROUING_SYNC: 3,\n  UPFRONT_SHUTDOWN_SCRIPT_REQ: 4,\n  UPFRONT_SHUTDOWN_SCRIPT_OPT: 5,\n  GOSSIP_QUERIES_REQ: 6,\n  GOSSIP_QUERIES_OPT: 7,\n  TLV_ONION_REQ: 8,\n  TLV_ONION_OPT: 9,\n  EXT_GOSSIP_QUERIES_REQ: 10,\n  EXT_GOSSIP_QUERIES_OPT: 11,\n  STATIC_REMOTE_KEY_REQ: 12,\n  STATIC_REMOTE_KEY_OPT: 13,\n  PAYMENT_ADDR_REQ: 14,\n  PAYMENT_ADDR_OPT: 15,\n  MPP_REQ: 16,\n  MPP_OPT: 17,\n  WUMBO_CHANNELS_REQ: 18,\n  WUMBO_CHANNELS_OPT: 19,\n  ANCHORS_REQ: 20,\n  ANCHORS_OPT: 21,\n  ANCHORS_ZERO_FEE_HTLC_REQ: 22,\n  ANCHORS_ZERO_FEE_HTLC_OPT: 23,\n  AMP_REQ: 30,\n  AMP_OPT: 31\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.UpdateFailure = {\n  UPDATE_FAILURE_UNKNOWN: 0,\n  UPDATE_FAILURE_PENDING: 1,\n  UPDATE_FAILURE_NOT_FOUND: 2,\n  UPDATE_FAILURE_INTERNAL_ERR: 3,\n  UPDATE_FAILURE_INVALID_PARAMETER: 4\n};\n\ngoog.object.extend(exports, proto.lnrpc);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgIcon = function SvgIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"64px\",\n    height: \"64px\",\n    viewBox: \"0 0 64 64\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear0\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 128,\n    y1: 0,\n    x2: 128,\n    y2: 256,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(96.078431%,82.745098%,34.901961%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(87.843137%,42.745098%,32.54902%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear1\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 93.8733,\n    y1: -15.8846,\n    x2: -58.6745,\n    y2: 93.3386,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(96.078431%,76.862745%,31.764706%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(53.333333%,27.45098%,12.54902%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear2\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 62.3809,\n    y1: 189.938,\n    x2: 62.3809,\n    y2: 62.9334,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(54.901961%,36.862745%,27.058824%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(76.078431%,45.098039%,17.647059%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear3\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 72.6365,\n    y1: 189.936,\n    x2: 72.6365,\n    y2: 164.801,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(54.901961%,36.862745%,27.058824%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(76.078431%,45.098039%,17.647059%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear4\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 199.67,\n    y1: 67.4072,\n    x2: 161.121,\n    y2: 118.237,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(96.078431%,76.862745%,31.764706%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(53.333333%,27.45098%,12.54902%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear5\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 187.348,\n    y1: 118.539,\n    x2: 187.348,\n    y2: 89.0773,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(54.901961%,36.862745%,27.058824%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(76.078431%,45.098039%,17.647059%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear6\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 181.471,\n    y1: 116.33,\n    x2: 181.471,\n    y2: 90.5618,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(54.901961%,36.862745%,27.058824%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(76.078431%,45.098039%,17.647059%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear7\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 151.716,\n    y1: 25.8754,\n    x2: 40.1938,\n    y2: 199.775,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(96.078431%,76.862745%,31.764706%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(53.333333%,27.45098%,12.54902%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear8\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 120.885,\n    y1: 182.607,\n    x2: 120.885,\n    y2: 113.818,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(54.901961%,36.862745%,27.058824%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(76.078431%,45.098039%,17.647059%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear9\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 139.345,\n    y1: 172.492,\n    x2: 139.345,\n    y2: 85.2225,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(54.901961%,36.862745%,27.058824%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(76.078431%,45.098039%,17.647059%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear10\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 97.8798,\n    y1: 182.607,\n    x2: 97.8798,\n    y2: 125.247,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(54.901961%,36.862745%,27.058824%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(76.078431%,45.098039%,17.647059%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear11\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 215.806,\n    y1: 50.2612,\n    x2: 125.745,\n    y2: 179.136,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(96.078431%,76.862745%,31.764706%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(53.333333%,27.45098%,12.54902%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear12\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 183.734,\n    y1: 172.758,\n    x2: 183.734,\n    y2: 96.6155,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(54.901961%,36.862745%,27.058824%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(76.078431%,45.098039%,17.647059%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear13\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 203.555,\n    y1: 172.758,\n    x2: 203.555,\n    y2: 103.649,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(82.352941%,61.960784%,30.980392%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(80.784314%,58.431373%,15.686275%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear14\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 172.398,\n    y1: 123.65,\n    x2: 172.398,\n    y2: 96.6146,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(54.901961%,36.862745%,27.058824%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(76.078431%,45.098039%,17.647059%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear15\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 181.251,\n    y1: 171.594,\n    x2: 181.251,\n    y2: 96.612,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(54.901961%,36.862745%,27.058824%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(76.078431%,45.098039%,17.647059%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear16\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 205.944,\n    y1: 30.8971,\n    x2: 101.64,\n    y2: 185.182,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(96.078431%,76.862745%,31.764706%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(53.333333%,27.45098%,12.54902%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear17\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 175.214,\n    y1: 167.588,\n    x2: 175.214,\n    y2: 88.1705,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(82.352941%,61.960784%,30.980392%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(80.784314%,58.431373%,15.686275%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear18\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 167.131,\n    y1: 174.119,\n    x2: 167.131,\n    y2: 85.2241,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(82.352941%,61.960784%,30.980392%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(80.784314%,58.431373%,15.686275%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear19\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 162.281,\n    y1: 116.99,\n    x2: 162.281,\n    y2: 93.9359,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(54.901961%,36.862745%,27.058824%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(76.078431%,45.098039%,17.647059%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear20\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 145.774,\n    y1: 88.3728,\n    x2: 81.2054,\n    y2: 224.24,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(96.078431%,76.862745%,31.764706%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(53.333333%,27.45098%,12.54902%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear21\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 105.652,\n    y1: 194.738,\n    x2: 105.652,\n    y2: 171.793,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(54.901961%,36.862745%,27.058824%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(76.078431%,45.098039%,17.647059%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear22\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 96.374,\n    y1: 182.607,\n    x2: 96.374,\n    y2: 128.622,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(82.352941%,61.960784%,30.980392%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(80.784314%,58.431373%,15.686275%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear23\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 96.3739,\n    y1: 194.738,\n    x2: 96.3739,\n    y2: 128.623,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(82.352941%,61.960784%,30.980392%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(80.784314%,58.431373%,15.686275%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear24\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 187.39,\n    y1: 75.0383,\n    x2: 153.091,\n    y2: 128.549,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(96.078431%,76.862745%,31.764706%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(53.333333%,27.45098%,12.54902%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear25\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 173.643,\n    y1: 123.137,\n    x2: 173.643,\n    y2: 93.2829,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(82.352941%,61.960784%,30.980392%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(80.784314%,58.431373%,15.686275%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear26\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 173.643,\n    y1: 123.252,\n    x2: 173.643,\n    y2: 105.857,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(54.901961%,36.862745%,27.058824%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(76.078431%,45.098039%,17.647059%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear27\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 194.819,\n    y1: 126.945,\n    x2: 193.34,\n    y2: 142.741,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(0%,0%,0%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(36.862745%,32.941176%,0%)\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear28\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 195.626,\n    y1: 126.205,\n    x2: 194.146,\n    y2: 142.001,\n    gradientTransform: \"matrix(0.25,0,0,0.25,0,0)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"rgb(0%,0%,0%)\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"rgb(36.862745%,32.941176%,0%)\",\n      stopOpacity: 1\n    }\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"surface1\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: 64,\n    height: 64,\n    style: {\n      fill: \"url(#linear0)\",\n      stroke: \"none\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear1)\"\n    },\n    d: \"M 9.75 16.457031 C 14.441406 15.105469 19.570312 16.300781 17.335938 21.894531 C 15.664062 26.078125 10.804688 32.289062 10.1875 38.113281 C 9.472656 44.816406 14.125 48.09375 19.425781 47.390625 C 21.433594 47.121094 22.371094 44.914062 23.574219 42.90625 C 24.46875 41.410156 21.023438 39.882812 18.835938 40.757812 C 17.691406 43.636719 12.746094 44.296875 12.65625 39.175781 C 12.570312 34.414062 16.644531 27.550781 18.613281 23.261719 C 20.960938 18.144531 18.15625 15.5 14.164062 15.5 C 12.78125 15.5 11.253906 15.816406 9.75 16.457031 Z M 9.75 16.457031 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear2)\"\n    },\n    d: \"M 9.75 16.460938 C 14.441406 15.105469 19.570312 16.300781 17.335938 21.898438 C 15.664062 26.078125 10.804688 32.292969 10.1875 38.113281 C 9.472656 44.816406 14.125 48.097656 19.425781 47.390625 C 20.246094 47.28125 20.886719 46.847656 21.441406 46.238281 C 20.144531 45.886719 18.769531 45.625 17.335938 45.480469 C 11.519531 44.898438 10.558594 40.453125 11.660156 35.871094 C 12.855469 30.886719 17.230469 25.34375 18.421875 21.265625 C 20.101562 15.503906 13.597656 14.929688 9.75 16.460938 Z M 9.75 16.460938 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear3)\"\n    },\n    d: \"M 18.617188 41.199219 C 17.949219 42.351562 16.640625 43.042969 15.421875 42.972656 C 15.421875 42.972656 16.609375 46.523438 12.992188 45.894531 C 14.695312 47.195312 16.992188 47.714844 19.425781 47.390625 C 21.292969 47.140625 22.234375 45.210938 23.328125 43.324219 C 21.808594 42.351562 20.085938 41.640625 18.617188 41.199219 Z M 18.617188 41.199219 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear4)\"\n    },\n    d: \"M 44.375 27.164062 C 45.242188 28.410156 46.964844 29.417969 49.941406 29.632812 C 50.132812 27.265625 50.175781 24.378906 48.367188 22.554688 C 47.769531 21.949219 47.109375 21.6875 46.476562 21.6875 C 44.371094 21.6875 42.585938 24.585938 44.375 27.164062 Z M 44.375 27.164062 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear5)\"\n    },\n    d: \"M 49.941406 29.632812 C 46.964844 29.417969 45.242188 28.410156 44.375 27.164062 C 43.074219 25.289062 43.664062 23.242188 44.894531 22.269531 C 44.898438 22.285156 45.84375 25.238281 49.960938 26.3125 C 50.085938 27.429688 50.027344 28.582031 49.941406 29.632812 Z M 49.941406 29.632812 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear6)\"\n    },\n    d: \"M 47.09375 29.082031 C 45.789062 28.625 44.917969 27.941406 44.375 27.164062 C 43.222656 25.5 43.554688 23.707031 44.5 22.640625 C 46.0625 23.746094 47.117188 26.046875 47.09375 29.082031 Z M 47.09375 29.082031 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear7)\"\n    },\n    d: \"M 15.179688 37.796875 C 15.179688 39.730469 15.515625 41.582031 16.125 43.304688 L 16.222656 43.300781 C 15.890625 42.40625 18.683594 43.125 18.683594 40.335938 C 18.683594 37.546875 18.167969 35.246094 22.730469 35.246094 C 27.296875 35.246094 32.140625 35.855469 32.140625 40.421875 L 32.140625 45.652344 C 34.230469 44.183594 36.320312 43.238281 38.304688 42.65625 C 38.296875 42.652344 38.355469 42.53125 38.34375 42.523438 C 30.445312 38.214844 35.425781 24.507812 32.222656 21.304688 C 32.042969 21.300781 31.859375 21.296875 31.675781 21.296875 C 22.566406 21.296875 15.179688 28.683594 15.179688 37.796875 Z M 15.179688 37.796875 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear8)\"\n    },\n    d: \"M 32.140625 40.421875 C 32.140625 35.855469 27.296875 35.246094 22.730469 35.246094 C 22.507812 35.246094 22.296875 35.253906 22.097656 35.265625 C 23.71875 32.304688 26.976562 29.078125 33.484375 28.453125 C 33.5 33.601562 33.460938 39.859375 38.34375 42.523438 C 38.355469 42.53125 38.296875 42.652344 38.304688 42.65625 C 36.320312 43.238281 34.230469 44.183594 32.140625 45.652344 Z M 32.140625 40.421875 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear9)\"\n    },\n    d: \"M 32.222656 21.304688 C 35.425781 24.507812 30.445312 38.214844 38.34375 42.523438 C 38.355469 42.53125 38.296875 42.652344 38.304688 42.65625 C 37.84375 42.792969 37.378906 42.945312 36.910156 43.121094 C 28.289062 35.839844 32.222656 21.304688 32.222656 21.304688 Z M 32.222656 21.304688 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear10)\"\n    },\n    d: \"M 32.140625 40.421875 C 32.140625 35.855469 27.296875 35.246094 22.730469 35.246094 C 18.167969 35.246094 18.683594 37.546875 18.683594 40.335938 C 18.683594 43.125 15.890625 42.40625 16.222656 43.300781 L 16.144531 43.304688 C 16.074219 43.132812 16.007812 42.957031 15.949219 42.78125 C 15.890625 42.597656 15.835938 42.414062 15.785156 42.226562 C 15.625 41.613281 15.527344 40.96875 15.507812 40.308594 C 15.347656 35.503906 19.113281 31.476562 23.917969 31.320312 C 32.613281 31.03125 34.214844 39.84375 33.144531 44.984375 C 32.808594 45.195312 32.476562 45.417969 32.140625 45.652344 Z M 32.140625 40.421875 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear11)\"\n    },\n    d: \"M 39.132812 27.914062 C 38.460938 29.054688 38.070312 30.191406 37.765625 31.679688 C 36.847656 36.136719 40.867188 39.21875 45.984375 39.886719 C 46.964844 40.011719 47.761719 39.96875 48.316406 39.375 C 48.746094 38.910156 48.613281 38.660156 49.269531 38.476562 C 50.40625 38.15625 51.429688 38.996094 51.566406 39.832031 C 51.695312 40.601562 51.078125 41.371094 49.125 41.246094 C 48.59375 41.210938 48.121094 41.140625 47.59375 41.195312 C 47.253906 41.226562 47.019531 41.882812 46.675781 42 C 48.78125 42.8125 52.210938 43.355469 54.234375 43.144531 C 54.460938 35.671875 52.433594 26.582031 44.308594 24.585938 C 43.296875 24.339844 42.183594 24.1875 40.960938 24.152344 C 41.433594 24.476562 38.695312 27.546875 39.132812 27.914062 Z M 39.132812 27.914062 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear12)\"\n    },\n    d: \"M 48.453125 39.210938 C 48.414062 39.261719 48.371094 39.316406 48.316406 39.375 C 47.761719 39.96875 46.964844 40.011719 45.984375 39.886719 C 40.867188 39.21875 36.847656 36.136719 37.765625 31.679688 C 38.070312 30.191406 38.460938 29.054688 39.132812 27.914062 C 38.695312 27.546875 41.433594 24.476562 40.960938 24.152344 C 41.628906 24.171875 42.261719 24.226562 42.867188 24.3125 C 43.199219 25.484375 43.375 26.21875 43.375 26.21875 L 46.976562 30.785156 C 46.976562 30.785156 45.503906 35.320312 48.453125 39.210938 Z M 54.234375 43.144531 C 52.210938 43.355469 48.78125 42.8125 46.675781 42 C 47.019531 41.882812 47.253906 41.226562 47.59375 41.195312 C 48.121094 41.140625 48.59375 41.210938 49.125 41.246094 C 49.660156 41.28125 50.09375 41.246094 50.441406 41.164062 C 51.4375 41.910156 52.683594 42.585938 54.234375 43.144531 Z M 54.234375 43.144531 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear13)\"\n    },\n    d: \"M 47.527344 25.914062 C 52.441406 28.910156 54.101562 35.320312 54.238281 41.21875 C 54.253906 41.859375 54.253906 42.5 54.234375 43.144531 C 53.171875 43.253906 51.722656 43.15625 50.28125 42.921875 C 50.554688 42.265625 50.78125 41.613281 50.964844 40.976562 C 51.160156 40.867188 51.308594 40.738281 51.40625 40.59375 C 51.675781 40.207031 51.617188 39.710938 51.355469 39.292969 C 52.582031 32.441406 49.121094 27.175781 47.527344 25.914062 Z M 47.527344 25.914062 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear14)\"\n    },\n    d: \"M 44.308594 24.585938 C 45.085938 24.777344 45.804688 25.035156 46.472656 25.347656 C 47.03125 26.800781 47.25 28.65625 46.976562 30.785156 C 43.402344 31.363281 40.082031 29.921875 39.105469 27.664062 C 39.324219 26.828125 41.375 24.4375 40.960938 24.152344 C 42.183594 24.1875 43.296875 24.339844 44.308594 24.585938 Z M 44.308594 24.585938 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear15)\"\n    },\n    d: \"M 46.675781 41.996094 C 46.683594 41.996094 46.6875 41.996094 46.695312 41.992188 C 46.699219 41.988281 46.703125 41.988281 46.710938 41.984375 C 46.984375 41.863281 47.289062 41.382812 47.566406 41.195312 C 47.574219 41.195312 47.585938 41.195312 47.59375 41.191406 C 48.121094 41.136719 48.59375 41.210938 49.125 41.246094 C 50.402344 41.328125 51.109375 41.023438 51.40625 40.59375 C 51.335938 40.589844 51.265625 40.585938 51.191406 40.582031 C 52.027344 39.648438 50.730469 37.9375 49.1875 38.375 C 48.53125 38.558594 48.832031 38.457031 48.398438 38.921875 C 47.847656 39.515625 47.015625 40.171875 46.035156 40.042969 C 40.917969 39.378906 36.847656 36.132812 37.765625 31.679688 C 38.070312 30.191406 38.460938 29.050781 39.132812 27.914062 C 38.695312 27.542969 41.433594 24.476562 40.960938 24.152344 C 41.710938 24.175781 42.421875 24.238281 43.09375 24.34375 L 43.929688 25.050781 L 43.203125 25.921875 C 42.539062 26.71875 40.917969 27.382812 40.574219 28.359375 C 39.683594 32.140625 40.886719 35.839844 43.167969 37.550781 C 44.167969 38.296875 45.269531 38.570312 46.046875 38.554688 C 47.632812 38.519531 47.820312 36.671875 49.378906 36.234375 C 51.175781 35.726562 52.574219 37.300781 52.90625 38.925781 C 53.0625 39.671875 53.011719 40.472656 52.683594 41.171875 C 52.179688 42.242188 51.214844 42.761719 50.136719 42.898438 C 48.882812 42.6875 47.640625 42.371094 46.675781 41.996094 Z M 46.675781 41.996094 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear16)\"\n    },\n    d: \"M 40.910156 43.574219 C 43.292969 43.855469 45.203125 42.578125 46.675781 42 C 47.019531 41.882812 47.355469 41.816406 47.695312 41.78125 C 48.21875 41.726562 48.746094 41.75 49.277344 41.785156 C 51.253906 41.910156 51.925781 40.722656 51.839844 39.539062 C 51.753906 38.277344 50.8125 37.015625 49.691406 37.332031 C 49.035156 37.519531 48.597656 38 48.164062 38.464844 C 47.609375 39.0625 47.066406 39.625 46.082031 39.5 C 39.292969 38.617188 38.410156 29.890625 42.324219 25.191406 C 41.890625 24.824219 41.433594 24.476562 40.960938 24.152344 C 40.847656 24.074219 40.730469 24 40.617188 23.925781 C 38.183594 22.355469 35.308594 21.40625 32.222656 21.304688 C 30.824219 27.722656 31.902344 42.523438 40.910156 43.574219 Z M 40.910156 43.574219 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear17)\"\n    },\n    d: \"M 36.597656 22.042969 C 38.03125 22.488281 39.378906 23.125 40.617188 23.925781 C 40.730469 24 40.847656 24.074219 40.960938 24.152344 C 41.433594 24.476562 41.890625 24.820312 42.324219 25.191406 C 38.410156 29.886719 39.292969 38.617188 46.082031 39.496094 C 47.066406 39.625 47.609375 39.0625 48.164062 38.464844 C 48.597656 38 49.035156 37.519531 49.691406 37.332031 C 51.867188 36.71875 53.359375 42.039062 49.277344 41.785156 C 48.746094 41.75 48.21875 41.726562 47.695312 41.78125 C 47.636719 41.785156 47.582031 41.792969 47.523438 41.800781 C 47.433594 41.792969 47.347656 41.792969 47.265625 41.800781 C 35.441406 43.140625 34.601562 30.117188 36.597656 22.042969 Z M 36.597656 22.042969 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear18)\"\n    },\n    d: \"M 42.054688 24.964844 C 42.144531 25.039062 42.234375 25.117188 42.324219 25.191406 C 38.410156 29.890625 39.292969 38.617188 46.082031 39.5 C 47.066406 39.625 47.609375 39.0625 48.164062 38.46875 C 48.597656 38 49.035156 37.519531 49.691406 37.332031 C 51.867188 36.71875 53.359375 42.042969 49.277344 41.785156 C 48.746094 41.75 48.21875 41.726562 47.695312 41.78125 C 47.355469 41.816406 47.019531 41.882812 46.675781 42 C 47.492188 41.707031 47.9375 41.5625 49.285156 41.648438 C 50.171875 41.707031 51.117188 41.503906 51.527344 40.628906 C 51.734375 40.183594 51.753906 39.660156 51.65625 39.179688 C 51.574219 38.785156 51.40625 38.386719 51.160156 38.0625 C 50.945312 37.78125 50.65625 37.539062 50.308594 37.453125 C 50.117188 37.402344 49.921875 37.410156 49.726562 37.460938 C 49.105469 37.636719 48.6875 38.105469 48.261719 38.558594 C 47.984375 38.859375 47.695312 39.167969 47.339844 39.378906 C 46.941406 39.617188 46.523438 39.691406 46.066406 39.632812 C 44.273438 39.398438 42.707031 38.601562 41.574219 37.175781 C 40.617188 35.972656 40.09375 34.476562 39.925781 32.957031 C 39.839844 32.164062 39.847656 31.359375 39.941406 30.566406 C 40.035156 29.761719 40.21875 28.960938 40.488281 28.195312 C 40.867188 27.121094 41.417969 26.097656 42.136719 25.210938 C 42.085938 25.167969 42.0625 25.082031 42.054688 24.964844 Z M 40.582031 43.53125 C 31.875 42.160156 30.84375 27.644531 32.222656 21.304688 C 31.964844 22.539062 31.875 24.878906 31.855469 26.179688 C 31.824219 28.121094 31.960938 30.089844 32.28125 32.003906 C 33.039062 36.5625 35.40625 42.6875 40.582031 43.53125 Z M 40.582031 43.53125 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear19)\"\n    },\n    d: \"M 39.890625 23.484375 C 40.136719 23.625 40.378906 23.773438 40.617188 23.925781 C 40.730469 24 40.847656 24.078125 40.960938 24.152344 C 41.433594 24.476562 41.890625 24.824219 42.324219 25.191406 C 41.355469 26.355469 40.679688 27.769531 40.316406 29.246094 C 38.667969 27.847656 38.167969 25.722656 39.890625 23.484375 Z M 39.890625 23.484375 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear20)\"\n    },\n    d: \"M 15.609375 40.421875 C 15.609375 44.917969 19.199219 48.574219 23.667969 48.683594 L 36.820312 48.683594 C 36.820312 48.683594 37.082031 45.71875 33.894531 45.652344 C 33.859375 45.652344 32.175781 45.652344 32.140625 45.652344 C 33.414062 40.851562 32.269531 32.15625 23.875 32.15625 C 19.308594 32.15625 15.609375 35.855469 15.609375 40.421875 Z M 15.609375 40.421875 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear21)\"\n    },\n    d: \"M 36.726562 47.703125 C 36.859375 48.246094 36.820312 48.683594 36.820312 48.683594 L 23.667969 48.683594 C 20.074219 48.597656 17.050781 46.214844 16 42.949219 C 16 42.949219 18.21875 47.171875 23.765625 47.421875 Z M 36.726562 47.703125 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear22)\"\n    },\n    d: \"M 23.875 32.15625 C 32.269531 32.15625 33.414062 40.851562 32.140625 45.652344 C 32.089844 41.714844 30.417969 39.117188 28.171875 37.699219 C 27.738281 38.53125 25.890625 39.15625 23.675781 39.15625 C 21.375 39.15625 19.46875 38.480469 19.132812 37.601562 C 17.367188 38.695312 16.109375 40.507812 16 42.949219 C 15.746094 42.152344 15.609375 41.304688 15.609375 40.421875 C 15.609375 35.855469 19.308594 32.15625 23.875 32.15625 Z M 23.875 32.15625 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear23)\"\n    },\n    d: \"M 23.875 32.15625 C 32.269531 32.15625 33.414062 40.851562 32.140625 45.652344 C 32.546875 43.691406 32.558594 41.117188 32.136719 39.164062 C 31.859375 37.878906 31.375 36.621094 30.621094 35.539062 C 29.023438 33.242188 26.617188 32.292969 23.875 32.292969 C 19.382812 32.292969 15.746094 35.933594 15.746094 40.421875 C 15.746094 44.832031 19.261719 48.578125 23.667969 48.683594 C 19.199219 48.574219 15.609375 44.917969 15.609375 40.421875 C 15.609375 35.855469 19.308594 32.15625 23.875 32.15625 Z M 23.875 32.15625 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear24)\"\n    },\n    d: \"M 40.921875 29.050781 C 41.949219 30.164062 43.996094 30.976562 46.976562 30.785156 C 46.816406 28.621094 46.46875 26.292969 45.035156 24.574219 C 44.292969 23.6875 43.476562 23.320312 42.714844 23.320312 C 40.414062 23.320312 38.605469 26.644531 40.921875 29.050781 Z M 40.921875 29.050781 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear25)\"\n    },\n    d: \"M 39.863281 26.878906 C 39.582031 24.167969 42.695312 21.773438 45.035156 24.574219 C 46.46875 26.292969 46.816406 28.621094 46.976562 30.785156 C 45.484375 24.4375 40.234375 23.144531 39.863281 26.878906 Z M 39.863281 26.878906 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear26)\"\n    },\n    d: \"M 46.976562 30.785156 C 43.996094 30.976562 41.949219 30.164062 40.921875 29.050781 C 40.140625 28.238281 39.828125 27.324219 39.847656 26.464844 C 41.070312 29.789062 46.742188 30.152344 46.519531 27.652344 C 46.78125 28.679688 46.898438 29.75 46.976562 30.785156 Z M 46.976562 30.785156 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear27)\"\n    },\n    d: \"M 48.503906 32.921875 C 47.96875 32.921875 47.535156 33.355469 47.535156 33.890625 C 47.535156 34.421875 47.96875 34.855469 48.503906 34.855469 C 49.035156 34.855469 49.46875 34.421875 49.46875 33.890625 C 49.46875 33.355469 49.035156 32.921875 48.503906 32.921875 Z M 48.503906 32.921875 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"url(#linear28)\"\n    },\n    d: \"M 47.738281 33.703125 C 47.738281 34.238281 48.171875 34.671875 48.703125 34.671875 C 49.238281 34.671875 49.671875 34.238281 49.671875 33.703125 C 49.671875 33.171875 49.238281 32.738281 48.703125 32.738281 C 48.171875 32.738281 47.738281 33.171875 47.738281 33.703125 Z M 47.738281 33.703125 \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      stroke: \"none\",\n      fillRule: \"nonzero\",\n      fill: \"rgb(100%,100%,100%)\",\n      fillOpacity: 1\n    },\n    d: \"M 47.96875 32.910156 C 48.148438 32.910156 48.292969 33.058594 48.292969 33.238281 C 48.292969 33.417969 48.148438 33.5625 47.96875 33.5625 C 47.789062 33.5625 47.640625 33.417969 47.640625 33.238281 C 47.640625 33.058594 47.789062 32.910156 47.96875 32.910156 Z M 47.96875 32.910156 \"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/icon.a0c2d343.svg\";\nexport { ForwardRef as ReactComponent };","import React , { useEffect, useState, useContext, useRef } from 'react'\r\nimport { Link, withRouter, Redirect } from 'react-router-dom'\r\nimport './style.scss'\r\nimport { ICON_LOGO, ICON_HOME, ICON_HASH, ICON_BELL, ICON_INBOX\r\n, ICON_LIST, ICON_USER, ICON_LAPTOP, ICON_SETTINGS, ICON_HOMEFILL, ICON_HASHFILL,\r\nICON_BELLFILL, ICON_LISTFILL, ICON_USERFILL, ICON_LAPTOPFILL, ICON_FEATHER,\r\nICON_CLOSE,ICON_IMGUPLOAD, ICON_INBOXFILL, ICON_LIGHT, ICON_DARK } from '../../Icons'\r\nimport { ReactComponent as YourSvg } from '../../icon.svg';\r\nimport axios from 'axios'\r\nimport {API_URL} from '../../config'\r\nimport MakeSqueak from '../../features/squeaks/MakeSqueak'\r\nimport ContentEditable from 'react-contenteditable'\r\nimport Loader from '../Loader'\r\n\r\nimport {\r\n    enable as enableDarkMode,\r\n    disable as disableDarkMode,\r\n    setFetchMethod\r\n} from 'darkreader';\r\n\r\nimport { unwrapResult } from '@reduxjs/toolkit'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  fetchSellPrice,\r\n  selectSellPriceDefault,\r\n  selectSellPriceOverride,\r\n  selectSellPriceUsingOverride,\r\n  selectSellPriceInfo,\r\n  setSellPrice,\r\n  setClearSellPrice,\r\n} from '../../features/sellPrice/sellPriceSlice'\r\nimport {\r\n  setLogout,\r\n} from '../../features/account/accountSlice'\r\nimport {\r\n  selectMakeSqueakStatus,\r\n  selectBuySqueakStatus,\r\n  selectDownloadSqueakStatus,\r\n  selectDownloadPubkeySqueakStatus,\r\n} from '../../features/squeaks/squeaksSlice'\r\n\r\nconst Nav = ({history}) => {\r\n    const [moreMenu, setMoreMenu] = useState(false)\r\n    const [theme, setTheme] = useState(true)\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [sellPriceModalOpen, setSellPriceModalOpen] = useState(false)\r\n    const [styleBody, setStyleBody] = useState(false)\r\n    const [newSellPriceMsat, setNewSellPriceMsat] = useState('')\r\n\r\n    const session = true;\r\n    const sellPrice = useSelector(selectSellPriceInfo);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const isInitialMount = useRef(true);\r\n    useEffect(() => {\r\n        if (isInitialMount.current){ isInitialMount.current = false }\r\n        else {\r\n            document.getElementsByTagName(\"body\")[0].style.cssText = styleBody && \"overflow-y: hidden; margin-right: 17px\"\r\n        }\r\n    }, [styleBody])\r\n\r\n    useEffect( () => () => document.getElementsByTagName(\"body\")[0].style.cssText = \"\", [] )\r\n\r\n    useEffect(()=>{\r\n        let ran = false\r\n        if(localStorage.getItem('Theme')=='dark'){\r\n            setTheme('dark')\r\n            setFetchMethod(window.fetch)\r\n            enableDarkMode();\r\n        }else if(!localStorage.getItem('Theme')){\r\n            localStorage.setItem('Theme', 'light')\r\n        }\r\n        dispatch(fetchSellPrice());\r\n      }, [])\r\n\r\n      const path = history.location.pathname.slice(4,9)\r\n\r\n      const openMore = () => { setMoreMenu(!moreMenu) }\r\n\r\n      const handleMenuClick = (e) => { e.stopPropagation() }\r\n\r\n    const toggleModal = (e, type) => {\r\n        if(e){ e.stopPropagation() }\r\n        setStyleBody(!styleBody)\r\n        // TODO: Discard content on modal toggle off.\r\n        setTimeout(()=>{ setModalOpen(!modalOpen) },20)\r\n    }\r\n\r\n    const toggleSellPriceModal = (param, type) => {\r\n        setStyleBody(!styleBody)\r\n        setTimeout(()=>{ setSellPriceModalOpen(!sellPriceModalOpen) },20)\r\n    }\r\n\r\n\r\n    const handleModalClick = (e) => {\r\n        e.stopPropagation()\r\n    }\r\n\r\n    const changeTheme = () => {\r\n        if(localStorage.getItem('Theme') === 'dark'){\r\n            disableDarkMode()\r\n            localStorage.setItem('Theme', 'light')\r\n        }else if(localStorage.getItem('Theme') === 'light'){\r\n            localStorage.setItem('Theme', 'dark')\r\n            setFetchMethod(window.fetch)\r\n            enableDarkMode();\r\n        }\r\n    }\r\n\r\n    const updateSellPrice = () => {\r\n        let values = {\r\n            sellPriceMsat: newSellPriceMsat,\r\n        }\r\n        dispatch(setSellPrice(newSellPriceMsat));\r\n        toggleSellPriceModal()\r\n    }\r\n\r\n    const setSellPriceToDefault = () => {\r\n        dispatch(setClearSellPrice());\r\n        toggleSellPriceModal()\r\n    }\r\n\r\n    const logout = () => {\r\n        dispatch(setLogout());\r\n    }\r\n\r\n    console.log(sellPrice);\r\n\r\n    return(\r\n        <div className=\"Nav-component\">\r\n        <div className=\"Nav-width\">\r\n            <div className=\"Nav\">\r\n            <div className=\"Nav-Content\">\r\n                <nav className=\"Nav-wrapper\">\r\n                    <Link to={`/app/home`} className=\"logo-wrapper\">\r\n                        <YourSvg styles={{fill:\"rgb(29,161,242)\", width:'47px', height:\"30px\"}}/>\r\n                    </Link>\r\n                    <Link className=\"Nav-link\" to={`/app/home`}>\r\n                        <div className={path === '/home' ? \"Nav-item-hover active-Nav\" : \"Nav-item-hover\"}>\r\n                            {path === '/home' ? <ICON_HOMEFILL /> : <ICON_HOME />}\r\n                            <div className=\"Nav-item\">Home</div>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/app/profiles\" className=\"Nav-link\">\r\n                        <div className={path === '/prof' ? \"Nav-item-hover active-Nav\" : \"Nav-item-hover\"}>\r\n                            {path === '/prof' ? <ICON_USERFILL /> : <ICON_USER />}\r\n                            <div className=\"Nav-item\">Profiles</div>\r\n                        </div>\r\n                    </Link>\r\n                    {session ?\r\n                    <>\r\n                    <Link to=\"/app/peers\" className=\"Nav-link\">\r\n                        <div className={path === '/peer' ? \"Nav-item-hover active-Nav\" : \"Nav-item-hover\"}>\r\n                            {path === '/peer' ? <ICON_LAPTOPFILL /> : <ICON_LAPTOP />}\r\n                            <div className=\"Nav-item\">Peers</div>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/app/payments\" className=\"Nav-link\">\r\n                        <div className={path === '/paym' ? \"Nav-item-hover active-Nav\" : \"Nav-item-hover\"}>\r\n                            {path === '/paym' ?  <ICON_LISTFILL /> : <ICON_LIST />}\r\n                            <div className=\"Nav-item\">Payments</div>\r\n                        </div>\r\n                    </Link>\r\n                    <Link to=\"/app/notifications\" className=\"Nav-link\">\r\n                        <div className={path === '/noti' ? \"Nav-item-hover active-Nav\" : \"Nav-item-hover\"}>\r\n                            {path === '/noti' ? <ICON_BELLFILL /> : <ICON_BELL />}\r\n                            <div className=\"Nav-item\">Notifications</div>\r\n                        </div>\r\n                    </Link>\r\n                    </> : null}\r\n                    <div id=\"moremenu\" onClick={openMore} className=\"Nav-link\">\r\n                        <div className={\"Nav-item-hover\"}>\r\n                            <ICON_SETTINGS  />\r\n                            <div className=\"Nav-item\">More</div>\r\n                        </div>\r\n                        <div onClick={()=>openMore()} style={{display: moreMenu ? 'block' : 'none'}} className=\"more-menu-background\">\r\n                        <div className=\"more-modal-wrapper\">\r\n                            {moreMenu ?\r\n                            <div style={{top: `${document.getElementById('moremenu').getBoundingClientRect().top - 40}px`, left: `${document.getElementById('moremenu').getBoundingClientRect().left}px`, height: '154px' }} onClick={(e)=>handleMenuClick(e)} className=\"more-menu-content\">\r\n                                    <div onClick={changeTheme} className=\"more-menu-item\">\r\n                                        <span>Change Theme</span>\r\n                                        <span>{theme ? <ICON_DARK/> : <ICON_LIGHT />}</span>\r\n                                    </div>\r\n                                    <div onClick={toggleSellPriceModal} className=\"more-menu-item\">\r\n                                        <span>Update Sell Price</span>\r\n                                        <span><ICON_HASH /></span>\r\n                                    </div>\r\n                                    <div onClick={()=>logout()} className=\"more-menu-item\">\r\n                                        Log out\r\n                                    </div>\r\n                            </div> : null }\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    {session ?\r\n                    <div className=\"Nav-squeak\">\r\n                        <div onClick={()=>toggleModal()} className=\"Nav-squeak-link\">\r\n                            <div className=\"Nav-squeak-btn btn-hide\">\r\n                                Squeak\r\n                            </div>\r\n                            <div className=\"Nav-squeak-btn btn-show\">\r\n                                <span><ICON_FEATHER/></span>\r\n                            </div>\r\n                        </div>\r\n                    </div> : null }\r\n                </nav>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div onClick={()=>toggleModal()} style={{display: modalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n            <div style={{minHeight: '270px', height: 'initial'}} onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-closeIcon\">\r\n                        <div onClick={()=>toggleModal()} className=\"modal-closeIcon-wrap\">\r\n                            <ICON_CLOSE />\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"modal-title\">Squeak</p>\r\n                </div>\r\n                <div style={{marginTop:'5px'}} className=\"modal-body\">\r\n                    <MakeSqueak submittedCallback={toggleModal} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        {/* Modal for set sell price */}\r\n        <div onClick={()=>toggleSellPriceModal()} style={{display: sellPriceModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n            <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-closeIcon\">\r\n                        <div onClick={()=>toggleSellPriceModal()} className=\"modal-closeIcon-wrap\">\r\n                            <ICON_CLOSE />\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"modal-title\">'Sell Price'</p>\r\n                    <div className=\"save-modal-wrapper\">\r\n                        <div onClick={updateSellPrice} className=\"save-modal-btn\">\r\n                            Save\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"save-modal-wrapper\">\r\n                        <div onClick={setSellPriceToDefault} className=\"save-modal-btn\">\r\n                            Reset To Default\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {sellPrice &&\r\n                <div className=\"modal-body\">\r\n                      <form className=\"edit-form\">\r\n                          <div className=\"edit-input-wrap\">\r\n                              <div className=\"edit-input-content\">\r\n                                  <label>Sell Price (msats)</label>\r\n                                  <input defaultValue={sellPrice.getPriceMsatIsSet() ? sellPrice.getPriceMsat() : sellPrice.getDefaultPriceMsat()} onChange={(e)=>setNewSellPriceMsat(e.target.value)} type=\"text\" name=\"sellPrice\" className=\"edit-input\"/>\r\n                              </div>\r\n                          </div>\r\n                      </form>\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n        {/* Block screen with modal when make squeak is waiting. */}\r\n        <div style={{display: useSelector(selectMakeSqueakStatus) === 'loading' ? 'block' : 'none'}} className=\"modal-edit\">\r\n            <div style={{minHeight: '270px', height: 'initial'}} className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <p className=\"modal-title\">Making squeak...</p>\r\n                </div>\r\n                <div style={{marginTop:'5px'}} className=\"modal-body\">\r\n                    <Loader />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        {/* Block screen with modal when buy squeak is waiting. */}\r\n        <div style={{display: useSelector(selectBuySqueakStatus) === 'loading' ? 'block' : 'none'}} className=\"modal-edit\">\r\n            <div style={{minHeight: '270px', height: 'initial'}} className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <p className=\"modal-title\">Buying squeak...</p>\r\n                </div>\r\n                <div style={{marginTop:'5px'}} className=\"modal-body\">\r\n                    <Loader />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        {/* Block screen with modal when download squeak is waiting. */}\r\n        <div style={{display: useSelector(selectDownloadSqueakStatus) === 'loading' ? 'block' : 'none'}} className=\"modal-edit\">\r\n            <div style={{minHeight: '270px', height: 'initial'}} className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <p className=\"modal-title\">Downloading squeak...</p>\r\n                </div>\r\n                <div style={{marginTop:'5px'}} className=\"modal-body\">\r\n                    <Loader />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        {/* Block screen with modal when download pubkey squeaks is waiting. */}\r\n        <div style={{display: useSelector(selectDownloadPubkeySqueakStatus) === 'loading' ? 'block' : 'none'}} className=\"modal-edit\">\r\n            <div style={{minHeight: '270px', height: 'initial'}} className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <p className=\"modal-title\">Downloading pubkey squeaks...</p>\r\n                </div>\r\n                <div style={{marginTop:'5px'}} className=\"modal-body\">\r\n                    <Loader />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Nav)\r\n","import React, { useState, useContext } from 'react'\r\nimport './style.scss'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { ICON_LOGO } from '../../Icons'\r\n\r\nconst LoginPage = () => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    // TODO: get these values from account slice.\r\n    const loggedin = true;\r\n    const msg = '';\r\n\r\n    const Login = (e) => {\r\n        e.preventDefault()\r\n        if(username.length && password.length){\r\n            const values = {\r\n                username,\r\n                password\r\n            }\r\n            // TODO: implement login.\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"login-wrapper\">\r\n            {loggedin && <Redirect to=\"/home\" />}\r\n            <ICON_LOGO/>\r\n            <h1 className=\"login-header\">\r\n                Log in to Twitter\r\n            </h1>\r\n            {msg === 'Incorrect email or password' && <p className=\"login-error\"> The username/email or password you entered is incorrect. </p>}\r\n            <form id=\"loginForm\" onSubmit={(e)=>Login(e)} className=\"login-form\">\r\n                <div className=\"login-input-wrap\">\r\n                    <div className=\"login-input-content\">\r\n                        <label>Email or username</label>\r\n                        <input onChange={(e)=>setUsername(e.target.value)} type=\"text\" name=\"username\" className=\"login-input\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"login-input-wrap\">\r\n                    <div className=\"login-input-content\">\r\n                        <label>Password</label>\r\n                        <input onChange={(e)=>setPassword(e.target.value)} type=\"password\" name=\"password\" className=\"login-input\"/>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" form=\"loginForm\" className={username.length && password.length > 0 ? \"login-btn-wrap button-active\": \"login-btn-wrap\"}>\r\n                    Log in\r\n                </button>\r\n            </form>\r\n            <p className=\"signup-option\">\r\n                <Link to=\"/app/signup\">\r\n                    Sign up for Twitter\r\n                </Link>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React, { useState, useContext } from 'react'\r\nimport './style.scss'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { ICON_LOGO } from '../../Icons'\r\n\r\nconst SignUpPage = (props) => {\r\n    const [name, setName] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const SignUp = (e) => {\r\n        e.preventDefault()\r\n        if(username.length && password.length && email.length && name.length){\r\n            const values = {\r\n                name,\r\n                username,\r\n                email,\r\n                password,\r\n                func: Redirect\r\n            }\r\n            // TODO: signup here.\r\n        }\r\n    }\r\n\r\n    const Redirect = () => {\r\n        props.history.push('/app/login')\r\n    }\r\n\r\n    return(\r\n        <div className=\"signup-wrapper\">\r\n            <ICON_LOGO/>\r\n            <h1 className=\"signup-header\">\r\n                Sign up to Twitter\r\n            </h1>\r\n            <form id=\"signupForm\" onSubmit={(e)=>SignUp(e)} className=\"signup-form\">\r\n                <div className=\"signup-input-wrap\">\r\n                    <div className=\"signup-input-content\">\r\n                        <label>Name</label>\r\n                        <input onChange={(e)=>setName(e.target.value)} name=\"name\" type=\"text\" className=\"signup-input\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"signup-input-wrap\">\r\n                    <div className=\"signup-input-content\">\r\n                        <label>Username</label>\r\n                        <input onChange={(e)=>setUsername(e.target.value)} name=\"username\" type=\"text\" className=\"signup-input\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"signup-input-wrap\">\r\n                    <div className=\"signup-input-content\">\r\n                        <label>Email</label>\r\n                        <input onChange={(e)=>setEmail(e.target.value)} name=\"email\" type=\"email\" className=\"signup-input\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"signup-input-wrap\">\r\n                    <div className=\"signup-input-content\">\r\n                        <label>Password</label>\r\n                        <input onChange={(e)=>setPassword(e.target.value)} name=\"password\" type=\"password\" className=\"signup-input\"/>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" form=\"signupForm\" className={username.length && password.length && name.length && email.length ? \"signup-btn-wrap button-active\": \"signup-btn-wrap\"}>\r\n                    Sign up\r\n                </button>\r\n            </form>\r\n            <p className=\"signup-option\">\r\n                <Link to=\"/app/login\">\r\n                    Log in to Twitter\r\n                </Link>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SignUpPage)\r\n","import React, { useEffect, useState } from 'react'\nimport { withRouter , Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport Select from 'react-select'\nimport moment from 'moment'\n\nimport { ICON_ARROWBACK, ICON_HEART, ICON_REPLY, ICON_RETWEET, ICON_HEARTFULL,\nICON_DELETE, ICON_IMGUPLOAD, ICON_CLOSE, ICON_LOCKFILL } from '../../Icons'\n\nimport { getProfileImageSrcString } from '../../squeakimages/images';\n\nimport SqueakCard from '../../components/SqueakCard'\nimport Loader from '../../components/Loader'\nimport MakeSqueak from '../squeaks/MakeSqueak'\n\nimport { unwrapResult } from '@reduxjs/toolkit'\n\nimport {\n  selectNetwork,\n  fetchNetwork,\n} from '../../features/network/networkSlice'\nimport {\n  selectCurrentSqueak,\n  selectCurrentSqueakStatus,\n  fetchSqueak,\n  clearAll,\n  setLikeSqueak,\n  setUnlikeSqueak,\n  fetchAncestorSqueaks,\n  selectAncestorSqueaks,\n  selectAncestorSqueaksStatus,\n  clearAncestors,\n  fetchReplySqueaks,\n  selectReplySqueaks,\n  selectReplySqueaksStatus,\n  clearReplies,\n  setDeleteSqueak,\n  selectSqueakOffers,\n  fetchSqueakOffers,\n  setBuySqueak,\n  setDownloadSqueak,\n} from './squeaksSlice'\nimport store from '../../store'\n\n\nconst Squeak = (props) => {\n  const network = useSelector(selectNetwork);\n  const currentSqueak = useSelector(selectCurrentSqueak);\n  const ancestorSqueaks = useSelector(selectAncestorSqueaks);\n  const replySqueaks = useSelector(selectReplySqueaks);\n  const squeakOffers = useSelector(selectSqueakOffers);\n  const loadingCurrentSqueakStatus = useSelector(selectCurrentSqueakStatus)\n  const loadingAncestorSqueaksStatus = useSelector(selectAncestorSqueaksStatus)\n  const loadingReplySqueaksStatus = useSelector(selectReplySqueaksStatus)\n  const dispatch = useDispatch();\n\n  const [modalOpen, setModalOpen] = useState(false)\n  const [buyModalOpen, setBuyModalOpen] = useState(false)\n  const [offer, setOffer] = useState(null)\n\n\n  const replySqueaksLimit = 10;\n\n  useEffect(() => {\n      window.scrollTo(0, 0)\n      console.log('useEffect of Squeak component.');\n      // dispatch(clearAll());\n      dispatch(fetchNetwork());\n      dispatch(fetchSqueak(props.id));\n      dispatch(fetchAncestorSqueaks(props.id));\n      dispatch(fetchReplySqueaks({squeakHash: props.id, limit: 9, lastSqueak: null}));\n      dispatch(fetchSqueakOffers(props.id));\n  }, [props.id])\n\n  const toggleModal = (e, type) => {\n      if(e){ e.stopPropagation() }\n      // if(param === 'edit'){setSaved(false)}\n      // if(type === 'parent'){setParent(true)}else{setParent(false)}\n      setModalOpen(!modalOpen)\n  }\n\n  const toggleBuyModal = () => {\n      // load offers on modal open.\n      if (!buyModalOpen) {\n        dispatch(fetchSqueakOffers(props.id));\n      }\n      // if(param === 'edit'){setSaved(false)}\n      // if(type === 'parent'){setParent(true)}else{setParent(false)}\n      setBuyModalOpen(!buyModalOpen)\n  }\n\n  const handleModalClick = (e) => {\n      e.stopPropagation()\n  }\n\n  const goBack = () => {\n    props.history.goBack()\n  }\n\n  const resqueak = (id) => {\n      alert('Re-Squeak not yet implemented!');\n  }\n\n  const unlikeSqueak = (id) => {\n    console.log('Clicked like');\n    dispatch(setUnlikeSqueak(props.id));\n  }\n\n  const likeSqueak = (id) => {\n      console.log('Clicked like');\n      dispatch(setLikeSqueak(props.id));\n  }\n\n  const deleteSqueak = (id) => {\n      dispatch(setDeleteSqueak(props.id));\n  }\n\n  const downloadSqueak = (id) => {\n      dispatch(setDownloadSqueak(props.id));\n  }\n\n  const getBlockDetailUrl = (blockHash, network) => {\n    switch (network) {\n      case 'mainnet':\n        return `https://blockstream.info/block/${blockHash}`;\n      case 'testnet':\n        return `https://blockstream.info/testnet/block/${blockHash}`;\n      default:\n        return '';\n    }\n  }\n\n  const buySqueak = (id) => {\n      const offerId = offer && offer.getOfferId();\n      if (!offerId) {\n        return;\n      }\n      const values = {\n        offerId: offerId,\n        squeakHash: props.match.params.id,\n      }\n      console.log('Buy clicked.');\n      dispatch(setBuySqueak(values))\n      .then(unwrapResult)\n      .catch((err) => {\n        alert(err.message);\n      });\n      toggleBuyModal();\n  }\n\n  const handleChangeOffer = (e) => {\n    setOffer(e.value);\n  }\n\n\n  // const ancestorSqueaks = [];\n\n  // const replySqueaks = [];\n\n  // const squeakOffers = [];\n\n  const optionsFromOffers = (offers) => {\n    return offers.map((offer) => {\n        return { value: offer, label: `${offer.getPriceMsat() / 1000} sats (${offer.getPeerAddress().getHost()}:${offer.getPeerAddress().getPort()})` }\n      });\n  }\n\n\n    const squeak = currentSqueak;\n    const author = currentSqueak && currentSqueak.getAuthor();\n    const renderedCurrentSqueak =\n        <>\n            {loadingCurrentSqueakStatus === 'loading' ?\n               <Loader /> :\n             <div className={squeak ? \"squeak-body-wrapper\" : \"squeak-body-wrapper missing-squeak\"}>\n                {squeak ?\n                <>\n                <div className=\"squeak-header-content\">\n                    <div className=\"squeak-user-pic\">\n                        <Link to={`/app/profile/${squeak.getAuthorPubkey()}`}>\n                            <img alt=\"\" style={{borderRadius:'50%', minWidth:'49px'}} width=\"100%\" height=\"49px\" src={author ? `${getProfileImageSrcString(author)}` : null}/>\n                        </Link>\n                    </div>\n                    <div className=\"squeak-user-wrap\">\n                        <div className=\"squeak-user-name\">\n                            {author ?\n                               author.getProfileName() :\n                               'Unknown Author'\n                             }\n                        </div>\n                        <div className=\"squeak-username\">\n                            @{squeak.getAuthorPubkey()}\n                        </div>\n                    </div>\n                </div>\n\n                {squeak.getContentStr() ?\n                     <div className=\"squeak-content\">\n                         {squeak.getContentStr()}\n                     </div> :\n                     <div className=\"squeak-content locked-content\">\n                         <ICON_LOCKFILL styles={{width:'48px', height:\"48px\", padding: \"5px\"}} />\n                         <div onClick={()=>toggleBuyModal(props.match.params.id)}\n                          className='squeak-unlock-button'>\n                             <span>Unlock</span>\n                         </div>\n                     </div>\n                }\n\n\n                <div className=\"squeak-date\">\n                    <a href={getBlockDetailUrl(squeak.getBlockHash(), network)}\n                     target=\"_blank\"\n                     rel=\"noopener\"\n                     >\n                        {moment(squeak.getBlockTime() * 1000).format(\"h:mm A · MMM D, YYYY\")} (Block #{squeak.getBlockHeight()})\n                    </a>\n                </div>\n                <div className=\"squeak-stats\">\n                    <div className=\"int-num\"> 0 </div>\n                    <div className=\"int-text\"> Sats Spent </div>\n                    <div className=\"int-num\"> 0 </div>\n                    <div className=\"int-text\"> Sats Earned </div>\n                </div>\n                <div className=\"squeak-interactions\">\n                    <div onClick={()=>toggleModal()} className=\"squeak-int-icon\">\n                        <div className=\"card-icon reply-icon\"> <ICON_REPLY /> </div>\n                    </div>\n                    <div onClick={()=>resqueak(squeak.getSqueakHash())} className=\"squeak-int-icon\">\n                        <div className=\"card-icon resqueak-icon\">\n                             <ICON_RETWEET styles={false ? {stroke: 'rgb(23, 191, 99)'} : {fill:'rgb(101, 119, 134)'}}/>\n                        </div>\n                    </div>\n                    <div onClick={()=>{\n                      squeak.getLikedTimeMs() ?\n                      unlikeSqueak(squeak.getSqueakHash()) :\n                      likeSqueak(squeak.getSqueakHash())\n                    }} className=\"squeak-int-icon\">\n                        <div className=\"card-icon heart-icon\">\n                        {squeak.getLikedTimeMs() ? <ICON_HEARTFULL styles={{fill:'rgb(224, 36, 94)'}}\n                         /> : <ICON_HEART/>} </div>\n                    </div>\n                    <div onClick={()=>deleteSqueak(squeak.getSqueakHash())} className=\"squeak-int-icon\">\n                        <div className=\"card-icon delete-icon\">\n                            <ICON_DELETE styles={{fill:'rgb(101, 119, 134)'}} />\n                        </div>\n                    </div>\n                </div>\n                </> :\n                <div className=\"squeak-header-content\">\n                    <div className=\"squeak-user-pic\">\n                            <img alt=\"\" style={{borderRadius:'50%', minWidth:'49px'}} width=\"100%\" height=\"49px\" src={null}/>\n                    </div>\n                    <div className=\"squeak-content\">\n                        Missing Squeak\n                        <div onClick={()=>downloadSqueak(props.match.params.id)}\n                         className='profiles-create-button'>\n                            <span>Download Squeak</span>\n                        </div>\n                    </div>\n                </div>\n              }\n            </div>\n          }\n        </>\n\n  return <>\n\n  <div className=\"squeak-wrapper\">\n      <div className=\"squeak-header-wrapper\">\n          <div className=\"profile-header-back\">\n              <div onClick={()=>goBack()} className=\"header-back-wrapper\">\n                  <ICON_ARROWBACK/>\n              </div>\n          </div>\n          <div className=\"squeak-header-content\"> Squeak </div>\n      </div>\n\n      {/* Unknown Ancestor squeak */}\n      {ancestorSqueaks.length > 0 && ancestorSqueaks[0].getReplyTo() &&\n        <SqueakCard squeak={null} key={ancestorSqueaks[0].getReplyTo()} id={ancestorSqueaks[0].getReplyTo()}\n          replies={[]} hasReply={true} />\n      }\n\n      {/* Ancestor squeaks */}\n      {loadingAncestorSqueaksStatus === 'loading' ?\n        <Loader /> :\n        <>\n        {ancestorSqueaks.slice(0, -1).map(r=>{\n          // TODO: use replies instead of empty array.\n          return <SqueakCard squeak={r} key={r.getSqueakHash()} id={r.getSqueakHash()} user={r.getAuthor()}\n            replies={[]} hasReply={true} />\n          })}\n        </>\n      }\n\n      {/* Current squeak */}\n      {renderedCurrentSqueak}\n\n      {/* Reply squeaks */}\n      {loadingReplySqueaksStatus === 'loading' ?\n        <Loader /> :\n        <>\n          {replySqueaks.map(r=>{\n            // TODO: use replies instead of empty array.\n            return <SqueakCard squeak={r}  key={r.getSqueakHash()} id={r.getSqueakHash()} user={r.getAuthor()}/>\n          })}\n        </>\n      }\n\n  </div>\n\n  {squeak ?\n  <div onClick={()=>toggleModal()} style={{display: modalOpen ? 'block' : 'none'}} className=\"modal-edit\">\n      {modalOpen ?\n      <div style={{minHeight: '379px', height: 'initial'}} onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\n          <div className=\"modal-header\">\n              <div className=\"modal-closeIcon\">\n                  <div onClick={()=>toggleModal()} className=\"modal-closeIcon-wrap\">\n                      <ICON_CLOSE />\n                  </div>\n              </div>\n              <p className=\"modal-title\">Reply</p>\n          </div>\n          <div style={{marginTop:'5px'}} className=\"modal-body\">\n            <MakeSqueak replyToSqueak={squeak} submittedCallback={toggleModal} />\n          </div>\n      </div> : null}\n  </div>:null}\n\n  {squeak ?\n  <div onClick={()=>toggleBuyModal()} style={{display: buyModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\n      {buyModalOpen ?\n      <div style={{minHeight: '379px', height: 'initial'}} onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\n          <div className=\"modal-header\">\n              <div className=\"modal-closeIcon\">\n                  <div onClick={()=>toggleBuyModal()} className=\"modal-closeIcon-wrap\">\n                      <ICON_CLOSE />\n                  </div>\n              </div>\n              <p className=\"modal-title\">Buy Squeak</p>\n          </div>\n          <div style={{marginTop:'5px'}} className=\"modal-body\">\n              {squeakOffers.length} offers.\n              <div className=\"Squeak-input-side\">\n                  <div className=\"inner-input-box\">\n                      <Select options={optionsFromOffers(squeakOffers)} onChange={handleChangeOffer} />\n                  </div>\n                  {offer &&\n                    <>\n                    <div className=\"inner-input-box\">\n                        <b>Price</b>: {offer.getPriceMsat() / 1000} sats\n                    </div>\n                    <div className=\"inner-input-box\">\n                        <b>Peer</b>: {offer.getPeerAddress().getHost()}:{offer.getPeerAddress().getPort()}\n                    </div>\n                    <div className=\"inner-input-box\">\n                        <b>Lightning Node</b>: {offer.getNodePubkey()}@{offer.getNodeHost()}:{offer.getNodePort()}\n                    </div>\n                    </>\n                  }\n                  <div className=\"inner-input-links\">\n                      <div className=\"input-links-side\">\n                      </div>\n                      <div className=\"squeak-btn-holder\">\n                          <div onClick={buySqueak} className={offer ? 'squeak-btn-side squeak-btn-active' : 'squeak-btn-side'}>\n                              Buy\n                          </div>\n                      </div>\n                  </div>\n              </div>\n\n\n          </div>\n      </div> : null}\n  </div>:null}\n  </>\n}\n\nexport default withRouter(Squeak)\n","import React from 'react'\r\nimport { withRouter , Link } from 'react-router-dom'\r\nimport './style.scss'\r\nimport Squeak from '../../features/squeaks/Squeak'\r\n\r\n\r\nconst SqueakPage = (props) => {\r\n\r\n    return(\r\n        <>\r\n        <Squeak id={props.match.params.id} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(SqueakPage)\r\n","import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { withRouter, Link } from 'react-router-dom'\nimport moment from 'moment'\nimport { getProfileImageSrcString } from '../../squeakimages/images';\n\n\nimport SqueakCard from '../../components/SqueakCard'\nimport Loader from '../../components/Loader'\n\n\nimport {\n  fetchSigningProfiles,\n  clearSigningProfiles,\n  selectSigningProfiles,\n  selectSigningProfilesStatus,\n  setFollowProfile,\n  setUnfollowProfile,\n} from './profilesSlice'\n\n\nconst SigningProfiles = (props) => {\n  const signingProfiles = useSelector(selectSigningProfiles);\n  const signingProfilesStatus = useSelector(selectSigningProfilesStatus);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      window.scrollTo(0, 0)\n      console.log('fetchSigningProfiles');\n      dispatch(clearSigningProfiles());\n      dispatch(fetchSigningProfiles(null));\n  }, [])\n\n  const goToUser = (id) => {\n      props.history.push(`/app/profile/${id}`)\n  }\n\n  const followUser = (e, id) => {\n      e.stopPropagation()\n      console.log('Follow clicked');\n      dispatch(setFollowProfile(id));\n  }\n\n  const unfollowUser = (e,id) => {\n      e.stopPropagation()\n      console.log('Unfollow clicked');\n      dispatch(setUnfollowProfile(id));\n  }\n\n\n  const renderedListItems = signingProfiles.map(f=>{\n      return <div onClick={()=>goToUser(f.getPubkey())} key={f.getPubkey()} className=\"search-result-wapper\">\n          <Link to={`/app/profile/${f.getPubkey()}`} className=\"search-userPic-wrapper\">\n              <img style={{borderRadius:'50%', minWidth:'49px'}} width=\"100%\" height=\"49px\" src={`${getProfileImageSrcString(f)}`}/>\n                  </Link>\n                      <div className=\"search-user-details\">\n                      <div className=\"search-user-warp\">\n                      <div className=\"search-user-info\">\n                      <div className=\"search-user-name\">{f.getProfileName()}</div>\n                      <div className=\"search-user-username\">@{f.getPubkey()}</div>\n                      </div>\n                  <div onClick={(e)=>{\n                      f.getFollowing() ?\n                      unfollowUser(e,f.getProfileId()) :\n                      followUser(e,f.getProfileId())\n                  }} className={f.getFollowing() ? \"follow-btn-wrap unfollow-switch\":\"follow-btn-wrap\"}>\n                  <span><span>{f.getFollowing() ? 'Following' : 'Follow'}</span></span>\n                  </div>\n                  </div>\n                  <div className=\"search-user-bio\">\n                      &nbsp;\n                  </div>\n              </div>\n          </div>\n      })\n\n  return <>\n            {renderedListItems}\n         </>\n}\n\nexport default withRouter(SigningProfiles)\n","import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { withRouter, Link } from 'react-router-dom'\nimport moment from 'moment'\nimport { getProfileImageSrcString } from '../../squeakimages/images';\n\n\nimport SqueakCard from '../../components/SqueakCard'\nimport Loader from '../../components/Loader'\n\n\nimport {\n  fetchContactProfiles,\n  clearContactProfiles,\n  selectContactProfiles,\n  selectContactProfilesStatus,\n  setFollowProfile,\n  setUnfollowProfile,\n} from './profilesSlice'\n\n\nconst ContactProfiles = (props) => {\n  const contactProfiles = useSelector(selectContactProfiles);\n  const contactProfilesStatus = useSelector(selectContactProfilesStatus);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      window.scrollTo(0, 0)\n      console.log('fetchContactProfiles');\n      dispatch(clearContactProfiles());\n      dispatch(fetchContactProfiles());\n  }, [])\n\n  const goToUser = (id) => {\n      props.history.push(`/app/profile/${id}`)\n  }\n\n  const followUser = (e, id) => {\n      e.stopPropagation()\n      console.log('Follow clicked');\n      dispatch(setFollowProfile(id));\n  }\n\n  const unfollowUser = (e,id) => {\n      e.stopPropagation()\n      console.log('Unfollow clicked');\n      dispatch(setUnfollowProfile(id));\n  }\n\n  console.log(contactProfiles);\n\n  const renderedListItems = contactProfiles.map(f=>{\n      return <div onClick={()=>goToUser(f.getPubkey())} key={f.getPubkey()} className=\"search-result-wapper\">\n          <Link to={`/app/profile/${f.getPubkey()}`} className=\"search-userPic-wrapper\">\n              <img style={{borderRadius:'50%', minWidth:'49px'}} width=\"100%\" height=\"49px\" src={`${getProfileImageSrcString(f)}`}/>\n          </Link>\n          <div className=\"search-user-details\">\n              <div className=\"search-user-warp\">\n                  <div className=\"search-user-info\">\n                      <div className=\"search-user-name\">{f.getProfileName()}</div>\n                      <div className=\"search-user-username\">@{f.getPubkey()}</div>\n                  </div>\n                  <div onClick={(e)=>{\n                      f.getFollowing() ?\n                      unfollowUser(e,f.getProfileId()) :\n                      followUser(e,f.getProfileId())\n                  }} className={f.getFollowing() ? \"follow-btn-wrap unfollow-switch\":\"follow-btn-wrap\"}>\n                  <span><span>{f.getFollowing() ? 'Following' : 'Follow'}</span></span>\n              </div>\n          </div>\n          <div className=\"search-user-bio\">\n                &nbsp;\n          </div>\n        </div>\n      </div>\n      })\n\n  return <>\n            {renderedListItems}\n         </>\n}\n\nexport default withRouter(ContactProfiles)\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport './style.scss'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { ICON_SEARCH, ICON_ARROWBACK, ICON_CLOSE } from '../../Icons'\r\nimport { getProfileImageSrcString } from '../../squeakimages/images';\r\nimport Loader from '../Loader'\r\nimport SqueakCard from '../SqueakCard'\r\n\r\nimport { unwrapResult } from '@reduxjs/toolkit'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport SigningProfiles from '../../features/profiles/SigningProfiles'\r\nimport ContactProfiles from '../../features/profiles/ContactProfiles'\r\nimport {\r\n  setCreateSigningProfile,\r\n  setImportSigningProfile,\r\n  setCreateContactProfile,\r\n} from '../../features/profiles/profilesSlice'\r\n\r\n\r\nconst Profiles = (props) => {\r\n    const [tab, setTab] = useState('Signing Profiles')\r\n    const [signingProfileModalOpen, setSigningProfileModalOpen] = useState(false)\r\n    const [contactProfileModalOpen, setContactProfileModalOpen] = useState(false)\r\n    const [styleBody, setStyleBody] = useState(false)\r\n    const [newProfileName, setNewProfileName] = useState('')\r\n    const [newProfilePubkey, setNewProfilePubkey] = useState('')\r\n    const [usePrivKey, setUsePrivKey] = useState(false)\r\n    const [newProfilePrivkey, setNewProfilePrivkey] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const searchOnChange = (param) => {\r\n        if(tab !== 'Search'){setTab('Search')}\r\n        if(param.length>0){\r\n            // TODO: search for a profile by name.\r\n        }\r\n    }\r\n\r\n    const toggleSigningProfileModal = (param, type) => {\r\n        setStyleBody(!styleBody)\r\n        setTimeout(()=>{ setSigningProfileModalOpen(!signingProfileModalOpen) },20)\r\n    }\r\n\r\n    const toggleContactProfileModal = (param, type) => {\r\n        setStyleBody(!styleBody)\r\n        setTimeout(()=>{ setContactProfileModalOpen(!contactProfileModalOpen) },20)\r\n    }\r\n\r\n    const createSigningProfile = () => {\r\n        if (usePrivKey) {\r\n          console.log('Import signing profile with name:', newProfileName);\r\n          dispatch(setImportSigningProfile({profileName: newProfileName, privateKey: newProfilePrivkey}))\r\n          .then(unwrapResult)\r\n          .then((pubkey) => {\r\n            console.log('Created profile with pubkey', pubkey);\r\n            props.history.push(`/app/profile/${pubkey}`);\r\n          })\r\n          .catch((err) => {\r\n            alert(err.message);\r\n          });\r\n        } else {\r\n          console.log('Create signing profile with name:', newProfileName);\r\n          dispatch(setCreateSigningProfile({profileName: newProfileName}))\r\n          .then(unwrapResult)\r\n          .then((pubkey) => {\r\n            console.log('Created profile with pubkey', pubkey);\r\n            props.history.push(`/app/profile/${pubkey}`);\r\n          })\r\n          .catch((err) => {\r\n            alert(err.message);\r\n          });\r\n        }\r\n        toggleSigningProfileModal();\r\n    }\r\n\r\n    const createContactProfile = () => {\r\n        dispatch(setCreateContactProfile({profileName: newProfileName, pubkey: newProfilePubkey}))\r\n        .then(unwrapResult)\r\n        .then((pubkey) => {\r\n          console.log('Created profile with pubkey', pubkey);\r\n          props.history.push(`/app/profile/${pubkey}`);\r\n        })\r\n        .catch((err) => {\r\n          alert(err.message);\r\n        });\r\n        toggleContactProfileModal();\r\n    }\r\n\r\n    const handleModalClick = (e) => {\r\n        e.stopPropagation()\r\n    }\r\n\r\n    const handleChangeUsePrivKey = () => {\r\n      setUsePrivKey(!usePrivKey);\r\n    };\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n        <div className=\"explore-wrapper\">\r\n            <div className=\"explore-header\">\r\n                <div className=\"explore-search-wrapper\">\r\n                    <div className=\"explore-search-icon\">\r\n                        <ICON_SEARCH/>\r\n                    </div>\r\n                    <div className=\"explore-search-input\">\r\n                        <input onChange={(e)=>searchOnChange(e.target.value)} placeholder=\"Search for people\" type=\"text\" name=\"search\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"profile-details-wrapper\">\r\n            <div className=\"profiles-options\">\r\n            <div onClick={(e)=>toggleSigningProfileModal('edit')}\r\n               className='profiles-create-button'>\r\n                  <span>Add Signing Profile</span>\r\n            </div>\r\n            <div onClick={(e)=>toggleContactProfileModal('edit')}\r\n               className='profiles-create-button'>\r\n                  <span>Add Contact Profile</span>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"explore-nav-menu\">\r\n                    <div onClick={()=>setTab('Signing Profiles')} className={tab === 'Signing Profiles' ? `explore-nav-item activeTab` : `explore-nav-item`}>\r\n                        Signing Profiles\r\n                    </div>\r\n                    <div onClick={()=>setTab('Contact Profiles')} className={tab === 'Contact Profiles' ? `explore-nav-item activeTab` : `explore-nav-item`}>\r\n                        Contact Profiles\r\n                    </div>\r\n                </div>\r\n                {tab === 'Signing Profiles' ?\r\n                  <SigningProfiles />\r\n                :\r\n                tab === 'Contact Profiles' ?\r\n                  <ContactProfiles />\r\n                : <div className=\"try-searching\">\r\n                        Nothing to see here ..\r\n                        <div/>\r\n                    Try searching for people, usernames, or keywords\r\n\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n\r\n        {/* Modal for create signing profile */}\r\n        <div onClick={()=>toggleSigningProfileModal()} style={{display: signingProfileModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n            <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-closeIcon\">\r\n                        <div onClick={()=>toggleSigningProfileModal()} className=\"modal-closeIcon-wrap\">\r\n                            <ICON_CLOSE />\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"modal-title\">Add Signing Profile</p>\r\n\r\n                    <div className=\"save-modal-wrapper\">\r\n                        <div onClick={createSigningProfile} className=\"save-modal-btn\">\r\n                            Submit\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                    <form className=\"edit-form\">\r\n                        <div className=\"edit-input-wrap\">\r\n                            <div className=\"edit-input-content\">\r\n                                <label>Profile Name</label>\r\n                                <input onChange={(e)=>setNewProfileName(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"edit-input-wrap\">\r\n                            <div className=\"edit-input-content\">\r\n                            <label>\r\n                            <input\r\n                            type=\"checkbox\"\r\n                            checked={usePrivKey}\r\n                            onChange={handleChangeUsePrivKey}\r\n                            />\r\n                              Import Existing Private Key\r\n                            </label>\r\n                            </div>\r\n                        </div>\r\n                        {usePrivKey &&\r\n                          <div className=\"edit-input-wrap\">\r\n                              <div className=\"edit-input-content\">\r\n                                  <label>Private Key</label>\r\n                                  <input onChange={(e)=>setNewProfilePrivkey(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                              </div>\r\n                          </div>\r\n                        }\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        {/* Modal for create contact profile */}\r\n        <div onClick={()=>toggleContactProfileModal()} style={{display: contactProfileModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n            <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-closeIcon\">\r\n                        <div onClick={()=>toggleContactProfileModal()} className=\"modal-closeIcon-wrap\">\r\n                            <ICON_CLOSE />\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"modal-title\">Add Contact Profile</p>\r\n\r\n                    <div className=\"save-modal-wrapper\">\r\n                        <div onClick={createContactProfile} className=\"save-modal-btn\">\r\n                            Submit\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                    <form className=\"edit-form\">\r\n                        <div className=\"edit-input-wrap\">\r\n                            <div className=\"edit-input-content\">\r\n                                <label>Profile Name</label>\r\n                                <input onChange={(e)=>setNewProfileName(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"edit-input-wrap\">\r\n                            <div className=\"edit-input-content\">\r\n                                <label>Public Key</label>\r\n                                <input onChange={(e)=>setNewProfilePubkey(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Profiles)\r\n","import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport moment from 'moment'\n\nimport SqueakCard from '../../components/SqueakCard'\nimport Loader from '../../components/Loader'\n\n\nimport {\n  fetchSentPayments,\n  clearSentPayments,\n  selectSentPayments,\n  selectSentPaymentsStatus,\n  selectLastSentPaymentsSqueak,\n} from './paymentsSlice'\n\n\nconst SentPayments = (props) => {\n  const sentPayments = useSelector(selectSentPayments);\n  const sentPaymentsStatus = useSelector(selectSentPaymentsStatus);\n  const lastSentPayment = useSelector(selectLastSentPaymentsSqueak);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      window.scrollTo(0, 0)\n      console.log('fetchSentPayments');\n      dispatch(clearSentPayments());\n      dispatch(fetchSentPayments(null));\n  }, [])\n\n  const goToSqueak = (id) => {\n      props.history.push(`/app/squeak/${id}`)\n  }\n\n  const renderedListItems = sentPayments.map(f=>{\n    return <div onClick={()=>goToSqueak(f.getSqueakHash())} key={f.getPaymentHash()} className=\"search-result-wapper\">\n              <div className=\"search-user-details\">\n                <div className=\"search-user-warp\">\n                  <div className=\"search-user-info\">\n                    <div className=\"payment-price\">{f.getPriceMsat() / 1000} sats</div>\n                    <div className=\"payment-squeak-hash\"><b>Squeak Hash</b>: {f.getSqueakHash()}</div>\n                    <div className=\"payment-peer-address\"><b>Peer</b>: {f.getPeerAddress().getHost()}:{f.getPeerAddress().getPort()}</div>\n                    <div className=\"payment-lightning-node\"><b>Lightning Node</b>: {f.getNodePubkey()}</div>\n                    <div className=\"payment-time\">{moment(f.getTimeMs()).format(\"h:mm A · MMM D, YYYY\")}</div>\n                  </div>\n                </div>\n              </div>\n           </div>\n    })\n\n  return <>\n          {renderedListItems}\n\n          {sentPaymentsStatus === 'loading' ?\n          <div className=\"todo-list\">\n            <Loader />\n          </div>\n          :\n          <div onClick={() => dispatch(fetchSentPayments(lastSentPayment))} className='squeak-btn-side squeak-btn-active'>\n            LOAD MORE\n          </div>\n          }\n\n         </>\n}\n\nexport default withRouter(SentPayments)\n","import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport moment from 'moment'\n\nimport SqueakCard from '../../components/SqueakCard'\nimport Loader from '../../components/Loader'\n\n\nimport {\n  fetchReceivedPayments,\n  clearReceivedPayments,\n  selectReceivedPayments,\n  selectReceivedPaymentsStatus,\n  selectLastReceivedPaymentsSqueak,\n} from './paymentsSlice'\n\n\nconst ReceivedPayments = (props) => {\n  const receivedPayments = useSelector(selectReceivedPayments);\n  const receivedPaymentsStatus = useSelector(selectReceivedPaymentsStatus);\n  const lastReceivedPayment = useSelector(selectLastReceivedPaymentsSqueak);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      window.scrollTo(0, 0)\n      console.log('fetchReceivedPayments');\n      dispatch(clearReceivedPayments());\n      dispatch(fetchReceivedPayments(null));\n  }, [])\n\n  const goToSqueak = (id) => {\n      props.history.push(`/app/squeak/${id}`)\n  }\n\n  const renderedListItems = receivedPayments.map(f=>{\n    return <div onClick={()=>goToSqueak(f.getSqueakHash())} key={f.getPaymentHash()} className=\"search-result-wapper\">\n              <div className=\"search-user-details\">\n                  <div className=\"search-user-warp\">\n                      <div className=\"search-user-info\">\n                          <div className=\"payment-price\">{f.getPriceMsat() / 1000} sats</div>\n                          <div className=\"payment-squeak-hash\"><b>Squeak Hash</b>: {f.getSqueakHash()}</div>\n                          <div className=\"payment-peer-address\"><b>Peer</b>: {f.getPeerAddress().getHost()}:{f.getPeerAddress().getPort()}</div>\n                          <div className=\"payment-time\">{moment(f.getTimeMs()).format(\"h:mm A · MMM D, YYYY\")}</div>\n                      </div>\n                  </div>\n              </div>\n           </div>\n    })\n\n  return <>\n          {renderedListItems}\n\n          {receivedPaymentsStatus === 'loading' ?\n          <div className=\"todo-list\">\n            <Loader />\n          </div>\n          :\n          <div onClick={() => dispatch(fetchReceivedPayments(lastReceivedPayment))} className='squeak-btn-side squeak-btn-active'>\n            LOAD MORE\n          </div>\n          }\n\n         </>\n}\n\nexport default withRouter(ReceivedPayments)\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport './style.scss'\r\nimport moment from 'moment'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { ICON_SEARCH, ICON_ARROWBACK, ICON_CLOSE } from '../../Icons'\r\nimport { getProfileImageSrcString } from '../../squeakimages/images';\r\nimport Loader from '../Loader'\r\nimport SqueakCard from '../SqueakCard'\r\nimport SentPayments from '../../features/payments/SentPayments'\r\nimport ReceivedPayments from '../../features/payments/ReceivedPayments'\r\n\r\n\r\nconst Payments = (props) => {\r\n    const [tab, setTab] = useState('Sent Payments')\r\n    const [styleBody, setStyleBody] = useState(false)\r\n\r\n    return(\r\n        <div>\r\n\r\n        <div className=\"explore-wrapper\">\r\n            <div className=\"payments-header-wrapper\">\r\n                <div className=\"payments-header-content\">\r\n                    <div className=\"payments-header-name\">\r\n                        Payments\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"profile-details-wrapper\">\r\n            <div className=\"profiles-options\">\r\n            </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"explore-nav-menu\">\r\n                    <div onClick={()=>setTab('Sent Payments')} className={tab === 'Sent Payments' ? `explore-nav-item activeTab` : `explore-nav-item`}>\r\n                        Sent Payments\r\n                    </div>\r\n                    <div onClick={()=>setTab('Received Payments')} className={tab === 'Received Payments' ? `explore-nav-item activeTab` : `explore-nav-item`}>\r\n                        Received Payments\r\n                    </div>\r\n                </div>\r\n                {tab === 'Sent Payments' ?\r\n                <>\r\n                <SentPayments />\r\n                </>\r\n\r\n                :\r\n                tab === 'Received Payments' ?\r\n                  <>\r\n                    <ReceivedPayments />\r\n                  </>\r\n                : <div className=\"try-searching\">\r\n                        Nothing to see here ..\r\n                        <div/>\r\n                    Try searching for people, usernames, or keywords\r\n\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Payments)\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport './style.scss'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { ICON_SEARCH, ICON_ARROWBACK, ICON_CLOSE, ICON_LAPTOPFILL } from '../../Icons'\r\nimport { getProfileImageSrcString } from '../../squeakimages/images';\r\nimport Loader from '../Loader'\r\nimport SqueakCard from '../SqueakCard'\r\n\r\nimport { unwrapResult } from '@reduxjs/toolkit'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  fetchConnectedPeers,\r\n  selectConnectedPeers,\r\n  selectConnectedPeersStatus,\r\n  selectSavedPeers,\r\n  fetchSavedPeers,\r\n  setConnectPeer,\r\n  setSavePeer,\r\n} from '../../features/peers/peersSlice'\r\nimport {\r\n  fetchExternalAddress,\r\n  selectExternalAddress,\r\n} from '../../features/externalAddress/externalAddressSlice'\r\n\r\n\r\n\r\nconst Peers = (props) => {\r\n    const [tab, setTab] = useState('Connected Peers')\r\n    const [savePeerModalOpen, setSavePeerModalOpen] = useState(false)\r\n    const [connectPeerModalOpen, setconnectPeerModalOpen] = useState(false)\r\n    const [showExternalAddressModalOpen, setShowExternalAddressModalOpen] = useState(false)\r\n    const [styleBody, setStyleBody] = useState(false)\r\n    const [name, setName] = useState('')\r\n    const [host, setHost] = useState('')\r\n    const [port, setPort] = useState('')\r\n    const [useTor, setUseTor] = useState(false)\r\n\r\n    const externalAddress = useSelector(selectExternalAddress);\r\n    const peers = useSelector(selectSavedPeers);\r\n    const connectedPeers = useSelector(selectConnectedPeers);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        dispatch(fetchExternalAddress());\r\n        dispatch(fetchConnectedPeers());\r\n        dispatch(fetchSavedPeers());\r\n    }, [])\r\n\r\n    const goToUser = (id) => {\r\n        props.history.push(`/app/profile/${id}`)\r\n    }\r\n\r\n    const goToPeer = (peerAddress) => {\r\n        props.history.push(`/app/peer/${peerAddress.getNetwork()}/${peerAddress.getHost()}/${peerAddress.getPort()}`)\r\n    }\r\n\r\n    const peerAddressToStr = (peerAddress) => {\r\n      return `${peerAddress.getNetwork()}/${peerAddress.getHost()}:${peerAddress.getPort()}`;\r\n    }\r\n\r\n    const isPeerConnected = (peerAddress) => {\r\n      const peerAddressStr = peerAddressToStr(peerAddress);\r\n      const connectedPeerAddresses = connectedPeers.map((p) => peerAddressToStr(p.getPeerAddress()));\r\n      return connectedPeerAddresses.includes(peerAddressStr);\r\n    };\r\n\r\n    const toggleSavePeerModal = (param, type) => {\r\n        setStyleBody(!styleBody)\r\n        setTimeout(()=>{ setSavePeerModalOpen(!savePeerModalOpen) },20)\r\n    }\r\n\r\n    const toggleconnectPeerModal = (param, type) => {\r\n        setStyleBody(!styleBody)\r\n        setTimeout(()=>{ setconnectPeerModalOpen(!connectPeerModalOpen) },20)\r\n    }\r\n\r\n    const toggleShowExternalAddressModalOpen = () => {\r\n        setStyleBody(!styleBody)\r\n        setTimeout(()=>{ setShowExternalAddressModalOpen(!showExternalAddressModalOpen) },20)\r\n    }\r\n\r\n    const getNetwork = () => {\r\n      if (useTor) {\r\n        return 'TORV3';\r\n      }\r\n      return 'IPV4';\r\n    };\r\n\r\n    function removeHttp(url) {\r\n      return url.replace(/^https?:\\/\\//, '');\r\n    }\r\n\r\n    const savePeer = () => {\r\n        const network = getNetwork();\r\n        const strippedHost = removeHttp(host);\r\n        dispatch(setSavePeer({\r\n            name: name,\r\n            host: strippedHost,\r\n            port: port,\r\n            network: network,\r\n        }));\r\n        toggleSavePeerModal();\r\n    }\r\n\r\n    const connectPeer = () => {\r\n        const network = getNetwork();\r\n        const strippedHost = removeHttp(host);\r\n        dispatch(setConnectPeer({\r\n            host: strippedHost,\r\n            port: port,\r\n            network: network,\r\n        }));\r\n        toggleconnectPeerModal();\r\n    }\r\n\r\n    const handleChangeUseTor = () => {\r\n      setUseTor(!useTor);\r\n    };\r\n\r\n    const handleModalClick = (e) => {\r\n        e.stopPropagation()\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n        <div className=\"explore-wrapper\">\r\n            <div className=\"peers-header-wrapper\">\r\n                <div className=\"peers-header-content\">\r\n                    <div className=\"peers-header-name\">\r\n                        Peers\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"profile-details-wrapper\">\r\n            <div className=\"profiles-options\">\r\n            <div onClick={(e)=>toggleShowExternalAddressModalOpen('edit')}\r\n               className='profiles-create-button'>\r\n                  <span>Show External Address</span>\r\n            </div>\r\n            <div onClick={(e)=>toggleconnectPeerModal('edit')}\r\n               className='profiles-create-button'>\r\n                  <span>Connect Peer</span>\r\n            </div>\r\n            <div onClick={(e)=>toggleSavePeerModal('edit')}\r\n               className='profiles-create-button'>\r\n                  <span>Add Saved Peer</span>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"explore-nav-menu\">\r\n                    <div onClick={()=>setTab('Connected Peers')} className={tab === 'Connected Peers' ? `explore-nav-item activeTab` : `explore-nav-item`}>\r\n                        Connected Peers\r\n                    </div>\r\n                    <div onClick={()=>setTab('Saved Peers')} className={tab === 'Saved Peers' ? `explore-nav-item activeTab` : `explore-nav-item`}>\r\n                        Saved Peers\r\n                    </div>\r\n                </div>\r\n                {tab === 'Saved Peers' ?\r\n                peers.map(sp=>{\r\n                  const peerId = sp.getPeerId();\r\n                  const savedPeerName = sp.getPeerName();\r\n                  const peerAddress = sp.getPeerAddress();\r\n                  const host = peerAddress.getHost();\r\n                  const port = peerAddress.getPort();\r\n                  const addrStr = host + ':' + port;\r\n                  const isConnected = isPeerConnected(peerAddress);\r\n\r\n                  return <div onClick={()=>goToPeer(peerAddress)} key={peerId} className=\"search-result-wapper\">\r\n                    {isConnected ?\r\n                      <ICON_LAPTOPFILL styles={{fill:\"rgb(0,128,0)\", width:'48px', height:\"48px\"}} /> :\r\n                      <ICON_LAPTOPFILL styles={{fill:\"rgb(255,0,0)\", width:'48px', height:\"48px\"}} />\r\n                    }\r\n                    <div className=\"search-user-details\">\r\n                    <div className=\"search-user-warp\">\r\n                    <div className=\"search-user-info\">\r\n                    <div className=\"search-user-name\">{savedPeerName}</div>\r\n                    <div className=\"search-user-username\">{addrStr}</div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"search-user-bio\">\r\n                      &nbsp;\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                })\r\n                :\r\n                tab === 'Connected Peers' ?\r\n                connectedPeers.map(p=>{\r\n                  const peerAddress = p.getPeerAddress();\r\n                  const host = peerAddress.getHost();\r\n                  const port = peerAddress.getPort();\r\n                  const addrStr = host + ':' + port;\r\n                  const savedPeer = p.getSavedPeer();\r\n                  const savedPeerName = savedPeer && savedPeer.getPeerName();\r\n                  return <div onClick={()=>goToPeer(peerAddress)} key={addrStr} className=\"search-result-wapper\">\r\n                    <ICON_LAPTOPFILL styles={{fill:\"rgb(0,128,0)\", width:'48px', height:\"48px\"}} />\r\n                    <div className=\"search-user-details\">\r\n                    <div className=\"search-user-warp\">\r\n                    <div className=\"search-user-info\">\r\n                    <div className=\"search-user-name\">{savedPeerName}</div>\r\n                    <div className=\"search-user-username\">{addrStr}</div>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"search-user-bio\">\r\n                      &nbsp;\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                })\r\n                : <div className=\"try-searching\">\r\n                        Nothing to see here ..\r\n                        <div/>\r\n                    Try searching for people, usernames, or keywords\r\n\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n        {/* Modal for show external address */}\r\n        <div onClick={()=>toggleShowExternalAddressModalOpen()} style={{display: showExternalAddressModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n            <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-closeIcon\">\r\n                        <div onClick={()=>toggleShowExternalAddressModalOpen()} className=\"modal-closeIcon-wrap\">\r\n                            <ICON_CLOSE />\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"modal-title\">'Show External Address'</p>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                    <form className=\"edit-form\">\r\n                        <div className=\"edit-input-wrap\">\r\n                            <div className=\"edit-input-content\">\r\n                                <label>Network</label>\r\n                                <input defaultValue={externalAddress && externalAddress.getNetwork()} readOnly type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"edit-input-wrap\">\r\n                            <div className=\"edit-input-content\">\r\n                                <label>Host</label>\r\n                                <input defaultValue={externalAddress && externalAddress.getHost()} readOnly type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"edit-input-wrap\">\r\n                            <div className=\"edit-input-content\">\r\n                                <label>Port</label>\r\n                                <input defaultValue={externalAddress && externalAddress.getPort()} readOnly type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n        {/* Modal for create save peer */}\r\n        <div onClick={()=>toggleSavePeerModal()} style={{display: savePeerModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n            <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-closeIcon\">\r\n                        <div onClick={()=>toggleSavePeerModal()} className=\"modal-closeIcon-wrap\">\r\n                            <ICON_CLOSE />\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"modal-title\">Save Peer</p>\r\n\r\n                    <div className=\"save-modal-wrapper\">\r\n                        <div onClick={savePeer} className=\"save-modal-btn\">\r\n                            Submit\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                    <form className=\"edit-form\">\r\n                    <div className=\"edit-input-wrap\">\r\n                        <div className=\"edit-input-content\">\r\n                            <label>Name</label>\r\n                            <input onChange={(e)=>setName(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"edit-input-wrap\">\r\n                        <div className=\"edit-input-content\">\r\n                            <label>Host</label>\r\n                            <input onChange={(e)=>setHost(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"edit-input-wrap\">\r\n                        <div className=\"edit-input-content\">\r\n                            <label>Port</label>\r\n                            <input onChange={(e)=>setPort(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"edit-input-wrap\">\r\n                        <div className=\"edit-input-content\">\r\n                        <label>\r\n                        <input\r\n                        type=\"checkbox\"\r\n                        checked={useTor}\r\n                        onChange={handleChangeUseTor}\r\n                        />\r\n                        Use Tor\r\n                        </label>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        {/* Modal for connect peer */}\r\n        <div onClick={()=>toggleconnectPeerModal()} style={{display: connectPeerModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n            <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <div className=\"modal-closeIcon\">\r\n                        <div onClick={()=>toggleconnectPeerModal()} className=\"modal-closeIcon-wrap\">\r\n                            <ICON_CLOSE />\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"modal-title\">Connect Peer</p>\r\n\r\n                    <div className=\"save-modal-wrapper\">\r\n                        <div onClick={connectPeer} className=\"save-modal-btn\">\r\n                            Submit\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                    <form className=\"edit-form\">\r\n                        <div className=\"edit-input-wrap\">\r\n                            <div className=\"edit-input-content\">\r\n                                <label>Host</label>\r\n                                <input onChange={(e)=>setHost(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"edit-input-wrap\">\r\n                            <div className=\"edit-input-content\">\r\n                                <label>Port</label>\r\n                                <input onChange={(e)=>setPort(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"edit-input-wrap\">\r\n                            <div className=\"edit-input-content\">\r\n                            <label>\r\n                            <input\r\n                            type=\"checkbox\"\r\n                            checked={useTor}\r\n                            onChange={handleChangeUseTor}\r\n                            />\r\n                            Use Tor\r\n                            </label>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Peers)\r\n","import React , { useEffect, useContext, useState } from 'react'\nimport {  withRouter, Link } from 'react-router-dom'\nimport { ICON_SEARCH } from '../../Icons'\nimport Loader from '../../components/Loader'\n\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\n\n\nimport {\n  fetchPaymentSummary,\n  selectPaymentSummary,\n} from './paymentsSlice'\n\n\nconst PaymentSummary = (props) => {\n  const paymentSummary = useSelector(selectPaymentSummary)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n      window.scrollTo(0, 0)\n      console.log('fetchPaymentSummary');\n      dispatch(fetchPaymentSummary());\n  }, [])\n\n\n  return (\n      <>\n          {paymentSummary ?\n            <div className=\"feed-trending-card\">\n                <h3 className=\"feed-card-header\">Payments</h3>\n                <div onClick={()=>props.history.push('/app/payments')}className=\"feed-card-trend\">\n                    <div>Amount Spent</div>\n                    <div>{paymentSummary.getAmountSpentMsat() / 1000} sats</div>\n                    <div>{paymentSummary.getNumSentPayments()} squeaks</div>\n                </div>\n                <div onClick={()=>props.history.push('/app/payments')}className=\"feed-card-trend\">\n                    <div>Amount Earned</div>\n                    <div>{paymentSummary.getAmountEarnedMsat() / 1000} sats</div>\n                    <div>{paymentSummary.getNumReceivedPayments()} squeaks</div>\n                </div>\n            </div> :\n            <Loader/>\n          }\n      </>\n      )\n}\n\nexport default withRouter(PaymentSummary)\n","import React , { useEffect, useContext, useState } from 'react'\r\nimport './style.scss'\r\nimport {  withRouter, Link } from 'react-router-dom'\r\nimport { ICON_SEARCH } from '../../Icons'\r\nimport Loader from '../Loader'\r\nimport PaymentSummary from '../../features/payments/PaymentSummary'\r\n\r\n\r\nconst Feed = (props) => {\r\n\r\nconst [searchText, setSearchText] = useState('');\r\n\r\n\r\nconst goToUser = (id) => {\r\n    props.history.push(`/app/profile/${id}`)\r\n}\r\n\r\nconst changeSearchText = (param) => {\r\n    setSearchText(param);\r\n}\r\n\r\nconst searchOnEnter = (e) => {\r\n    if (e.keyCode === 13) {\r\n      if(searchText.length>0){\r\n        console.log(\"Goto\")\r\n        console.log(searchText)\r\n        goToNewSearch(searchText);\r\n        setSearchText('');\r\n      }\r\n    }\r\n}\r\n\r\nconst goToNewSearch = (newSearchText) => {\r\n    props.history.push(`/app/search?q=${newSearchText}`);\r\n}\r\n\r\nreturn(\r\n    <div className=\"feed-wrapper\">\r\n      <div className=\"explore-search-wrapper\">\r\n        <div className=\"explore-search-icon\">\r\n            <ICON_SEARCH/>\r\n        </div>\r\n        <div className=\"explore-search-input\">\r\n          <input value={searchText} onKeyDown={(e)=>searchOnEnter(e)} onChange={(e)=>changeSearchText(e.target.value)}  placeholder=\"Search Squeaks\" type=\"text\" name=\"search\"/>\r\n        </div>\r\n      </div>\r\n\r\n      <PaymentSummary />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Feed)\r\n","import React, { useEffect, useState, useContext, useRef, useMemo } from 'react'\nimport { withRouter, useLocation } from 'react-router-dom';\nimport ContentEditable from 'react-contenteditable'\nimport { ICON_IMGUPLOAD, ICON_SEARCH } from '../../Icons'\nimport { Link } from 'react-router-dom'\nimport { API_URL } from '../../config'\n\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\n\nimport SqueakCard from '../../components/SqueakCard'\nimport Loader from '../../components/Loader'\n\n\nimport {\n  clearSearch,\n  fetchSearch,\n  selectSearchSqueaks,\n  selectLastSearchSqueak,\n  selectSearchSqueaksStatus,\n} from '../squeaks/squeaksSlice'\n\nimport store from '../../store'\n\n\nconst SearchResults = (props) => {\n  const squeaks = useSelector(selectSearchSqueaks);\n  const loadingStatus = useSelector(selectSearchSqueaksStatus)\n  const lastSqueak = useSelector(selectLastSearchSqueak)\n  const dispatch = useDispatch()\n\n  const { search } = useLocation();\n  const [searchText, setSearchText] = useState('');\n\n  const q = useMemo(() => {\n    const p = new URLSearchParams(search);\n    const q = p.get('q');\n    return q ? decodeURIComponent(q) : '';\n  }, [search]);\n\n  useEffect(() => {\n      window.scrollTo(0, 0)\n      if (q && q.length > 0) {\n        setSearchText(q);\n        console.log('fetchTodos');\n        dispatch(clearSearch());\n        const values = {\n          searchText: q,\n          limit: 5,\n          lastSqueak: null,\n        }\n        dispatch(fetchSearch(values));\n      }\n  }, [q])\n\n  const searchOnEnter = (e) => {\n      if (e.keyCode === 13) {\n        if(searchText.length>0){\n          goToNewSearch(searchText);\n        }\n      }\n  }\n\n  const goToNewSearch = (newSearchText) => {\n      props.history.push(`/app/search?q=${newSearchText}`);\n  }\n\n\n  const changeSearchText = (param) => {\n      setSearchText(param);\n  }\n\n  const getLastSqueak = (squeakLst) => {\n    if (squeakLst == null) {\n      return null;\n    } if (squeakLst.length === 0) {\n      return null;\n    }\n    return squeakLst.slice(-1)[0];\n  };\n\n  const getMoreSqueaks = () => {\n    let lastSqueak = getLastSqueak(squeaks);\n    const values = {\n      searchText: searchText,\n      limit: 5,\n      lastSqueak: lastSqueak,\n    }\n    dispatch(fetchSearch(values));\n  }\n\n\n  const renderedListItems = squeaks.map((squeak) => {\n    return <SqueakCard squeak={squeak} key={squeak.getSqueakHash()} id={squeak.getSqueakHash()} user={squeak.getAuthor()} />\n  })\n\n  return <>\n      <div className=\"explore-header\">\n      <div className=\"explore-search-wrapper\">\n          <div className=\"explore-search-icon\">\n              <ICON_SEARCH/>\n          </div>\n          <div className=\"explore-search-input\">\n              <input value={searchText} onKeyDown={(e)=>searchOnEnter(e)} onChange={(e)=>changeSearchText(e.target.value)} placeholder=\"Search Squeaks\" type=\"text\" name=\"search\"/>\n          </div>\n      </div>\n      </div>\n      <div className=\"Squeak-input-divider\"></div>\n      {squeaks.map(t => {\n          return <SqueakCard squeak={t} key={t.getSqueakHash()} id={t.getSqueakHash()} user={t.getAuthor()} />\n      })}\n\n      {/* TODO: fix get loading state by doing this: https://medium.com/stashaway-engineering/react-redux-tips-better-way-to-handle-loading-flags-in-your-reducers-afda42a804c6 */}\n        {loadingStatus === 'loading' ?\n        <div className=\"todo-list\">\n          <Loader />\n        </div>\n        :\n        <div onClick={() => getMoreSqueaks()} className='squeak-btn-side squeak-btn-active'>\n          LOAD MORE\n        </div>\n        }\n         </>\n}\n\nexport default withRouter(SearchResults)\n","import React, { useEffect, useState, useContext, useRef, useMemo } from 'react'\r\nimport { withRouter, useLocation } from 'react-router-dom';\r\nimport './style.scss'\r\nimport axios from 'axios'\r\nimport ContentEditable from 'react-contenteditable'\r\nimport { ICON_IMGUPLOAD, ICON_SEARCH } from '../../Icons'\r\nimport { Link } from 'react-router-dom'\r\nimport { API_URL } from '../../config'\r\nimport Loader from '../Loader'\r\nimport SqueakCard from '../SqueakCard'\r\nimport SearchResults from '../../features/squeaks/SearchResults'\r\n\r\n\r\n\r\nconst Search = (props) => {\r\n\r\n    return (\r\n        <div className=\"Home-wrapper\">\r\n          <SearchResults />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Search)\r\n","import React, {useEffect} from 'react'\r\nimport './style.scss'\r\n\r\nconst Notifications = () => {\r\n\r\n    useEffect(() => {\r\n        document.getElementsByTagName(\"body\")[0].style.cssText = \"position:fixed; overflow-y: scroll;\"\r\n    },[])\r\n    useEffect( () => () => document.getElementsByTagName(\"body\")[0].style.cssText = \"\", [] )\r\n    return(\r\n        <div className=\"workInProgress\">\r\n            This is a work in progress\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React, {useContext} from 'react'\r\nimport './style.scss'\r\n\r\nconst Alert = (props) => {\r\n\r\n    // TODO: Get these values from a state or slice.\r\n    const top = '-100px';\r\n    const msg = '';\r\n\r\n    return(\r\n        <div style={{top: top}} className=\"alert-wrapper\">\r\n            <div className=\"alert-content\">\r\n                {msg}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { Suspense, lazy } from 'react'\nimport { Route, Switch, HashRouter, Redirect, withRouter } from 'react-router-dom'\nimport 'dotenv/config'\nimport './App.scss'\nimport Loader from './components/Loader'\nimport Nav from './components/Nav'\nimport Login from './components/Login'\nimport Signup from './components/Signup'\nimport Squeak from './components/Squeak'\nimport Profiles from './components/Profiles'\nimport Payments from './components/Payments'\nimport Peers from './components/Peers'\nimport Feed from './components/Feed'\nimport Search from './components/Search'\nimport Notifications from './components/Notifications'\nimport Alerts from './components/Alerts'\n\nconst Home = lazy(() => import('./components/Home'))\nconst Profile = lazy(() => import('./components/Profile'))\nconst Peer = lazy(() => import('./components/Peer'))\n\nconst DefaultContainer = withRouter(({ history }) => {\n  return (<div className=\"body-wrap\">\n    <main className=\"main\">\n      <div className={history.location.pathname.slice(0,9) !== '/messages' ? \"middle-section ms-width\" : \"middle-section\"}>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/app/home\" />\n        </Route>\n        <Route path=\"/app/home\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/app/search\" exact>\n          <Search />\n        </Route>\n        <Route path=\"/app/profile/:username\" exact>\n          <Profile />\n        </Route>\n        <Route path=\"/app/peer/:network/:host/:port\" exact>\n          <Peer />\n        </Route>\n        <Route path=\"/app/squeak/:id\" exact>\n          <Squeak />\n        </Route>\n        <Route path=\"/app/profiles\" exact>\n          <Profiles/>\n        </Route>\n        <Route path=\"/app/payments\" exact>\n          <Payments/>\n        </Route>\n        <Route path=\"/app/peers\" exact>\n          <Peers/>\n        </Route>\n        <Route path=\"/app/notifications\" exact>\n          <Notifications/>\n        </Route>\n      </div>\n        {history.location.pathname.slice(0,9) !== '/messages' &&\n        <div className=\"right-section\">\n          <Feed/>\n        </div>\n         }\n    </main>\n    <nav className=\"header\">\n      <Nav />\n    </nav>\n  </div>)\n});\n\nfunction App() {\n  return (\n    <div className=\"dark-mode\">\n        <HashRouter>\n          <Suspense fallback={<Loader />}>\n            <Alerts />\n            <Switch>\n              <Route path=\"/login\" exact>\n                <Login />\n              </Route>\n              <Route path=\"/signup\" exact>\n                <Signup />\n              </Route>\n              <Route component={DefaultContainer} />\n            </Switch>\n          </Suspense>\n        </HashRouter>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './store'\n\n// store.dispatch(fetchTodos())\n\n//remove <React.StrictMode> <App /> </React.StrictMode> because it causes double renders on reducer\n//ReactDOM.render( <App />, document.getElementById('root')\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}