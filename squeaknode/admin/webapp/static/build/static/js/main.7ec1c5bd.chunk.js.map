{"version":3,"sources":["themes/default.js","themes/index.js","components/Layout/styles.js","components/Header/styles.js","components/Wrappers/Wrappers.js","components/Notification/styles.js","components/Notification/Notification.js","components/UserAvatar/styles.js","context/LayoutContext.js","context/UserContext.js","squeakclient/requests.js","components/Header/Header.js","components/Sidebar/styles.js","components/Sidebar/components/SidebarLink/styles.js","components/Sidebar/components/Dot.js","components/Sidebar/components/SidebarLink/SidebarLink.js","components/Sidebar/Sidebar.js","pages/timeline/styles.js","components/PageTitle/styles.js","components/PageTitle/PageTitle.js","components/Widget/styles.js","components/Widget/Widget.js","components/SqueakThreadItem/styles.js","bitcoin/blockexplorer.js","components/SqueakThreadItem/SqueakThreadItem.js","components/MakeSqueakDialog/styles.js","components/MakeSqueakDialog/MakeSqueakDialog.js","squeakimages/images.js","components/SqueakUserAvatar/SqueakUserAvatar.js","pages/timeline/Timeline.js","pages/dashboard/styles.js","pages/dashboard/mock.js","pages/dashboard/components/Table/Table.js","pages/dashboard/components/BigStat/styles.js","pages/dashboard/components/BigStat/BigStat.js","pages/dashboard/Dashboard.js","pages/squeakaddress/styles.js","components/CreateContactProfileDialog/styles.js","components/CreateContactProfileDialog/CreateContactProfileDialog.js","pages/squeakaddress/SqueakAddress.js","pages/squeak/styles.js","components/SqueakDetailItem/styles.js","components/SqueakDetailItem/SqueakDetailItem.js","components/DeleteSqueakDialog/styles.js","components/DeleteSqueakDialog/DeleteSqueakDialog.js","components/BuySqueakDialog/styles.js","components/BuyOfferItem/styles.js","components/BuyOfferDialog/styles.js","components/BuyOfferDialog/BuyOfferDialog.js","components/BuyOfferDetailItem/styles.js","components/BuyOfferDetailItem/BuyOfferDetailItem.js","components/BuySqueakDialog/BuySqueakDialog.js","components/SqueakDetailsDialog/styles.js","components/SqueakDetailsDialog/SqueakDetailsDialog.js","pages/squeak/Squeak.js","pages/profile/styles.js","components/DeleteProfileDialog/styles.js","components/DeleteProfileDialog/DeleteProfileDialog.js","components/ExportPrivateKeyDialog/styles.js","components/ExportPrivateKeyDialog/ExportPrivateKeyDialog.js","components/ConfigureProfileDialog/styles.js","components/ConfigureProfileDialog/ConfigureProfileDialog.js","components/UpdateProfileImageDialog/styles.js","components/UpdateProfileImageDialog/UpdateProfileImageDialog.js","components/SqueakProfileDetailItem/styles.js","components/SqueakProfileDetailItem/SqueakProfileDetailItem.js","pages/profile/Profile.js","pages/wallet/styles.js","components/ReceiveBitcoinDialog/styles.js","components/ReceiveBitcoinDialog/ReceiveBitcoinDialog.js","components/SendBitcoinDialog/styles.js","components/SendBitcoinDialog/SendBitcoinDialog.js","components/TransactionItem/TransactionItem.js","components/LightningPeerListItem/LightningPeerListItem.js","components/ChannelItem/ChannelBalanceBar.js","components/ChannelItem/ChannelItem.js","components/PendingOpenChannelItem/PendingOpenChannelItem.js","pages/wallet/Wallet.js","pages/lightningnode/styles.js","components/OpenChannelDialog/styles.js","components/OpenChannelDialog/OpenChannelDialog.js","pages/lightningnode/LightningNode.js","pages/channel/styles.js","components/CloseChannelDialog/styles.js","components/CloseChannelDialog/CloseChannelDialog.js","pages/channel/Channel.js","pages/notifications/styles.js","pages/notifications/Notifications.js","pages/maps/styles.js","pages/maps/Maps.js","components/CreateSigningProfileDialog/styles.js","components/CreateSigningProfileDialog/CreateSigningProfileDialog.js","components/ImportSigningProfileDialog/styles.js","components/ImportSigningProfileDialog/ImportSigningProfileDialog.js","pages/profiles/Profiles.js","components/SentPayment/styles.js","components/SentPayment/SentPayment.js","components/ReceivedPayment/styles.js","components/ReceivedPayment/ReceivedPayment.js","pages/payments/Payments.js","pages/sentpayments/SentPayments.js","pages/receivedpayments/ReceivedPayments.js","pages/icons/styles.js","pages/icons/Icons.js","pages/charts/components/ApexLineChart.js","pages/charts/components/ApexHeatmap.js","pages/charts/Charts.js","components/CreatePeerDialog/CreatePeerDialog.js","pages/peers/Peers.js","pages/peer/styles.js","components/DeletePeerDialog/styles.js","components/DeletePeerDialog/DeletePeerDialog.js","pages/peer/Peer.js","components/Layout/Layout.js","pages/error/styles.js","pages/error/Error.js","pages/login/styles.js","pages/login/Login.js","components/App.js","serviceWorker.js","index.js","proto/squeak_admin_pb.js","proto/lnd_pb.js","images/google.svg","pages/error/logo.svg","pages/login/logo.svg"],"names":["palette","primary","main","light","tinycolor","lighten","toHexString","dark","darken","secondary","contrastText","warning","success","info","text","hint","background","default","customShadows","widget","widgetDark","widgetWide","overrides","MuiBackdrop","root","backgroundColor","MuiMenu","paper","boxShadow","MuiSelect","icon","color","MuiListItem","button","MuiTouchRipple","child","MuiTableRow","height","MuiTableCell","borderBottom","head","fontSize","body","createMuiTheme","defaultTheme","typography","h1","h2","h3","h4","h5","h6","makeStyles","theme","display","maxWidth","overflowX","content","flexGrow","padding","spacing","width","minHeight","contentShift","transition","transitions","create","easing","sharp","duration","enteringScreen","fakeToolbar","mixins","toolbar","logotype","marginLeft","marginRight","fontWeight","whiteSpace","breakpoints","down","appBar","zIndex","drawer","leavingScreen","paddingLeft","paddingRight","hide","grow","search","position","borderRadius","fade","common","black","cursor","searchFocused","up","searchIcon","right","alignItems","justifyContent","searchIconOpened","inputRoot","inputInput","messageContent","flexDirection","headerMenu","marginTop","headerMenuList","headerMenuItem","headerMenuButton","headerMenuButtonCollapse","headerIcon","headerIconCollapse","profileMenu","minWidth","profileMenuUser","profileMenuItem","profileMenuIcon","profileMenuLink","textDecoration","messageNotification","messageNotificationSide","messageNotificationBodySide","sendMessageButton","margin","marginBottom","textTransform","sendButtonIcon","useStyles","badge","Badge","children","colorBrightness","props","classes","Styled","createStyled","getColor","useTheme","styledProps","classnames","Typography","weight","size","style","getFontWeight","getFontSize","variant","Button","className","contained","outlined","borderColor","select","brigtness","multiplier","defaultSize","styles","options","withStyles","notificationContainer","notificationContained","notificationContainedShadowless","notificationIconContainer","notificationIconContainerContained","notificationIconContainerRounded","containedTypography","messageContainer","extraButton","typesIcons","ShoppingCart","notification","offer","ThumbUp","message","feedback","customer","shipped","delivered","defence","report","Report","upload","disc","Notification","type","getIconByType","iconWithStyles","React","cloneElement","notificationIcon","shadowless","setAlpha","toRgbString","typographyVariant","extraButtonClick","onClick","disableRipple","avatar","LayoutStateContext","createContext","LayoutDispatchContext","layoutReducer","state","action","isSidebarOpened","Error","LayoutProvider","useReducer","dispatch","Provider","value","useLayoutState","context","useContext","undefined","useLayoutDispatch","toggleSidebar","UserStateContext","UserDispatchContext","userReducer","isAuthenticated","UserProvider","localStorage","getItem","useUserDispatch","loginUser","login","password","history","setIsLoading","setError","setTimeout","setItem","push","console","log","process","REACT_APP_SERVER_PORT","SERVER_PORT","window","location","port","web_host_port","protocol","hostname","makeRequest","route","request","deserializeMsg","handleResponse","handleError","fetch","method","serializeBinary","then","response","ok","arrayBuffer","data","handleSuccessResponse","error","handleErrorResponse","lndListPeersRequest","ListPeersRequest","ListPeersResponse","deserializeBinary","getPeersList","lndListChannelsRequest","ListChannelsRequest","ListChannelsResponse","getChannelsList","lndPendingChannelsRequest","PendingChannelsRequest","PendingChannelsResponse","payOfferRequest","offerId","handleErr","PayOfferRequest","setOfferId","PayOfferReply","getSigningProfilesRequest","GetSigningProfilesRequest","GetSigningProfilesReply","getSqueakProfilesList","syncSqueakRequest","squeakHash","SyncSqueakRequest","setSqueakHash","SyncSqueakReply","getNetworkRequest","GetNetworkRequest","GetNetworkReply","getNetwork","notifications","Header","useHistory","layoutState","layoutDispatch","useState","notificationsMenu","setNotificationsMenu","isNotificationsUnread","setIsNotificationsUnread","setProfileMenu","isSearchOpen","setSearchOpen","username","setUsername","getUser","useEffect","AppBar","Toolbar","IconButton","classNames","ArrowBack","Search","InputBase","placeholder","input","aria-haspopup","aria-controls","e","currentTarget","badgeContent","length","Menu","id","open","Boolean","anchorEl","onClose","disableAutoFocusItem","map","MenuItem","key","go","menuButton","flexShrink","drawerOpen","drawerClose","mobileBackButton","only","link","linkActive","linkNested","linkIcon","linkIconActive","linkText","linkTextActive","linkTextHidden","opacity","nestedList","sectionTitle","divider","dotBase","dotSmall","dotLarge","Dot","SidebarLink","label","nested","isOpen","setIsOpen","isLinkActive","pathname","indexOf","Divider","ListItem","component","Link","preventDefault","to","ListItemIcon","Inbox","ListItemText","Collapse","in","timeout","unmountOnExit","List","disablePadding","childrenLink","linkRoot","structure","Home","History","withRouter","isPermanent","setPermanent","addEventListener","handleWindowWidthChange","removeEventListener","Drawer","sidebarList","isSmallScreen","innerWidth","values","md","dashedBorder","border","paddingTop","paddingBottom","fab","bottom","oppositeContent","flex","pageTitleContainer","typo","PageTitle","title","widgetWrapper","widgetHeader","widgetRoot","widgetBody","noPadding","overflow","moreButton","Widget","noBodyPadding","bodyClass","disableWidgetMenu","header","moreButtonRef","setMoreButtonRef","isMoreMenuOpen","setMoreMenuOpen","Paper","elevation","square","Fragment","aria-owns","buttonRef","secondaryTail","getBlockDetailUrl","blockHash","network","SqueakThreadItem","hash","squeak","goToSqueakPage","p","m","getIsUnlocked","event","Grid","container","direction","justify","item","Box","href","stopPropagation","getAuthorAddress","getIsAuthorKnown","getAuthor","getProfileName","textOverflow","getContentStr","moment","getBlockTime","fromNow","getBlockHash","target","rel","getBlockHeight","MakeSqueakDialog","handleClose","replytoSqueak","profileId","setProfileId","setContent","signingProfiles","setSigningProfiles","handleChange","handleChangeContent","getSqueakHash","err","alert","createSqueak","replyto","MakeSqueakRequest","setReplyto","MakeSqueakReply","makeSqueakRequest","Dialog","onEnter","aria-labelledby","DialogTitle","onSubmit","noValidate","autoComplete","DialogContent","FormControl","formControl","required","InputLabel","Select","labelId","onChange","getProfileId","TextField","autoFocus","multiline","rows","fullWidth","inputProps","maxLength","DialogActions","getProfileImageSrcString","squeakProfile","profileImage","getProfileImage","SqueakUserAvatar","TimelineDot","squeakAddress","getAddress","Avatar","src","TimelinePage","squeaks","setSqueaks","setOpen","setNetwork","getSqueaks","GetTimelineSqueakDisplaysRequest","GetTimelineSqueakDisplaysReply","getSqueakDisplayEntriesList","getTimelineSqueakDisplaysRequest","Timeline","align","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineContent","Fab","aria-label","card","visitsNumberContainer","progressSection","progressTitle","progress","pieChartLegendWrapper","legendItemContainer","fullHeightBody","tableWidget","progressBar","performanceLegendWrapper","legendElement","legendElementText","serverOverviewElement","serverOverviewElementText","serverOverviewElementChartWrapper","mainChartBody","mainChartHeader","flexWrap","mainChartHeaderLabels","order","mainChartHeaderLabel","mainChartSelectRoot","mainChartSelect","mainChartLegentElement","tasks","time","bigStat","product","total","monthly","weekly","daily","percent","profit","registrations","bounce","table","name","email","price","date","city","status","states","sent","pending","declined","TableComponent","keys","Object","i","toUpperCase","shift","Table","TableHead","TableRow","TableCell","TableBody","toLowerCase","bottomStatsContainer","statCell","totalValueContainer","totalValue","profitArrow","transform","fill","profitArrowDanger","selectInput","BigStat","setValue","Input","disableUnderline","upperTitle","Array","Math","floor","random","dataKey","radius","barSize","borderRight","ArrowForward","mainChartData","resultArray","tablet","getRandomData","desktop","mobile","getMainChartData","PieChartData","Dashboard","mainChartState","setMainChartState","lg","sm","xs","left","stroke","strokeWidth","dot","progressSectionTitle","LinearProgress","barColorPrimary","fillOpacity","innerRadius","outerRadius","entry","index","OutlinedInput","labelWidth","notchedOutline","autoWidth","top","ticks","tick","tickLine","tickFormatter","activeDot","mock","stat","min","max","lastValue","maxDiff","array","randomValue","CreateContactProfileDialog","initialAddress","profileName","setProfileName","address","setAddress","handleChangeProfileName","handleChangeAddress","goToProfilePage","createContactProfile","CreateContactProfileRequest","CreateContactProfileReply","createContactProfileRequest","CreateContactAddressInput","SqueakAddressPage","useParams","setSqueakProfile","createContactProfileDialogOpen","setCreateContactProfileDialogOpen","getSqueakProfile","GetSqueakProfileByAddressRequest","GetSqueakProfileByAddressReply","getSqueakProfileByAddressRequest","GetAddressSqueakDisplaysRequest","GetAddressSqueakDisplaysReply","getAddressSqueakDisplaysRequest","handleCloseCreateContactProfileDialog","SqueakDetailItem","handleReplyClick","handleDeleteClick","handleViewDetailsClick","handleUnlockClick","onUnlockClick","onDownloadClick","DeleteSqueakDialog","squeakToDelete","deleteSqueak","DeleteSqueakRequest","DeleteSqueakReply","deleteSqueakRequest","reloadRoute","BuyOfferDialog","getOfferId","getPriceMsat","BuyOfferDetailItem","handleOfferClick","payOfferDialogOpen","setPayOfferDialogOpen","onPeerClick","peerId","getPeerId","goToPeerPage","getHasPeer","getPeer","handleClosePayOfferDialog","PeerDisplay","peer","peerName","getPeerName","peerDisplayName","HasPeerDisplay","lightningAddress","getNodeHost","getNodePort","lightningPubkey","getNodePubkey","pubkey","host","PeerNodeInfoContent","expireTime","getInvoiceTimestamp","getInvoiceExpiry","ExpiresInfoContent","BuySqueakDialog","handlePaymentComplete","selectedOfferId","setSelectedOfferId","offers","setOffers","loadOffers","GetBuyOffersRequest","GetBuyOffersReply","getOffersList","getBuyOffersRequest","handlePayResponse","handlePayErr","selectedOffer","getSelectedOffer","MakeSqueakContentInput","SqueakDetailsDialog","squeakDetails","setSqueakDetails","getSqueakDetails","GetSqueakDetailsRequest","GetSqueakDetailsReply","getSqueakDetailEntry","getSqueakDetailsRequest","getSerializedSqueakHex","Alert","SqueakPage","setSqueak","ancestorSqueaks","setAncestorSqueaks","replySqueaks","setReplySqueaks","replyDialogOpen","setReplyDialogOpen","deleteDialogOpen","setDeleteDialogOpen","buyDialogOpen","setBuyDialogOpen","viewDetailsDialogOpen","setViewDetailsDialogOpen","unlockedSnackbarOpen","setUnlockedSnackbarOpen","getSqueak","GetSqueakDisplayRequest","GetSqueakDisplayReply","getSqueakDisplayEntry","getSqueakDisplayRequest","getAncestorSqueaks","GetAncestorSqueakDisplaysRequest","GetAncestorSqueakDisplaysReply","getAncestorSqueakDisplaysRequest","getReplySqueaks","GetReplySqueakDisplaysRequest","GetReplySqueakDisplaysReply","getReplySqueakDisplaysRequest","handleClickOpen","handleClickOpenDeleteDialog","handleCloseDeleteDialog","handleClickOpenBuyDialog","handleCloseBuyDialog","handleClickOpenViewDetailsDialog","handleCloseViewDetailsDialog","handleCloseUnlockedSnackbar","reason","UnkownReplyToContent","oldestKnownAncestor","getReplyTo","unknownAncestorHash","TimelineConnector","slice","ancestorSqueak","replySqueak","Snackbar","autoHideDuration","severity","DeleteProfileDialog","profile","deleteProfile","DeleteSqueakProfileRequest","DeleteSqueakProfileReply","deleteProfileRequest","ExportPrivateKeyDialog","privateKey","setPrivateKey","getPrivateKey","GetSqueakProfilePrivateKeyRequest","GetSqueakProfilePrivateKeyReply","getSqueakProfilePrivateKey","readOnly","ConfigureProfileDialog","reloadProfile","setFollowing","following","SetSqueakProfileFollowingRequest","SetSqueakProfileFollowingReply","setSqueakProfileFollowingRequest","setSharing","sharing","SetSqueakProfileSharingRequest","SetSqueakProfileSharingReply","setSqueakProfileSharingRequest","handleSettingsFollowingChange","checked","handleSettingsSharingChange","FormLabel","FormGroup","FormControlLabel","control","Switch","getFollowing","getSharing","UpdateProfileImageDialog","selectedFile","setSelectedFile","imageBase64","setImageBase64","updateProfileImage","imageStr","SetSqueakProfileImageRequest","setProfileImage","SetSqueakProfileImageReply","setSqueakProfileImageRequest","handleChangeSelectedImage","files","file","getFileAsBase64","reader","FileReader","result","readAsDataURL","imageBase64Stripped","split","hidden","alt","DisplaySelectedImageFile","fileName","DisplaySelectedImageFileName","media","SqueakProfileDetailItem","handleConfigureClick","handleViewSqueaksClick","handleRenameClick","handleChangeImageClick","handleExportClick","setAnchorEl","onViewSqueaksClick","Card","CardHeader","keepMounted","getHasPrivateKey","CardMedia","image","CardContent","gutterBottom","CardActions","ProfilePage","exportPrivateKeyDialogOpen","setExportPrivateKeyDialogOpen","configureDialogOpen","setConfigureDialogOpen","updateImageDialogOpen","setUpdateImageDialogOpen","GetSqueakProfileRequest","GetSqueakProfileReply","getSqueakProfileRequest","handleClickOpenExportPrivateKeyDialog","handleClickOpenConfigureDialog","handleClickOpenUpdateImageDialog","handleCloseExportPrivateKeyDialog","handleCloseConfigureDialog","handleCloseUpdateImageDialog","handleReloadProfile","handleViewSqueaks","clickable","cardContentContainer","cardContentContainerVertical","cardHeaderContainer","cardContentFlexColumn","alignSelf","cardContentSection","cardHeaderRow","cardSubheaderText","cardSubheaderTextLabel","cardSubheaderTextValue","cardContent","cardContentColumns","detailItem","detailItemVertical","detailItemLabel","detailItemValue","balanceGridItemLabel","expandBtn","shortest","collapseBtn","channelIcon","channelStatus","channelStatusChip","channelStatusText","channelBalanceBarContainer","justifySelf","channelBalanceDetailsContainer","balanceContainerLocal","textAlign","balanceContainerRemote","balanceContainerCapacity","channelBalanceBarRow","balanceLabel","balanceValue","channelBalanceProgressBar","channelBalanceBuffer","channelBalanceBar","channelBalanceBar1Buffer","backgroundImage","channelBalanceBar2Buffer","channelBalanceDashed","backgroundSize","animation","transactionIcon","amount","transactionAmt","inlineTimestamp","bullet","ReceiveBitcoinDialog","getNewAddress","NewAddressRequest","NewAddressResponse","SendBitcoinDialog","setAmount","satperbyte","setSatperbyte","sendall","setSendall","handleChangeAmount","handleChangeSatperbyte","handleChangeSendall","sendBitcoin","SendCoinsRequest","setAddr","setSatPerByte","setSendAll","SendCoinsResponse","lndSendCoins","goToWalletPage","parseInt","disabled","formControlLabel","TransactionItem","transaction","handleTransactionClick","expanded","setExpanded","TransactionDetailItem","getAmount","amountGtZero","abs","unix","getTimeStamp","getTxHash","format","getTotalFees","getNumConfirmations","LightningPeerListItem","goToLightningNodePage","getPubKey","getPeerHost","getPeerPort","pieces","subheader","ChannelBalanceBar","channel","getCapacity","getLocalBalance","valueBuffer","getRemoteBalance","buffer","dashed","bar","bar1Buffer","bar2Buffer","ChannelItem","ChannelDetailItem","txId","outputIndex","goToChannelPage","channelPoint","getChannelPoint","getTxId","getOutputIndex","Chip","getRemotePubkey","getLifetime","humanize","getUptime","PendingOpenChannelItem","pendingOpenChannel","getChannel","getRemoteNodePub","WalletPage","lndInfo","setLndInfo","walletBalance","setWalletBalance","transactions","setTransactions","peers","setPeers","channels","setChannels","pendingChannels","setPendingChannels","receiveBitcoinDialogOpen","setReceiveBitcoinDialogOpen","sendBitcoinDialogOpen","setSendBitcoinDialogOpen","a11yProps","newValue","handleCloseReceiveBitcoinDialog","handleCloseSendBitcoinDialog","getLndInfo","GetInfoRequest","GetInfoResponse","getWalletBalance","WalletBalanceRequest","WalletBalanceResponse","getTransactions","GetTransactionsRequest","TransactionDetails","getTransactionsList","ReceiveBitcoinButton","SendBitcoinButton","BalanceContent","getTotalBalance","getUnconfirmedBalance","getConfirmedBalance","NodeInfoContent","getIdentityPubkey","getSyncedToChain","toString","getSyncedToGraph","TransactionsContent","PeersContent","handlePeerClick","TabPanel","other","role","Tabs","Tab","getPendingOpenChannelsList","OpenChannelDialog","handleChangeSatPerBytes","openChannel","OpenChannelRequest","setNodePubkeyString","setLocalFundingAmount","ChannelPoint","lndOpenChannelSyncRequest","LightningNodePage","openChannelDialogOpen","setOpenChannelDialogOpen","handleCloseOpenChannelDialog","isConnected","hasChannelToPeer","connectPeer","ConnectPeerRequest","LightningAddress","setPubkey","setHost","ConnectPeerResponse","lndConnectPeerRequest","disconnectPeer","DisconnectPeerRequest","setPubKey","DisconnectPeerResponse","lndDisconnectPeerRequest","ConnectPeerButton","DisconnectPeerButton","OpenChannelButton","NodeInfoGridItem","ChannelsContent","nodeChannels","filter","nodePendingOpenChannels","ChannelsGridItem","CloseChannelDialog","closeChannel","CloseChannelRequest","setFundingTxidStr","setOutputIndex","setChannelPoint","CloseStatusUpdate","lndCloseChannelRequest","closeChannelDialogOpen","setCloseChannelDialogOpen","handleCloseCloseChannelDialog","CloseChannelButton","ChannelInfoGridItem","isChannelOpen","ChannelTabs","layoutContainer","layoutText","layoutButtonsRow","layoutButton","outline","layoutButtonActive","buttonsContainer","notificationCallButton","codeContainer","codeComponent","notificationItem","notificationCloseButton","toastsContainer","visibility","notificationComponent","positions","toast","POSITION","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","NotificationsPage","notificationsPosition","setNotificationPosition","errorToastId","setErrorToastId","closeButton","CloseButton","closeOnClick","progressClassName","notificationProgress","changeNotificationPosition","handleNotificationCall","language","docco","retryErrorNotification","componentProps","update","render","notificationType","toastId","sendNotification","positionId","closeToast","Close","mapContainer","BasicMap","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","parseFloat","lng","Maps","googleMapURL","loadingElement","containerElement","mapElement","CreateSigningProfileDialog","createSigningProfile","CreateSigningProfileRequest","CreateSigningProfileReply","createSigningProfileRequest","ImportSigningProfileDialog","handleChangePrivateKey","ImportSigningProfileRequest","ImportSigningProfileReply","importSigningProfileRequest","Profiles","contactProfiles","setContactProfiles","createSigningProfileDialogOpen","setCreateSigningProfileDialogOpen","importSigningProfileDialogOpen","setImportSigningProfileDialogOpen","loadContactProfiles","GetContactProfilesRequest","GetContactProfilesReply","handleCloseCreateSigningProfileDialog","handleCloseImportSigningProfileDialog","ShowProfiles","profiles","columns","print","viewColumns","selectableRows","onRowClick","rowData","SentPayment","sentPayment","getTimeS","nodePubkey","getValid","ReceivedPayment","receivedPayment","getClientAddr","Payments","paymentSummary","setPaymentSummary","loadPaymentSummary","paymentsSummaryReply","getPaymentSummary","GetPaymentSummaryRequest","GetPaymentSummaryReply","getAmountSpentMsat","getNumSentPayments","getAmountEarnedMsat","getNumReceivedPayments","SentPayments","sentPayments","setSentPayments","loadSentPayments","sentPaymentsReply","getSentPaymentsList","GetSentPaymentsRequest","GetSentPaymentsReply","getSentPaymentId","PaymentsTabs","ReceivedPayments","receivedPayments","setReceivedPayments","loadReceivedPayments","receivedPaymentsReply","getReceivedPaymentsList","GetReceivedPaymentsRequest","GetReceivedPaymentsReply","getReceivedPaymentId","titleBold","iconsBar","borderBottomColor","tab","materailIcon","materialIconText","iconsContainer","IconsPage","activeTabId","setActiveTabId","indicatorColor","textColor","series","ApexLineChart","themeOptions","dataLabels","enabled","curve","xaxis","categories","tooltip","x","colors","chart","show","legend","generateData","count","yrange","y","lineChartData","uv","pv","amt","pieChartData","Charts","activeIndex","setActiveIndexId","strokeDasharray","r","activeShape","renderActiveShape","cx","cy","onMouseEnter","RADIAN","PI","midAngle","startAngle","endAngle","payload","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","dy","d","toFixed","form","CreatePeerDialog","setPeerName","setPort","customPortChecked","setCustomPortChecked","handleChangePeerName","handleChangeHost","handleChangeCustomPortChecked","handleChangePort","createPeer","CreatePeerRequest","CreatePeerReply","createPeerRequest","Peers","createPeerDialogOpen","setCreatePeerDialogOpen","getSqueakPeers","GetPeersRequest","GetPeersReply","getSqueakPeersList","handleCloseCreatePeerDialog","CreatePeerButton","s","getHost","getPort","getDownloading","getUploading","DeletePeerDialog","deletePeer","DeletePeerRequest","setPeerId","DeletePeerReply","deletePeerRequest","PeerPage","setPeer","getSqueakPeer","GetPeerRequest","GetPeerReply","getPeerRequest","setDownloading","downloading","SetPeerDownloadingRequest","SetPeerDownloadingReply","setPeerDownloadingRequest","setUploading","uploading","SetPeerUploadingRequest","SetPeerUploadingReply","setPeerUploadingRequest","handleSettingsDownloadingChange","handleSettingsUploadingChange","path","SqueakAddress","Squeak","Profile","Wallet","LightningNode","Channel","Peer","Notifications","exact","Icons","logotypeText","logotypeIcon","paperRoot","textRow","errorCode","safetyText","backButton","logo","logotypeContainer","logotypeImage","formContainer","greeting","subGreeting","googleButton","googleButtonCreating","googleIcon","creatingButtonContainer","createAccountButton","formDividerContainer","formDividerWord","formDivider","errorMessage","textFieldUnderline","textField","formButtons","forgetButton","loginLoader","copyright","userDispatch","isLoading","nameValue","setNameValue","loginValue","setLoginValue","passwordValue","setPasswordValue","centered","google","Fade","InputProps","underline","CircularProgress","App","useUserState","PublicRoute","Layout","Login","rest","createElement","match","ReactDOM","ThemeProvider","Themes","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","jspb","require","goog","global","Function","exportSymbol","proto","squeaknode","opt_data","Message","initialize","this","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","getFieldWithDefault","$jspbMessageInstance","bytes","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","skipField","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","f","writeString","setField","readInt32","writeInt32","repeatedFields_","squeakProfilesList","toObjectList","SqueakProfile","readMessage","addSqueakProfiles","writeRepeatedMessage","getRepeatedWrapperField","setSqueakProfilesList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearSqueakProfilesList","writeMessage","getWrapperField","setWrapperField","clearSqueakProfile","hasSqueakProfile","getField","GetSqueakProfileByNameRequest","setName","getName","GetSqueakProfileByNameReply","readBool","writeBool","RenameSqueakProfileRequest","RenameSqueakProfileReply","ClearSqueakProfileImageRequest","ClearSqueakProfileImageReply","hasPrivateKey","hasCustomProfileImage","setHasPrivateKey","setHasCustomProfileImage","getHasCustomProfileImage","getContent","getReplyto","squeakDisplayEntry","SqueakDisplayEntry","setSqueakDisplayEntry","clearSqueakDisplayEntry","hasSqueakDisplayEntry","isUnlocked","contentStr","isReply","replyTo","blockHeight","blockTime","authorAddress","isAuthorKnown","author","setIsUnlocked","setContentStr","setIsReply","setReplyTo","setBlockHeight","setBlockHash","readInt64","setBlockTime","setAuthorAddress","setIsAuthorKnown","setAuthor","getIsReply","writeInt64","clearAuthor","hasAuthor","squeakDisplayEntriesList","addSqueakDisplayEntries","setSqueakDisplayEntriesList","clearSqueakDisplayEntriesList","squeakPeer","SqueakPeer","setSqueakPeer","clearSqueakPeer","hasSqueakPeer","squeakPeersList","addSqueakPeers","setSqueakPeersList","clearSqueakPeersList","RenamePeerRequest","RenamePeerReply","LoadBuyOffersRequest","LoadBuyOffersReply","offersList","OfferDisplayEntry","addOffers","setOffersList","clearOffersList","GetBuyOfferRequest","GetBuyOfferReply","getOffer","setOffer","clearOffer","hasOffer","priceMsat","nodeHost","nodePort","hasPeer","invoiceTimestamp","invoiceExpiry","setPriceMsat","setNodePubkey","setNodeHost","setNodePort","setHasPeer","setInvoiceTimestamp","setInvoiceExpiry","clearPeer","SyncSqueaksRequest","SyncSqueaksReply","syncResult","getSyncResult","SyncResult","setSyncResult","clearSyncResult","hasSyncResult","sentPaymentId","setSentPaymentId","sentPaymentsList","addSentPayments","setSentPaymentsList","clearSentPaymentsList","GetSentPaymentRequest","GetSentPaymentReply","getSentPayment","setSentPayment","clearSentPayment","hasSentPayment","paymentHash","valid","timeS","setPaymentHash","setValid","setTimeS","getPaymentHash","completedPeerIdsList","getRepeatedField","failedPeerIdsList","timeoutPeerIdsList","readPackedInt32","setCompletedPeerIdsList","setFailedPeerIdsList","setTimeoutPeerIdsList","getCompletedPeerIdsList","writePackedInt32","getFailedPeerIdsList","getTimeoutPeerIdsList","addCompletedPeerIds","addToRepeatedField","clearCompletedPeerIdsList","addFailedPeerIds","clearFailedPeerIdsList","addTimeoutPeerIds","clearTimeoutPeerIdsList","squeakDetailEntry","SqueakDetailEntry","setSqueakDetailEntry","clearSqueakDetailEntry","hasSqueakDetailEntry","serializedSqueakHex","setSerializedSqueakHex","GetSentOffersRequest","GetSentOffersReply","sentOffersList","getSentOffersList","SentOffer","addSentOffers","setSentOffersList","clearSentOffersList","sentOfferId","setSentOfferId","getSentOfferId","receivedPaymentsList","addReceivedPayments","setReceivedPaymentsList","clearReceivedPaymentsList","receivedPaymentId","clientAddr","setReceivedPaymentId","setClientAddr","SubscribeReceivedPaymentsRequest","paymentIndex","setPaymentIndex","getPaymentIndex","PaymentSummary","clearPaymentSummary","hasPaymentSummary","numReceivedPayments","numSentPayments","amountEarnedMsat","amountSpentMsat","setNumReceivedPayments","setNumSentPayments","setAmountEarnedMsat","setAmountSpentMsat","object","extend","exports","lnrpc","Utxo","addressType","amountSat","pkScript","outpoint","getOutpoint","OutPoint","confirmations","readEnum","setAddressType","setAmountSat","setPkScript","setOutpoint","setConfirmations","getAddressType","writeEnum","getAmountSat","getPkScript","getConfirmations","clearOutpoint","hasOutpoint","Transaction","txHash","numConfirmations","timeStamp","totalFees","destAddressesList","rawTxHex","setTxHash","setNumConfirmations","setTimeStamp","setTotalFees","addDestAddresses","setRawTxHex","setLabel","getDestAddressesList","writeRepeatedString","getRawTxHex","getLabel","setDestAddressesList","clearDestAddressesList","startHeight","endHeight","setStartHeight","setEndHeight","getStartHeight","getEndHeight","transactionsList","addTransactions","setTransactionsList","clearTransactionsList","FeeLimit","oneofGroups_","LimitCase","LIMIT_NOT_SET","FIXED","FIXED_MSAT","PERCENT","getLimitCase","computeOneofCase","fixed","fixedMsat","setFixed","setFixedMsat","setPercent","getFixed","setOneofField","clearFixed","hasFixed","getFixedMsat","clearFixedMsat","hasFixedMsat","getPercent","clearPercent","hasPercent","SendRequest","dest","getDest_asB64","destString","amtMsat","getPaymentHash_asB64","paymentHashString","paymentRequest","finalCltvDelta","feeLimit","getFeeLimit","outgoingChanId","lastHopPubkey","getLastHopPubkey_asB64","cltvLimit","destCustomRecordsMap","getDestCustomRecordsMap","allowSelfPayment","destFeaturesList","readBytes","setDest","setDestString","setAmt","setAmtMsat","setPaymentHashString","setPaymentRequest","setFinalCltvDelta","setFeeLimit","readUint64String","setOutgoingChanId","setLastHopPubkey","readUint32","setCltvLimit","Map","readUint64","setAllowSelfPayment","readPackedEnum","setDestFeaturesList","getDest_asU8","writeBytes","getDestString","getAmt","getAmtMsat","getPaymentHash_asU8","getPaymentHashString","getPaymentRequest","getFinalCltvDelta","getOutgoingChanId","writeUint64String","getLastHopPubkey_asU8","getCltvLimit","writeUint32","getLength","writeUint64","getAllowSelfPayment","getDestFeaturesList","writePackedEnum","getDest","bytesAsB64","bytesAsU8","clearFeeLimit","hasFeeLimit","getLastHopPubkey","opt_noLazyCreate","getMapField","clearDestCustomRecordsMap","clear","addDestFeatures","clearDestFeaturesList","SendResponse","paymentError","paymentPreimage","getPaymentPreimage_asB64","paymentRoute","getPaymentRoute","Route","setPaymentError","setPaymentPreimage","setPaymentRoute","getPaymentError","getPaymentPreimage_asU8","getPaymentPreimage","clearPaymentRoute","hasPaymentRoute","SendToRouteRequest","getRoute","setRoute","clearRoute","hasRoute","ChannelAcceptRequest","getNodePubkey_asB64","chainHash","getChainHash_asB64","pendingChanId","getPendingChanId_asB64","fundingAmt","pushAmt","dustLimit","maxValueInFlight","channelReserve","minHtlc","feePerKw","csvDelay","maxAcceptedHtlcs","channelFlags","setChainHash","setPendingChanId","setFundingAmt","setPushAmt","setDustLimit","setMaxValueInFlight","setChannelReserve","setMinHtlc","setFeePerKw","setCsvDelay","setMaxAcceptedHtlcs","setChannelFlags","getNodePubkey_asU8","getChainHash_asU8","getPendingChanId_asU8","getFundingAmt","getPushAmt","getDustLimit","getMaxValueInFlight","getChannelReserve","getMinHtlc","getFeePerKw","getCsvDelay","getMaxAcceptedHtlcs","getChannelFlags","getChainHash","getPendingChanId","ChannelAcceptResponse","accept","setAccept","getAccept","FundingTxidCase","FUNDING_TXID_NOT_SET","FUNDING_TXID_BYTES","FUNDING_TXID_STR","getFundingTxidCase","fundingTxidBytes","getFundingTxidBytes_asB64","fundingTxidStr","setFundingTxidBytes","getFundingTxidBytes","getFundingTxidBytes_asU8","clearFundingTxidBytes","hasFundingTxidBytes","getFundingTxidStr","clearFundingTxidStr","hasFundingTxidStr","txidBytes","getTxidBytes_asB64","txidStr","setTxidBytes","setTxidStr","getTxidBytes_asU8","getTxidStr","getTxidBytes","getPubkey","EstimateFeeRequest","addrtoamountMap","getAddrtoamountMap","targetConf","setTargetConf","getTargetConf","clearAddrtoamountMap","EstimateFeeResponse","feeSat","feerateSatPerByte","setFeeSat","setFeerateSatPerByte","getFeeSat","getFeerateSatPerByte","SendManyRequest","satPerByte","getSatPerByte","SendManyResponse","txid","setTxid","getTxid","addr","sendAll","getAddr","getSendAll","ListUnspentRequest","minConfs","maxConfs","setMinConfs","setMaxConfs","getMinConfs","getMaxConfs","ListUnspentResponse","utxosList","getUtxosList","addUtxos","setUtxosList","clearUtxosList","setType","getType","SignMessageRequest","getMsg_asB64","setMsg","getMsg_asU8","getMsg","SignMessageResponse","signature","setSignature","getSignature","VerifyMessageRequest","VerifyMessageResponse","perm","setPerm","getPerm","clearAddr","hasAddr","pubKey","HTLC","incoming","hashLock","getHashLock_asB64","expirationHeight","setIncoming","setHashLock","setExpirationHeight","getIncoming","getHashLock_asU8","getExpirationHeight","getHashLock","ChannelConstraints","chanReserveSat","dustLimitSat","maxPendingAmtMsat","minHtlcMsat","setChanReserveSat","setDustLimitSat","setMaxPendingAmtMsat","setMinHtlcMsat","getChanReserveSat","getDustLimitSat","getMaxPendingAmtMsat","getMinHtlcMsat","active","remotePubkey","chanId","capacity","localBalance","remoteBalance","commitFee","commitWeight","unsettledBalance","totalSatoshisSent","totalSatoshisReceived","numUpdates","pendingHtlcsList","getPendingHtlcsList","pb_private","initiator","chanStatusFlags","localChanReserveSat","remoteChanReserveSat","staticRemoteKey","commitmentType","lifetime","uptime","closeAddress","pushAmountSat","thawHeight","localConstraints","getLocalConstraints","remoteConstraints","getRemoteConstraints","setActive","setRemotePubkey","setChanId","setCapacity","setLocalBalance","setRemoteBalance","setCommitFee","setCommitWeight","setUnsettledBalance","setTotalSatoshisSent","setTotalSatoshisReceived","setNumUpdates","addPendingHtlcs","setPrivate","setInitiator","setChanStatusFlags","setLocalChanReserveSat","setRemoteChanReserveSat","setStaticRemoteKey","setCommitmentType","setLifetime","setUptime","setCloseAddress","setPushAmountSat","setThawHeight","setLocalConstraints","setRemoteConstraints","getActive","getChanId","getCommitFee","getCommitWeight","getUnsettledBalance","getTotalSatoshisSent","getTotalSatoshisReceived","getNumUpdates","getPrivate","getInitiator","getChanStatusFlags","getLocalChanReserveSat","getRemoteChanReserveSat","getStaticRemoteKey","getCommitmentType","getCloseAddress","getPushAmountSat","getThawHeight","setPendingHtlcsList","clearPendingHtlcsList","clearLocalConstraints","hasLocalConstraints","clearRemoteConstraints","hasRemoteConstraints","activeOnly","inactiveOnly","publicOnly","privateOnly","getPeer_asB64","setActiveOnly","setInactiveOnly","setPublicOnly","setPrivateOnly","getActiveOnly","getInactiveOnly","getPublicOnly","getPrivateOnly","getPeer_asU8","channelsList","addChannels","setChannelsList","clearChannelsList","ChannelCloseSummary","closingTxHash","closeHeight","settledBalance","timeLockedBalance","closeType","openInitiator","closeInitiator","resolutionsList","getResolutionsList","Resolution","setClosingTxHash","setCloseHeight","setSettledBalance","setTimeLockedBalance","setCloseType","setOpenInitiator","setCloseInitiator","addResolutions","getClosingTxHash","getCloseHeight","getSettledBalance","getTimeLockedBalance","getCloseType","getOpenInitiator","getCloseInitiator","ClosureType","COOPERATIVE_CLOSE","LOCAL_FORCE_CLOSE","REMOTE_FORCE_CLOSE","BREACH_CLOSE","FUNDING_CANCELED","ABANDONED","setResolutionsList","clearResolutionsList","resolutionType","outcome","sweepTxid","setResolutionType","setOutcome","setSweepTxid","getResolutionType","getOutcome","getSweepTxid","ClosedChannelsRequest","cooperative","localForce","remoteForce","breach","fundingCanceled","abandoned","setCooperative","setLocalForce","setRemoteForce","setBreach","setFundingCanceled","setAbandoned","getCooperative","getLocalForce","getRemoteForce","getBreach","getFundingCanceled","getAbandoned","ClosedChannelsResponse","bytesSent","bytesRecv","satSent","satRecv","inbound","pingTime","syncType","featuresMap","getFeaturesMap","Feature","errorsList","getErrorsList","TimestampedError","setBytesSent","setBytesRecv","setSatSent","setSatRecv","setInbound","setPingTime","setSyncType","addErrors","getBytesSent","getBytesRecv","getSatSent","getSatRecv","getInbound","getPingTime","getSyncType","SyncType","UNKNOWN_SYNC","ACTIVE_SYNC","PASSIVE_SYNC","clearFeaturesMap","setErrorsList","clearErrorsList","timestamp","setTimestamp","getTimestamp","getError","latestError","setLatestError","getLatestError","peersList","addPeers","setPeersList","clearPeersList","PeerEventSubscription","PeerEvent","EventType","PEER_ONLINE","PEER_OFFLINE","version","commitHash","identityPubkey","alias","numPendingChannels","numActiveChannels","numInactiveChannels","numPeers","bestHeaderTimestamp","syncedToChain","syncedToGraph","testnet","chainsList","getChainsList","Chain","urisList","setVersion","setCommitHash","setIdentityPubkey","setAlias","setColor","setNumPendingChannels","setNumActiveChannels","setNumInactiveChannels","setNumPeers","setBestHeaderTimestamp","setSyncedToChain","setSyncedToGraph","setTestnet","addChains","addUris","getVersion","getCommitHash","getAlias","getNumPendingChannels","getNumActiveChannels","getNumInactiveChannels","getNumPeers","getBestHeaderTimestamp","getTestnet","getUrisList","setChainsList","clearChainsList","setUrisList","clearUrisList","GetRecoveryInfoRequest","GetRecoveryInfoResponse","recoveryMode","recoveryFinished","setRecoveryMode","setRecoveryFinished","readDouble","setProgress","getRecoveryMode","getRecoveryFinished","getProgress","writeDouble","chain","setChain","getChain","ConfirmationUpdate","blockSha","getBlockSha_asB64","numConfsLeft","setBlockSha","setNumConfsLeft","getBlockSha_asU8","getNumConfsLeft","getBlockSha","ChannelOpenUpdate","clearChannelPoint","hasChannelPoint","ChannelCloseUpdate","closingTxid","getClosingTxid_asB64","setClosingTxid","setSuccess","getClosingTxid_asU8","getSuccess","getClosingTxid","force","deliveryAddress","setForce","setDeliveryAddress","getForce","getDeliveryAddress","UpdateCase","UPDATE_NOT_SET","CLOSE_PENDING","CHAN_CLOSE","getUpdateCase","closePending","getClosePending","PendingUpdate","chanClose","getChanClose","setClosePending","setChanClose","setOneofWrapperField","clearClosePending","hasClosePending","clearChanClose","hasChanClose","getTxid_asB64","getTxid_asU8","ReadyForPsbtFunding","fundingAddress","fundingAmount","psbt","getPsbt_asB64","setFundingAddress","setFundingAmount","setPsbt","getFundingAddress","getFundingAmount","getPsbt_asU8","getPsbt","nodePubkeyString","localFundingAmount","pushSat","remoteCsvDelay","spendUnconfirmed","fundingShim","getFundingShim","FundingShim","remoteMaxValueInFlightMsat","setPushSat","setRemoteCsvDelay","setSpendUnconfirmed","setFundingShim","setRemoteMaxValueInFlightMsat","getNodePubkeyString","getLocalFundingAmount","getPushSat","getRemoteCsvDelay","getSpendUnconfirmed","getRemoteMaxValueInFlightMsat","clearFundingShim","hasFundingShim","OpenStatusUpdate","CHAN_PENDING","CHAN_OPEN","PSBT_FUND","chanPending","getChanPending","chanOpen","getChanOpen","psbtFund","getPsbtFund","setChanPending","setChanOpen","setPsbtFund","clearChanPending","hasChanPending","clearChanOpen","hasChanOpen","clearPsbtFund","hasPsbtFund","KeyLocator","keyFamily","keyIndex","setKeyFamily","setKeyIndex","getKeyFamily","getKeyIndex","KeyDescriptor","rawKeyBytes","getRawKeyBytes_asB64","keyLoc","getKeyLoc","setRawKeyBytes","setKeyLoc","getRawKeyBytes_asU8","getRawKeyBytes","clearKeyLoc","hasKeyLoc","ChanPointShim","chanPoint","getChanPoint","localKey","getLocalKey","remoteKey","getRemoteKey_asB64","setChanPoint","setLocalKey","setRemoteKey","getRemoteKey_asU8","clearChanPoint","hasChanPoint","clearLocalKey","hasLocalKey","getRemoteKey","PsbtShim","basePsbt","getBasePsbt_asB64","noPublish","setBasePsbt","setNoPublish","getBasePsbt_asU8","getNoPublish","getBasePsbt","ShimCase","SHIM_NOT_SET","CHAN_POINT_SHIM","PSBT_SHIM","getShimCase","chanPointShim","getChanPointShim","psbtShim","getPsbtShim","setChanPointShim","setPsbtShim","clearChanPointShim","hasChanPointShim","clearPsbtShim","hasPsbtShim","FundingShimCancel","FundingPsbtVerify","fundedPsbt","getFundedPsbt_asB64","setFundedPsbt","getFundedPsbt_asU8","getFundedPsbt","FundingPsbtFinalize","signedPsbt","getSignedPsbt_asB64","setSignedPsbt","getSignedPsbt_asU8","getSignedPsbt","FundingTransitionMsg","TriggerCase","TRIGGER_NOT_SET","SHIM_REGISTER","SHIM_CANCEL","PSBT_VERIFY","PSBT_FINALIZE","getTriggerCase","shimRegister","getShimRegister","shimCancel","getShimCancel","psbtVerify","getPsbtVerify","psbtFinalize","getPsbtFinalize","setShimRegister","setShimCancel","setPsbtVerify","setPsbtFinalize","clearShimRegister","hasShimRegister","clearShimCancel","hasShimCancel","clearPsbtVerify","hasPsbtVerify","clearPsbtFinalize","hasPsbtFinalize","FundingStateStepResp","PendingHTLC","maturityHeight","blocksTilMaturity","stage","setMaturityHeight","setBlocksTilMaturity","setStage","getMaturityHeight","getBlocksTilMaturity","getStage","totalLimboBalance","pendingOpenChannelsList","PendingOpenChannel","pendingClosingChannelsList","getPendingClosingChannelsList","ClosedChannel","pendingForceClosingChannelsList","getPendingForceClosingChannelsList","ForceClosedChannel","waitingCloseChannelsList","getWaitingCloseChannelsList","WaitingCloseChannel","setTotalLimboBalance","addPendingOpenChannels","addPendingClosingChannels","addPendingForceClosingChannels","addWaitingCloseChannels","getTotalLimboBalance","PendingChannel","remoteNodePub","setRemoteNodePub","confirmationHeight","setChannel","setConfirmationHeight","getConfirmationHeight","clearChannel","hasChannel","limboBalance","commitments","getCommitments","Commitments","setLimboBalance","setCommitments","getLimboBalance","clearCommitments","hasCommitments","localTxid","remoteTxid","remotePendingTxid","localCommitFeeSat","remoteCommitFeeSat","remotePendingCommitFeeSat","setLocalTxid","setRemoteTxid","setRemotePendingTxid","setLocalCommitFeeSat","setRemoteCommitFeeSat","setRemotePendingCommitFeeSat","getLocalTxid","getRemoteTxid","getRemotePendingTxid","getLocalCommitFeeSat","getRemoteCommitFeeSat","getRemotePendingCommitFeeSat","recoveredBalance","anchor","setRecoveredBalance","setAnchor","getRecoveredBalance","getAnchor","AnchorState","LIMBO","RECOVERED","LOST","setPendingOpenChannelsList","clearPendingOpenChannelsList","setPendingClosingChannelsList","clearPendingClosingChannelsList","setPendingForceClosingChannelsList","clearPendingForceClosingChannelsList","setWaitingCloseChannelsList","clearWaitingCloseChannelsList","ChannelEventSubscription","ChannelEventUpdate","ChannelCase","CHANNEL_NOT_SET","OPEN_CHANNEL","CLOSED_CHANNEL","ACTIVE_CHANNEL","INACTIVE_CHANNEL","PENDING_OPEN_CHANNEL","getChannelCase","getOpenChannel","closedChannel","getClosedChannel","activeChannel","getActiveChannel","inactiveChannel","getInactiveChannel","getPendingOpenChannel","setOpenChannel","setClosedChannel","setActiveChannel","setInactiveChannel","setPendingOpenChannel","UpdateType","clearOpenChannel","hasOpenChannel","clearClosedChannel","hasClosedChannel","clearActiveChannel","hasActiveChannel","clearInactiveChannel","hasInactiveChannel","clearPendingOpenChannel","hasPendingOpenChannel","totalBalance","confirmedBalance","unconfirmedBalance","setTotalBalance","setConfirmedBalance","setUnconfirmedBalance","ChannelBalanceRequest","ChannelBalanceResponse","balance","pendingOpenBalance","setBalance","setPendingOpenBalance","getBalance","getPendingOpenBalance","QueryRoutesRequest","ignoredNodesList","getIgnoredNodesList_asB64","ignoredEdgesList","getIgnoredEdgesList","EdgeLocator","sourcePubKey","useMissionControl","ignoredPairsList","getIgnoredPairsList","NodePair","routeHintsList","getRouteHintsList","RouteHint","addIgnoredNodes","addIgnoredEdges","setSourcePubKey","setUseMissionControl","addIgnoredPairs","addRouteHints","getIgnoredNodesList_asU8","writeRepeatedBytes","getSourcePubKey","getUseMissionControl","getIgnoredNodesList","bytesListAsB64","bytesListAsU8","setIgnoredNodesList","clearIgnoredNodesList","setIgnoredEdgesList","clearIgnoredEdgesList","setIgnoredPairsList","clearIgnoredPairsList","setRouteHintsList","clearRouteHintsList","from","getFrom_asB64","getTo_asB64","setFrom","setTo","getFrom_asU8","getTo_asU8","getFrom","getTo","channelId","directionReverse","setChannelId","setDirectionReverse","getChannelId","getDirectionReverse","QueryRoutesResponse","routesList","getRoutesList","successProb","addRoutes","setSuccessProb","getSuccessProb","setRoutesList","clearRoutesList","Hop","chanCapacity","amtToForward","fee","expiry","amtToForwardMsat","feeMsat","tlvPayload","mppRecord","getMppRecord","MPPRecord","customRecordsMap","getCustomRecordsMap","setChanCapacity","setAmtToForward","setFee","setExpiry","setAmtToForwardMsat","setFeeMsat","setTlvPayload","setMppRecord","getChanCapacity","getAmtToForward","getFee","getExpiry","getAmtToForwardMsat","getFeeMsat","getTlvPayload","clearMppRecord","hasMppRecord","clearCustomRecordsMap","paymentAddr","getPaymentAddr_asB64","totalAmtMsat","setPaymentAddr","setTotalAmtMsat","getPaymentAddr_asU8","getTotalAmtMsat","getPaymentAddr","totalTimeLock","totalAmt","hopsList","getHopsList","totalFeesMsat","setTotalTimeLock","setTotalAmt","addHops","setTotalFeesMsat","getTotalTimeLock","getTotalAmt","getTotalFeesMsat","setHopsList","clearHopsList","NodeInfoRequest","includeChannels","setIncludeChannels","getIncludeChannels","NodeInfo","node","getNode","numChannels","totalCapacity","ChannelEdge","setNode","setNumChannels","setTotalCapacity","getNumChannels","getTotalCapacity","clearNode","hasNode","lastUpdate","addressesList","getAddressesList","NodeAddress","setLastUpdate","addAddresses","getLastUpdate","setAddressesList","clearAddressesList","RoutingPolicy","timeLockDelta","feeBaseMsat","feeRateMilliMsat","maxHtlcMsat","setTimeLockDelta","setFeeBaseMsat","setFeeRateMilliMsat","setDisabled","setMaxHtlcMsat","getTimeLockDelta","getFeeBaseMsat","getFeeRateMilliMsat","getDisabled","getMaxHtlcMsat","node1Pub","node2Pub","node1Policy","getNode1Policy","node2Policy","getNode2Policy","setNode1Pub","setNode2Pub","setNode1Policy","setNode2Policy","getNode1Pub","getNode2Pub","clearNode1Policy","hasNode1Policy","clearNode2Policy","hasNode2Policy","ChannelGraphRequest","includeUnannounced","setIncludeUnannounced","getIncludeUnannounced","ChannelGraph","nodesList","getNodesList","edgesList","getEdgesList","addNodes","addEdges","setNodesList","clearNodesList","setEdgesList","clearEdgesList","NodeMetricsRequest","typesList","setTypesList","getTypesList","addTypes","clearTypesList","NodeMetricsResponse","betweennessCentralityMap","getBetweennessCentralityMap","FloatMetric","clearBetweennessCentralityMap","normalizedValue","setNormalizedValue","getValue","getNormalizedValue","ChanInfoRequest","NetworkInfoRequest","NetworkInfo","graphDiameter","avgOutDegree","maxOutDegree","numNodes","totalNetworkCapacity","avgChannelSize","minChannelSize","maxChannelSize","medianChannelSizeSat","numZombieChans","setGraphDiameter","setAvgOutDegree","setMaxOutDegree","setNumNodes","setTotalNetworkCapacity","setAvgChannelSize","setMinChannelSize","setMaxChannelSize","setMedianChannelSizeSat","setNumZombieChans","getGraphDiameter","getAvgOutDegree","getMaxOutDegree","getNumNodes","getTotalNetworkCapacity","getAvgChannelSize","getMinChannelSize","getMaxChannelSize","getMedianChannelSizeSat","getNumZombieChans","StopRequest","StopResponse","GraphTopologySubscription","GraphTopologyUpdate","nodeUpdatesList","getNodeUpdatesList","NodeUpdate","channelUpdatesList","getChannelUpdatesList","ChannelEdgeUpdate","closedChansList","getClosedChansList","ClosedChannelUpdate","addNodeUpdates","addChannelUpdates","addClosedChans","setNodeUpdatesList","clearNodeUpdatesList","setChannelUpdatesList","clearChannelUpdatesList","setClosedChansList","clearClosedChansList","identityKey","globalFeatures","getGlobalFeatures_asB64","setIdentityKey","setGlobalFeatures","getIdentityKey","getGlobalFeatures_asU8","getGlobalFeatures","routingPolicy","getRoutingPolicy","advertisingNode","connectingNode","setRoutingPolicy","setAdvertisingNode","setConnectingNode","getAdvertisingNode","getConnectingNode","clearRoutingPolicy","hasRoutingPolicy","closedHeight","setClosedHeight","getClosedHeight","HopHint","nodeId","feeProportionalMillionths","cltvExpiryDelta","setNodeId","setFeeProportionalMillionths","setCltvExpiryDelta","getNodeId","getFeeProportionalMillionths","getCltvExpiryDelta","hopHintsList","getHopHintsList","addHopHints","setHopHintsList","clearHopHintsList","Invoice","memo","rPreimage","getRPreimage_asB64","rHash","getRHash_asB64","valueMsat","settled","creationDate","settleDate","descriptionHash","getDescriptionHash_asB64","fallbackAddr","cltvExpiry","addIndex","settleIndex","amtPaid","amtPaidSat","amtPaidMsat","htlcsList","getHtlcsList","InvoiceHTLC","isKeysend","setMemo","setRPreimage","setRHash","setValueMsat","setSettled","setCreationDate","setSettleDate","setDescriptionHash","setFallbackAddr","setCltvExpiry","setAddIndex","setSettleIndex","setAmtPaid","setAmtPaidSat","setAmtPaidMsat","setState","addHtlcs","setIsKeysend","getMemo","getRPreimage_asU8","getRHash_asU8","getValueMsat","getSettled","getCreationDate","getSettleDate","getDescriptionHash_asU8","getFallbackAddr","getCltvExpiry","getAddIndex","getSettleIndex","getAmtPaid","getAmtPaidSat","getAmtPaidMsat","getState","getIsKeysend","InvoiceState","OPEN","SETTLED","CANCELED","ACCEPTED","getRPreimage","getRHash","getDescriptionHash","setHtlcsList","clearHtlcsList","htlcIndex","acceptHeight","acceptTime","resolveTime","expiryHeight","mppTotalAmtMsat","setHtlcIndex","setAcceptHeight","setAcceptTime","setResolveTime","setExpiryHeight","setMppTotalAmtMsat","getHtlcIndex","getAcceptHeight","getAcceptTime","getResolveTime","getExpiryHeight","getMppTotalAmtMsat","AddInvoiceResponse","PaymentHash","rHashStr","setRHashStr","getRHashStr","ListInvoiceRequest","pendingOnly","indexOffset","numMaxInvoices","reversed","setPendingOnly","setIndexOffset","setNumMaxInvoices","setReversed","getPendingOnly","getIndexOffset","getNumMaxInvoices","getReversed","ListInvoiceResponse","invoicesList","getInvoicesList","lastIndexOffset","firstIndexOffset","addInvoices","setLastIndexOffset","setFirstIndexOffset","getLastIndexOffset","getFirstIndexOffset","setInvoicesList","clearInvoicesList","InvoiceSubscription","Payment","valueSat","creationTimeNs","HTLCAttempt","failureReason","setValueSat","setStatus","setCreationTimeNs","setFailureReason","getValueSat","getStatus","getCreationTimeNs","getFailureReason","PaymentStatus","UNKNOWN","IN_FLIGHT","SUCCEEDED","FAILED","attemptTimeNs","resolveTimeNs","failure","getFailure","Failure","preimage","getPreimage_asB64","setAttemptTimeNs","setResolveTimeNs","setFailure","setPreimage","getAttemptTimeNs","getResolveTimeNs","getPreimage_asU8","HTLCStatus","clearFailure","hasFailure","getPreimage","ListPaymentsRequest","includeIncomplete","maxPayments","setIncludeIncomplete","setMaxPayments","getIncludeIncomplete","getMaxPayments","ListPaymentsResponse","paymentsList","getPaymentsList","addPayments","setPaymentsList","clearPaymentsList","DeleteAllPaymentsRequest","DeleteAllPaymentsResponse","AbandonChannelRequest","AbandonChannelResponse","DebugLevelRequest","levelSpec","setShow","setLevelSpec","getShow","getLevelSpec","DebugLevelResponse","subSystems","setSubSystems","getSubSystems","PayReqString","payReq","setPayReq","getPayReq","PayReq","destination","numSatoshis","description","numMsat","setDestination","setNumSatoshis","setDescription","setNumMsat","getDestination","getNumSatoshis","getDescription","getNumMsat","isRequired","isKnown","setIsRequired","setIsKnown","getIsRequired","getIsKnown","FeeReportRequest","ChannelFeeReport","baseFeeMsat","feePerMil","feeRate","setBaseFeeMsat","setFeePerMil","setFeeRate","getBaseFeeMsat","getFeePerMil","getFeeRate","FeeReportResponse","channelFeesList","getChannelFeesList","dayFeeSum","weekFeeSum","monthFeeSum","addChannelFees","setDayFeeSum","setWeekFeeSum","setMonthFeeSum","getDayFeeSum","getWeekFeeSum","getMonthFeeSum","setChannelFeesList","clearChannelFeesList","PolicyUpdateRequest","ScopeCase","SCOPE_NOT_SET","GLOBAL","CHAN_POINT","getScopeCase","minHtlcMsatSpecified","setGlobal","setMinHtlcMsatSpecified","getMinHtlcMsatSpecified","getGlobal","clearGlobal","hasGlobal","PolicyUpdateResponse","ForwardingHistoryRequest","startTime","endTime","numMaxEvents","setStartTime","setEndTime","setNumMaxEvents","getStartTime","getEndTime","getNumMaxEvents","ForwardingEvent","chanIdIn","chanIdOut","amtIn","amtOut","amtInMsat","amtOutMsat","setChanIdIn","setChanIdOut","setAmtIn","setAmtOut","setAmtInMsat","setAmtOutMsat","getChanIdIn","getChanIdOut","getAmtIn","getAmtOut","getAmtInMsat","getAmtOutMsat","ForwardingHistoryResponse","forwardingEventsList","getForwardingEventsList","lastOffsetIndex","addForwardingEvents","setLastOffsetIndex","getLastOffsetIndex","setForwardingEventsList","clearForwardingEventsList","ExportChannelBackupRequest","ChannelBackup","chanBackup","getChanBackup_asB64","setChanBackup","getChanBackup_asU8","getChanBackup","MultiChanBackup","chanPointsList","getChanPointsList","multiChanBackup","getMultiChanBackup_asB64","addChanPoints","setMultiChanBackup","getMultiChanBackup_asU8","setChanPointsList","clearChanPointsList","getMultiChanBackup","ChanBackupExportRequest","ChanBackupSnapshot","singleChanBackups","getSingleChanBackups","ChannelBackups","setSingleChanBackups","clearSingleChanBackups","hasSingleChanBackups","clearMultiChanBackup","hasMultiChanBackup","chanBackupsList","getChanBackupsList","addChanBackups","setChanBackupsList","clearChanBackupsList","RestoreChanBackupRequest","BackupCase","BACKUP_NOT_SET","CHAN_BACKUPS","MULTI_CHAN_BACKUP","getBackupCase","chanBackups","getChanBackups","setChanBackups","clearChanBackups","hasChanBackups","RestoreBackupResponse","ChannelBackupSubscription","VerifyChanBackupResponse","MacaroonPermission","entity","setEntity","setAction","getEntity","getAction","BakeMacaroonRequest","permissionsList","getPermissionsList","addPermissions","setPermissionsList","clearPermissionsList","BakeMacaroonResponse","macaroon","setMacaroon","getMacaroon","code","channelUpdate","getChannelUpdate","ChannelUpdate","htlcMsat","onionSha256","getOnionSha256_asB64","flags","failureSourceIndex","setCode","setChannelUpdate","setHtlcMsat","setOnionSha256","setFlags","setFailureSourceIndex","setHeight","getCode","getHtlcMsat","getOnionSha256_asU8","getFlags","getFailureSourceIndex","getHeight","FailureCode","RESERVED","INCORRECT_OR_UNKNOWN_PAYMENT_DETAILS","INCORRECT_PAYMENT_AMOUNT","FINAL_INCORRECT_CLTV_EXPIRY","FINAL_INCORRECT_HTLC_AMOUNT","FINAL_EXPIRY_TOO_SOON","INVALID_REALM","EXPIRY_TOO_SOON","INVALID_ONION_VERSION","INVALID_ONION_HMAC","INVALID_ONION_KEY","AMOUNT_BELOW_MINIMUM","FEE_INSUFFICIENT","INCORRECT_CLTV_EXPIRY","CHANNEL_DISABLED","TEMPORARY_CHANNEL_FAILURE","REQUIRED_NODE_FEATURE_MISSING","REQUIRED_CHANNEL_FEATURE_MISSING","UNKNOWN_NEXT_PEER","TEMPORARY_NODE_FAILURE","PERMANENT_NODE_FAILURE","PERMANENT_CHANNEL_FAILURE","EXPIRY_TOO_FAR","MPP_TIMEOUT","INTERNAL_FAILURE","UNKNOWN_FAILURE","UNREADABLE_FAILURE","clearChannelUpdate","hasChannelUpdate","getOnionSha256","getSignature_asB64","messageFlags","htlcMinimumMsat","baseFee","htlcMaximumMsat","extraOpaqueData","getExtraOpaqueData_asB64","setMessageFlags","setHtlcMinimumMsat","setBaseFee","setHtlcMaximumMsat","setExtraOpaqueData","getSignature_asU8","getMessageFlags","getHtlcMinimumMsat","getBaseFee","getHtlcMaximumMsat","getExtraOpaqueData_asU8","getExtraOpaqueData","AddressType","WITNESS_PUBKEY_HASH","NESTED_PUBKEY_HASH","UNUSED_WITNESS_PUBKEY_HASH","UNUSED_NESTED_PUBKEY_HASH","CommitmentType","LEGACY","STATIC_REMOTE_KEY","ANCHORS","UNKNOWN_COMMITMENT_TYPE","Initiator","INITIATOR_UNKNOWN","INITIATOR_LOCAL","INITIATOR_REMOTE","INITIATOR_BOTH","ResolutionType","TYPE_UNKNOWN","ANCHOR","INCOMING_HTLC","OUTGOING_HTLC","COMMIT","ResolutionOutcome","OUTCOME_UNKNOWN","CLAIMED","UNCLAIMED","FIRST_STAGE","TIMEOUT","NodeMetricType","BETWEENNESS_CENTRALITY","InvoiceHTLCState","PaymentFailureReason","FAILURE_REASON_NONE","FAILURE_REASON_TIMEOUT","FAILURE_REASON_NO_ROUTE","FAILURE_REASON_ERROR","FAILURE_REASON_INCORRECT_PAYMENT_DETAILS","FAILURE_REASON_INSUFFICIENT_BALANCE","FeatureBit","DATALOSS_PROTECT_REQ","DATALOSS_PROTECT_OPT","INITIAL_ROUING_SYNC","UPFRONT_SHUTDOWN_SCRIPT_REQ","UPFRONT_SHUTDOWN_SCRIPT_OPT","GOSSIP_QUERIES_REQ","GOSSIP_QUERIES_OPT","TLV_ONION_REQ","TLV_ONION_OPT","EXT_GOSSIP_QUERIES_REQ","EXT_GOSSIP_QUERIES_OPT","STATIC_REMOTE_KEY_REQ","STATIC_REMOTE_KEY_OPT","PAYMENT_ADDR_REQ","PAYMENT_ADDR_OPT","MPP_REQ","MPP_OPT","module"],"mappings":"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","file":"static/js/main.7ec1c5bd.chunk.js","sourcesContent":["import tinycolor from \"tinycolor2\";\n\nconst primary = \"#536DFE\";\nconst secondary = \"#FF5C93\";\nconst warning = \"#FFC260\";\nconst success = \"#3CD4A0\";\nconst info = \"#9013FE\";\n\nconst lightenRate = 7.5;\nconst darkenRate = 15;\n\nexport default {\n  palette: {\n    primary: {\n      main: primary,\n      light: tinycolor(primary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(primary)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    secondary: {\n      main: secondary,\n      light: tinycolor(secondary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(secondary)\n        .darken(darkenRate)\n        .toHexString(),\n      contrastText: \"#FFFFFF\",\n    },\n    warning: {\n      main: warning,\n      light: tinycolor(warning)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(warning)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    success: {\n      main: success,\n      light: tinycolor(success)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(success)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    info: {\n      main: info,\n      light: tinycolor(info)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(info)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    text: {\n      primary: \"#4A4A4A\",\n      secondary: \"#6E6E6E\",\n      hint: \"#B9B9B9\",\n    },\n    background: {\n      default: \"#F6F7FF\",\n      light: \"#F3F5FF\",\n    },\n  },\n  customShadows: {\n    widget:\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetDark:\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetWide:\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n  },\n  overrides: {\n    MuiBackdrop: {\n      root: {\n        backgroundColor: \"#4A4A4A1A\",\n      },\n    },\n    MuiMenu: {\n      paper: {\n        boxShadow:\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n      },\n    },\n    MuiSelect: {\n      icon: {\n        color: \"#B9B9B9\",\n      },\n    },\n    MuiListItem: {\n      root: {\n        \"&$selected\": {\n          backgroundColor: \"#F3F5FF !important\",\n          \"&:focus\": {\n            backgroundColor: \"#F3F5FF\",\n          },\n        },\n      },\n      button: {\n        \"&:hover, &:focus\": {\n          backgroundColor: \"#F3F5FF\",\n        },\n      },\n    },\n    MuiTouchRipple: {\n      child: {\n        backgroundColor: \"white\",\n      },\n    },\n    MuiTableRow: {\n      root: {\n        height: 56,\n      },\n    },\n    MuiTableCell: {\n      root: {\n        borderBottom: \"1px solid rgba(224, 224, 224, .5)\",\n      },\n      head: {\n        fontSize: \"0.95rem\",\n      },\n      body: {\n        fontSize: \"0.95rem\",\n      },\n    },\n  },\n};\n","import defaultTheme from \"./default\";\n\nimport { createMuiTheme } from \"@material-ui/core\";\n\nconst overrides = {\n  typography: {\n    h1: {\n      fontSize: \"3rem\",\n    },\n    h2: {\n      fontSize: \"2rem\",\n    },\n    h3: {\n      fontSize: \"1.64rem\",\n    },\n    h4: {\n      fontSize: \"1.5rem\",\n    },\n    h5: {\n      fontSize: \"1.285rem\",\n    },\n    h6: {\n      fontSize: \"1.142rem\",\n    },\n  },\n};\n\nexport default {\n  default: createMuiTheme({ ...defaultTheme, ...overrides }),\n};\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    maxWidth: \"100vw\",\n    overflowX: \"hidden\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    width: `calc(100vw - 240px)`,\n    minHeight: \"100vh\",\n  },\n  contentShift: {\n    width: `calc(100vw - ${240 + theme.spacing(6)}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  fakeToolbar: {\n    ...theme.mixins.toolbar,\n  },\n}));\n","import { makeStyles } from \"@material-ui/styles\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\n\nexport default makeStyles(theme => ({\n  logotype: {\n    color: \"white\",\n    marginLeft: theme.spacing(2.5),\n    marginRight: theme.spacing(2.5),\n    fontWeight: 500,\n    fontSize: 18,\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"none\",\n    },\n  },\n  appBar: {\n    width: \"100vw\",\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  toolbar: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: 25,\n    paddingLeft: theme.spacing(2.5),\n    width: 36,\n    backgroundColor: fade(theme.palette.common.black, 0),\n    transition: theme.transitions.create([\"background-color\", \"width\"]),\n    \"&:hover\": {\n      cursor: \"pointer\",\n      backgroundColor: fade(theme.palette.common.black, 0.08),\n    },\n  },\n  searchFocused: {\n    backgroundColor: fade(theme.palette.common.black, 0.08),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 250,\n    },\n  },\n  searchIcon: {\n    width: 36,\n    right: 0,\n    height: \"100%\",\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    transition: theme.transitions.create(\"right\"),\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  searchIconOpened: {\n    right: theme.spacing(1.25),\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\",\n  },\n  inputInput: {\n    height: 36,\n    padding: 0,\n    paddingRight: 36 + theme.spacing(1.25),\n    width: \"100%\",\n  },\n  messageContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  headerMenu: {\n    marginTop: theme.spacing(7),\n  },\n  headerMenuList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  headerMenuItem: {\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"white\",\n    },\n  },\n  headerMenuButton: {\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(0.5),\n  },\n  headerMenuButtonCollapse: {\n    marginRight: theme.spacing(2),\n  },\n  headerIcon: {\n    fontSize: 28,\n    color: \"rgba(255, 255, 255, 0.35)\",\n  },\n  headerIconCollapse: {\n    color: \"white\",\n  },\n  profileMenu: {\n    minWidth: 265,\n  },\n  profileMenuUser: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: theme.spacing(2),\n  },\n  profileMenuItem: {\n    color: theme.palette.text.hint,\n  },\n  profileMenuIcon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.text.hint,\n  },\n  profileMenuLink: {\n    fontSize: 16,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  messageNotification: {\n    height: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.background.light,\n    },\n  },\n  messageNotificationSide: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(2),\n  },\n  messageNotificationBodySide: {\n    alignItems: \"flex-start\",\n    marginRight: 0,\n  },\n  sendMessageButton: {\n    margin: theme.spacing(4),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    textTransform: \"none\",\n  },\n  sendButtonIcon: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n","import React from \"react\";\nimport {\n  withStyles,\n  Badge as BadgeBase,\n  Typography as TypographyBase,\n  Button as ButtonBase,\n} from \"@material-ui/core\";\nimport { useTheme, makeStyles } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\n\n// styles\nvar useStyles = makeStyles(theme => ({\n  badge: {\n    fontWeight: 600,\n    height: 16,\n    minWidth: 16,\n  },\n}));\n\nfunction Badge({ children, colorBrightness, color, ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n  var Styled = createStyled({\n    badge: {\n      backgroundColor: getColor(color, theme, colorBrightness),\n    },\n  });\n\n  return (\n    <Styled>\n      {styledProps => (\n        <BadgeBase\n          classes={{\n            badge: classnames(classes.badge, styledProps.classes.badge),\n          }}\n          {...props}\n        >\n          {children}\n        </BadgeBase>\n      )}\n    </Styled>\n  );\n}\n\nfunction Typography({\n  children,\n  weight,\n  size,\n  colorBrightness,\n  color,\n  ...props\n}) {\n  var theme = useTheme();\n\n  return (\n    <TypographyBase\n      style={{\n        color: getColor(color, theme, colorBrightness),\n        fontWeight: getFontWeight(weight),\n        fontSize: getFontSize(size, props.variant, theme),\n      }}\n      {...props}\n    >\n      {children}\n    </TypographyBase>\n  );\n}\n\nfunction Button({ children, color, className, ...props }) {\n  var theme = useTheme();\n\n  var Styled = createStyled({\n    root: {\n      color: getColor(color, theme),\n    },\n    contained: {\n      backgroundColor: getColor(color, theme),\n      boxShadow: theme.customShadows.widget,\n      color: `${color ? \"white\" : theme.palette.text.primary} !important`,\n      \"&:hover\": {\n        backgroundColor: getColor(color, theme, \"light\"),\n        boxShadow: theme.customShadows.widgetWide,\n      },\n      \"&:active\": {\n        boxShadow: theme.customShadows.widgetWide,\n      },\n    },\n    outlined: {\n      color: getColor(color, theme),\n      borderColor: getColor(color, theme),\n    },\n    select: {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n    },\n  });\n\n  return (\n    <Styled>\n      {({ classes }) => (\n        <ButtonBase\n          classes={{\n            contained: classes.contained,\n            root: classes.root,\n            outlined: classes.outlined,\n          }}\n          {...props}\n          className={classnames(\n            {\n              [classes.select]: props.select,\n            },\n            className,\n          )}\n        >\n          {children}\n        </ButtonBase>\n      )}\n    </Styled>\n  );\n}\n\nexport { Badge, Typography, Button };\n\n// ########################################################################\n\nfunction getColor(color, theme, brigtness = \"main\") {\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\n    return theme.palette[color][brigtness];\n  }\n}\n\nfunction getFontWeight(style) {\n  switch (style) {\n    case \"light\":\n      return 300;\n    case \"medium\":\n      return 500;\n    case \"bold\":\n      return 600;\n    default:\n      return 400;\n  }\n}\n\nfunction getFontSize(size, variant = \"\", theme) {\n  var multiplier;\n\n  switch (size) {\n    case \"sm\":\n      multiplier = 0.8;\n      break;\n    case \"md\":\n      multiplier = 1.5;\n      break;\n    case \"xl\":\n      multiplier = 2;\n      break;\n    case \"xxl\":\n      multiplier = 3;\n      break;\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  var defaultSize =\n    variant && theme.typography[variant]\n      ? theme.typography[variant].fontSize\n      : theme.typography.fontSize + \"px\";\n\n  return `calc(${defaultSize} * ${multiplier})`;\n}\n\nfunction createStyled(styles, options) {\n  var Styled = function(props) {\n    const { children, ...other } = props;\n    return children(other);\n  };\n\n  return withStyles(styles, options)(Styled);\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  notificationContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  notificationContained: {\n    borderRadius: 45,\n    height: 45,\n    boxShadow: theme.customShadows.widgetDark,\n  },\n  notificationContainedShadowless: {\n    boxShadow: \"none\",\n  },\n  notificationIconContainer: {\n    minWidth: 45,\n    height: 45,\n    borderRadius: 45,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: 24,\n  },\n  notificationIconContainerContained: {\n    fontSize: 18,\n    color: \"#FFFFFF80\",\n  },\n  notificationIconContainerRounded: {\n    marginRight: theme.spacing(2),\n  },\n  containedTypography: {\n    color: \"white\",\n  },\n  messageContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexGrow: 1,\n  },\n  extraButton: {\n    color: \"white\",\n    \"&:hover, &:focus\": {\n      background: \"transparent\",\n    },\n  },\n}));\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport {\n  NotificationsNone as NotificationsIcon,\n  ThumbUp as ThumbUpIcon,\n  ShoppingCart as ShoppingCartIcon,\n  LocalOffer as TicketIcon,\n  BusinessCenter as DeliveredIcon,\n  SmsFailed as FeedbackIcon,\n  DiscFull as DiscIcon,\n  Email as MessageIcon,\n  Report as ReportIcon,\n  Error as DefenceIcon,\n  AccountBox as CustomerIcon,\n  Done as ShippedIcon,\n  Publish as UploadIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\nimport tinycolor from \"tinycolor2\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\n\nconst typesIcons = {\n  \"e-commerce\": <ShoppingCartIcon />,\n  notification: <NotificationsIcon />,\n  offer: <TicketIcon />,\n  info: <ThumbUpIcon />,\n  message: <MessageIcon />,\n  feedback: <FeedbackIcon />,\n  customer: <CustomerIcon />,\n  shipped: <ShippedIcon />,\n  delivered: <DeliveredIcon />,\n  defence: <DefenceIcon />,\n  report: <ReportIcon />,\n  upload: <UploadIcon />,\n  disc: <DiscIcon />,\n};\n\nexport default function Notification({ variant, ...props }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  const icon = getIconByType(props.type);\n  const iconWithStyles = React.cloneElement(icon, {\n    classes: {\n      root: classes.notificationIcon,\n    },\n    style: {\n      color:\n        variant !== \"contained\" &&\n        theme.palette[props.color] &&\n        theme.palette[props.color].main,\n    },\n  });\n\n  return (\n    <div\n      className={classnames(classes.notificationContainer, props.className, {\n        [classes.notificationContained]: variant === \"contained\",\n        [classes.notificationContainedShadowless]: props.shadowless,\n      })}\n      style={{\n        backgroundColor:\n          variant === \"contained\" &&\n          theme.palette[props.color] &&\n          theme.palette[props.color].main,\n      }}\n    >\n      <div\n        className={classnames(classes.notificationIconContainer, {\n          [classes.notificationIconContainerContained]: variant === \"contained\",\n          [classes.notificationIconContainerRounded]: variant === \"rounded\",\n        })}\n        style={{\n          backgroundColor:\n            variant === \"rounded\" &&\n            theme.palette[props.color] &&\n            tinycolor(theme.palette[props.color].main)\n              .setAlpha(0.15)\n              .toRgbString(),\n        }}\n      >\n        {iconWithStyles}\n      </div>\n      <div className={classes.messageContainer}>\n        <Typography\n          className={classnames({\n            [classes.containedTypography]: variant === \"contained\",\n          })}\n          variant={props.typographyVariant}\n          size={variant !== \"contained\" && !props.typographyVariant && \"md\"}\n        >\n          {props.message}\n        </Typography>\n        {props.extraButton && props.extraButtonClick && (\n          <Button\n            onClick={props.extraButtonClick}\n            disableRipple\n            className={classes.extraButton}\n          >\n            {props.extraButton}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// ####################################################################\nfunction getIconByType(type = \"offer\") {\n  return typesIcons[type];\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(() => ({\n  avatar: {\n    width: 30,\n    height: 30,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: \"50%\",\n  },\n  text: {\n    color: \"white\",\n  },\n}));\n","import React from \"react\";\n\nvar LayoutStateContext = React.createContext();\nvar LayoutDispatchContext = React.createContext();\n\nfunction layoutReducer(state, action) {\n  switch (action.type) {\n    case \"TOGGLE_SIDEBAR\":\n      return { ...state, isSidebarOpened: !state.isSidebarOpened };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction LayoutProvider({ children }) {\n  var [state, dispatch] = React.useReducer(layoutReducer, {\n    isSidebarOpened: true,\n  });\n  return (\n    <LayoutStateContext.Provider value={state}>\n      <LayoutDispatchContext.Provider value={dispatch}>\n        {children}\n      </LayoutDispatchContext.Provider>\n    </LayoutStateContext.Provider>\n  );\n}\n\nfunction useLayoutState() {\n  var context = React.useContext(LayoutStateContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nfunction useLayoutDispatch() {\n  var context = React.useContext(LayoutDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar };\n\n// ###########################################################\nfunction toggleSidebar(dispatch) {\n  dispatch({\n    type: \"TOGGLE_SIDEBAR\",\n  });\n}\n","import React from \"react\";\n\nvar UserStateContext = React.createContext();\nvar UserDispatchContext = React.createContext();\n\nfunction userReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return { ...state, isAuthenticated: true };\n    case \"SIGN_OUT_SUCCESS\":\n      return { ...state, isAuthenticated: false };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction UserProvider({ children }) {\n  var [state, dispatch] = React.useReducer(userReducer, {\n    isAuthenticated: !!localStorage.getItem(\"id_token\"),\n  });\n\n  return (\n    <UserStateContext.Provider value={state}>\n      <UserDispatchContext.Provider value={dispatch}>\n        {children}\n      </UserDispatchContext.Provider>\n    </UserStateContext.Provider>\n  );\n}\n\nfunction useUserState() {\n  var context = React.useContext(UserStateContext);\n  if (context === undefined) {\n    throw new Error(\"useUserState must be used within a UserProvider\");\n  }\n  return context;\n}\n\nfunction useUserDispatch() {\n  var context = React.useContext(UserDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\n  }\n  return context;\n}\n\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };\n\n// ###########################################################\n\nfunction loginUser(dispatch, login, password, history, setIsLoading, setError) {\n  setError(false);\n  setIsLoading(true);\n\n  if (!!login && !!password) {\n    setTimeout(() => {\n      localStorage.setItem('id_token', 1)\n      setError(null)\n      setIsLoading(false)\n      dispatch({ type: 'LOGIN_SUCCESS' })\n\n      history.push('/app/dashboard')\n    }, 2000);\n  } else {\n    dispatch({ type: \"LOGIN_FAILURE\" });\n    setError(true);\n    setIsLoading(false);\n  }\n}\n\nfunction signOut(dispatch, history) {\n  localStorage.removeItem(\"id_token\");\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\n  history.push(\"/login\");\n}\n","import {\n  GetInfoRequest,\n  WalletBalanceRequest,\n  GetTransactionsRequest,\n  ListPeersRequest,\n  ListChannelsRequest,\n  PendingChannelsRequest,\n  ConnectPeerRequest,\n  LightningAddress,\n  DisconnectPeerRequest,\n  OpenChannelRequest,\n  CloseChannelRequest,\n  ChannelPoint,\n  NewAddressRequest,\n  SendCoinsRequest,\n  SendCoinsResponse,\n  GetInfoResponse,\n  WalletBalanceResponse,\n  TransactionDetails,\n  ListPeersResponse,\n  ListChannelsResponse,\n  PendingChannelsResponse,\n  ConnectPeerResponse,\n  DisconnectPeerResponse,\n  CloseStatusUpdate,\n  NewAddressResponse\n} from \"../proto/lnd_pb\"\nimport {\n  GetSqueakProfileRequest,\n  GetTimelineSqueakDisplaysRequest,\n  SetSqueakProfileFollowingRequest,\n  SetSqueakProfileSharingRequest,\n  GetPeersRequest,\n  PayOfferRequest,\n  GetBuyOffersRequest,\n  GetBuyOfferRequest,\n  GetPeerRequest,\n  SetPeerDownloadingRequest,\n  SetPeerUploadingRequest,\n  GetSigningProfilesRequest,\n  GetContactProfilesRequest,\n  MakeSqueakRequest,\n  GetSqueakDisplayRequest,\n  GetAncestorSqueakDisplaysRequest,\n  GetReplySqueakDisplaysRequest,\n  GetSqueakProfileByAddressRequest,\n  GetAddressSqueakDisplaysRequest,\n  CreateContactProfileRequest,\n  CreateSigningProfileRequest,\n  ImportSigningProfileRequest,\n  CreatePeerRequest,\n  DeletePeerRequest,\n  DeleteSqueakProfileRequest,\n  DeleteSqueakRequest,\n  GetTimelineSqueakDisplaysReply,\n  SetSqueakProfileSharingReply,\n  GetSqueakProfileReply,\n  SetSqueakProfileFollowingReply,\n  GetPeersReply,\n  PayOfferReply,\n  GetBuyOffersReply,\n  GetBuyOfferReply,\n  GetPeerReply,\n  SetPeerDownloadingReply,\n  SetPeerUploadingReply,\n  GetSigningProfilesReply,\n  GetContactProfilesReply,\n  MakeSqueakReply,\n  GetSqueakDisplayReply,\n  GetAncestorSqueakDisplaysReply,\n  GetReplySqueakDisplaysReply,\n  GetSqueakProfileByAddressReply,\n  GetAddressSqueakDisplaysReply,\n  CreateContactProfileReply,\n  CreateSigningProfileReply,\n  ImportSigningProfileReply,\n  CreatePeerReply,\n  DeletePeerReply,\n  DeleteSqueakProfileReply,\n  DeleteSqueakReply,\n  SyncSqueakRequest,\n  SyncSqueakReply,\n  GetSqueakDetailsRequest,\n  GetSqueakDetailsReply,\n  GetSentPaymentsRequest,\n  GetSentPaymentsReply,\n  GetSentOffersRequest,\n  GetSentOffersReply,\n  GetReceivedPaymentsRequest,\n  GetReceivedPaymentsReply,\n  GetNetworkRequest,\n  GetNetworkReply,\n  GetSqueakProfilePrivateKeyRequest,\n  GetSqueakProfilePrivateKeyReply,\n  GetPaymentSummaryRequest,\n  GetPaymentSummaryReply,\n  RenameSqueakProfileRequest,\n  RenameSqueakProfileReply,\n  SetSqueakProfileImageRequest,\n  SetSqueakProfileImageReply,\n  ClearSqueakProfileImageRequest,\n  ClearSqueakProfileImageReply,\n} from \"../proto/squeak_admin_pb\"\n\nconsole.log('The value of REACT_APP_SERVER_PORT is:', process.env.REACT_APP_SERVER_PORT);\nconst SERVER_PORT = process.env.REACT_APP_SERVER_PORT || window.location.port;\n\nexport let web_host_port = window.location.protocol + '//' + window.location.hostname + ':' + SERVER_PORT;\n\nfunction handleErrorResponse(response, route, handleError) {\n  response.text()\n  .then(function(data) {\n    console.error(data);\n    if (handleError) {\n      handleError(data);\n    }\n  });\n}\n\nfunction handleSuccessResponse(deserializeMsg, response, handleResponse) {\n  response.arrayBuffer()\n  .then(function(data) {\n    var response = deserializeMsg(data);\n    handleResponse(response);\n  });\n}\n\nfunction makeRequest(route, request, deserializeMsg, handleResponse, handleError) {\n  fetch(web_host_port + '/' + route, {\n    method: 'post',\n    body: request.serializeBinary()\n  }).then(function(response) {\n    if(response.ok) {\n      handleSuccessResponse(deserializeMsg, response, handleResponse);\n    } else {\n      handleErrorResponse(response, route, handleError);\n    }\n  });\n}\n\nexport function logoutRequest(handleResponse) {\n  fetch(web_host_port + '/' + 'logout', {\n    method: 'get',\n  }).then(function(response) {\n    return response.arrayBuffer();\n  }).then(function(data) {\n    handleResponse(data);\n  });\n}\n\nexport function getUserRequest(handleResponse) {\n  fetch(web_host_port + '/' + 'user', {\n    method: 'get',\n  }).then(function(response) {\n    return response.text();\n  }).then(function(data) {\n    handleResponse(data);\n  });\n}\n\nexport function getTimelineSqueakDisplaysRequest(handleResponse) {\n  var request = new GetTimelineSqueakDisplaysRequest();\n  console.log(GetTimelineSqueakDisplaysReply);\n  makeRequest(\n    'gettimelinesqueakdisplays',\n    request,\n    GetTimelineSqueakDisplaysReply.deserializeBinary,\n    (response) => {\n      handleResponse(response.getSqueakDisplayEntriesList());\n    }\n  );\n}\n\nexport function lndGetInfoRequest(handleResponse, handleErr) {\n  var request = new GetInfoRequest();\n  makeRequest(\n    'lndgetinfo',\n    request,\n    GetInfoResponse.deserializeBinary,\n    handleResponse,\n    handleErr\n  );\n}\n\nexport function lndWalletBalanceRequest(handleResponse) {\n  var request = new WalletBalanceRequest();\n  makeRequest(\n    'lndwalletbalance',\n    request,\n    WalletBalanceResponse.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function lndGetTransactionsRequest(handleResponse) {\n  var request = new GetTransactionsRequest();\n  makeRequest(\n    'lndgettransactions',\n    request,\n    TransactionDetails.deserializeBinary,\n    (response) => {\n      handleResponse(response.getTransactionsList());\n    }\n  );\n}\n\nexport function lndListPeersRequest(handleResponse) {\n      var request = new ListPeersRequest();\n      makeRequest(\n        'lndlistpeers',\n        request,\n        ListPeersResponse.deserializeBinary,\n        (response) => {\n          handleResponse(response.getPeersList());\n        }\n      );\n}\n\nexport function lndListChannelsRequest(handleResponse) {\n  var request = new ListChannelsRequest();\n  makeRequest(\n    'lndlistchannels',\n    request,\n    ListChannelsResponse.deserializeBinary,\n    (response) => {\n      handleResponse(response.getChannelsList());\n    }\n  );\n}\n\nexport function lndPendingChannelsRequest(handleResponse) {\n  var request = new PendingChannelsRequest();\n  makeRequest(\n    'lndpendingchannels',\n    request,\n    PendingChannelsResponse.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function getSqueakProfileRequest(id, handleResponse) {\n  var request = new GetSqueakProfileRequest();\n  request.setProfileId(id);\n  makeRequest(\n    'getsqueakprofile',\n    request,\n    GetSqueakProfileReply.deserializeBinary,\n    (response) => {\n      handleResponse(response.getSqueakProfile());\n    }\n  );\n}\n\nexport function setSqueakProfileFollowingRequest(id, following, handleResponse) {\n  var request = new SetSqueakProfileFollowingRequest();\n  request.setProfileId(id);\n  request.setFollowing(following);\n  makeRequest(\n    'setsqueakprofilefollowing',\n    request,\n    SetSqueakProfileFollowingReply.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function setSqueakProfileSharingRequest(id, sharing, handleResponse) {\n  var request = new SetSqueakProfileSharingRequest();\n  request.setProfileId(id);\n  request.setSharing(sharing);\n  makeRequest(\n    'setsqueakprofilesharing',\n    request,\n    SetSqueakProfileSharingReply.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function renameSqueakProfileRequest(id, profileName, handleResponse) {\n  var request = new RenameSqueakProfileRequest();\n  request.setProfileId(id);\n  request.setProfileName(profileName);\n  makeRequest(\n    'renamesqueakprofile',\n    request,\n    RenameSqueakProfileReply.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function setSqueakProfileImageRequest(id, profileImage, handleResponse) {\n  var request = new SetSqueakProfileImageRequest();\n  request.setProfileId(id);\n  request.setProfileImage(profileImage);\n  makeRequest(\n    'setsqueakprofileimage',\n    request,\n    SetSqueakProfileImageReply.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function clearSqueakProfileImageRequest(id, handleResponse) {\n  var request = new ClearSqueakProfileImageRequest();\n  request.setProfileId(id);\n  makeRequest(\n    'clearsqueakprofileimage',\n    request,\n    ClearSqueakProfileImageReply.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function lndConnectPeerRequest(pubkey, host, handleResponse) {\n  var request = new ConnectPeerRequest()\n  var address = new LightningAddress();\n  address.setPubkey(pubkey);\n  address.setHost(host);\n  request.setAddr(address);\n  makeRequest(\n    'lndconnectpeer',\n    request,\n    ConnectPeerResponse.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function lndDisconnectPeerRequest(pubkey, handleResponse) {\n  var request = new DisconnectPeerRequest()\n  request.setPubKey(pubkey);\n  makeRequest(\n    'lnddisconnectpeer',\n    request,\n    DisconnectPeerResponse.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function getPeersRequest(handleResponse) {\n  var request = new GetPeersRequest();\n  makeRequest(\n    'getpeers',\n    request,\n    GetPeersReply.deserializeBinary,\n    (response) => {\n      handleResponse(response.getSqueakPeersList());\n    }\n  );\n}\n\nexport function payOfferRequest(offerId, handleResponse, handleErr) {\n  var request = new PayOfferRequest();\n  request.setOfferId(offerId);\n  makeRequest(\n    'payoffer',\n    request,\n    PayOfferReply.deserializeBinary,\n    handleResponse,\n    handleErr,\n  );\n}\n\nexport function lndOpenChannelSyncRequest(pubkey, amount, satperbyte, handleResponse, handleErr) {\n  var request = new OpenChannelRequest()\n  request.setNodePubkeyString(pubkey);\n  request.setLocalFundingAmount(amount);\n  request.setSatPerByte(satperbyte);\n  makeRequest(\n    'lndopenchannelsync',\n    request,\n    ChannelPoint.deserializeBinary,\n    handleResponse,\n    handleErr,\n  );\n}\n\nexport function lndCloseChannelRequest(txId, outputIndex, handleResponse, handleErr) {\n  var request = new CloseChannelRequest();\n  var channelPoint = new ChannelPoint();\n  channelPoint.setFundingTxidStr(txId);\n  channelPoint.setOutputIndex(outputIndex);\n  request.setChannelPoint(channelPoint);\n  makeRequest(\n    'lndclosechannel',\n    request,\n    CloseStatusUpdate.deserializeBinary,\n    // TODO: handle streaming response\n    handleResponse,\n    handleErr,\n  );\n}\n\nexport function getBuyOffersRequest(hash, handleResponse) {\n  var request = new GetBuyOffersRequest();\n  request.setSqueakHash(hash);\n  makeRequest(\n    'getbuyoffers',\n    request,\n    GetBuyOffersReply.deserializeBinary,\n    (response) => {\n      handleResponse(response.getOffersList());\n    });\n}\n\nexport function getBuyOfferRequest(offerId, handleResponse) {\n  var request = new GetBuyOfferRequest();\n  request.setOfferId(offerId);\n  makeRequest(\n    'getbuyoffer',\n    request,\n    GetBuyOfferReply.deserializeBinary,\n    (response) => {\n      handleResponse(response.getOffer());\n    }\n  );\n}\n\nexport function getPeerRequest(id, handleResponse) {\n  var request = new GetPeerRequest();\n  request.setPeerId(id);\n  makeRequest(\n    'getpeer',\n    request,\n    GetPeerReply.deserializeBinary,\n    (response) => {\n      handleResponse(response.getSqueakPeer());\n    }\n  );\n}\n\nexport function setPeerDownloadingRequest(id, downloading, handleResponse) {\n  var request = new SetPeerDownloadingRequest();\n  request.setPeerId(id);\n  request.setDownloading(downloading);\n  makeRequest(\n    'setpeerdownloading',\n    request,\n    SetPeerDownloadingReply.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function setPeerUploadingRequest(id, uploading, handleResponse) {\n  var request = new SetPeerUploadingRequest();\n  request.setPeerId(id);\n  request.setUploading(uploading);\n  makeRequest(\n    'setpeeruploading',\n    request,\n    SetPeerUploadingReply.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function getSigningProfilesRequest(handleResponse) {\n  var request = new GetSigningProfilesRequest();\n  makeRequest(\n    'getsigningprofiles',\n    request,\n    GetSigningProfilesReply.deserializeBinary,\n    (response) => {\n      handleResponse(response.getSqueakProfilesList());\n    }\n  );\n}\n\nexport function getContactProfilesRequest(handleResponse) {\n  var request = new GetContactProfilesRequest();\n  makeRequest(\n    'getcontactprofiles',\n    request,\n    GetContactProfilesReply.deserializeBinary,\n    (response) => {\n      handleResponse(response.getSqueakProfilesList());\n    }\n  );\n}\n\nexport function makeSqueakRequest(profileId, content, replyto, handleResponse, handleErr) {\n  var request = new MakeSqueakRequest();\n  request.setProfileId(profileId);\n  request.setContent(content);\n  request.setReplyto(replyto);\n  makeRequest(\n    'makesqueakrequest',\n    request,\n    MakeSqueakReply.deserializeBinary,\n    handleResponse,\n    handleErr,\n  );\n}\n\nexport function getSqueakDisplayRequest(hash, handleResponse) {\n  var request = new GetSqueakDisplayRequest();\n  request.setSqueakHash(hash);\n  makeRequest(\n    'getsqueakdisplay',\n    request,\n    GetSqueakDisplayReply.deserializeBinary,\n    (response) => {\n      handleResponse(response.getSqueakDisplayEntry());\n    }\n  );\n}\n\nexport function getAncestorSqueakDisplaysRequest(hash, handleResponse) {\n  var request = new GetAncestorSqueakDisplaysRequest();\n  request.setSqueakHash(hash);\n  makeRequest(\n    'getancestorsqueakdisplays',\n    request,\n    GetAncestorSqueakDisplaysReply.deserializeBinary,\n    (response) => {\n      handleResponse(response.getSqueakDisplayEntriesList());\n    }\n  );\n}\n\nexport function getReplySqueakDisplaysRequest(hash, handleResponse) {\n  var request = new GetReplySqueakDisplaysRequest();\n  request.setSqueakHash(hash);\n  makeRequest(\n    'getreplysqueakdisplays',\n    request,\n    GetReplySqueakDisplaysReply.deserializeBinary,\n    (response) => {\n      handleResponse(response.getSqueakDisplayEntriesList());\n    }\n  );\n}\n\nexport function getSqueakProfileByAddressRequest(address, handleResponse) {\n  var request = new GetSqueakProfileByAddressRequest();\n  request.setAddress(address);\n  makeRequest(\n    'getsqueakprofilebyaddress',\n    request,\n    GetSqueakProfileByAddressReply.deserializeBinary,\n    (response) => {\n      handleResponse(response.getSqueakProfile());\n    }\n  );\n}\n\nexport function getAddressSqueakDisplaysRequest(address, handleResponse) {\n    var request = new GetAddressSqueakDisplaysRequest();\n    request.setAddress(address);\n    makeRequest(\n      'getaddresssqueakdisplays',\n      request,\n      GetAddressSqueakDisplaysReply.deserializeBinary,\n      (response) => {\n        handleResponse(response.getSqueakDisplayEntriesList());\n      }\n    );\n}\n\nexport function createContactProfileRequest(profileName, squeakAddress, handleResponse, handleErr) {\n  const request = new CreateContactProfileRequest();\n  request.setProfileName(profileName);\n  request.setAddress(squeakAddress);\n  makeRequest(\n    'createcontactprofile',\n    request,\n    CreateContactProfileReply.deserializeBinary,\n    handleResponse,\n    handleErr,\n  );\n}\n\nexport function createSigningProfileRequest(profileName, handleResponse, handleErr) {\n  var request = new CreateSigningProfileRequest();\n  request.setProfileName(profileName);\n  makeRequest(\n    'createsigningprofile',\n    request,\n    CreateSigningProfileReply.deserializeBinary,\n    handleResponse,\n    handleErr,\n  );\n}\n\nexport function importSigningProfileRequest(profileName, privateKey, handleResponse, handleErr) {\n  const request = new ImportSigningProfileRequest();\n  request.setProfileName(profileName);\n  request.setPrivateKey(privateKey);\n  makeRequest(\n    'importsigningprofile',\n    request,\n    ImportSigningProfileReply.deserializeBinary,\n    handleResponse,\n    handleErr,\n  );\n}\n\nexport function createPeerRequest(peerName, host, port, handleResponse) {\n  var request = new CreatePeerRequest();\n  request.setPeerName(peerName);\n  request.setHost(host);\n  request.setPort(port);\n  makeRequest(\n    'createpeer',\n    request,\n    CreatePeerReply.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function deletePeerRequest(peerId, handleResponse) {\n  var request = new DeletePeerRequest();\n  request.setPeerId(peerId);\n  makeRequest(\n    'deletepeer',\n    request,\n    DeletePeerReply.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function deleteProfileRequest(profileId, handleResponse) {\n  var request = new DeleteSqueakProfileRequest();\n  request.setProfileId(profileId);\n  makeRequest(\n    'deleteprofile',\n    request,\n    DeleteSqueakProfileReply.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function deleteSqueakRequest(squeakHash, handleResponse) {\n  var request = new DeleteSqueakRequest();\n  request.setSqueakHash(squeakHash);\n  makeRequest(\n    'deletesqueak',\n    request,\n    DeleteSqueakReply.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function lndNewAddressRequest(handleResponse) {\n  var request = new NewAddressRequest();\n  makeRequest(\n    'lndnewaddress',\n    request,\n    NewAddressResponse.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function lndSendCoins(address, amount, satperbyte, sendall, handleResponse) {\n  var request = new SendCoinsRequest();\n  request.setAddr(address);\n  request.setAmount(amount);\n  request.setSatPerByte(satperbyte);\n  request.setSendAll(sendall);\n  makeRequest(\n    'lndsendcoins',\n    request,\n    SendCoinsResponse.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function syncSqueakRequest(squeakHash, handleResponse) {\n  var request = new SyncSqueakRequest();\n  request.setSqueakHash(squeakHash);\n  makeRequest(\n    'syncsqueak',\n    request,\n    SyncSqueakReply.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function getSqueakDetailsRequest(hash, handleResponse) {\n  var request = new GetSqueakDetailsRequest();\n  request.setSqueakHash(hash);\n  makeRequest(\n    'getsqueakdetails',\n    request,\n    GetSqueakDetailsReply.deserializeBinary,\n    (response) => {\n      handleResponse(response.getSqueakDetailEntry());\n    }\n  );\n}\n\nexport function getSentPaymentsRequest(handleResponse) {\n  var request = new GetSentPaymentsRequest();\n  makeRequest(\n    'getsentpayments',\n    request,\n    GetSentPaymentsReply.deserializeBinary,\n    (response) => {\n      handleResponse(response);\n    }\n  );\n}\n\n// export function getSentOffersRequest(handleResponse) {\n//   var request = new GetSentOffersRequest();\n//   makeRequest(\n//     'getsentoffers',\n//     request,\n//     GetSentOffersReply.deserializeBinary,\n//     (response) => {\n//       handleResponse(response);\n//     }\n//   );\n// }\n\nexport function getReceivedPaymentsRequest(handleResponse) {\n  var request = new GetReceivedPaymentsRequest();\n  makeRequest(\n    'getreceivedpayments',\n    request,\n    GetReceivedPaymentsReply.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function getNetworkRequest(handleResponse) {\n  var request = new GetNetworkRequest();\n  makeRequest(\n    'getnetwork',\n    request,\n    GetNetworkReply.deserializeBinary,\n    (response) => {\n      handleResponse(response.getNetwork());\n    }\n  );\n}\n\nexport function getSqueakProfilePrivateKey(id, handleResponse) {\n  var request = new GetSqueakProfilePrivateKeyRequest();\n  request.setProfileId(id);\n  makeRequest(\n    'getsqueakprofileprivatekey',\n    request,\n    GetSqueakProfilePrivateKeyReply.deserializeBinary,\n    handleResponse,\n  );\n}\n\nexport function getPaymentSummaryRequest(handleResponse) {\n  var request = new GetPaymentSummaryRequest();\n  makeRequest(\n    'getpaymentsummary',\n    request,\n    GetPaymentSummaryReply.deserializeBinary,\n    handleResponse,\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers/Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nimport {\n  logoutRequest,\n  getUserRequest,\n} from \"../../squeakclient/requests\"\n\nconst notifications = [];\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  const history = useHistory();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n  var [username, setUsername] = useState(\"bob smith\");\n\n  const reloadRoute = () => {\n    history.go(0);\n  };\n\n  const getUser = () => {\n    getUserRequest(setUsername);\n  };\n\n  useEffect(()=>{\n    getUser()\n  },[]);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButton,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          Squeak Node\n        </Typography>\n        <div className={classes.grow} />\n        <div\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n  aria-haspopup=\"true\"\n  color=\"inherit\"\n  className={classes.headerMenuButton}\n  aria-controls=\"profile-menu\"\n  onClick={e => setProfileMenu(e.currentTarget)}\n>\n  <AccountIcon classes={{ root: classes.headerIcon }} />\n</IconButton>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map(notification => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n\n        <Menu\n           id=\"profile-menu\"\n           open={Boolean(profileMenu)}\n           anchorEl={profileMenu}\n           onClose={() => setProfileMenu(null)}\n           className={classes.headerMenu}\n           classes={{ paper: classes.profileMenu }}\n           disableAutoFocusItem\n         >\n           <div className={classes.profileMenuUser}>\n             <Typography variant=\"h4\" weight=\"medium\">\n               {username}\n             </Typography>\n           </div>\n           <div className={classes.profileMenuUser}>\n             <Typography\n               className={classes.profileMenuLink}\n               color=\"primary\"\n               onClick={() => logoutRequest(\n                 () => {\n                   reloadRoute();\n                 }\n               )}\n             >\n               Sign Out\n             </Typography>\n           </div>\n         </Menu>\n\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nconst drawerWidth = 240;\n\nexport default makeStyles(theme => ({\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 40,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: drawerWidth,\n    },\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  /* sidebarList: {\n    marginTop: theme.spacing(6),\n  }, */\n  mobileBackButton: {\n    marginTop: theme.spacing(0.5),\n    marginLeft: theme.spacing(3),\n    [theme.breakpoints.only(\"sm\")]: {\n      marginTop: theme.spacing(0.625),\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  link: {\n    textDecoration: \"none\",\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.background.light,\n    },\n  },\n  linkActive: {\n    backgroundColor: theme.palette.background.light,\n  },\n  linkNested: {\n    paddingLeft: 0,\n    \"&:hover, &:focus\": {\n      backgroundColor: \"#FFFFFF\",\n    },\n  },\n  linkIcon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.text.secondary + \"99\",\n    transition: theme.transitions.create(\"color\"),\n    width: 24,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  linkIconActive: {\n    color: theme.palette.primary.main,\n  },\n  linkText: {\n    padding: 0,\n    color: theme.palette.text.secondary + \"CC\",\n    transition: theme.transitions.create([\"opacity\", \"color\"]),\n    fontSize: 16,\n  },\n  linkTextActive: {\n    color: theme.palette.text.primary,\n  },\n  linkTextHidden: {\n    opacity: 0,\n  },\n  nestedList: {\n    paddingLeft: theme.spacing(2) + 30,\n  },\n  sectionTitle: {\n    marginLeft: theme.spacing(4.5),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4),\n    height: 1,\n    backgroundColor: \"#D8D8D880\",\n  },\n}));\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\nimport classnames from \"classnames\";\n\n// styles\nvar useStyles = makeStyles(theme => ({\n  dotBase: {\n    width: 8,\n    height: 8,\n    backgroundColor: theme.palette.text.hint,\n    borderRadius: \"50%\",\n    transition: theme.transitions.create(\"background-color\"),\n  },\n  dotSmall: {\n    width: 5,\n    height: 5\n  },\n  dotLarge: {\n    width: 11,\n    height: 11,\n  },\n}));\n\nexport default function Dot({ size, color }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  return (\n    <div\n      className={classnames(classes.dotBase, {\n        [classes.dotLarge]: size === \"large\",\n        [classes.dotSmall]: size === \"small\",\n      })}\n      style={{\n        backgroundColor:\n          color && theme.palette[color] && theme.palette[color].main,\n      }}\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Dot from \"../Dot\";\n\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n}) {\n  var classes = useStyles();\n\n  // local\n  var [isOpen, setIsOpen] = useState(false);\n  var isLinkActive =\n    link &&\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\n\n  if (type === \"title\")\n    return (\n      <Typography\n        className={classnames(classes.linkText, classes.sectionTitle, {\n          [classes.linkTextHidden]: !isSidebarOpened,\n        })}\n      >\n        {label}\n      </Typography>\n    );\n\n  if (type === \"divider\") return <Divider className={classes.divider} />;\n\n  if (!children)\n    return (\n      <ListItem\n        button\n        component={link && Link}\n        to={link}\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n          }),\n        }}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n    );\n\n  return (\n    <>\n      <ListItem\n        button\n        component={link && Link}\n        onClick={toggleCollapse}\n        className={classes.link}\n        to={link}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {icon ? icon : <InboxIcon />}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n      {children && (\n        <Collapse\n          in={isOpen && isSidebarOpened}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classes.nestedList}\n        >\n          <List component=\"div\" disablePadding>\n            {children.map(childrenLink => (\n              <SidebarLink\n                key={childrenLink && childrenLink.link}\n                location={location}\n                isSidebarOpened={isSidebarOpened}\n                classes={classes}\n                nested\n                {...childrenLink}\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  );\n\n  // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  People as ProfilesIcon,\n  AttachMoney as MoneyIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n  CloudDownload as PeerIcon,\n  History as HistoryIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\n\nconst structure = [\n  { id: 0, label: \"Timeline\", link: \"/app/timeline\", icon: <HomeIcon /> },\n  { id: 1, label: \"Profiles\", link: \"/app/profiles\", icon: <ProfilesIcon /> },\n  { id: 2, label: \"Wallet\", link: \"/app/wallet\", icon: <MoneyIcon /> },\n  { id: 3, label: \"Peers\", link: \"/app/peers\", icon: <PeerIcon /> },\n  { id: 4, label: \"Payments\", link: \"/app/payments\", icon: <HistoryIcon /> },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function() {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(4),\n    right: theme.spacing(4),\n  },\n  oppositeContent: {\n    // TODO: adjust this value accordingly\n    flex: 0.0,\n    padding: 0,\n  }\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  pageTitleContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: theme.spacing(4),\n    marginTop: theme.spacing(5),\n  },\n  typo: {\n    color: theme.palette.text.hint,\n  },\n  button: {\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n    \"&:active\": {\n      boxShadow: theme.customShadows.widgetWide,\n    },\n  },\n}));\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Typography } from \"../Wrappers\";\n\nexport default function PageTitle(props) {\n  var classes = useStyles();\n\n  return (\n    <div className={classes.pageTitleContainer}>\n      <Typography className={classes.typo} variant=\"h1\" size=\"sm\">\n        {props.title}\n      </Typography>\n      {props.button && (\n        <Button\n          classes={{ root: classes.button }}\n          variant=\"contained\"\n          size=\"large\"\n          color=\"secondary\"\n        >\n          {props.button}\n        </Button>\n      )}\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    // boxShadow: theme.customShadows.widget,\n    backgroundColor: \"#fafafa\",\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nexport default function Widget({\n  children,\n  title,\n  noBodyPadding,\n  bodyClass,\n  disableWidgetMenu,\n  header,\n  ...props\n}) {\n  var classes = useStyles();\n\n  // local\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\n\n  return (\n    <div className={classes.widgetWrapper}>\n      <Paper className={classes.paper} classes={{ root: classes.widgetRoot }}  elevation={3} square>\n        <div className={classes.widgetHeader}>\n          {header ? (\n            header\n          ) : (\n            <React.Fragment>\n              <Typography variant=\"h5\" color=\"textSecondary\">\n                {title}\n              </Typography>\n              {!disableWidgetMenu && (\n                <IconButton\n                  color=\"primary\"\n                  classes={{ root: classes.moreButton }}\n                  aria-owns=\"widget-menu\"\n                  aria-haspopup=\"true\"\n                  onClick={() => setMoreMenuOpen(true)}\n                  buttonRef={setMoreButtonRef}\n                >\n                  <MoreIcon />\n                </IconButton>\n              )}\n            </React.Fragment>\n          )}\n        </div>\n        <div\n          className={classnames(classes.widgetBody, {\n            [classes.noPadding]: noBodyPadding,\n            [bodyClass]: bodyClass,\n          })}\n        >\n          {children}\n        </div>\n      </Paper>\n      <Menu\n        id=\"widget-menu\"\n        open={isMoreMenuOpen}\n        anchorEl={moreButtonRef}\n        onClose={() => setMoreMenuOpen(false)}\n        disableAutoFocusItem\n      >\n        <MenuItem>\n          <Typography>Edit</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Copy</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Delete</Typography>\n        </MenuItem>\n        <MenuItem>\n          <Typography>Print</Typography>\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    padding: '6px 12px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","\n\nexport function getBlockDetailUrl(blockHash, network) {\n  switch(network) {\n    case 'mainnet':\n      return \"https://blockstream.info/block/\" + blockHash;\n    case 'testnet':\n      return \"https://blockstream.info/testnet/block/\" + blockHash;\n    default:\n      return \"\";\n  }\n};\n","import React, { useState } from \"react\";\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nimport LockIcon from '@material-ui/icons/Lock';\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\n\nimport {\n  getBlockDetailUrl,\n} from \"../../bitcoin/blockexplorer\"\n\nimport moment from 'moment';\n\nexport default function SqueakThreadItem({\n  hash,\n  squeak,\n  network,\n  ...props\n}) {\n  var classes = useStyles();\n\n  const history = useHistory();\n\n  const blockDetailUrl = () => {\n    // return \"https://blockstream.info/testnet/block/\" + squeak.getBlockHash();\n    return getBlockDetailUrl(squeak.getBlockHash(), network);\n  };\n\n  const goToSqueakPage = (hash) => {\n    history.push(\"/app/squeak/\" + hash);\n  };\n\n  const goToSqueakAddressPage = () => {\n    history.push(\"/app/squeakaddress/\" + squeak.getAuthorAddress());\n  };\n\n  const onAddressClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log(\"Handling address click...\");\n    if (!squeak) {\n      return;\n    }\n    goToSqueakAddressPage(squeak.getAuthorAddress());\n  }\n\n  const onSqueakClick = (event) => {\n    event.preventDefault();\n    console.log(\"Handling squeak click for hash: \" + hash);\n    if (goToSqueakPage) {\n      goToSqueakPage(hash);\n    }\n  }\n\n  function SqueakUnlockedContent() {\n    return (\n      <Typography\n        size=\"md\"\n        style={{whiteSpace: 'pre-line', overflow: \"hidden\", textOverflow: \"ellipsis\", height: '6rem'}}\n        >{squeak.getContentStr()}\n      </Typography>\n    )\n  }\n\n  function SqueakLockedContent() {\n    return (\n      <>\n        <LockIcon />\n      </>\n    )\n  }\n\n  function SqueakMissingContent() {\n    return (\n      <>\n        <DownloadIcon />\n      </>\n    )\n  }\n\n  function SqueakContent() {\n    if (!squeak) {\n      return (\n        <>\n          {SqueakMissingContent()}\n        </>\n      )\n    }\n\n    return (\n      <>\n      {squeak.getIsUnlocked()\n          ? SqueakUnlockedContent()\n          : SqueakLockedContent()\n        }\n      </>\n    )\n  }\n\n  function SqueakTime() {\n    if (!squeak) {\n      return (\n        <Box color=\"secondary.main\" fontWeight=\"fontWeightBold\">\n          Unknown time\n        </Box>\n      )\n    }\n\n    return (\n      <Box color=\"secondary.main\" fontWeight=\"fontWeightBold\">\n        {moment(squeak.getBlockTime()*1000).fromNow()}\n        <span> </span>(Block\n        <Link\n          href={blockDetailUrl()}\n          target=\"_blank\"\n          rel=\"noopener\"\n          onClick={(event) => event.stopPropagation()}>\n          <span> </span>#{squeak.getBlockHeight()}\n        </Link>\n        )\n      </Box>\n    )\n  }\n\n  function SqueakLockedBackgroundColor() {\n    return {backgroundColor: 'lightgray'};\n  }\n\n  function SqueakUnlockedBackgroundColor() {\n    return {backgroundColor: 'white'};\n  }\n\n  function getAddressDisplay() {\n    if (!squeak) {\n      return \"Author unknown\"\n    }\n    return squeak.getIsAuthorKnown()\n      ? squeak.getAuthor().getProfileName()\n      : squeak.getAuthorAddress()\n  }\n\n  function SqueakBackgroundColor() {\n    if (!squeak) {\n      return SqueakLockedBackgroundColor();\n    }\n    return squeak.getIsUnlocked()\n            ? SqueakUnlockedBackgroundColor()\n            : SqueakLockedBackgroundColor()\n  }\n\n  return (\n    <Paper elevation={3} className={classes.paper}\n      p={1}\n      m={0}\n      style={SqueakBackgroundColor()}\n      onClick={onSqueakClick}\n      >\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n                <Box fontWeight=\"fontWeightBold\">\n                  <Link href=\"#\"\n                    onClick={onAddressClick}>\n                    {getAddressDisplay()}\n                  </Link>\n                </Box>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n          <Grid item>\n            {SqueakContent()}\n          </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n              {SqueakTime()}\n            </Grid>\n          </Grid>\n    </Paper>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\n\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\n\nimport {\n  makeSqueakRequest,\n  getSigningProfilesRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function MakeSqueakDialog({\n  open,\n  handleClose,\n  replytoSqueak,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  var [profileId, setProfileId] = useState(-1);\n  var [content, setContent] = useState('');\n  var [signingProfiles, setSigningProfiles] = useState([]);\n\n  const resetFields = () => {\n    setProfileId(-1);\n    setContent('');\n  };\n\n  const handleChange = (event) => {\n    setProfileId(event.target.value);\n  };\n\n  const handleChangeContent = (event) => {\n    setContent(event.target.value);\n  };\n\n  const handleResponse = (response) => {\n    goToSqueakPage(response.getSqueakHash());\n  };\n\n  const handleErr = (err) => {\n    alert('Error making squeak: ' + err);\n  };\n\n  const createSqueak = (profileId, content, replyto) => {\n    makeSqueakRequest(profileId, content, replyto, handleResponse, handleErr);\n  };\n  const loadSigningProfiles = () => {\n    getSigningProfilesRequest(setSigningProfiles);\n  };\n\n  useEffect(() => {\n    loadSigningProfiles()\n  }, []);\n\n  const goToSqueakPage = (squeakHash) => {\n    history.push(\"/app/squeak/\" + squeakHash);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log( 'profileId:', profileId);\n    console.log( 'content:', content);\n    if (replytoSqueak) {\n      var replyto = replytoSqueak.getSqueakHash();\n    } else {\n      var replyto = null;\n    }\n    console.log( 'replyto:', replyto);\n    if (profileId == -1) {\n      alert('Signing profile must be selected.');\n      return;\n    }\n    if (!content) {\n      alert('Content cannot be empty.');\n      return;\n    }\n    createSqueak(profileId, content, replyto);\n    handleClose();\n  }\n\n  function ReplySqueakContent() {\n    return (\n      <>\n        <SqueakThreadItem\n          hash={replytoSqueak.getSqueakHash()}\n          squeak={replytoSqueak}>\n        </SqueakThreadItem>\n      </>\n    )\n  }\n\n  function MakeSelectSigningProfile() {\n    return (\n      <FormControl className={classes.formControl} required style={{minWidth: 120}}>\n        <InputLabel id=\"demo-simple-select-label\">Signing Profile</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={profileId}\n          onChange={handleChange}\n        >\n          {signingProfiles.map(p =>\n            <MenuItem key={p.getProfileId()} value={p.getProfileId()}>{p.getProfileName()}</MenuItem>\n          )}\n        </Select>\n      </FormControl>\n    )\n  }\n\n  function MakeSqueakContentInput() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Squeak content\"\n        placeholder=\"Enter squeak content here...\"\n        required\n        autoFocus\n        value={content}\n        onChange={handleChangeContent}\n        multiline\n        rows={8}\n        fullWidth\n        inputProps={{ maxLength: 280 }}\n      />\n    )\n  }\n\n  function MakeCancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function MakeSqueakButton() {\n    return (\n      <Button\n       type=\"submit\"\n       variant=\"contained\"\n       color=\"primary\"\n       className={classes.button}\n       >\n       Make Squeak\n       </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Make Squeak</DialogTitle>\n  <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n  <DialogContent>\n    {replytoSqueak ?\n      ReplySqueakContent() : <></>}\n    {MakeSelectSigningProfile()}\n    {MakeSqueakContentInput()}\n  </DialogContent>\n  <DialogActions>\n    {MakeCancelButton()}\n    {MakeSqueakButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","\n\n\nfunction getImageSrcString(imageBase64) {\n  return \"data:image/jpeg;base64,\" + imageBase64;\n}\n\nexport function getProfileImageSrcString(squeakProfile) {\n  const profileImage = squeakProfile.getProfileImage();\n  return getImageSrcString(profileImage);\n}\n","import React, { useState } from \"react\";\n\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n\nimport FaceIcon from '@material-ui/icons/Face';\nimport HelpIcon from '@material-ui/icons/Help';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport {useHistory} from \"react-router-dom\";\n\nimport {\n  getProfileImageSrcString,\n} from \"../../squeakimages/images\"\n\n\nexport default function SqueakUserAvatar({\n  squeakProfile,\n  ...props\n}) {\n  const history = useHistory();\n\n  const goToSqueakAddressPage = (squeakAddress) => {\n    history.push(\"/app/squeakaddress/\" + squeakAddress);\n  };\n\n  const handleAvatarClick = () => {\n    if (squeakProfile) {\n      goToSqueakAddressPage(squeakProfile.getAddress());\n    }\n  };\n\n  function AvatarImage() {\n    return (\n      <Avatar src={`${getProfileImageSrcString(squeakProfile)}`} />\n    )\n  }\n\n  return (\n    <TimelineDot\n    onClick={handleAvatarClick}\n    style={{cursor: 'pointer'}}\n    >\n      {squeakProfile ?\n        AvatarImage() :\n        <HelpIcon fontSize=\"large\" />\n      }\n    </TimelineDot>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Grid,\n  Button,\n  Fab,\n  Box,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from \"recharts\";\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n\nimport FaceIcon from '@material-ui/icons/Face';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\nimport { Typography } from \"../../components/Wrappers\";\nimport MakeSqueakDialog from \"../../components/MakeSqueakDialog\";\nimport SqueakUserAvatar from \"../../components/SqueakUserAvatar\";\n\nimport {\n  getTimelineSqueakDisplaysRequest,\n  getNetworkRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function TimelinePage() {\n  var classes = useStyles();\n  var theme = useTheme();\n  const [squeaks, setSqueaks] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [network, setNetwork] = useState(\"\");\n\n  const history = useHistory();\n\n  const getSqueaks = () => {\n    getTimelineSqueakDisplaysRequest(setSqueaks);\n  };\n  const getNetwork = () => {\n      getNetworkRequest(setNetwork);\n  };\n\n  const goToSqueakAddressPage = (squeakAddress) => {\n    history.push(\"/app/squeakaddress/\" + squeakAddress);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n     setOpen(false);\n  };\n\n  useEffect(()=>{\n    getSqueaks(setSqueaks)\n  },[]);\n  useEffect(()=>{\n    getNetwork()\n  },[]);\n\n  function NoSqueaksContent() {\n    return (\n      <div>\n        Unable to load squeaks.\n      </div>\n    )\n  }\n\n  function MakeSqueakDialogContent() {\n    return (\n      <>\n        <MakeSqueakDialog\n          open={open}\n          handleClose={handleClose}\n          ></MakeSqueakDialog>\n      </>\n    )\n  }\n\n  function TimelineUserAvatar(squeak) {\n    const handleAvatarClick = () => {\n      console.log(\"Avatar clicked...\");\n      goToSqueakAddressPage(squeak.getAuthorAddress());\n    };\n    return (\n      <TimelineDot\n      onClick={handleAvatarClick}\n      style={{cursor: 'pointer'}}\n      >\n        <FaceIcon />\n      </TimelineDot>\n    )\n  }\n\n  function SqueaksContent() {\n    return (\n      <>\n        <div>\n        {squeaks.map(squeak =>\n          <Timeline\n            align=\"left\"\n            key={squeak.getSqueakHash()}\n          >\n\n          <TimelineItem>\n    <TimelineOppositeContent\n  className={classes.oppositeContent}\n  color=\"textSecondary\"\n    ></TimelineOppositeContent>\n    <TimelineSeparator>\n      <SqueakUserAvatar\n        squeakProfile={squeak.getAuthor()}\n      />\n    </TimelineSeparator>\n    <TimelineContent>\n    <SqueakThreadItem\n      key={squeak.getSqueakHash()}\n      hash={squeak.getSqueakHash()}\n      squeak={squeak}\n      network={network}>\n    </SqueakThreadItem>\n    </TimelineContent>\n    </TimelineItem>\n\n          </Timeline>\n        )}\n        </div>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Timeline\" />\n      {(squeaks)\n        ? SqueaksContent()\n        : NoSqueaksContent()\n      }\n      <Fab color=\"secondary\" aria-label=\"edit\" className={classes.fab} onClick={handleClickOpen}>\n        <EditIcon />\n      </Fab>\n\n      {MakeSqueakDialogContent()}\n    </>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  card: {\n    minHeight: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  visitsNumberContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexGrow: 1,\n    paddingBottom: theme.spacing(1),\n  },\n  progressSection: {\n    marginBottom: theme.spacing(1),\n  },\n  progressTitle: {\n    marginBottom: theme.spacing(2),\n  },\n  progress: {\n    marginBottom: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  pieChartLegendWrapper: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"flex-end\",\n    marginRight: theme.spacing(1),\n  },\n  legendItemContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(1),\n  },\n  fullHeightBody: {\n    display: \"flex\",\n    flexGrow: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  },\n  tableWidget: {\n    overflowX: \"auto\",\n  },\n  progressBar: {\n    backgroundColor: theme.palette.warning.main,\n  },\n  performanceLegendWrapper: {\n    display: \"flex\",\n    flexGrow: 1,\n    alignItems: \"center\",\n    marginBottom: theme.spacing(1),\n  },\n  legendElement: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(2),\n  },\n  legendElementText: {\n    marginLeft: theme.spacing(1),\n  },\n  serverOverviewElement: {\n    display: \"flex\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n  },\n  serverOverviewElementText: {\n    minWidth: 145,\n    paddingRight: theme.spacing(2),\n  },\n  serverOverviewElementChartWrapper: {\n    width: \"100%\",\n  },\n  mainChartBody: {\n    overflowX: \"auto\",\n  },\n  mainChartHeader: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    [theme.breakpoints.only(\"xs\")]: {\n      flexWrap: \"wrap\",\n    },\n  },\n  mainChartHeaderLabels: {\n    display: \"flex\",\n    alignItems: \"center\",\n    [theme.breakpoints.only(\"xs\")]: {\n      order: 3,\n      width: \"100%\",\n      justifyContent: \"center\",\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(2),\n    },\n  },\n  mainChartHeaderLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginLeft: theme.spacing(3),\n  },\n  mainChartSelectRoot: {\n    borderColor: theme.palette.text.hint + \"80 !important\",\n  },\n  mainChartSelect: {\n    padding: 10,\n    paddingRight: 25,\n  },\n  mainChartLegentElement: {\n    fontSize: \"18px !important\",\n    marginLeft: theme.spacing(1),\n  },\n}));\n","export default {\n  tasks: [\n    {\n      id: 0,\n      type: \"Meeting\",\n      title: \"Meeting with Andrew Piker\",\n      time: \"9:00\"\n    },\n    {\n      id: 1,\n      type: \"Call\",\n      title: \"Call with HT Company\",\n      time: \"12:00\"\n    },\n    {\n      id: 2,\n      type: \"Meeting\",\n      title: \"Meeting with Zoe Alison\",\n      time: \"14:00\"\n    },\n    {\n      id: 3,\n      type: \"Interview\",\n      title: \"Interview with HR\",\n      time: \"15:00\"\n    }\n  ],\n  bigStat: [\n    {\n      product: \"Light Blue\",\n      total: {\n        monthly: 4232,\n        weekly: 1465,\n        daily: 199,\n        percent: { value: 3.7, profit: false }\n      },\n      color: \"primary\",\n      registrations: {\n        monthly: { value: 830, profit: false },\n        weekly: { value: 215, profit: true },\n        daily: { value: 33, profit: true }\n      },\n      bounce: {\n        monthly: { value: 4.5, profit: false },\n        weekly: { value: 3, profit: true },\n        daily: { value: 3.25, profit: true }\n      }\n    },\n    {\n      product: \"Sing App\",\n      total: {\n        monthly: 754,\n        weekly: 180,\n        daily: 27,\n        percent: { value: 2.5, profit: true }\n      },\n      color: \"warning\",\n      registrations: {\n        monthly: { value: 32, profit: true },\n        weekly: { value: 8, profit: true },\n        daily: { value: 2, profit: false }\n      },\n      bounce: {\n        monthly: { value: 2.5, profit: true },\n        weekly: { value: 4, profit: false },\n        daily: { value: 4.5, profit: false }\n      }\n    },\n    {\n      product: \"RNS\",\n      total: {\n        monthly: 1025,\n        weekly: 301,\n        daily: 44,\n        percent: { value: 3.1, profit: true }\n      },\n      color: \"secondary\",\n      registrations: {\n        monthly: { value: 230, profit: true },\n        weekly: { value: 58, profit: false },\n        daily: { value: 15, profit: false }\n      },\n      bounce: {\n        monthly: { value: 21.5, profit: false },\n        weekly: { value: 19.35, profit: false },\n        daily: { value: 10.1, profit: true }\n      }\n    }\n  ],\n  notifications: [\n    {\n      id: 0,\n      icon: \"thumbs-up\",\n      color: \"primary\",\n      content:\n        'Ken <span className=\"fw-semi-bold\">accepts</span> your invitation'\n    },\n    {\n      id: 1,\n      icon: \"file\",\n      color: \"success\",\n      content: \"Report from LT Company\"\n    },\n    {\n      id: 2,\n      icon: \"envelope\",\n      color: \"danger\",\n      content: '4 <span className=\"fw-semi-bold\">Private</span> Mails'\n    },\n    {\n      id: 3,\n      icon: \"comment\",\n      color: \"success\",\n      content: '3 <span className=\"fw-semi-bold\">Comments</span> to your Post'\n    },\n    {\n      id: 4,\n      icon: \"cog\",\n      color: \"light\",\n      content: 'New <span className=\"fw-semi-bold\">Version</span> of RNS app'\n    },\n    {\n      id: 5,\n      icon: \"bell\",\n      color: \"info\",\n      content:\n        '15 <span className=\"fw-semi-bold\">Notifications</span> from Social Apps'\n    }\n  ],\n  table: [\n    {\n      id: 0,\n      name: \"Mark Otto\",\n      email: \"ottoto@wxample.com\",\n      product: \"ON the Road\",\n      price: \"$25 224.2\",\n      date: \"11 May 2017\",\n      city: \"Otsego\",\n      status: \"Sent\"\n    },\n    {\n      id: 1,\n      name: \"Jacob Thornton\",\n      email: \"thornton@wxample.com\",\n      product: \"HP Core i7\",\n      price: \"$1 254.2\",\n      date: \"4 Jun 2017\",\n      city: \"Fivepointville\",\n      status: \"Sent\"\n    },\n    {\n      id: 2,\n      name: \"Larry the Bird\",\n      email: \"bird@wxample.com\",\n      product: \"Air Pro\",\n      price: \"$1 570.0\",\n      date: \"27 Aug 2017\",\n      city: \"Leadville North\",\n      status: \"Pending\"\n    },\n    {\n      id: 3,\n      name: \"Joseph May\",\n      email: \"josephmay@wxample.com\",\n      product: \"Version Control\",\n      price: \"$5 224.5\",\n      date: \"19 Feb 2018\",\n      city: \"Seaforth\",\n      status: \"Declined\"\n    },\n    {\n      id: 4,\n      name: \"Peter Horadnia\",\n      email: \"horadnia@wxample.com\",\n      product: \"Let's Dance\",\n      price: \"$43 594.7\",\n      date: \"1 Mar 2018\",\n      city: \"Hanoverton\",\n      status: \"Sent\"\n    }\n  ]\n};\n","import React from \"react\";\nimport {\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n} from \"@material-ui/core\";\n\n// components\nimport { Button } from \"../../../../components/Wrappers\";\n\nconst states = {\n  sent: \"success\",\n  pending: \"warning\",\n  declined: \"secondary\",\n};\n\nexport default function TableComponent({ data }) {\n  var keys = Object.keys(data[0]).map(i => i.toUpperCase());\n  keys.shift(); // delete \"id\" key\n\n  return (\n    <Table className=\"mb-0\">\n      <TableHead>\n        <TableRow>\n          {keys.map(key => (\n            <TableCell key={key}>{key}</TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {data.map(({ id, name, email, product, price, date, city, status }) => (\n          <TableRow key={id}>\n            <TableCell className=\"pl-3 fw-normal\">{name}</TableCell>\n            <TableCell>{email}</TableCell>\n            <TableCell>{product}</TableCell>\n            <TableCell>{price}</TableCell>\n            <TableCell>{date}</TableCell>\n            <TableCell>{city}</TableCell>\n            <TableCell>\n              <Button\n                color={states[status.toLowerCase()]}\n                size=\"small\"\n                className=\"px-2\"\n                variant=\"contained\"\n              >\n                {status}\n              </Button>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  title: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    marginBottom: theme.spacing(1),\n  },\n  bottomStatsContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: theme.spacing(1) * -2,\n    marginTop: theme.spacing(1),\n  },\n  statCell: {\n    padding: theme.spacing(2),\n  },\n  totalValueContainer: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n    justifyContent: \"space-between\",\n  },\n  totalValue: {\n    display: \"flex\",\n    alignItems: \"baseline\",\n  },\n  profitArrow: {\n    transform: \"rotate(-45deg)\",\n    fill: theme.palette.success.main,\n  },\n  profitArrowDanger: {\n    transform: \"rotate(45deg)\",\n    fill: theme.palette.secondary.main,\n  },\n  selectInput: {\n    padding: 10,\n    paddingRight: 25,\n    \"&:focus\": {\n      backgroundColor: \"white\",\n    },\n  },\n}));","import React, { useState } from \"react\";\nimport { Grid, Select, MenuItem, Input } from \"@material-ui/core\";\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { BarChart, Bar } from \"recharts\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../../../components/Widget\";\nimport { Typography } from \"../../../../components/Wrappers\";\n\nexport default function BigStat(props) {\n  var { product, total, color, registrations, bounce } = props;\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [value, setValue] = useState(\"daily\");\n\n  return (\n    <Widget\n      header={\n        <div className={classes.title}>\n          <Typography variant=\"h5\">{product}</Typography>\n\n          <Select\n            value={value}\n            onChange={e => setValue(e.target.value)}\n            input={\n              <Input\n                disableUnderline\n                classes={{ input: classes.selectInput }}\n              />\n            }\n            className={classes.select}\n          >\n            <MenuItem value=\"daily\">Daily</MenuItem>\n            <MenuItem value=\"weekly\">Weekly</MenuItem>\n            <MenuItem value=\"monthly\">Monthly</MenuItem>\n          </Select>\n        </div>\n      }\n      upperTitle\n    >\n      <div className={classes.totalValueContainer}>\n        <div className={classes.totalValue}>\n          <Typography size=\"xxl\" color=\"text\" colorBrightness=\"secondary\">\n            {total[value]}\n          </Typography>\n          <Typography color={total.percent.profit ? \"success\" : \"secondary\"}>\n            &nbsp;{total.percent.profit ? \"+\" : \"-\"}\n            {total.percent.value}%\n          </Typography>\n        </div>\n        <BarChart width={150} height={70} data={getRandomData()}>\n          <Bar\n            dataKey=\"value\"\n            fill={theme.palette[color].main}\n            radius={10}\n            barSize={10}\n          />\n        </BarChart>\n      </div>\n      <div className={classes.bottomStatsContainer}>\n        <div className={classnames(classes.statCell, classes.borderRight)}>\n          <Grid container alignItems=\"center\">\n            <Typography variant=\"h6\">{registrations[value].value}</Typography>\n            <ArrowForwardIcon\n              className={classnames(classes.profitArrow, {\n                [!registrations[value].profit]: classes.profitArrowDanger,\n              })}\n            />\n          </Grid>\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n            Registrations\n          </Typography>\n        </div>\n        <div className={classes.statCell}>\n          <Grid container alignItems=\"center\">\n            <Typography variant=\"h6\">{bounce[value].value}%</Typography>\n            <ArrowForwardIcon\n              className={classnames(classes.profitArrow, {\n                [!registrations[value].profit]: classes.profitArrowDanger,\n              })}\n            />\n          </Grid>\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n            Bounce Rate\n          </Typography>\n        </div>\n        <div className={classnames(classes.statCell, classes.borderRight)}>\n          <Grid container alignItems=\"center\">\n            <Typography variant=\"h6\">\n              {registrations[value].value * 10}\n            </Typography>\n            <ArrowForwardIcon\n              className={classnames(classes.profitArrow, {\n                [classes.profitArrowDanger]: !registrations[value].profit,\n              })}\n            />\n          </Grid>\n          <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n            Views\n          </Typography>\n        </div>\n      </div>\n    </Widget>\n  );\n}\n\n// #######################################################################\n\nfunction getRandomData() {\n  return Array(7)\n    .fill()\n    .map(() => ({ value: Math.floor(Math.random() * 10) + 1 }));\n}\n","import React, { useState } from \"react\";\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Group A\", value: 400, color: \"primary\" },\n  { name: \"Group B\", value: 300, color: \"secondary\" },\n  { name: \"Group C\", value: 300, color: \"warning\" },\n  { name: \"Group D\", value: 200, color: \"success\" },\n];\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      <PageTitle title=\"Dashboard\" button=\"Latest Reports\" />\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Visits Today\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Typography size=\"xl\" weight=\"medium\">\n                12, 678\n              </Typography>\n              <LineChart\n                width={55}\n                height={30}\n                data={[\n                  { value: 10 },\n                  { value: 15 },\n                  { value: 10 },\n                  { value: 17 },\n                  { value: 18 },\n                ]}\n                margin={{ left: theme.spacing(2) }}\n              >\n                <Line\n                  type=\"natural\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.success.main}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  Registrations\n                </Typography>\n                <Typography size=\"md\">860</Typography>\n              </Grid>\n              <Grid item>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  Sign Out\n                </Typography>\n                <Typography size=\"md\">32</Typography>\n              </Grid>\n              <Grid item>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  Rate\n                </Typography>\n                <Typography size=\"md\">3.25%</Typography>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"App Performance\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Integration\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  SDK\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Integration\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={30}\n                classes={{ barColorPrimary: classes.progressBar }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                SDK\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={55}\n                classes={{ barColorPrimary: classes.progressBar }}\n                className={classes.progress}\n              />\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Server Overview\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                60% / 37°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.secondary.main}\n                      fill={theme.palette.secondary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                54% / 31°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.primary.main}\n                      fill={theme.palette.primary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n              >\n                57% / 21°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.warning.main}\n                      fill={theme.palette.warning.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart margin={{ left: theme.spacing(2) }}>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={45}\n                      outerRadius={60}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }, index) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: \"nowrap\" }}>\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Daily Line Chart\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Tablet\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Mobile\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Desktop\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Daily</MenuItem>\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))}\n        <Grid item xs={12}>\n          <Widget\n            title=\"Support Requests\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  oppositeContent: {\n    // TODO: adjust this value accordingly\n    flex: 0.0,\n    padding: 0,\n  }\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport {\n  createContactProfileRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function CreateContactProfileDialog({\n                                                     open,\n                                                     handleClose,\n                                                     initialAddress='',\n                                                     ...props\n                                                   }) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  var [profileName, setProfileName] = useState('');\n  var [address, setAddress] = useState(initialAddress);\n\n  const resetFields = () => {\n    setProfileName('');\n    setAddress(initialAddress);\n  };\n\n  const handleChangeProfileName = (event) => {\n    setProfileName(event.target.value);\n  };\n\n  const handleChangeAddress = (event) => {\n    setAddress(event.target.value);\n  };\n\n  const handleResponse = (response) => {\n    goToProfilePage(response.getProfileId());\n  };\n\n  const handleErr = (err) => {\n    alert('Error creating contact profile: ' + err);\n  };\n\n  const createContactProfile = (profileName, squeakAddress) => {\n    createContactProfileRequest(profileName, squeakAddress, handleResponse, handleErr);\n  };\n\n  const goToProfilePage = (profileId) => {\n    history.push(\"/app/profile/\" + profileId);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log( 'profileName:', profileName);\n    console.log( 'address:', address);\n    if (!profileName) {\n      alert('Profile Name cannot be empty.');\n      return;\n    }\n    if (!address) {\n      alert('Address Name cannot be empty.');\n      return;\n    }\n    createContactProfile(profileName, address);\n    handleClose();\n  }\n\n  function CreateContactProfileNameInput() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Profile Name\"\n        required\n        autoFocus\n        value={profileName}\n        onChange={handleChangeProfileName}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n      />\n    )\n  }\n\n  function CreateContactAddressInput() {\n    return (\n      <TextField required\n                 id=\"standard-textarea\"\n                 label=\"Address\"\n                 required\n                 value={address}\n                 onChange={handleChangeAddress}\n                 inputProps={{ maxLength: 35 }}\n      />\n    )\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function CreateContactProfilButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Create Contact Profile\n      </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Create Contact Profile</DialogTitle>\n      <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n        <DialogContent>\n          {CreateContactProfileNameInput()}\n          {CreateContactAddressInput()}\n        </DialogContent>\n        <DialogActions>\n          {CancelButton()}\n          {CreateContactProfilButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {useHistory} from \"react-router-dom\";\nimport {\n   Grid,\n   Button,\n   Box,\n} from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\nimport CreateContactProfileDialog from \"../../components/CreateContactProfileDialog\";\nimport SqueakUserAvatar from \"../../components/SqueakUserAvatar\";\n\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n\nimport FaceIcon from '@material-ui/icons/Face';\n\nimport {\n  getSqueakProfileByAddressRequest,\n  getAddressSqueakDisplaysRequest,\n  getNetworkRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function SqueakAddressPage() {\n  var classes = useStyles();\n  const history = useHistory();\n  const { address } = useParams();\n  const [squeakProfile, setSqueakProfile] = useState(null);\n  const [squeaks, setSqueaks] = useState([]);\n  const [createContactProfileDialogOpen, setCreateContactProfileDialogOpen] = useState(false);\n  const [network, setNetwork] = useState(\"\");\n\n  const getSqueakProfile = (address) => {\n        getSqueakProfileByAddressRequest(address, setSqueakProfile);\n  };\n  const getSqueaks = (address) => {\n      getAddressSqueakDisplaysRequest(address, setSqueaks);\n  };\n  const getNetwork = () => {\n      getNetworkRequest(setNetwork);\n  };\n\n  const goToProfilePage = (profileId) => {\n    history.push(\"/app/profile/\" + profileId);\n  };\n\n  const goToSqueakAddressPage = (squeakAddress) => {\n    history.push(\"/app/squeakaddress/\" + squeakAddress);\n  };\n\n  const handleClickOpenCreateContactProfileDialog = () => {\n    setCreateContactProfileDialogOpen(true);\n  };\n\n  const handleCloseCreateContactProfileDialog = () => {\n    setCreateContactProfileDialogOpen(false);\n  };\n\n  useEffect(()=>{\n    getSqueakProfile(address)\n  },[address]);\n  useEffect(()=>{\n    getSqueaks(address)\n  },[address]);\n  useEffect(()=>{\n    getNetwork()\n  },[]);\n\n  function NoProfileContent() {\n    return (\n      <div>\n        No profile for address.\n        <Button variant=\"contained\" onClick={() => {\n            handleClickOpenCreateContactProfileDialog();\n          }}>Create Profile</Button>\n      </div>\n    )\n  }\n\n  function ProfileContent() {\n    return (\n      <div className={classes.root}>\n        Profile:\n        <Button variant=\"contained\" onClick={() => {\n            goToProfilePage(squeakProfile.getProfileId());\n          }}>{squeakProfile.getProfileName()}</Button>\n      </div>\n    )\n  }\n\n  function NoSqueaksContent() {\n    return (\n      <div>\n        Unable to load squeaks.\n      </div>\n    )\n  }\n\n  function TimelineUserAvatar(squeak) {\n    const handleAvatarClick = () => {\n      console.log(\"Avatar clicked...\");\n      goToSqueakAddressPage(squeak.getAuthorAddress());\n    };\n    return (\n      <TimelineDot\n      onClick={handleAvatarClick}\n      style={{cursor: 'pointer'}}\n      >\n        <FaceIcon />\n      </TimelineDot>\n    )\n  }\n\n  function SqueaksContent() {\n    return (\n      <>\n        <div>\n          {squeaks.map(squeak =>\n            <Timeline\n              align=\"left\"\n              key={squeak.getSqueakHash()}\n            >\n\n            <TimelineItem>\n      <TimelineOppositeContent\n    className={classes.oppositeContent}\n    color=\"textSecondary\"\n      ></TimelineOppositeContent>\n      <TimelineSeparator>\n        <SqueakUserAvatar\n          squeakProfile={squeak.getAuthor()}\n        />\n      </TimelineSeparator>\n      <TimelineContent>\n      <SqueakThreadItem\n        hash={squeak.getSqueakHash()}\n        key={squeak.getSqueakHash()}\n        squeak={squeak}\n        network={network}>\n      </SqueakThreadItem>\n      </TimelineContent>\n      </TimelineItem>\n\n            </Timeline>\n          )}\n        </div>\n      </>\n    )\n  }\n\n  function CreateContactProfileDialogContent() {\n    return (\n      <>\n        <CreateContactProfileDialog\n          open={createContactProfileDialogOpen}\n          handleClose={handleCloseCreateContactProfileDialog}\n          initialAddress={address}\n          ></CreateContactProfileDialog>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <PageTitle title={'Squeak Address: ' + address} />\n      {squeakProfile\n        ? ProfileContent()\n        : NoProfileContent()\n      }\n      {(squeaks)\n        ? SqueaksContent()\n        : NoSqueaksContent()\n      }\n      {CreateContactProfileDialogContent()}\n    </>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n  oppositeContent: {\n  // TODO: adjust this value accordingly\n    flex: 0.0,\n    padding: 0,\n  }\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    padding: '6px 12px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Divider,\n  Button,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\n\n\n\nimport {\n  syncSqueakRequest,\n} from \"../../squeakclient/requests\"\n\nimport {\n  getBlockDetailUrl,\n} from \"../../bitcoin/blockexplorer\"\n\nimport moment from 'moment';\n\nexport default function SqueakDetailItem({\n  hash,\n  squeak,\n  network,\n  handleReplyClick,\n  handleDeleteClick,\n  handleViewDetailsClick,\n  handleUnlockClick,\n  ...props\n}) {\n  var classes = useStyles();\n\n  const history = useHistory();\n\n  const goToSqueakAddressPage = () => {\n    history.push(\"/app/squeakaddress/\" + squeak.getAuthorAddress());\n  };\n\n  const reloadRoute = () => {\n    history.go(0);\n  };\n\n  const blockDetailUrl = () => {\n    // return \"https://blockstream.info/testnet/block/\" + squeak.getBlockHash();\n    return getBlockDetailUrl(squeak.getBlockHash(), network);\n  };\n\n  const onAddressClick = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    console.log(\"Handling address click...\");\n    if (!squeak) {\n      return;\n    }\n    goToSqueakAddressPage(squeak.getAuthorAddress());\n  }\n\n  const onReplyClick = (event) => {\n    event.preventDefault();\n    console.log(\"Handling reply click...\");\n    if (!squeak) {\n      return;\n    }\n    handleReplyClick();\n  }\n\n  const onDeleteClick = (event) => {\n    event.preventDefault();\n    console.log(\"Handling delete click...\");\n    if (!squeak) {\n      return;\n    }\n    handleDeleteClick();\n  }\n\n  const onZoomInClick = (event) => {\n    event.preventDefault();\n    console.log(\"Handling zoomin click...\");\n    if (!squeak) {\n      return;\n    }\n    //handleClickOpenDeleteDialog();\n    // goToSqueakDetailPage();\n    handleViewDetailsClick();\n  }\n\n  const onUnlockClick = (event) => {\n    event.preventDefault();\n    console.log(\"Handling unlock click...\");\n    if (!squeak) {\n      return;\n    }\n    // goToBuyPage(squeak.getSqueakHash());\n    handleUnlockClick();\n  }\n\n  const onDownloadClick = (event) => {\n    event.preventDefault();\n    console.log(\"Handling download click...\");\n    syncSqueakRequest(hash, (response) => {\n      reloadRoute();\n    });\n  }\n\n  function SqueakUnlockedContent() {\n    return (\n      <Typography\n        variant=\"h4\"\n        style={{whiteSpace: 'pre-line'}}\n        >{squeak.getContentStr()}\n      </Typography>\n    )\n  }\n\n  function SqueakLockedContent() {\n    return (\n      <>\n        <LockIcon />\n        <Button\n          variant=\"contained\"\n          onClick={onUnlockClick}\n          >Buy to unlock\n        </Button>\n\n      </>\n    )\n  }\n\n  function SqueakMissingContent() {\n    return (\n      <>\n        <DownloadIcon />\n        <Button\n          variant=\"contained\"\n          onClick={onDownloadClick}\n          >Download\n        </Button>\n      </>\n    )\n  }\n\n  function SqueakContent() {\n    if (!squeak) {\n      return (\n        <>\n          {SqueakMissingContent()}\n        </>\n      )\n    }\n\n    return (\n      <>\n      {squeak.getIsUnlocked()\n          ? SqueakUnlockedContent()\n          : SqueakLockedContent()\n        }\n      </>\n    )\n  }\n\n  function SqueakLockedBackgroundColor() {\n    return {backgroundColor: 'lightgray'};\n  }\n\n  function SqueakUnlockedBackgroundColor() {\n    return {backgroundColor: 'white'};\n  }\n\n  function SqueakBackgroundColor() {\n    if (!squeak) {\n      return SqueakLockedBackgroundColor();\n    }\n    return squeak.getIsUnlocked()\n            ? SqueakUnlockedBackgroundColor()\n            : SqueakLockedBackgroundColor()\n  }\n\n  function getAddressDisplay() {\n    if (!squeak) {\n      return \"Author unknown\"\n    }\n    return squeak.getIsAuthorKnown()\n      ? squeak.getAuthor().getProfileName()\n      : squeak.getAuthorAddress()\n  }\n\n  function SqueakTime() {\n    if (!squeak) {\n      return (\n        <Box color=\"secondary.main\" fontWeight=\"fontWeightBold\">\n          Unknown time\n        </Box>\n      )\n    }\n\n    return (\n      <Box color=\"secondary.main\" fontWeight=\"fontWeightBold\">\n        {moment(squeak.getBlockTime()*1000).fromNow()}\n        <span> </span>(Block\n        <Link\n          href={blockDetailUrl()}\n          target=\"_blank\"\n          rel=\"noopener\"\n          onClick={(event) => event.stopPropagation()}>\n          <span> </span>#{squeak.getBlockHeight()}\n        </Link>\n        )\n      </Box>\n    )\n  }\n\n\n  return (\n    <>\n    <Paper elevation={3} className={classes.paper}\n      p={1}\n      m={0}\n      style={SqueakBackgroundColor()}\n      >\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n                <Box fontWeight=\"fontWeightBold\">\n                  <Link href=\"#\"\n                    onClick={onAddressClick}>\n                    {getAddressDisplay()}\n                  </Link>\n                </Box>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n          <Grid item>\n            {SqueakContent()}\n          </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n              {SqueakTime()}\n            </Grid>\n          </Grid>\n          <Divider />\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item xs={3} sm={1}>\n              <Box\n                p={1}\n                onClick={onReplyClick}\n                >\n              <ReplyIcon />\n            </Box>\n            </Grid>\n            <Grid item xs={3} sm={1}>\n                <Box\n                  p={1}\n                  >\n                  <RepeatIcon />\n                </Box>\n            </Grid>\n            <Grid item xs={3} sm={1}>\n                <Box\n                  p={1}\n                  >\n                  <FavoriteIcon />\n                </Box>\n            </Grid>\n            <Grid item xs={3} sm={1}>\n                <Box\n                  p={1}\n                  onClick={onDeleteClick}\n                  >\n                  <DeleteIcon />\n                </Box>\n            </Grid>\n            <Grid item xs={3} sm={1}>\n                <Box\n                  p={1}\n                  onClick={onZoomInClick}\n                  >\n                  <ZoomInIcon />\n                </Box>\n            </Grid>\n          </Grid>\n    </Paper>\n    </>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\n\nimport {\n  deleteSqueakRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function DeleteSqueakDialog({\n  open,\n  handleClose,\n  squeakToDelete,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  const deleteSqueak = (squeakHash) => {\n    deleteSqueakRequest(squeakHash, (response) => {\n      reloadRoute();\n    });\n  };\n\n  const goToSqueakPage = (squeakHash) => {\n    history.push(\"/app/squeak/\" + squeakHash);\n  };\n\n  const reloadRoute = () => {\n    history.go(0);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log( 'squeakToDelete:', squeakToDelete);\n    var squeakHash = squeakToDelete.getSqueakHash();\n    console.log( 'squeakHash:', squeakHash);\n    deleteSqueak(squeakHash);\n    handleClose();\n  }\n\n  function MakeCancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function DeleteSqueakButton() {\n    return (\n      <Button\n       type=\"submit\"\n       variant=\"contained\"\n       color=\"primary\"\n       className={classes.button}\n       >\n        Delete Squeak\n       </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Delete Squeak</DialogTitle>\n  <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n  <DialogContent>\n    Are you sure you want to delete this squeak?\n  </DialogContent>\n  <DialogActions>\n    {MakeCancelButton()}\n    {DeleteSqueakButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\n\n\nimport {\n  payOfferRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function BuyOfferDialog({\n  open,\n  offer,\n  handleClose,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  const handleResponse = (response) => {\n    goToSqueakPage(offer.getSqueakHash());\n  };\n\n  const handleErr = (err) => {\n    alert('Payment failure: ' + err);\n  };\n\n  const pay = (offerId) => {\n    payOfferRequest(offerId, handleResponse, handleErr);\n  };\n\n  const goToSqueakPage = (squeakHash) => {\n    history.push(\"/app/squeak/\" + squeakHash);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log( 'Offer ID:', offer.getOfferId());\n    pay(offer.getOfferId());\n    handleClose();\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function PayOfferButton() {\n    return (\n      <Button\n       type=\"submit\"\n       variant=\"contained\"\n       color=\"primary\"\n       className={classes.button}\n       >\n       Pay\n       </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Buy Offer</DialogTitle>\n  <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n  <DialogContent>\n    Are you sure you want to pay {offer.getPriceMsat() / 1000} satoshis for this offer?\n  </DialogContent>\n  <DialogActions>\n    {CancelButton()}\n    {PayOfferButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Paper,\n  Button,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nimport LockIcon from '@material-ui/icons/Lock';\n\n// components\nimport BuyOfferDialog from \"../../components/BuyOfferDialog\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\n\nimport moment from 'moment';\n\nexport default function BuyOfferDetailItem({\n  offer,\n  handleOfferClick,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n  const [payOfferDialogOpen, setPayOfferDialogOpen] = useState(false);\n\n\n  const preventDefault = (event) => event.preventDefault();\n\n  const onOfferClick = (event) => {\n    event.preventDefault();\n    console.log(\"Handling offer click...\");\n    if (handleOfferClick) {\n      handleOfferClick();\n    }\n  }\n\n  const onPeerClick = (event) => {\n    event.preventDefault();\n    const peerId = getPeerId();\n    if (peerId == null) {\n      return;\n    }\n    console.log(\"Handling peer click for peerId: \" + peerId);\n    goToPeerPage(peerId);\n  }\n\n  const getPeerId = () => {\n    if (!offer.getHasPeer()) {\n      return null;\n    }\n    const peer = offer.getPeer();\n    return peer.getPeerId();\n  }\n\n  const goToPeerPage = (peerId) => {\n    history.push(\"/app/peer/\" + peerId);\n  };\n\n  const goToLightningNodePage = (pubkey, host, port) => {\n      console.log(\"Go to lightning node for pubkey: \" + pubkey);\n      if (pubkey && host && port) {\n        history.push(\"/app/lightningnode/\" + pubkey + \"/\" + host + \"/\" + port);\n      } else if (pubkey && host) {\n        history.push(\"/app/lightningnode/\" + pubkey + \"/\" + host);\n      } else {\n        history.push(\"/app/lightningnode/\" + pubkey);\n      }\n  };\n\n  const handleClickPayOffer = () => {\n    console.log(\"Handle click pay offer.\");\n    setPayOfferDialogOpen(true);\n  };\n\n  const handleClosePayOfferDialog = () => {\n    setPayOfferDialogOpen(false);\n  };\n\n  function OfferContent() {\n    return (\n      <Typography\n        size=\"md\"\n        >Price: {offer.getPriceMsat() / 1000} sats\n      </Typography>\n    )\n  }\n\n\n  function PeerDisplay() {\n    if (offer.getHasPeer()) {\n      return HasPeerDisplay(offer.getPeer());\n    } else {\n      return HasNoPeerDisplay();\n    }\n  }\n\n  function HasPeerDisplay(peer) {\n    const peerId = peer.getPeerId();\n    const peerName = peer.getPeerName();\n    const peerDisplayName = peerName ? peerName : peerId;\n    return (\n      <Link href=\"#\"\n        onClick={onPeerClick}\n        >{peerDisplayName}\n      </Link>\n    )\n  }\n\n  function HasNoPeerDisplay() {\n    return (\n      <>\n        Unknown Peer\n      </>\n    )\n  }\n\n\n  function ProfileInfoContent() {\n    return (\n      <Box>\n        <Typography\n          size=\"md\"\n          >Peer: {PeerDisplay()}\n          </Typography>\n      </Box>\n    )\n  }\n\n  function ExpiresInfoContent(offer) {\n    var invoiceTime = offer.getInvoiceTimestamp();\n    var invoiceExpiry = offer.getInvoiceExpiry();\n    var expireTime = invoiceTime + invoiceExpiry;\n    return (\n      <Box>\n        <Typography\n          size=\"md\"\n          >\n            Expires: {moment(expireTime*1000).fromNow()}\n          </Typography>\n      </Box>\n    )\n  }\n\n  function PeerNodeInfoContent(offer) {\n    const lightningAddress =  offer.getNodeHost() + \":\" + offer.getNodePort();\n    const lightningPubkey = offer.getNodePubkey();\n    return (\n      <Box>\n        <Typography\n          size=\"md\"\n          >Lightning Node: <Link href=\"#\" onClick={() => {\n            goToLightningNodePage(\n              offer.getNodePubkey(),\n              offer.getNodeHost(),\n              offer.getNodePort(),\n            )\n          }}>\n            {lightningPubkey + \"@\" + lightningAddress}\n          </Link>\n        </Typography>\n      </Box>\n    )\n  }\n\n  function PayOfferButton() {\n    return (\n      <>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              handleClickPayOffer();\n            }}>Pay Offer\n          </Button>\n      </>\n    )\n  }\n\n  function PayOfferDialogContent() {\n    return (\n      <>\n        <BuyOfferDialog\n          open={payOfferDialogOpen}\n          offer={offer}\n          handleClose={handleClosePayOfferDialog}\n          ></BuyOfferDialog>\n      </>\n    )\n  }\n\n  return (\n    <>\n    <Box\n      p={1}\n      m={0}\n      style={{backgroundColor: 'white'}}\n      onClick={onOfferClick}\n      >\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n          <Grid item>\n            {OfferContent()}\n          </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n          <Grid item>\n            {ProfileInfoContent()}\n          </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n          <Grid item>\n            {PeerNodeInfoContent(offer)}\n          </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n          <Grid item>\n            {ExpiresInfoContent(offer)}\n          </Grid>\n          </Grid>\n    </Box>\n      {PayOfferDialogContent()}\n    </>\n  )\n}\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\n\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\nimport BuyOfferItem from \"../../components/BuyOfferItem\";\nimport BuyOfferDetailItem from \"../../components/BuyOfferDetailItem\";\n\nimport {\n  makeSqueakRequest,\n  getSigningProfilesRequest,\n} from \"../../squeakclient/requests\"\nimport {\n  getBuyOffersRequest,\n  syncSqueakRequest,\n} from \"../../squeakclient/requests\"\nimport {\n  payOfferRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function BuySqueakDialog({\n  open,\n  handleClose,\n  handlePaymentComplete,\n  hash,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  var [selectedOfferId, setSelectedOfferId] = useState(-1);\n  const [offers, setOffers] = useState([]);\n\n  const resetFields = () => {\n    setSelectedOfferId(-1);\n  };\n\n  const handleChange = (event) => {\n    setSelectedOfferId(event.target.value);\n  };\n\n  const handleResponse = (response) => {\n    // Open pay confirmation dialog\n  };\n\n  const handleErr = (err) => {\n    alert('Error paying offer: ' + err);\n  };\n\n  // const payOffer = (offerID) => {\n  //   alert('Pay offer ID here: ' + offerID);\n  //   pay(offer.getOfferId());\n  // };\n\n  const loadOffers = () => {\n    getBuyOffersRequest(hash, setOffers);\n  };\n\n  const handlePayResponse = (response) => {\n    // goToSqueakPage(offer.getSqueakHash());\n    // reloadRoute();\n    handlePaymentComplete();\n  };\n\n  const handlePayErr = (err) => {\n    alert('Payment failure: ' + err);\n  };\n\n  const pay = (offerId) => {\n    payOfferRequest(offerId, handlePayResponse, handlePayErr);\n  };\n\n  const onDownloadClick = (event) => {\n    event.preventDefault();\n    console.log(\"Handling download click...\");\n    console.log(\"syncSqueakRequest with hash: \" + hash);\n    syncSqueakRequest(hash, (response) => {\n      console.log(\"response:\");\n      console.log(response);\n      reloadRoute();\n    });\n  }\n\n  const reloadRoute = () => {\n    history.go(0);\n  };\n\n  const getSelectedOffer = () => {\n    var offer;\n    for (offer of offers) {\n      if (offer.getOfferId() == selectedOfferId) {\n        return offer;\n      }\n    }\n    return null;\n  };\n\n  const getPeerName = (offer) => {\n    if (!offer.getHasPeer()) {\n      return \"Unkown Peer\"\n    }\n    const peer = offer.getPeer();\n    return peer.getPeerName();\n  };\n\n  useEffect(() => {\n    loadOffers()\n  }, []);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log( 'selectedOfferId:', selectedOfferId);\n    if (selectedOfferId == -1) {\n      alert('Offer must be selected.');\n      return;\n    }\n    pay(selectedOfferId);\n    handleClose();\n  }\n\n  function MakeSelectSigningProfile() {\n    return (\n      <FormControl className={classes.formControl} required style={{minWidth: 120}}>\n        <InputLabel id=\"offer-select-label\">Offer</InputLabel>\n        <Select\n          labelId=\"offer-select-label\"\n          id=\"offer-select\"\n          value={selectedOfferId}\n          onChange={handleChange}\n        >\n          {offers.map(offer =>\n            <MenuItem key={offer.getOfferId()} value={offer.getOfferId()}>\n              {getPeerName(offer)} ({offer.getPriceMsat() / 1000} sats)\n            </MenuItem>\n          )}\n        </Select>\n      </FormControl>\n    )\n  }\n\n  function LoadOffersButton() {\n    return (\n      <Button\n        variant=\"contained\"\n        onClick={onDownloadClick}\n        >Load offers\n      </Button>\n    )\n  }\n\n  function MakeSqueakContentInput() {\n    var selectedOffer = getSelectedOffer();\n    if (selectedOffer == null) {\n      return <></>\n    }\n    return (\n      <Box\n        p={1}\n        key={selectedOffer.getOfferId()}\n        >\n      <BuyOfferDetailItem\n        key={selectedOffer.getOfferId()}\n        offer={selectedOffer}>\n      </BuyOfferDetailItem>\n      </Box>\n    )\n  }\n\n  function MakeCancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function MakeSqueakButton() {\n    return (\n      <Button\n       type=\"submit\"\n       variant=\"contained\"\n       color=\"primary\"\n       className={classes.button}\n       >\n       Buy Squeak\n       </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Buy Squeak</DialogTitle>\n  <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n  <DialogContent>\n    {MakeSelectSigningProfile()} {LoadOffersButton()}\n    {MakeSqueakContentInput()}\n  </DialogContent>\n  <DialogActions>\n    {MakeCancelButton()}\n    {MakeSqueakButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\n\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\n\nimport {\n  getSqueakDetailsRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function SqueakDetailsDialog({\n  open,\n  handleClose,\n  hash,\n  squeak,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  const [squeakDetails, setSqueakDetails] = useState(null);\n\n  const getSqueakDetails = (hash) => {\n      getSqueakDetailsRequest(hash, setSqueakDetails);\n  };\n\n  useEffect(()=>{\n    getSqueakDetails(hash)\n  },[hash]);\n\n  function MakeCancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function SqueakDetailsContent() {\n    return (\n      <>\n        <Widget disableWidgetMenu>\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <div>\n                <div key=\"hash\" className={classes.legendItemContainer}>\n\n                  <Typography color=\"text\" colorBrightness=\"secondary\">\n                    Hash\n                  </Typography>\n                  <Typography color=\"text\">\n                      &nbsp;{squeak.getSqueakHash()}\n                  </Typography>\n                </div>\n\n                <div key=\"address\" className={classes.legendItemContainer}>\n\n                  <Typography color=\"text\" colorBrightness=\"secondary\">\n                    Address\n                  </Typography>\n                  <Typography color=\"text\">\n                      &nbsp;{squeak.getAuthorAddress()}\n                  </Typography>\n                </div>\n\n                <div key=\"rawdata\" className={classes.legendItemContainer}>\n                  <Typography color=\"text\" colorBrightness=\"secondary\">\n                    Raw Data\n                  </Typography>\n                  <TextField\n                    id=\"standard-textarea\"\n                    placeholder=\"Placeholder\"\n                    value={squeakDetails.getSerializedSqueakHex()}\n                    fullWidth=\"true\"\n                    variant=\"outlined\"\n                    multiline\n                  />\n                </div>\n\n              </div>\n            </Grid>\n          </Grid>\n        </Widget>\n      </>\n    )\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">View Squeak Details</DialogTitle>\n  <form className={classes.root} noValidate autoComplete=\"off\">\n  <DialogContent>\n    {(squeak && squeakDetails) &&\n      SqueakDetailsContent()\n    }\n  </DialogContent>\n  <DialogActions>\n    {MakeCancelButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Grid,\n  Button,\n  Divider,\n  Snackbar,\n  Box,\n} from \"@material-ui/core\";\n\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nimport FaceIcon from '@material-ui/icons/Face';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport SqueakDetailItem from \"../../components/SqueakDetailItem\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\nimport SqueakUserAvatar from \"../../components/SqueakUserAvatar\";\n\nimport MakeSqueakDialog from \"../../components/MakeSqueakDialog\";\nimport DeleteSqueakDialog from \"../../components/DeleteSqueakDialog\";\nimport BuySqueakDialog from \"../../components/BuySqueakDialog\";\nimport SqueakDetailsDialog from \"../../components/SqueakDetailsDialog\";\n\n\nimport {\n  getSqueakDisplayRequest,\n  getAncestorSqueakDisplaysRequest,\n  getReplySqueakDisplaysRequest,\n  getNetworkRequest,\n} from \"../../squeakclient/requests\"\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function SqueakPage() {\n  var classes = useStyles();\n  const history = useHistory();\n  const { hash } = useParams();\n  const [squeak, setSqueak] = useState(null);\n  const [ancestorSqueaks, setAncestorSqueaks] = useState([]);\n  const [replySqueaks, setReplySqueaks] = useState([]);\n  const [network, setNetwork] = useState(\"\");\n\n  const [replyDialogOpen, setReplyDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [buyDialogOpen, setBuyDialogOpen] = useState(false);\n  const [viewDetailsDialogOpen, setViewDetailsDialogOpen] = useState(false);\n  const [unlockedSnackbarOpen, setUnlockedSnackbarOpen] = useState(false);\n\n  const getSqueak = (hash) => {\n      getSqueakDisplayRequest(hash, setSqueak);\n  };\n  const getAncestorSqueaks = (hash) => {\n      getAncestorSqueakDisplaysRequest(hash, setAncestorSqueaks);\n  };\n  const getReplySqueaks = (hash) => {\n      getReplySqueakDisplaysRequest(hash, setReplySqueaks);\n  };\n  const getNetwork = () => {\n      getNetworkRequest(setNetwork);\n  };\n\n  const goToSqueakAddressPage = (squeakAddress) => {\n    history.push(\"/app/squeakaddress/\" + squeakAddress);\n  };\n\n  const unknownAncestorHash = () => {\n      if (!ancestorSqueaks) {\n        return null;\n      }\n      var oldestKnownAncestor = ancestorSqueaks[0];\n      if (!oldestKnownAncestor) {\n        return null;\n      }\n      return oldestKnownAncestor.getReplyTo();\n  };\n\n  const handleClickOpen = () => {\n    setReplyDialogOpen(true);\n  };\n\n  const handleClose = () => {\n     setReplyDialogOpen(false);\n  };\n\n  const handleClickOpenDeleteDialog = () => {\n    setDeleteDialogOpen(true);\n    console.log(\"deleteDialogOpen: \" + deleteDialogOpen);\n  };\n\n  const handleCloseDeleteDialog = () => {\n     setDeleteDialogOpen(false);\n  };\n\n  const handleClickOpenBuyDialog = () => {\n    setBuyDialogOpen(true);\n  };\n\n  const handleCloseBuyDialog = () => {\n    setBuyDialogOpen(false);\n  };\n\n  const handleClickOpenViewDetailsDialog = () => {\n    setViewDetailsDialogOpen(true);\n  };\n\n  const handleCloseViewDetailsDialog = () => {\n    setViewDetailsDialogOpen(false);\n  };\n\n  const handleCloseUnlockedSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setUnlockedSnackbarOpen(false);\n  };\n\n  const handlePaymentComplete = () => {\n    getSqueak(hash);\n    setUnlockedSnackbarOpen(true);\n  };\n\n\n  useEffect(()=>{\n    getSqueak(hash)\n  },[hash]);\n  useEffect(()=>{\n    getAncestorSqueaks(hash)\n  },[hash]);\n  useEffect(()=>{\n    getReplySqueaks(hash)\n  },[hash]);\n  useEffect(()=>{\n    getNetwork()\n  },[]);\n\n  function NoSqueakContent() {\n    return (\n      <div>\n        Unable to load squeak.\n      </div>\n    )\n  }\n\n  function TimelineUserAvatar(squeak) {\n    const handleAvatarClick = () => {\n      console.log(\"Avatar clicked...\");\n      if (squeak) {\n        goToSqueakAddressPage(squeak.getAuthorAddress());\n      }\n    };\n    return (\n      <TimelineDot\n      onClick={handleAvatarClick}\n      style={{cursor: 'pointer'}}\n      >\n        <FaceIcon />\n      </TimelineDot>\n    )\n  }\n\n  function UnkownReplyToContent() {\n    var squeakHash = unknownAncestorHash();\n    if (!squeakHash) {\n      return (\n        <></>\n      )\n    }\n    return (\n      <TimelineItem>\n<TimelineOppositeContent\n  className={classes.oppositeContent}\n  color=\"textSecondary\"\n></TimelineOppositeContent>\n<TimelineSeparator>\n  <SqueakUserAvatar\n    squeak={null}\n  />\n  <TimelineConnector />\n</TimelineSeparator>\n<TimelineContent>\n<SqueakThreadItem\n  hash={squeakHash}\n  key={squeakHash}\n  squeak={null}>\n</SqueakThreadItem>\n</TimelineContent>\n</TimelineItem>\n    )\n  }\n\n  function AncestorsContent() {\n    return (\n      <>\n        {ancestorSqueaks.slice(0, -1)\n          //.reverse()\n          .map(ancestorSqueak =>\n            <TimelineItem\n            key={ancestorSqueak.getSqueakHash()}\n            >\n  <TimelineOppositeContent\n    className={classes.oppositeContent}\n    color=\"textSecondary\"\n  ></TimelineOppositeContent>\n  <TimelineSeparator>\n    <SqueakUserAvatar\n      squeakProfile={ancestorSqueak.getAuthor()}\n    />\n    <TimelineConnector />\n  </TimelineSeparator>\n  <TimelineContent>\n  <Box\n    key={ancestorSqueak.getSqueakHash()}\n    >\n  <SqueakThreadItem\n    hash={ancestorSqueak.getSqueakHash()}\n    key={ancestorSqueak.getSqueakHash()}\n    squeak={ancestorSqueak}\n    network={network}>\n  </SqueakThreadItem>\n  </Box>\n  </TimelineContent>\n</TimelineItem>\n        )}\n      </>\n    )\n  }\n\n  function CurrentSqueakContent() {\n    return (\n      <TimelineItem>\n<TimelineOppositeContent\n  className={classes.oppositeContent}\n  color=\"textSecondary\"\n></TimelineOppositeContent>\n<TimelineSeparator>\n  <SqueakUserAvatar\n    squeakProfile={squeak && squeak.getAuthor()}\n  />\n</TimelineSeparator>\n<TimelineContent>\n<SqueakDetailItem\n  hash={hash}\n  squeak={squeak}\n  handleReplyClick={handleClickOpen}\n  handleDeleteClick={handleClickOpenDeleteDialog}\n  handleViewDetailsClick={handleClickOpenViewDetailsDialog}\n  handleUnlockClick={handleClickOpenBuyDialog}\n  network={network}>\n</SqueakDetailItem>\n<Divider />\n</TimelineContent>\n</TimelineItem>\n    )\n  }\n\n  function RepliesContent() {\n    return (\n      <>\n        {replySqueaks\n          .map(replySqueak =>\n            <TimelineItem\n            key={replySqueak.getSqueakHash()}\n            >\n  <TimelineOppositeContent\n    className={classes.oppositeContent}\n    color=\"textSecondary\"\n  ></TimelineOppositeContent>\n  <TimelineSeparator>\n    <SqueakUserAvatar\n      squeakProfile={replySqueak.getAuthor()}\n    />\n  </TimelineSeparator>\n  <TimelineContent>\n  <Box\n    p={1}\n    key={replySqueak.getSqueakHash()}\n    >\n  <SqueakThreadItem\n    hash={replySqueak.getSqueakHash()}\n    key={replySqueak.getSqueakHash()}\n    squeak={replySqueak}\n    network={network}>\n  </SqueakThreadItem>\n  </Box>\n  </TimelineContent>\n</TimelineItem>\n        )}\n      </>\n    )\n  }\n\n  function SqueakContent() {\n    return (\n      <Timeline align=\"left\">\n\n        {UnkownReplyToContent()}\n        {AncestorsContent()}\n        {CurrentSqueakContent()}\n        {RepliesContent()}\n\n      </Timeline>\n    )\n  }\n\n\n    function MakeSqueakDialogContent() {\n      return (\n        <>\n          <MakeSqueakDialog\n            open={replyDialogOpen}\n            handleClose={handleClose}\n            replytoSqueak={squeak}\n            ></MakeSqueakDialog>\n        </>\n      )\n    }\n\n    function DeleteSqueakDialogContent() {\n      return (\n        <>\n          <DeleteSqueakDialog\n            open={deleteDialogOpen}\n            handleClose={handleCloseDeleteDialog}\n            squeakToDelete={squeak}\n            ></DeleteSqueakDialog>\n        </>\n      )\n    }\n\n    function BuyDialogContent() {\n      return (\n        <>\n          <BuySqueakDialog\n            open={buyDialogOpen}\n            handleClose={handleCloseBuyDialog}\n            handlePaymentComplete={handlePaymentComplete}\n            hash={hash}\n            ></BuySqueakDialog>\n        </>\n      )\n    }\n\n    function ViewDetailsDialogContent() {\n      return (\n        <>\n          <SqueakDetailsDialog\n            open={viewDetailsDialogOpen}\n            handleClose={handleCloseViewDetailsDialog}\n            hash={hash}\n            squeak={squeak}\n            ></SqueakDetailsDialog>\n        </>\n      )\n    }\n\n\n    function SqueakUnlockedContent() {\n      return (\n        <Snackbar open={unlockedSnackbarOpen} autoHideDuration={6000} onClose={handleCloseUnlockedSnackbar}>\n          <Alert onClose={handleCloseUnlockedSnackbar} severity=\"success\">\n            Squeak unlocked!\n          </Alert>\n        </Snackbar>\n      )\n    }\n\n  return (\n    <>\n      <PageTitle title=\"Squeak\" />\n      {SqueakContent()}\n      {MakeSqueakDialogContent()}\n      {DeleteSqueakDialogContent()}\n      {BuyDialogContent()}\n      {ViewDetailsDialogContent()}\n      {SqueakUnlockedContent()}\n    </>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\n\nimport {\n  deleteProfileRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function DeleteProfileDialog({\n  open,\n  handleClose,\n  profile,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  const deleteProfile = (profileId) => {\n    deleteProfileRequest(profileId, (response) => {\n      reloadRoute();\n    });\n  };\n\n  const reloadRoute = () => {\n    history.go(0);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log( 'profile:', profile);\n    var profileId = profile.getProfileId();\n    console.log( 'profileId:', profileId);\n    deleteProfile(profileId);\n    handleClose();\n  }\n\n  function MakeCancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function DeleteProfileButton() {\n    return (\n      <Button\n       type=\"submit\"\n       variant=\"contained\"\n       color=\"primary\"\n       className={classes.button}\n       >\n        Delete Profile\n       </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Delete Profile</DialogTitle>\n  <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n  <DialogContent>\n    Are you sure you want to delete this profile?\n  </DialogContent>\n  <DialogActions>\n    {MakeCancelButton()}\n    {DeleteProfileButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\n\nimport {\n  getSqueakProfilePrivateKey,\n} from \"../../squeakclient/requests\"\n\n\n\nexport default function ExportPrivateKeyDialog({\n  open,\n  handleClose,\n  profile,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  var [privateKey, setPrivateKey] = useState('');\n\n  const resetFields = () => {\n    setPrivateKey('');\n  };\n\n  const handleChangePrivateKey = (event) => {\n    setPrivateKey(event.target.value);\n  };\n\n  const getPrivateKey = () => {\n    var profileId = profile.getProfileId();\n    getSqueakProfilePrivateKey(profileId, (response) => {\n      setPrivateKey(response.getPrivateKey());\n    });\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    getPrivateKey();\n  }\n\n  function DisplayPrivateKey() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"private-key\"\n        required\n        autoFocus\n        value={privateKey}\n        fullWidth\n        inputProps={{\n           readOnly: true,\n        }}\n      />\n    )\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function ShowPrivateKeyButton() {\n    return (\n      <Button\n       type=\"submit\"\n       variant=\"contained\"\n       color=\"primary\"\n       className={classes.button}\n       >\n       Show private key\n       </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Export Private Key</DialogTitle>\n  <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n  <DialogContent>\n    {DisplayPrivateKey()}\n  </DialogContent>\n  <DialogActions>\n    {CancelButton()}\n    {ShowPrivateKeyButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  FormLabel,\n  FormGroup,\n  InputLabel,\n  FormControlLabel,\n  FormHelperText,\n  Switch,\n  Select,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\n\nimport {\n  setSqueakProfileFollowingRequest,\n  setSqueakProfileSharingRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function ConfigureProfileDialog({\n  open,\n  handleClose,\n  squeakProfile,\n  reloadProfile,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  const setFollowing = (id, following) => {\n    setSqueakProfileFollowingRequest(id, following, () => {\n      reloadProfile();\n    })\n  };\n  const setSharing = (id, sharing) => {\n    setSqueakProfileSharingRequest(id, sharing, () => {\n      reloadProfile();\n    })\n  };\n\n  const handleSettingsFollowingChange = (event) => {\n    console.log(\"Following changed for profile id: \" + squeakProfile.getProfileId());\n    console.log(\"Following changed to: \" + event.target.checked);\n    setFollowing(squeakProfile.getProfileId(), event.target.checked);\n  };\n\n  const handleSettingsSharingChange = (event) => {\n    console.log(\"Sharing changed for profile id: \" + squeakProfile.getProfileId());\n    console.log(\"Sharing changed to: \" + event.target.checked);\n    setSharing(squeakProfile.getProfileId(), event.target.checked);\n  };\n\n  function MakeCancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function ProfileSettingsForm() {\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Profile settings</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Switch checked={squeakProfile.getFollowing()} onChange={handleSettingsFollowingChange} />}\n            label=\"Following\"\n          />\n          <FormControlLabel\n            control={<Switch checked={squeakProfile.getSharing()} onChange={handleSettingsSharingChange} />}\n            label=\"Sharing\"\n          />\n        </FormGroup>\n      </FormControl>\n    )\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Configure Profile</DialogTitle>\n  <form className={classes.root} noValidate autoComplete=\"off\">\n  <DialogContent>\n    {squeakProfile\n      && ProfileSettingsForm()}\n  </DialogContent>\n  <DialogActions>\n    {MakeCancelButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\n\nimport {\n  setSqueakProfileImageRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function UpdateProfileImageDialog({\n  open,\n  handleClose,\n  squeakProfile,\n  reloadProfile,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  var [selectedFile, setSelectedFile] = useState(null);\n  var [imageBase64, setImageBase64] = useState(null);\n\n  const resetFields = () => {\n    setImageBase64(null);\n  };\n\n  const reloadRoute = () => {\n    history.go(0);\n  };\n\n  const handleResponse = (response) => {\n    // TODO: reload profile only.\n    reloadRoute();\n  };\n\n  const handleErr = (err) => {\n    alert('Error creating signing profile: ' + err);\n  };\n\n  const updateProfileImage = (imageStr) => {\n    setSqueakProfileImageRequest(\n      squeakProfile.getProfileId(),\n      imageStr,\n      handleResponse,\n      handleErr,\n    );\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (imageBase64 == null) {\n      alert(\"Invalid image data.\")\n      return;\n    }\n    const imageBase64Stripped = imageBase64.split(',')[1];\n    updateProfileImage(imageBase64Stripped);\n    handleClose();\n  }\n\n  const handleChangeSelectedImage = (event) => {\n    // alert(\"selected image changed.\");\n    if (event.target.files.length < 1) {\n      alert(\"Invalid file selected\");\n      setSelectedFile(null);\n    }\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    getFileAsBase64(file);\n  };\n\n  const getFileAsBase64 = (file) => {\n    if (file == null) {\n      setImageBase64(null);\n    }\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", function () {\n      // convert image file to base64 string\n      // preview.src = reader.result;\n      setImageBase64(reader.result);\n    }, false);\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  function FileInput() {\n    return (\n<>\n<Button\n  variant=\"contained\"\n  component=\"label\"\n>\n  Select File\n  <input\n    type=\"file\"\n    hidden\n    onChange={handleChangeSelectedImage}\n  />\n</Button>\n</>\n    )\n  }\n\n  function DisplaySelectedImageFileName() {\n    const fileName = selectedFile ? selectedFile.name : \"\";\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"selected-file\"\n        required\n        autoFocus\n        value={fileName}\n        fullWidth\n        inputProps={{\n           readOnly: true,\n        }}\n      />\n    )\n  }\n\n  function DisplaySelectedImageFile() {\n    const imageStr = imageBase64 ? imageBase64 : \"\";\n    return (\n<img src={imageStr} height=\"200\" alt=\"Image preview...\"/>\n    )\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function SetProfileImageButton() {\n    return (\n      <Button\n       type=\"submit\"\n       variant=\"contained\"\n       color=\"primary\"\n       className={classes.button}\n       >\n       Set Profile Image\n       </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Set Profile Image</DialogTitle>\n  <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n  <DialogContent>\n    {FileInput()}\n  </DialogContent>\n  <DialogContent>\n    {DisplaySelectedImageFile()}\n  </DialogContent>\n  <DialogContent>\n    {DisplaySelectedImageFileName()}\n  </DialogContent>\n  <DialogActions>\n    {CancelButton()}\n    {SetProfileImageButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    padding: '6px 12px',\n  },\n  secondaryTail: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 180,\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Divider,\n  Button,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\n\n\n\nimport {\n  syncSqueakRequest,\n} from \"../../squeakclient/requests\"\n\nimport {\n  getBlockDetailUrl,\n} from \"../../bitcoin/blockexplorer\"\nimport {\n  getProfileImageSrcString,\n} from \"../../squeakimages/images\"\n\nimport moment from 'moment';\n\nexport default function SqueakProfileDetailItem({\n  squeakProfile,\n  handleViewSqueaksClick,\n  handleConfigureClick,\n  handleRenameClick,\n  handleChangeImageClick,\n  handleExportClick,\n  handleDeleteClick,\n  ...props\n}) {\n  var classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const history = useHistory();\n\n  const goToSqueakAddressPage = () => {\n    history.push(\"/app/squeakaddress/\" + squeakProfile.getAddress());\n  };\n\n  const onViewSqueaksClick = () => {\n    console.log(\"Handling view squeaks click...\");\n    handleClose();\n    if (!squeakProfile) {\n      return;\n    }\n    goToSqueakAddressPage();\n  }\n\n  const onConfigureClick = () => {\n    console.log(\"Handling configure click...\");\n    handleClose();\n    if (!squeakProfile) {\n      return;\n    }\n    handleConfigureClick();\n  }\n\n  const onRenameClick = () => {\n    console.log(\"Handling rename click...\");\n    handleClose();\n    if (!squeakProfile) {\n      return;\n    }\n    handleRenameClick();\n  }\n\n  const onChangeImageClick = () => {\n    console.log(\"Handling change image click...\");\n    handleClose();\n    if (!squeakProfile) {\n      return;\n    }\n    handleChangeImageClick();\n  }\n\n  const onExportClick = () => {\n    console.log(\"Handling export click...\");\n    handleClose();\n    if (!squeakProfile) {\n      return;\n    }\n    handleExportClick();\n  }\n\n  const onDeleteClick = () => {\n    console.log(\"Handling delete click...\");\n    handleClose();\n    if (!squeakProfile) {\n      return;\n    }\n    handleDeleteClick();\n  }\n\n\n    const profileImageBase64String = squeakProfile.getProfileImage();\n    return (\n        <Card className={classes.root}>\n\n        <CardHeader\n  action={\n    <>\n    <IconButton aria-label=\"settings\" onClick={handleClick}>\n      <MoreVertIcon />\n    </IconButton>\n    <Menu\n      id=\"simple-menu\"\n      anchorEl={anchorEl}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={handleClose}\n    >\n      <MenuItem onClick={onConfigureClick}>Configure</MenuItem>\n      <MenuItem onClick={onRenameClick}>Rename</MenuItem>\n      <MenuItem onClick={onChangeImageClick}>Change Image</MenuItem>\n      {squeakProfile.getHasPrivateKey() &&\n        <MenuItem onClick={onExportClick}>Export</MenuItem>\n      }\n      <MenuItem onClick={onDeleteClick}>Delete</MenuItem>\n    </Menu>\n    </>\n  }\n  title={squeakProfile.getProfileName()}\n/>\n\n            <CardMedia\n              className={classes.media}\n              image={`${getProfileImageSrcString(squeakProfile)}`}\n              title=\"Profile Image\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {squeakProfile.getHasPrivateKey() && <VpnKeyIcon />}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {squeakProfile.getAddress()}\n              </Typography>\n            </CardContent>\n          <CardActions>\n            <Button\n              onClick={() => {\n                onViewSqueaksClick();\n              }}\n              size=\"small\" color=\"primary\">\n              View Squeaks\n            </Button>\n          </CardActions>\n        </Card>\n      );\n}\n","import React, { useState, useEffect } from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport { useParams } from 'react-router-dom';\nimport {\n  Grid,\n  FormLabel,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  FormHelperText,\n  Switch,\n  Button,\n  Link,\n  Typography,\n} from \"@material-ui/core\";\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport DeleteProfileDialog from \"../../components/DeleteProfileDialog\";\nimport ExportPrivateKeyDialog from \"../../components/ExportPrivateKeyDialog\";\nimport ConfigureProfileDialog from \"../../components/ConfigureProfileDialog\";\nimport UpdateProfileImageDialog from \"../../components/UpdateProfileImageDialog\";\nimport SqueakProfileDetailItem from \"../../components/SqueakProfileDetailItem\";\n\nimport {\n  getSqueakProfileRequest,\n  setSqueakProfileFollowingRequest,\n  setSqueakProfileSharingRequest,\n} from \"../../squeakclient/requests\"\n\nimport {\n  getProfileImageSrcString,\n} from \"../../squeakimages/images\"\n\n\n\nexport default function ProfilePage() {\n  var classes = useStyles();\n  const { id } = useParams();\n  const [squeakProfile, setSqueakProfile] = useState(null);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [exportPrivateKeyDialogOpen, setExportPrivateKeyDialogOpen] = useState(false);\n  const [configureDialogOpen, setConfigureDialogOpen] = useState(false);\n  const [updateImageDialogOpen, setUpdateImageDialogOpen] = useState(false);\n  const history = useHistory();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const getSqueakProfile = (id) => {\n    getSqueakProfileRequest(id, setSqueakProfile);\n  };\n\n  const goToSqueakAddressPage = (squeakAddress) => {\n    history.push(\"/app/squeakaddress/\" + squeakAddress);\n  };\n\n\n  useEffect(()=>{\n    getSqueakProfile(id)\n  },[id]);\n\n  const handleClickOpenDeleteDialog = () => {\n    setDeleteDialogOpen(true);\n  };\n\n  const handleClickOpenExportPrivateKeyDialog = () => {\n    setExportPrivateKeyDialogOpen(true);\n  };\n\n  const handleClickOpenConfigureDialog = () => {\n    setConfigureDialogOpen(true);\n  };\n\n  const handleClickOpenUpdateImageDialog = () => {\n    setUpdateImageDialogOpen(true);\n  };\n\n  const handleCloseDeleteDialog = () => {\n     setDeleteDialogOpen(false);\n  };\n\n  const handleCloseExportPrivateKeyDialog = () => {\n     setExportPrivateKeyDialogOpen(false);\n  };\n\n  const handleCloseConfigureDialog = () => {\n     setConfigureDialogOpen(false);\n  };\n\n  const handleCloseUpdateImageDialog = () => {\n     setUpdateImageDialogOpen(false);\n  };\n\n  const handleReloadProfile = () => {\n    getSqueakProfile(id);\n  };\n\n  const handleViewSqueaks = () => {\n    goToSqueakAddressPage(squeakProfile.getAddress());\n  };\n\n  function ProfileContent() {\n    return (\n      <>\n        {SqueakProfileImageDisplay()}\n      </>\n    )\n  }\n\n  function SqueakProfileImageDisplay() {\n    const profileImageBase64String = squeakProfile.getProfileImage();\n    return (\n        <SqueakProfileDetailItem\n          squeakProfile={squeakProfile}\n          handleViewSqueaksClick={handleViewSqueaks}\n          handleConfigureClick={handleClickOpenConfigureDialog}\n          handleRenameClick={null}\n          handleChangeImageClick={handleClickOpenUpdateImageDialog}\n          handleExportClick={handleClickOpenExportPrivateKeyDialog}\n          handleDeleteClick={handleClickOpenDeleteDialog}\n        />\n      );\n  }\n\n  function DeleteProfileDialogContent() {\n    return (\n      <>\n        <DeleteProfileDialog\n          open={deleteDialogOpen}\n          handleClose={handleCloseDeleteDialog}\n          profile={squeakProfile}\n          ></DeleteProfileDialog>\n      </>\n    )\n  }\n\n  function ExportPrivateKeyDialogContent() {\n    return (\n      <>\n        <ExportPrivateKeyDialog\n          open={exportPrivateKeyDialogOpen}\n          handleClose={handleCloseExportPrivateKeyDialog}\n          profile={squeakProfile}\n          ></ExportPrivateKeyDialog>\n      </>\n    )\n  }\n\n  function ConfigureProfileDialogContent() {\n    return (\n      <>\n        <ConfigureProfileDialog\n          open={configureDialogOpen}\n          handleClose={handleCloseConfigureDialog}\n          squeakProfile={squeakProfile}\n          reloadProfile={handleReloadProfile}\n          ></ConfigureProfileDialog>\n      </>\n    )\n  }\n\n  function UpdateImageDialogContent() {\n    return (\n      <>\n        <UpdateProfileImageDialog\n          open={updateImageDialogOpen}\n          handleClose={handleCloseUpdateImageDialog}\n          squeakProfile={squeakProfile}\n          reloadProfile={handleReloadProfile}\n          ></UpdateProfileImageDialog>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <PageTitle title={'Squeak Profile: ' + (squeakProfile ? squeakProfile.getProfileName() : null)} />\n      <div>\n      {squeakProfile &&\n        ProfileContent()}\n      </div>\n      {DeleteProfileDialogContent()}\n      {ExportPrivateKeyDialogContent()}\n      {ConfigureProfileDialogContent()}\n      {UpdateImageDialogContent()}\n    </>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  root: {\n    minWidth: 275,\n    border: '1px solid #e8e8e8',\n    '&:hover': {\n      boxShadow: ({clickable}) => clickable ?\n         '0px 4px 3px -1px rgba(0,0,0,0.2), 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A' :\n         null,\n      cursor: ({clickable}) => clickable ? 'pointer' : 'default',\n    }\n  },\n  cardContentContainer: {\n    padding: '1rem',\n  },\n  cardContentContainerVertical: {\n    display: 'flex',\n  },\n  cardHeaderContainer: {\n    // padding: '1.5rem 1rem 0rem 1rem',\n    flex: 1,\n  },\n  cardContentFlexColumn: {\n    // flex: 1,\n    width: '50%',\n    alignSelf: 'center',\n    padding: '1.5rem',\n  },\n  cardContentSection: {\n    // alignSelf: 'center',\n    // padding: '0 1rem',\n    display: 'block',\n  },\n  cardHeaderRow: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  cardSubheaderText: {\n    fontSize: '0.8rem',\n    color: '#727272',\n  },\n  cardSubheaderTextLabel: {\n    fontSize: '0.8rem',\n    color: '#a5a5a5',\n    fontWeight: '600',\n    marginRight: '0.3rem',\n  },\n  cardSubheaderTextValue: {\n    fontSize: '0.8rem',\n    color: '#404040',\n  },\n  cardContent: {\n    whiteSpace: 'pre-line',\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    paddingTop: '0.5rem',\n    backgroundColor: '#f5f5f5',\n  },\n  cardContentColumns: {\n    whiteSpace: 'pre-line',\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    paddingTop: '0.5rem',\n    backgroundColor: '#f5f5f5',\n    display: 'block',\n  },\n\n  // card detail item\n  detailItem: {\n    display: 'flex',\n  },\n\n  detailItemVertical: {\n    flex: 1,\n    // marginRight: '3rem',\n    // position: 'absolute',\n  },\n  detailItemLabel: {\n    // flex: 1,\n    color: '#9a9a9a',\n    fontSize: '0.8rem',\n    fontWeight: '600',\n    width: '8rem',\n    // paddingBottom: '0'\n\n  },\n  detailItemValue: {\n    flex: 1,\n    paddingLeft: '0.5rem',\n    fontSize: '0.8rem',\n    display: 'table-cell',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n\n  // Balance grid\n  balanceGridItemLabel: {  // BalanceGridItem\n    fontWeight: 'bolder',\n    color: '#6e6e6e',\n  },\n\n  // buttons\n  button: {   // ReceiveBitcoinButton\n    marginTop: '1rem',\n  },\n  expandBtn: {\n    padding: 0,\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  collapseBtn: {\n    padding: 0,\n    transform: 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n\n  // ChannelItem.js\n  channelIcon: {\n    marginRight: '0.5rem',\n    fontSize: '1rem',\n    color: ({channelStatus}) => {\n      if (channelStatus === 'open') {\n        return '#00cd8a'\n      } else if (channelStatus === 'pending-open') {\n        // return '#febc50'\n        return '#eae300'\n      } else if (channelStatus === 'pending-closed') {\n        return '#ef5a6b'\n      }\n    }\n  },\n  channelStatusChip: {\n    // minWidth: '83px',\n    height: '20px',\n    padding: '0 0.5rem',\n    marginBottom: '0.5rem',\n    color: 'white',\n    borderRadius: '4px',\n    fontSize: 'smaller',\n    backgroundColor: ({channelStatus}) => {\n      if (channelStatus === 'open') {\n        return '#00cd8a'\n      } else if (channelStatus === 'pending-open') {\n        // return '#febc50'\n        return '#eae300'\n      } else if (channelStatus === 'pending-closed') {\n        return '#ef5a6b'\n      }\n    }\n  },\n  channelStatusText: {\n    color: ({channelStatus}) => {\n      if (channelStatus === 'open') {\n        return '#00cd8a'\n      } else if (channelStatus === 'pending-open') {\n        // return '#febc50'\n        return '#eae300'\n      } else if (channelStatus === 'pending-closed') {\n        return '#ef5a6b'\n      }\n    }\n  },\n\n  // ChannelBalanceBar\n  channelBalanceBarContainer: {\n    justifySelf: 'center',\n  },\n  // balance details\n  channelBalanceDetailsContainer: {\n    // position: 'relative',\n    // height: '2rem',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  balanceContainerLocal: {\n    textAlign: 'center',\n    color: '#2f2fad',\n    // color: '#4949bf',\n  },\n  balanceContainerRemote: {\n    textAlign: 'center',\n    color: '#c74040',\n    // color: '#ff3434',\n  },\n  balanceContainerCapacity: {\n    textAlign: 'center',\n    color: '#444',\n  },\n  channelBalanceBarRow: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  balanceLabel: {\n    fontSize: '0.6rem',\n    textTransform: 'uppercase',\n    opacity: '70%',\n  },\n  balanceValue: {\n    fontSize: '0.85rem',\n    fontWeight: '600',\n  },\n  // balance bar\n  channelBalanceProgressBar: {\n    flex: 1,\n    margin: '0 1rem',\n    height: '10px',\n    borderRadius: 5,\n  },\n  channelBalanceBuffer: {\n    color: \"orange\",\n  },\n  channelBalanceBar: {\n  },\n  channelBalanceBar1Buffer: {\n    // backgroundImage: 'linear-gradient(90deg, #020024 0%, #2b2bbd 35%, #7894ff 100%)'\n    backgroundImage: 'linear-gradient(90deg, #2f2fad 0%, #4949bf 35%, #6f6fda 100%)'\n  },\n  channelBalanceBar2Buffer: {\n    backgroundImage: 'linear-gradient(90deg, #ff3434 0%, #c74040 80%, #ff5a5a 100%)'\n  },\n  channelBalanceDashed: {\n    backgroundSize: 'auto',\n    animation: 'none',\n    backgroundImage: 'linear-gradient(90deg, #cccccc 0%, #cccccc 90%, #dddddd 100%)',\n  },\n\n\n  // TransactionItem.js\n  transactionIcon: {\n    marginRight: '0.35rem',\n    fontSize: '1rem',\n    color: ({amount}) => amount > 0\n       ? 'green'\n       : 'red'\n  },\n  transactionAmt: {\n    color: ({amount}) => amount > 0\n      ? 'green'\n       : 'red'\n  },\n  inlineTimestamp: {\n    marginLeft: '0.5rem',\n    color: 'gray',\n  },\n\n  // Widget.js\n  widgetRoot: {\n    backgroundColor: \"#fafafa\",\n  },\n\n\n  // LightningPeerListItem.js\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n}));","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\n\nimport {\n  lndNewAddressRequest,\n} from \"../../squeakclient/requests\"\n\n\n\nexport default function ReceiveBitcoinDialog({\n  open,\n  handleClose,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  var [address, setAddress] = useState('');\n\n  const resetFields = () => {\n    setAddress('');\n  };\n\n  const handleChangeAddress = (event) => {\n    setAddress(event.target.value);\n  };\n\n  const getNewAddress = () => {\n    lndNewAddressRequest((response) => {\n      setAddress(response.getAddress());\n    });\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    getNewAddress(address);\n    // handleClose();\n  }\n\n  function ReceiveBitcoinAddess() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Address\"\n        required\n        autoFocus\n        value={address}\n        onChange={handleChangeAddress}\n        fullWidth\n        inputProps={{\n           readOnly: true,\n        }}\n      />\n    )\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function RenewAddressButton() {\n    return (\n      <Button\n       type=\"submit\"\n       variant=\"contained\"\n       color=\"primary\"\n       className={classes.button}\n       >\n       Get New Address\n       </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Receive Bitcoin</DialogTitle>\n  <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n  <DialogContent>\n    {ReceiveBitcoinAddess()}\n  </DialogContent>\n  <DialogActions>\n    {CancelButton()}\n    {RenewAddressButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  Select,\n  Switch,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\n\nimport {\n  lndSendCoins,\n} from \"../../squeakclient/requests\"\n\n\n\nexport default function SendBitcoinDialog({\n  open,\n  handleClose,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  var [address, setAddress] = useState('');\n  var [amount, setAmount] = useState('');\n  var [satperbyte, setSatperbyte] = useState('');\n  var [sendall, setSendall] = useState(false);\n\n  const resetFields = () => {\n    setAddress('');\n    setAmount('');\n    setSatperbyte('');\n    setSendall(false);\n  };\n\n  const handleChangeAddress = (event) => {\n    setAddress(event.target.value);\n  };\n\n  const handleChangeAmount = (event) => {\n    setAmount(event.target.value);\n  };\n\n  const handleChangeSatperbyte = (event) => {\n    setSatperbyte(event.target.value);\n  };\n\n  const handleChangeSendall = (event) => {\n    setSendall(event.target.checked);\n  };\n\n  const sendBitcoin = (address, amount, satperbyte, sendall) => {\n    lndSendCoins(address, amount, satperbyte, sendall, (response) => {\n      // setAddress(response.getAddress());\n      goToWalletPage();\n    });\n  };\n\n  const goToWalletPage = () => {\n    history.push(\"/app/wallet/\");\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log( 'address:', address);\n    console.log( 'amount:', amount);\n    console.log( 'satperbyte:', satperbyte);\n    console.log( 'satperbyte number:', parseInt(satperbyte));\n    console.log( 'sendall:', sendall);\n    sendBitcoin(address, amount, parseInt(satperbyte), sendall);\n    handleClose();\n  }\n\n  function SendBitcoinAddess() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Address\"\n        required\n        autoFocus\n        value={address}\n        onChange={handleChangeAddress}\n        fullWidth\n      />\n    )\n  }\n\n  function SendBitcoinAmount() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Amount\"\n        required\n        autoFocus\n        value={amount}\n        onChange={handleChangeAmount}\n        disabled={sendall}\n        fullWidth\n      />\n    )\n  }\n\n  function SendBitcoinSatperbyte() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Satperbyte\"\n        required\n        autoFocus\n        value={satperbyte}\n        onChange={handleChangeSatperbyte}\n        fullWidth\n      />\n    )\n  }\n\n  function SendBitcoinSendall() {\n    return (\n      <FormControlLabel\n        className={classes.formControlLabel}\n        control={\n          <Switch\n            checked={sendall}\n            onChange={handleChangeSendall}\n            name=\"send-all\"\n            size=\"small\"\n          />\n        }\n        label=\"Send all\"\n      />\n    )\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function SendBitcoinButton() {\n    return (\n      <Button\n       type=\"submit\"\n       variant=\"contained\"\n       color=\"primary\"\n       className={classes.button}\n       >\n       Send Bitcoin\n       </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Send Bitcoin</DialogTitle>\n  <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n  <DialogContent>\n    {SendBitcoinAddess()}\n  </DialogContent>\n  <DialogContent>\n    {SendBitcoinAmount()}\n  </DialogContent>\n  <DialogContent>\n    {SendBitcoinSatperbyte()}\n  </DialogContent>\n  <DialogContent>\n    {SendBitcoinSendall()}\n  </DialogContent>\n  <DialogActions>\n    {CancelButton()}\n    {SendBitcoinButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import React, { useState } from \"react\";\n\n// icons\nimport CallMadeIcon from '@material-ui/icons/CallMade';\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\n// styles\nimport useStyles from \"../../pages/wallet/styles\";\n\nimport moment from 'moment';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SwapHorizontalCircleIcon from \"@material-ui/icons/SwapHorizontalCircle\";\n\nexport default function TransactionItem({\n  transaction,\n  handleTransactionClick,\n  ...props\n}) {\n  const [expanded, setExpanded] = useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const onTransactionClick = (event) => {\n    event.preventDefault();\n    console.log(\"Handling transaction click...\");\n    // if (handleTransactionClick) {\n    //   handleTransactionClick();\n    // }\n    handleExpandClick();\n  }\n\n   function TransactionDetailItem(label, value) {\n      return <Box display='flex'>\n         <Typography className={classes.detailItemLabel}>\n            {label}\n         </Typography>\n         <Typography className={classes.detailItemValue}>\n            {value}\n         </Typography>\n      </Box>\n   }\n\n   function TransactionMoreDetails() {\n      return (\n         <CardContent className={classes.cardContent}>\n            {TransactionDetailItem(\"Tx Hash\", transaction.getTxHash())}\n            {TransactionDetailItem(\"Timestamp\", moment.unix(transaction.getTimeStamp()).format('lll'))}\n            {TransactionDetailItem(\"Block Height\", transaction.getBlockHeight())}\n            {TransactionDetailItem(\"Total Fees\", transaction.getTotalFees())}\n            {/*{TransactionDetailItem(\"Dest Addresses\", transaction.getDestAddressesList().length)}*/}\n            {TransactionDetailItem(\"Confirmations\", transaction.getNumConfirmations())}\n         </CardContent>\n    )\n  }\n\n  const classes = useStyles({\n     amount: transaction.getAmount(),\n     clickable: false,\n  })\n\n  const amountGtZero = transaction.getAmount() >= 0\n\n   function PlusMinusSymbol() {\n     if (transaction.getAmount() > 0) {\n        return '+'\n     } else if (transaction.getAmount() < 0) {\n        return '-'\n     }\n   }\n\n  function TransactionIcon() {\n     if (amountGtZero) {\n        return <CallReceivedIcon className={classes.transactionIcon}/>\n     } else {\n        return <CallMadeIcon className={classes.transactionIcon}/>\n     }\n  }\n\n  return (\n      <Card\n         className={classes.root}\n         onClick={onTransactionClick}\n      >\n        <Box className={classes.cardContentContainer}>\n          <Box className={classes.cardHeaderContainer}>\n            <Box className={classes.cardHeaderRow}>\n              {TransactionIcon()}\n              <Typography className={classes.transactionAmt}>\n                {PlusMinusSymbol()}{Math.abs(transaction.getAmount())} sats\n              </Typography>\n            </Box>\n            <Box className={classes.cardHeaderRow}>\n              <Typography className={classes.cardSubheaderText}>\n                {moment.unix(transaction.getTimeStamp()).fromNow()}\n              </Typography>\n            </Box>\n          </Box>\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n            {TransactionMoreDetails()}\n          </Collapse>\n        </Box>\n      </Card>\n  )\n}\n","import React from \"react\";\nimport {useHistory} from \"react-router-dom\";\n\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CardHeader from \"@material-ui/core/CardHeader\";\n\n// icons\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\n\nimport useStyles from \"../../pages/wallet/styles\";\n\n\nexport default function LightningPeerListItem({\n  peer,\n  ...props\n}) {\n  const classes = useStyles({\n    clickable: true,\n  });\n\n  const history = useHistory();\n\n  const onPeerClick = (event) => {\n    event.preventDefault();\n    console.log(\"Handling peer click...\");\n    goToLightningNodePage();\n  }\n\n  const goToLightningNodePage = () => {\n    const pubkey = peer.getPubKey();\n    const host = getPeerHost();\n    const port = getPeerPort();\n    history.push(\"/app/lightningnode/\" + pubkey + \"/\" + host + \"/\" + port);\n  };\n\n  const getPeerHost = () => {\n    const address = peer.getAddress();\n    if (address == null) {\n      return null;\n    }\n    const pieces = address.split(\":\");\n    return pieces[0];\n  }\n\n  const getPeerPort = () => {\n    const address = peer.getAddress();\n    if (address == null) {\n      return null;\n    }\n    const pieces = address.split(\":\");\n    if (pieces.length < 2) {\n      return null;\n    }\n    return pieces[1];\n  }\n\n  return (\n     <Card\n        className={classes.root}\n        onClick={onPeerClick}\n     >\n       <CardHeader\n          avatar={<RecordVoiceOverIcon/>}\n          title={`Pubkey: ${peer.getPubKey()}`}\n          subheader={`Address: ${peer.getAddress()}`}\n          // action={<Button size=\"small\">View Peer</Button>}\n       />\n     </Card>\n  )\n}\n","import React from \"react\";\nimport {\n  Box,\n  LinearProgress,\n  Typography\n} from \"@material-ui/core\";\nimport useStyles from \"../../pages/wallet/styles\";\n\nexport default function ChannelBalanceBar({\n  channel,\n  ...props\n}) {\n  const classes = useStyles()\n\n  return (\n    <Box className={classes.channelBalanceBarContainer}>\n      <Box className={classes.channelBalanceDetailsContainer}>\n        <Box className={classes.balanceContainerCapacity}>\n          <Typography className={classes.balanceLabel}>Capacity</Typography>\n          <Typography className={classes.balanceValue}>{channel.getCapacity()}</Typography>\n        </Box>\n      </Box>\n      <Box className={classes.channelBalanceBarRow}>\n        <Box className={classes.balanceContainerLocal}>\n          <Typography className={classes.balanceLabel}>Local</Typography>\n          <Typography className={classes.balanceValue} style={{color: 'darkblue'}}>{channel.getLocalBalance()}</Typography>\n        </Box>\n        <LinearProgress\n          variant=\"buffer\"\n          value={channel.getLocalBalance() / channel.getCapacity() * 100}\n          valueBuffer={channel.getRemoteBalance() / channel.getCapacity() * 100}\n          className={classes.channelBalanceProgressBar}\n          classes={{\n            buffer: classes.channelBalanceBuffer,\n            dashed: classes.channelBalanceDashed,\n            bar: classes.channelBalanceBar,\n            bar1Buffer: classes.channelBalanceBar1Buffer,\n            bar2Buffer: classes.channelBalanceBar2Buffer,\n          }}\n        />\n        <Box className={classes.balanceContainerRemote}>\n          <Typography className={classes.balanceLabel}>Remote</Typography>\n          <Typography className={classes.balanceValue} style={{color: 'darkred'}}>{channel.getRemoteBalance()}</Typography>\n        </Box>\n      </Box>\n    </Box>\n  )\n}","import React, {useState} from \"react\";\nimport {\n  Typography,\n  Box,\n  Chip,\n  Card,\n} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\nimport useStyles from \"../../pages/wallet/styles\";\nimport moment from 'moment';\nimport ChannelBalanceBar from \"./ChannelBalanceBar\";\n\n\nexport default function ChannelItem({\n  channel,\n  ...props\n}) {\n   const classes = useStyles({\n      channelStatus: 'open',\n      clickable: true,\n   })\n\n   const history = useHistory();\n\n   const getTxId = (channel) => {\n      var channelPoint = channel.getChannelPoint();\n      if (channelPoint == null) {\n         return null;\n      }\n      var pieces = channelPoint.split(\":\");\n      return pieces[0];\n   }\n\n   const getOutputIndex = (channel) => {\n      var channelPoint = channel.getChannelPoint();\n      if (channelPoint == null) {\n         return null;\n      }\n      var pieces = channelPoint.split(\":\");\n      if (pieces.length < 2) {\n         return null;\n      }\n      return pieces[1];\n   }\n\n   const goToChannelPage = (txId, outputIndex) => {\n      history.push(\"/app/channel/\" + txId + \"/\" + outputIndex);\n   };\n\n   const onChannelClick = (event) => {\n      event.preventDefault();\n      console.log(\"Handling channel click...\");\n      var txId = getTxId(channel);\n      var outputIndex = getOutputIndex(channel);\n      goToChannelPage(txId, outputIndex);\n   }\n\n   function ChannelDetailItem(label, value) {\n      return <Box className={classes.detailItem}>\n         <Typography className={classes.detailItemLabel}>\n            {label}\n         </Typography>\n         <Typography className={classes.detailItemValue}>\n            {value}\n         </Typography>\n      </Box>\n   }\n\n   function ChannelDetailItemVertical(label, value) {\n      return <Box className={classes.detailItemVertical}>\n         <Typography className={classes.detailItemLabel}>\n            {label}\n         </Typography>\n         <Typography className={classes.detailItemValue}>\n            {value}\n         </Typography>\n      </Box>\n   }\n\n\n   return (\n     <Card\n       className={classes.root}\n       onClick={onChannelClick}\n     >\n        <Box className={classes.cardContentContainerVertical}>\n           <Box className={classes.cardContentFlexColumn}>\n              <Box className={classes.cardHeaderContainer}>\n                 <Box className={classes.cardHeaderRow}>\n                    <Chip\n                      label=\"Open\"\n                      size=\"small\"\n                      className={classes.channelStatusChip}/>\n                 </Box>\n              </Box>\n              <Box className={classes.cardContentSection}>\n                 {ChannelDetailItem(\"Pubkey\", `${channel.getRemotePubkey()}`)}\n                 {ChannelDetailItem(\"Channel Point\", `${channel.getChannelPoint()}`)}\n                 {/*{ChannelDetailItem(\"Total sats sent\", `${channel.getTotalSatoshisSent()}`)}*/}\n                 {/*{ChannelDetailItem(\"Total sats received\", `${channel.getTotalSatoshisReceived()}`)}*/}\n                 {ChannelDetailItem(\"Lifetime\", `${moment.duration(channel.getLifetime(), 'seconds').humanize()}`)}\n                 {ChannelDetailItem(\"Uptime\", `${moment.duration(channel.getUptime(), 'seconds').humanize()}`)}\n              </Box>\n           </Box>\n           <Box className={classes.cardContentFlexColumn}>\n              <ChannelBalanceBar\n                channel={channel}\n              />\n           </Box>\n        </Box>\n     </Card>\n   )\n}\n","import React, {useState} from \"react\";\nimport {Box, Chip, Typography,} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\n\n// styles\nimport useStyles from \"../../pages/wallet/styles\";\n\nimport moment from 'moment';\nimport Card from \"@material-ui/core/Card\";\nimport ChannelBalanceBar from \"../ChannelItem/ChannelBalanceBar\";\n\nexport default function PendingOpenChannelItem({\n  pendingOpenChannel,\n  ...props\n}) {\n  const classes = useStyles({\n     channelStatus: 'pending-open',\n     clickable: true,\n  })\n\n  const history = useHistory();\n\n  const [expanded, setExpanded] = useState(false);\n\n   const handleExpandClick = (evt) => {\n      evt.stopPropagation()\n      setExpanded(!expanded);\n   };\n\n  const getTxId = (channel) => {\n    var channelPoint = channel.getChannelPoint();\n    if (channelPoint == null) {\n      return null;\n    }\n    var pieces = channelPoint.split(\":\");\n    return pieces[0];\n  }\n\n  const getOutputIndex = (channel) => {\n    var channelPoint = channel.getChannelPoint();\n    if (channelPoint == null) {\n      return null;\n    }\n    var pieces = channelPoint.split(\":\");\n    if (pieces.length < 2) {\n      return null;\n    }\n    return pieces[1];\n  }\n\n  const goToChannelPage = (txId, outputIndex) => {\n    history.push(\"/app/channel/\" + txId + \"/\" + outputIndex);\n  };\n\n  const onChannelClick = (event) => {\n    event.preventDefault();\n    console.log(\"Handling channel click...\");\n    var channel = pendingOpenChannel.getChannel();\n    var txId = getTxId(channel);\n    var outputIndex = getOutputIndex(channel);\n    goToChannelPage(txId, outputIndex);\n  }\n\n  function ChannelDetailItem(label, value) {\n    return <Box className={classes.detailItem}>\n      <Typography className={classes.detailItemLabel}>\n        {label}\n      </Typography>\n      <Typography className={classes.detailItemValue}>\n        {value}\n      </Typography>\n    </Box>\n  }\n\n  const channel = pendingOpenChannel.getChannel();\n  return (\n    <Card\n      className={classes.root}\n      onClick={onChannelClick}\n    >\n      <Box className={classes.cardContentContainerVertical}>\n        <Box className={classes.cardContentFlexColumn}>\n          <Box className={classes.cardHeaderContainer}>\n            <Box className={classes.cardHeaderRow}>\n              <Chip\n                label=\"Opening\"\n                size=\"small\"\n                className={classes.channelStatusChip}/>\n            </Box>\n          </Box>\n          <Box className={classes.cardContentSection}>\n            {ChannelDetailItem(\"Pubkey\", `${channel.getRemoteNodePub()}`)}\n            {ChannelDetailItem(\"Channel Point\", `${channel.getChannelPoint()}`)}\n            {/*{ChannelDetailItem(\"Lifetime\", `${moment.duration(channel.getLifetime(), 'seconds').humanize()}`)}*/}\n            {/*{ChannelDetailItem(\"Uptime\", `${moment.duration(channel.getUptime(), 'seconds').humanize()}`)}*/}\n          </Box>\n        </Box>\n        <Box className={classes.cardContentFlexColumn}>\n          <ChannelBalanceBar\n            channel={channel}\n          />\n        </Box>\n      </Box>\n    </Card>\n  )\n}","import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import {useHistory} from \"react-router-dom\";\nimport {\n  Grid,\n  Button,\n  AppBar,\n  Tabs,\n  Tab,\n  Box,\n} from \"@material-ui/core\";\n// import { useTheme } from \"@material-ui/styles\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport { Typography } from \"../../components/Wrappers\";\nimport ReceiveBitcoinDialog from \"../../components/ReceiveBitcoinDialog\";\nimport SendBitcoinDialog from \"../../components/SendBitcoinDialog\";\nimport TransactionItem from \"../../components/TransactionItem\";\nimport LightningPeerListItem from \"../../components/LightningPeerListItem\";\nimport ChannelItem from \"../../components/ChannelItem\";\nimport PendingOpenChannelItem from \"../../components/PendingOpenChannelItem\";\n\nimport {\n  lndGetInfoRequest,\n  lndWalletBalanceRequest,\n  lndGetTransactionsRequest,\n  lndListPeersRequest,\n  lndListChannelsRequest,\n  lndPendingChannelsRequest,\n} from \"../../squeakclient/requests\"\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nexport default function WalletPage() {\n  const classes = useStyles();\n\n  const [lndInfo, setLndInfo] = useState(null);\n  const [walletBalance, setWalletBalance] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [peers, setPeers] = useState(null);\n  const [channels, setChannels] = useState(null);\n  const [pendingChannels, setPendingChannels] = useState(null);\n  const [value, setValue] = useState(0);\n  const [receiveBitcoinDialogOpen, setReceiveBitcoinDialogOpen] = useState(false);\n  const [sendBitcoinDialogOpen, setSendBitcoinDialogOpen] = useState(false);\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleClickOpenReceiveBitcoinDialog = () => {\n    setReceiveBitcoinDialogOpen(true);\n  };\n\n  const handleCloseReceiveBitcoinDialog = () => {\n     setReceiveBitcoinDialogOpen(false);\n  };\n\n  const handleClickOpenSendBitcoinDialog = () => {\n    setSendBitcoinDialogOpen(true);\n  };\n\n  const handleCloseSendBitcoinDialog = () => {\n     setSendBitcoinDialogOpen(false);\n  };\n\n  const getLndInfo = () => {\n    lndGetInfoRequest(setLndInfo);\n  };\n  const getWalletBalance = () => {\n    lndWalletBalanceRequest(setWalletBalance);\n  };\n  const getTransactions = () => {\n    lndGetTransactionsRequest(setTransactions)\n  };\n  const listPeers = () => {\n    lndListPeersRequest(setPeers);\n  };\n  const listChannels = () => {\n    lndListChannelsRequest(setChannels);\n  };\n  const getPendingChannels = () => {\n    lndPendingChannelsRequest(setPendingChannels);\n  };\n\n  const lndAvailable = () => {\n    return lndInfo &&\n      walletBalance &&\n      transactions &&\n      peers &&\n      channels &&\n      pendingChannels;\n  };\n\n\n  useEffect(()=>{\n    getLndInfo()\n  },[]);\n  useEffect(()=>{\n    getWalletBalance()\n  },[]);\n  useEffect(()=>{\n    getTransactions()\n  },[]);\n  useEffect(()=>{\n    listPeers()\n  },[]);\n  useEffect(()=>{\n    listChannels()\n  },[]);\n  useEffect(()=>{\n    getPendingChannels()\n  },[]);\n\n  function ReceiveBitcoinButton() {\n    return (\n       <Button\n          variant=\"contained\"\n          className={classes.button}\n          onClick={() => {\n            handleClickOpenReceiveBitcoinDialog();\n          }}>Receive Bitcoin\n       </Button>\n    )\n  }\n\n  function SendBitcoinButton() {\n    return (\n       <Button\n          variant=\"contained\"\n          className={classes.button}\n          onClick={() => {\n            handleClickOpenSendBitcoinDialog();\n          }}>Send Bitcoin\n       </Button>\n    )\n  }\n\n  function NoBalanceContent() {\n    return (\n      <div>\n        Unable to connect to lightning node. Make sure that lnd is running and reload the page.\n      </div>\n    )\n  }\n\n  function InfoContentOld() {\n    return (\n      <div>\n        <p>identity_pubkey: {lndInfo.getIdentityPubkey()}</p>\n        <p>alias: {lndInfo.getAlias()}</p>\n        <p>num_pending_channels: {lndInfo.getNumPendingChannels()}</p>\n        <p>num_active_channels: {lndInfo.getNumActiveChannels()}</p>\n        <p>num_inactive_channels: {lndInfo.getNumInactiveChannels()}</p>\n        <p>num_peers: {lndInfo.getNumPeers()}</p>\n        <p>block_height: {lndInfo.getBlockHeight()}</p>\n        <p>block_hash: {lndInfo.getBlockHash()}</p>\n        <p>synced_to_chain: {lndInfo.getSyncedToChain().toString()}</p>\n        <p>synced_to_graph: {lndInfo.getSyncedToGraph().toString()}</p>\n      </div>\n    )\n  }\n\n  function BalanceContent() {\n    return (\n      <>\n        <Grid container spacing={4}>\n          {BalanceGridItem()}\n        </Grid>\n      </>\n    )\n  }\n\n  function NodeInfoContent() {\n    return (\n      <>\n        <Grid container spacing={4}>\n          {StatusGridItem()}\n        </Grid>\n      </>\n    )\n  }\n\n  function TransactionsContent() {\n    return (\n      <>\n        <Grid container spacing={4}>\n          {TransactionsGridItem()}\n        </Grid>\n      </>\n    )\n  }\n\n  function PeersContent() {\n    return (\n      <>\n        <Grid container spacing={4}>\n          {PeersGridItem()}\n        </Grid>\n      </>\n    )\n  }\n\n  function BalanceGridItem() {\n    return (\n      <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid\n             container\n             direction=\"column\"\n             justify=\"flex-start\"\n             spacing={2}\n          >\n            <Grid item>\n              <Typography variant=\"h1\">\n                {walletBalance.getTotalBalance()} sats\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormLabel>\n                Unconfirmed Balance (sats)\n              </FormLabel>\n              <Typography size=\"md\">\n                {walletBalance.getUnconfirmedBalance()}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormLabel>\n                Confirmed Balance (sats)\n              </FormLabel>\n              <Typography size=\"md\">\n                {walletBalance.getConfirmedBalance()}\n              </Typography>\n            </Grid>\n          </Grid>\n          {ReceiveBitcoinButton()}\n          {SendBitcoinButton()}\n        </Widget>\n      </Grid>\n    )\n  }\n\n  function StatusGridItem() {\n    return (\n       <Grid item xs={12}>\n         <Widget disableWidgetMenu>\n           <Grid\n              container\n              direction=\"column\"\n              justify=\"flex-start\"\n              spacing={2}\n           >\n             <Grid item>\n               <FormLabel>\n                 Node Pubkey\n               </FormLabel>\n               <Typography size=\"md\">{lndInfo.getIdentityPubkey()}</Typography>\n             </Grid>\n             <Grid item>\n               <FormLabel>\n                 Synced to Chain\n               </FormLabel>\n               <Typography size=\"md\">{lndInfo.getSyncedToChain().toString()}</Typography>\n             </Grid>\n             <Grid item>\n               <FormLabel>\n                 Synced to Graph\n               </FormLabel>\n               <Typography size=\"md\">{lndInfo.getSyncedToGraph().toString()}</Typography>\n             </Grid>\n             <Grid item>\n               <FormLabel>\n                 Block Height\n               </FormLabel>\n               <Typography size=\"md\">{lndInfo.getBlockHeight()}</Typography>\n             </Grid>\n           </Grid>\n         </Widget>\n       </Grid>\n    )\n  }\n\n  function TransactionsGridItem() {\n    return (\n       <Grid item xs={12}>\n         <Widget disableWidgetMenu>\n           <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n           >\n             <Grid item xs={12}>\n               {transactions.map(transaction =>\n                  <Box\n                     p={1}\n                     key={transaction.getTxHash()}\n                  >\n                    <TransactionItem\n                       key={transaction.getTxHash()}\n                       // handleTransactionClick={() => goToSqueakPage(transaction.getSqueakHash())}\n                       handleTransactionClick={() => console.log(\"clicked transaction\")}\n                       transaction={transaction}>\n                    </TransactionItem>\n                  </Box>\n               )}\n             </Grid>\n           </Grid>\n         </Widget>\n       </Grid>\n    )\n  }\n\n  function PeersGridItem() {\n    return (\n       <Grid item xs={12}>\n         <Widget disableWidgetMenu>\n           <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n           >\n             <Grid item xs={12}>\n               {peers.map(peer =>\n                  <Box\n                     p={1}\n                     key={peer.getPubKey()}\n                  >\n                    <LightningPeerListItem\n                       key={peer.getPubKey()}\n                       // handleTransactionClick={() => goToSqueakPage(transaction.getSqueakHash())}\n                       handlePeerClick={() => console.log(\"clicked peer\")}\n                       peer={peer}>\n                    </LightningPeerListItem>\n                  </Box>\n               )}\n             </Grid>\n           </Grid>\n         </Widget>\n       </Grid>\n    )\n  }\n\n  function ChannelsGridItem() {\n    return (\n       <Grid item xs={12}>\n         <Widget disableWidgetMenu>\n           <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"center\"\n           >\n             <Grid item xs={12}>\n               {pendingChannels.getPendingOpenChannelsList().map(pendingOpenChannel =>\n                  <Box p={1} key={pendingOpenChannel.getChannel().getChannelPoint()}>\n                    <PendingOpenChannelItem pendingOpenChannel={pendingOpenChannel} />\n                  </Box>\n               )}\n               {channels.map(channel =>\n                  <Box p={1} key={channel.getChannelPoint()}>\n                    <ChannelItem channel={channel} />\n                  </Box>\n               )}\n             </Grid>\n           </Grid>\n         </Widget>\n       </Grid>\n    )\n  }\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <div>{children}</div>\n        )}\n      </div>\n    );\n  }\n\n  function LightningTabs() {\n    return (\n      <>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Balance\" {...a11yProps(0)} />\n          <Tab label=\"Node Info\" {...a11yProps(1)} />\n          <Tab label=\"Transactions\" {...a11yProps(2)} />\n          <Tab label=\"Peers\" {...a11yProps(3)} />\n          <Tab label=\"Channels\" {...a11yProps(4)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        {BalanceContent()}\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {NodeInfoContent()}\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        {TransactionsContent()}\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        {PeersContent()}\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n        {ChannelsGridItem()}\n      </TabPanel>\n      </>\n    )\n  }\n\n  function ReceiveBitcoinDialogContent() {\n    return (\n      <>\n        <ReceiveBitcoinDialog\n          open={receiveBitcoinDialogOpen}\n          handleClose={handleCloseReceiveBitcoinDialog}\n          ></ReceiveBitcoinDialog>\n      </>\n    )\n  }\n\n  function SendBitcoinDialogContent() {\n    return (\n      <>\n        <SendBitcoinDialog\n          open={sendBitcoinDialogOpen}\n          handleClose={handleCloseSendBitcoinDialog}\n          ></SendBitcoinDialog>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Wallet\" />\n      {lndAvailable()\n        ? LightningTabs()\n        : NoBalanceContent()\n      }\n      {ReceiveBitcoinDialogContent()}\n      {SendBitcoinDialogContent()}\n    </>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\n\nimport {\n  lndOpenChannelSyncRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function OpenChannelDialog({\n  open,\n  pubkey,\n  handleClose,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  var [amount, setAmount] = useState(\"\");\n  var [satperbyte, setSatperbyte] = useState(\"\");\n\n  const resetFields = () => {\n    setAmount(\"\");\n    setSatperbyte(\"\");\n  };\n\n  const handleChangeAmount = (event) => {\n    setAmount(event.target.value);\n  };\n\n  const handleChangeSatPerBytes = (event) => {\n    setSatperbyte(event.target.value);\n  };\n\n  const handleResponse = (response) => {\n    // TODO: go to channel page instead of showing alert.\n    alert('Open channel pending.');\n  };\n\n  const handleErr = (err) => {\n    alert('Error opening channel: ' + err);\n  };\n\n  const openChannel = (pubkey, amount) => {\n    lndOpenChannelSyncRequest(pubkey, amount, satperbyte, handleResponse, handleErr);\n  };\n\n  // const goToProfilePage = (profileId) => {\n  //   history.push(\"/app/profile/\" + profileId);\n  // };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log( 'pubkey:', pubkey);\n    console.log( 'amount:', amount);\n    console.log( 'satperbyte:', satperbyte);\n    if (!amount) {\n      alert('Amount cannot be empty.');\n      return;\n    }\n    openChannel(pubkey, amount, satperbyte);\n    handleClose();\n  }\n\n  function PubKeyInput() {\n    return (\n      <TextField\n        id=\"pubkey-textarea\"\n        label=\"Node Pub Key\"\n        required\n        autoFocus\n        value={pubkey}\n        fullWidth\n        inputProps={{\n           readOnly: true,\n        }}\n      />\n    )\n  }\n\n  function LocalFundingAmountInput() {\n    return (\n      <TextField\n        id=\"amount-textarea\"\n        label=\"Local Funding Amount\"\n        required\n        autoFocus\n        value={amount}\n        onChange={handleChangeAmount}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n      />\n    )\n  }\n\n  function SatPerByteInput() {\n    return (\n      <TextField\n        id=\"satperbyte-textarea\"\n        label=\"Sats Per Byte\"\n        required\n        autoFocus\n        value={satperbyte}\n        onChange={handleChangeSatPerBytes}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n      />\n    )\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function OpenChannelButton() {\n    return (\n      <Button\n       type=\"submit\"\n       variant=\"contained\"\n       color=\"primary\"\n       className={classes.button}\n       >\n       Open Channel\n       </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Open Channel</DialogTitle>\n  <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n  <DialogContent>\n    {PubKeyInput()}\n  </DialogContent>\n  <DialogContent>\n    {LocalFundingAmountInput()}\n  </DialogContent>\n  <DialogContent>\n    {SatPerByteInput()}\n  </DialogContent>\n  <DialogActions>\n    {CancelButton()}\n    {OpenChannelButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Grid,\n  Button,\n  AppBar,\n  Tabs,\n  Tab,\n  Box,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport { Typography } from \"../../components/Wrappers\";\nimport OpenChannelDialog from \"../../components/OpenChannelDialog\";\nimport ChannelItem from \"../../components/ChannelItem\";\nimport PendingOpenChannelItem from \"../../components/PendingOpenChannelItem\";\n\nimport {\n  lndGetInfo,\n  lndWalletBalance,\n  lndGetTransactions,\n  lndListPeersRequest,\n  lndListChannelsRequest,\n  lndPendingChannelsRequest,\n  lndConnectPeerRequest,\n  lndDisconnectPeerRequest,\n} from \"../../squeakclient/requests\"\n\nexport default function LightningNodePage() {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  const history = useHistory();\n  const { pubkey, host, port } = useParams();\n  const [value, setValue] = useState(0);\n  const [peers, setPeers] = useState(null);\n  const [channels, setChannels] = useState(null);\n  const [pendingChannels, setPendingChannels] = useState(null);\n  const [openChannelDialogOpen, setOpenChannelDialogOpen] = useState(false);\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleClickConnectPeer = () => {\n    var lightningHost = host + \":\" + port;\n    connectPeer(pubkey, lightningHost);\n  };\n\n  const handleClickOpenChannel = () => {\n    console.log(\"Handle click open channel.\");\n    setOpenChannelDialogOpen(true);\n  };\n\n  const handleCloseOpenChannelDialog = () => {\n    setOpenChannelDialogOpen(false);\n  };\n\n  const handleClickDisconnectPeer = () => {\n    disconnectPeer(pubkey);\n  };\n\n  const isConnected = () => {\n    if (peers == null) {\n      return false;\n    }\n    var i;\n    for (i = 0; i < peers.length; i++) {\n      if (pubkey == peers[i].getPubKey()) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const hasChannelToPeer = () => {\n    if (channels == null) {\n      return false;\n    }\n    var i;\n    for (i = 0; i < channels.length; i++) {\n      if (pubkey == channels[i].getRemotePubkey()) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const listPeers = () => {\n    lndListPeersRequest(setPeers);\n  };\n  const listChannels = () => {\n    lndListChannelsRequest(setChannels);\n  };\n  const getPendingChannels = () => {\n    lndPendingChannelsRequest(setPendingChannels);\n  };\n  const connectPeer = (pubkey, host) => {\n    lndConnectPeerRequest(pubkey, host, () => {\n      reloadRoute();\n    });\n  };\n  const disconnectPeer = (pubkey) => {\n    lndDisconnectPeerRequest(pubkey, () => {\n      reloadRoute();\n    });\n  };\n\n  const reloadRoute = () => {\n    history.go(0);\n  };\n\n  useEffect(()=>{\n    listPeers()\n  },[]);\n  useEffect(()=>{\n    listChannels()\n  },[]);\n  useEffect(()=>{\n    getPendingChannels()\n  },[]);\n\n  function ConnectPeerButton() {\n    return (\n      <>\n      <Grid item xs={12}>\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              handleClickConnectPeer();\n            }}>Connect Peer\n          </Button>\n        </div>\n      </Grid>\n      </>\n    )\n  }\n\n  function DisconnectPeerButton() {\n    return (\n      <>\n      <Grid item xs={12}>\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              handleClickDisconnectPeer();\n            }}>Disconnect Peer\n          </Button>\n        </div>\n      </Grid>\n      </>\n    )\n  }\n\n  function OpenChannelButton() {\n    return (\n      <>\n      <Grid item xs={12}>\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              handleClickOpenChannel();\n            }}>Open Channel\n          </Button>\n        </div>\n      </Grid>\n      </>\n    )\n  }\n\n  function NodeInfoGridItem() {\n    return (\n      <Grid item xs={12}>\n      <Widget disableWidgetMenu>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Typography color=\"text\" colorBrightness=\"secondary\">\n            pubkey\n          </Typography>\n          <Typography size=\"md\">{pubkey}</Typography>\n        </Grid>\n      </Grid>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Typography color=\"text\" colorBrightness=\"secondary\">\n            host\n          </Typography>\n          <Typography size=\"md\">{host}</Typography>\n        </Grid>\n      </Grid>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Typography color=\"text\" colorBrightness=\"secondary\">\n            port\n          </Typography>\n          <Typography size=\"md\">{port}</Typography>\n        </Grid>\n      </Grid>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Typography color=\"text\" colorBrightness=\"secondary\">\n            connected\n          </Typography>\n          <Typography size=\"md\">\n          {IsConnected()}\n          </Typography>\n          {isConnected()\n            ? DisconnectPeerButton()\n            : ConnectPeerButton()\n          }\n        </Grid>\n      </Grid>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Typography color=\"text\" colorBrightness=\"secondary\">\n            channel to peer\n          </Typography>\n          <Typography size=\"md\">\n          {HasChannelToPeer()}\n          </Typography>\n          {!hasChannelToPeer &&\n            OpenChannelButton()\n          }\n        </Grid>\n      </Grid>\n\n       </Widget>\n      </Grid>\n    )\n  }\n\n  function ChannelsGridItem() {\n    var nodeChannels = channels.filter(channel => channel.getRemotePubkey() == pubkey);\n    var nodePendingOpenChannels = pendingChannels.getPendingOpenChannelsList().filter(pendingOpenChannel => pendingOpenChannel.getChannel().getRemoteNodePub() == pubkey);\n    return (\n      <Grid item xs={12}>\n      <Widget disableWidgetMenu>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12}>\n        {nodePendingOpenChannels.map(pendingOpenChannel =>\n          <Box\n            p={1}\n            key={pendingOpenChannel.getChannel().getChannelPoint()}\n            >\n          <PendingOpenChannelItem\n            key={pendingOpenChannel.getChannel().getChannelPoint()}\n            pendingOpenChannel={pendingOpenChannel}>\n          </PendingOpenChannelItem>\n          </Box>\n        )}\n        {nodeChannels.map(channel =>\n          <Box\n            p={1}\n            key={channel.getChannelPoint()}\n            >\n          <ChannelItem\n            key={channel.getChannelPoint()}\n            channel={channel}>\n          </ChannelItem>\n          </Box>\n        )}\n        </Grid>\n      </Grid>\n      </Widget>\n      </Grid>\n    )\n  }\n\n  function IsConnected() {\n    return (\n      isConnected().toString()\n    )\n  }\n\n  function HasChannelToPeer() {\n    return (\n      hasChannelToPeer().toString()\n    )\n  }\n\n  function NoPubkeyContent() {\n    return (\n      <div>\n        No pubkey.\n      </div>\n    )\n  }\n\n  function PubkeyContent() {\n    return (\n      <>\n        <Grid container spacing={4}>\n          {NodeInfoGridItem()}\n        </Grid>\n      </>\n    )\n  }\n\n  function ChannelsContent() {\n    if (channels == null || pendingChannels == null) {\n      return (\n        <>\n          <Grid container spacing={4}>\n          <Grid item xs={12}>\n          <Widget disableWidgetMenu>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={12}>\n              Unable to load channels\n            </Grid>\n          </Grid>\n          </Widget>\n          </Grid>\n          </Grid>\n        </>\n      )\n    }\n\n    return (\n      <>\n        <Grid container spacing={4}>\n          {ChannelsGridItem()}\n        </Grid>\n      </>\n    )\n  }\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <div>{children}</div>\n        )}\n      </div>\n    );\n  }\n\n  function LightningNodeTabs() {\n    return (\n      <>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Node Info\" {...a11yProps(0)} />\n          <Tab label=\"Channels\" {...a11yProps(1)} />\n          <Tab label=\"Routes\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        {PubkeyContent()}\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {ChannelsContent()}\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        Show routes here\n      </TabPanel>\n      </>\n    )\n  }\n\n  function OpenChannelDialogContent() {\n    return (\n      <>\n        <OpenChannelDialog\n          open={openChannelDialogOpen}\n          pubkey={pubkey}\n          handleClose={handleCloseOpenChannelDialog}\n          ></OpenChannelDialog>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <PageTitle title={'Lightning Node: ' + pubkey} />\n      {pubkey\n        ? LightningNodeTabs()\n        : NoPubkeyContent()\n      }\n      {OpenChannelDialogContent()}\n    </>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\n\nimport {\n  lndCloseChannelRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function CloseChannelDialog({\n  open,\n  txId,\n  outputIndex,\n  handleClose,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  var [amount, setAmount] = useState(0);\n\n  const resetFields = () => {\n    setAmount(0);\n  };\n\n  const handleChangeAmount = (event) => {\n    setAmount(event.target.value);\n  };\n\n  const handleResponse = (response) => {\n    // TODO: handle streaming response.\n    // TODO: go to channel page instead of showing alert.\n  };\n\n  const handleErr = (err) => {\n    alert('Error closing channel: ' + err);\n  };\n\n  const closeChannel = (txId, outputIndex) => {\n    lndCloseChannelRequest(txId, outputIndex, handleResponse, handleErr);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log( 'txId:', txId);\n    console.log( 'outputIndex:', outputIndex);\n    closeChannel(txId, outputIndex);\n    handleClose();\n  }\n\n  function TxIdInput() {\n    return (\n      <TextField\n        id=\"txid-textarea\"\n        label=\"TxId\"\n        required\n        autoFocus\n        value={txId}\n        fullWidth\n        inputProps={{\n           readOnly: true,\n        }}\n      />\n    )\n  }\n\n  function OutputIndexInput() {\n    return (\n      <TextField\n        id=\"outputindex-textarea\"\n        label=\"Output Index\"\n        required\n        autoFocus\n        value={outputIndex}\n        fullWidth\n        inputProps={{\n           readOnly: true,\n        }}\n      />\n    )\n  }\n\n  function LocalFundingAmountInput() {\n    return (\n      <TextField\n        id=\"amount-textarea\"\n        label=\"Local Funding Amount\"\n        required\n        autoFocus\n        value={amount}\n        onChange={handleChangeAmount}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n      />\n    )\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function CloseChannelButton() {\n    return (\n      <Button\n       type=\"submit\"\n       variant=\"contained\"\n       color=\"primary\"\n       className={classes.button}\n       >\n       Close Channel\n       </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Close Channel</DialogTitle>\n  <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n  <DialogContent>\n    {TxIdInput()}\n  </DialogContent>\n  <DialogContent>\n    {OutputIndexInput()}\n  </DialogContent>\n  <DialogActions>\n    {CancelButton()}\n    {CloseChannelButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Grid,\n  Button,\n  AppBar,\n  Tabs,\n  Tab,\n  Box,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport { Typography } from \"../../components/Wrappers\";\nimport CloseChannelDialog from \"../../components/CloseChannelDialog\";\nimport ChannelItem from \"../../components/ChannelItem\";\n\nimport {\n  lndListPeersRequest,\n  lndListChannelsRequest,\n  lndPendingChannelsRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function LightningNodePage() {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  const history = useHistory();\n  const { txId, outputIndex } = useParams();\n  const [value, setValue] = useState(0);\n  const [peers, setPeers] = useState(null);\n  const [channels, setChannels] = useState(null);\n  const [closeChannelDialogOpen, setCloseChannelDialogOpen] = useState(false);\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const getChannelPoint = () => {\n    return txId + \":\" + outputIndex;\n  };\n\n  const handleCloseCloseChannelDialog = () => {\n    setCloseChannelDialogOpen(false);\n  };\n\n  const isChannelOpen = () => {\n    if (channels == null) {\n      return false;\n    }\n    var i;\n    for (i = 0; i < channels.length; i++) {\n      if (getChannelPoint() == channels[i].getChannelPoint()) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const listPeers = () => {\n    lndListPeersRequest(setPeers);\n  };\n\n  const listChannels = () => {\n    lndListChannelsRequest(setChannels);\n  };\n\n  const handleClickCloseChannel = () => {\n    console.log(\"Handle click close channel.\");\n    setCloseChannelDialogOpen(true);\n  };\n\n\n  const reloadRoute = () => {\n    history.go(0);\n  };\n\n  useEffect(()=>{\n    listPeers()\n  },[]);\n  useEffect(()=>{\n    listChannels()\n  },[]);\n\n  function CloseChannelButton() {\n    return (\n      <>\n      <Grid item xs={12}>\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              handleClickCloseChannel();\n            }}>Close Channel\n          </Button>\n        </div>\n      </Grid>\n      </>\n    )\n  }\n\n  function ChannelInfoGridItem() {\n    return (\n      <Grid item xs={12}>\n      <Widget disableWidgetMenu>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Typography color=\"text\" colorBrightness=\"secondary\">\n            channel point\n          </Typography>\n          <Typography size=\"md\">{txId + \":\" + outputIndex}</Typography>\n        </Grid>\n      </Grid>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Typography color=\"text\" colorBrightness=\"secondary\">\n            channel status\n          </Typography>\n          <Typography size=\"md\">{\"channel status here\"}</Typography>\n          {isChannelOpen()\n            ? CloseChannelButton()\n            : \"no\"\n          }\n        </Grid>\n      </Grid>\n\n       </Widget>\n      </Grid>\n    )\n  }\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <div>{children}</div>\n        )}\n      </div>\n    );\n  }\n\n  function ChannelTabs() {\n    return (\n      <>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Channel Info\" {...a11yProps(0)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        {ChannelInfoGridItem()}\n      </TabPanel>\n      </>\n    )\n  }\n\n  function CloseChannelDialogContent() {\n    return (\n      <>\n        <CloseChannelDialog\n          open={closeChannelDialogOpen}\n          txId={txId}\n          outputIndex={outputIndex}\n          handleClose={handleCloseCloseChannelDialog}\n          ></CloseChannelDialog>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <PageTitle title={'Channel'} />\n      {ChannelTabs()}\n      {CloseChannelDialogContent()}\n    </>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\nimport tinycolor from \"tinycolor2\";\n\nexport default makeStyles(theme => ({\n  layoutContainer: {\n    height: 200,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: theme.spacing(2),\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    position: \"relative\",\n  },\n  layoutText: {\n    color: tinycolor(theme.palette.background.light)\n      .darken()\n      .toHexString(),\n  },\n  layoutButtonsRow: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  layoutButton: {\n    backgroundColor: theme.palette.background.light,\n    width: 125,\n    height: 50,\n    outline: \"none\",\n    border: \"none\",\n  },\n  layoutButtonActive: {\n    backgroundColor: tinycolor(theme.palette.background.light)\n      .darken()\n      .toHexString(),\n  },\n  buttonsContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    marginTop: theme.spacing(2),\n  },\n  notificationCallButton: {\n    color: \"white\",\n    marginBottom: theme.spacing(1),\n    textTransform: \"none\",\n  },\n  codeContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginTop: theme.spacing(2),\n  },\n  codeComponent: {\n    flexGrow: 1,\n  },\n  notificationItem: {\n    marginTop: theme.spacing(2),\n  },\n  notificationCloseButton: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  toastsContainer: {\n    width: 400,\n    marginTop: theme.spacing(6),\n    right: 0,\n  },\n  progress: {\n    visibility: \"hidden\",\n  },\n  notification: {\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"transparent\",\n    boxShadow: \"none\",\n    overflow: \"visible\",\n  },\n  notificationComponent: {\n    paddingRight: theme.spacing(4),\n  },\n}));\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport classnames from \"classnames\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Notification from \"../../components/Notification\";\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nexport default function NotificationsPage(props) {\n  var classes = useStyles();\n\n  // local\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  var [errorToastId, setErrorToastId] = useState(null);\n\n  return (\n    <>\n      <PageTitle title=\"Notifications\" />\n      <Grid container spacing={8}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Layout Options\" disableWidgetMenu>\n            <Typography>\n              There are few position options available for notifications. You\n              can click any of them to change notifications position:\n            </Typography>\n            <div className={classes.layoutContainer}>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(0)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 0,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(1)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 1,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(2)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 2,\n                  })}\n                />\n              </div>\n              <Typography className={classes.layoutText} size=\"md\">\n                Click any position\n              </Typography>\n              <div className={classes.layoutButtonsRow}>\n                <button\n                  onClick={() => changeNotificationPosition(3)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 3,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(4)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 4,\n                  })}\n                />\n                <button\n                  onClick={() => changeNotificationPosition(5)}\n                  className={classnames(classes.layoutButton, {\n                    [classes.layoutButtonActive]: notificationsPosition === 5,\n                  })}\n                />\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notifications Types\" disableWidgetMenu>\n            <Typography>\n              Different types of notifications for lost of use cases. Custom\n              classes are also supported.\n            </Typography>\n            <div className={classes.buttonsContainer}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => handleNotificationCall(\"info\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Info Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => handleNotificationCall(\"error\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Error + Retry Message\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={() => handleNotificationCall(\"success\")}\n                className={classnames(classes.notificationCallButton)}\n              >\n                Success Message\n              </Button>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Usage\" disableWidgetMenu>\n            <Typography>\n              Notifications are created with the help of{\" \"}\n              <a href=\"https://github.com/fkhadra/react-toastify\">\n                react-toastify\n              </a>\n            </Typography>\n            <div className={classes.codeContainer}>\n              <SyntaxHighlighter\n                className={classes.codeComponent}\n                language=\"javascript\"\n                style={docco}\n              >{`\n  // import needed components, functions and styles\n  import { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\n\n  const Page = () => {\n    <div>\n      <ToastContainer />\n      <button onClick={() => toast('Toast Message')}>\n        show notification\n      </button>\n    </div>\n  };\n            `}</SyntaxHighlighter>\n              <Typography variant=\"caption\">\n                For more API information refer to the library documentation\n              </Typography>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"message\"\n              message=\"Thanks for Checking out Messenger\"\n              variant=\"contained\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"customer\"\n              message=\"New customer is registered\"\n              variant=\"contained\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"shipped\"\n              message=\"The order was shipped\"\n              variant=\"contained\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"delivered\"\n              message=\"The order was delivered\"\n              variant=\"contained\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              shadowless\n              type=\"defence\"\n              message=\"5 Defence alerts\"\n              variant=\"contained\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6} lg={4}>\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\n            <Notification\n              className={classes.notificationItem}\n              type=\"report\"\n              message=\"New report has been received\"\n              variant=\"rounded\"\n              color=\"secondary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"feedback\"\n              message=\"New user feedback received\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"shipped\"\n              message=\"The item was shipped\"\n              variant=\"rounded\"\n              color=\"success\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"message\"\n              message=\"The new message from user @nahawaii\"\n              variant=\"rounded\"\n              color=\"warning\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"upload\"\n              message=\"Your file is ready to upload\"\n              variant=\"rounded\"\n              color=\"primary\"\n            />\n            <Notification\n              className={classes.notificationItem}\n              type=\"disc\"\n              message=\"The disc is full\"\n              variant=\"rounded\"\n              color=\"info\"\n            />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Message was not sent!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was shipped\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n}\n\n// #############################################################\nfunction CloseButton({ closeToast, className }) {\n  return <CloseIcon className={className} onClick={closeToast} />;\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  mapContainer: {\n    height: \"100%\",\n    margin: -theme.spacing(1) * 3,\n  },\n}));","import React from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\";\n\n// styles\nimport useStyles from \"./styles\";\n\nconst BasicMap = withScriptjs(\n  withGoogleMap(() => (\n    <GoogleMap\n      defaultZoom={12}\n      defaultCenter={{\n        lat: parseFloat(-37.813179),\n        lng: parseFloat(144.950259),\n      }}\n    >\n      <Marker position={{ lat: -37.813179, lng: 144.950259 }} />\n    </GoogleMap>\n  )),\n);\n\nexport default function Maps() {\n  var classes = useStyles();\n\n  return (\n    <div className={classes.mapContainer}>\n      <BasicMap\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyB7OXmzfQYua_1LEhRdqsoYzyJOPh9hGLg\"\n        loadingElement={<div style={{ height: \"inherit\", width: \"inherit\" }} />}\n        containerElement={<div style={{ height: \"100%\" }} />}\n        mapElement={<div style={{ height: \"100%\" }} />}\n      />\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\n\nimport {\n  createSigningProfileRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function CreateSigningProfileDialog({\n  open,\n  handleClose,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  var [profileName, setProfileName] = useState('');\n\n  const resetFields = () => {\n    setProfileName('');\n  };\n\n  const handleChangeProfileName = (event) => {\n    setProfileName(event.target.value);\n  };\n\n  const handleResponse = (response) => {\n    goToProfilePage(response.getProfileId());\n  };\n\n  const handleErr = (err) => {\n    alert('Error creating signing profile: ' + err);\n  };\n\n  const createSigningProfile = (profileName) => {\n    createSigningProfileRequest(profileName, handleResponse, handleErr);\n  };\n\n  const goToProfilePage = (profileId) => {\n    history.push(\"/app/profile/\" + profileId);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log( 'profileName:', profileName);\n    if (!profileName) {\n      alert('Profile Name cannot be empty.');\n      return;\n    }\n    createSigningProfile(profileName);\n    handleClose();\n  }\n\n  function CreateSigningProfileNameInput() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Profile Name\"\n        required\n        autoFocus\n        value={profileName}\n        onChange={handleChangeProfileName}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n      />\n    )\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function CreateSigningProfilButton() {\n    return (\n      <Button\n       type=\"submit\"\n       variant=\"contained\"\n       color=\"primary\"\n       className={classes.button}\n       >\n       Create Signing Profile\n       </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Create Signing Profile</DialogTitle>\n  <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n  <DialogContent>\n    {CreateSigningProfileNameInput()}\n  </DialogContent>\n  <DialogActions>\n    {CancelButton()}\n    {CreateSigningProfilButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\nimport SqueakThreadItem from \"../../components/SqueakThreadItem\";\n\nimport {\n  importSigningProfileRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function ImportSigningProfileDialog({\n  open,\n  handleClose,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  var [profileName, setProfileName] = useState('');\n  var [privateKey, setPrivateKey] = useState('');\n\n  const resetFields = () => {\n    setProfileName('');\n  };\n\n  const handleChangeProfileName = (event) => {\n    setProfileName(event.target.value);\n  };\n\n  const handleChangePrivateKey = (event) => {\n    setPrivateKey(event.target.value);\n  };\n\n  const handleResponse = (response) => {\n    goToProfilePage(response.getProfileId());\n  };\n\n  const handleErr = (err) => {\n    alert('Error creating contact profile: ' + err);\n  };\n\n  const goToProfilePage = (profileId) => {\n    history.push(\"/app/profile/\" + profileId);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log( 'profileName:', profileName);\n    console.log( 'privateKey:', privateKey);\n    if (!profileName) {\n      alert('Profile Name cannot be empty.');\n      return;\n    }\n    if (!privateKey) {\n      alert('Private Key cannot be empty.');\n      return;\n    }\n    importSigningProfileRequest(profileName, privateKey, handleResponse, handleErr);\n    handleClose();\n  }\n\n  function ImportSigningProfileNameInput() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Profile Name\"\n        required\n        autoFocus\n        value={profileName}\n        onChange={handleChangeProfileName}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n      />\n    )\n  }\n\n  function ImportSigningProfilePrivateKeyInput() {\n    return (\n      <TextField\n        id=\"standard-textarea\"\n        label=\"Private Key\"\n        required\n        autoFocus\n        value={privateKey}\n        onChange={handleChangePrivateKey}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n      />\n    )\n  }\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function ImportSigningProfilButton() {\n    return (\n      <Button\n       type=\"submit\"\n       variant=\"contained\"\n       color=\"primary\"\n       className={classes.button}\n       >\n       Import Signing Profile\n       </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onEnter={resetFields} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Import Signing Profile</DialogTitle>\n  <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n  <DialogContent>\n    {ImportSigningProfileNameInput()}\n  </DialogContent>\n  <DialogContent>\n    {ImportSigningProfilePrivateKeyInput()}\n  </DialogContent>\n  <DialogActions>\n    {CancelButton()}\n    {ImportSigningProfilButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import React, {useState, useEffect} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {\n    Grid,\n    Button,\n    Paper,\n    Tabs,\n    Tab,\n    AppBar,\n    Box,\n    Typography,\n  } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\n\n// styles\nimport {makeStyles} from '@material-ui/core/styles';\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport Table from \"../dashboard/components/Table/Table\";\nimport CreateSigningProfileDialog from \"../../components/CreateSigningProfileDialog\";\nimport ImportSigningProfileDialog from \"../../components/ImportSigningProfileDialog\";\nimport CreateContactProfileDialog from \"../../components/CreateContactProfileDialog\";\n\n// data\nimport mock from \"../dashboard/mock\";\n\nimport {\n  getSigningProfilesRequest,\n  getContactProfilesRequest,\n} from \"../../squeakclient/requests\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nexport default function Profiles() {\n  const classes = useStyles();\n  const [signingProfiles, setSigningProfiles] = useState([]);\n  const [contactProfiles, setContactProfiles] = useState([]);\n  const [createSigningProfileDialogOpen, setCreateSigningProfileDialogOpen] = useState(false);\n  const [importSigningProfileDialogOpen, setImportSigningProfileDialogOpen] = useState(false);\n  const [createContactProfileDialogOpen, setCreateContactProfileDialogOpen] = useState(false);\n  const [value, setValue] = useState(0);\n  const history = useHistory();\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const loadSigningProfiles = () => {\n    getSigningProfilesRequest(setSigningProfiles);\n  };\n  const loadContactProfiles = () => {\n    getContactProfilesRequest(setContactProfiles);\n  };\n\n  const goToProfilePage = (profileId) => {\n    history.push(\"/app/profile/\" + profileId);\n  };\n\n  const handleClickOpenCreateSigningProfileDialog = () => {\n    setCreateSigningProfileDialogOpen(true);\n  };\n\n  const handleCloseCreateSigningProfileDialog = () => {\n     setCreateSigningProfileDialogOpen(false);\n  };\n\n  const handleClickOpenCreateContactProfileDialog = () => {\n    setCreateContactProfileDialogOpen(true);\n  };\n\n  const handleCloseCreateContactProfileDialog = () => {\n     setCreateContactProfileDialogOpen(false);\n  };\n\n  const handleClickOpenImportSigningProfileDialog = () => {\n    setImportSigningProfileDialogOpen(true);\n  };\n\n  const handleCloseImportSigningProfileDialog = () => {\n     setImportSigningProfileDialogOpen(false);\n  };\n\n  useEffect(() => {\n    loadSigningProfiles()\n  }, []);\n  useEffect(() => {\n    loadContactProfiles()\n  }, []);\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <div>{children}</div>\n        )}\n      </div>\n    );\n  }\n\n  function ProfilesTabs() {\n    return (\n      <>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Signing Profiles\" {...a11yProps(0)} />\n          <Tab label=\"Contact Profiles\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        {SigningProfilesContent()}\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {ContactProfilesContent()}\n      </TabPanel>\n      </>\n    )\n  }\n\n  function SigningProfilesContent() {\n    return (\n      <>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Widget disableWidgetMenu>\n            {CreateSigningProfileButton()}\n            {ImportSigningProfileButton()}\n            {ShowProfiles(\"Signing profiles\", signingProfiles)}\n          </Widget>\n        </Grid>\n      </Grid>\n      </>\n    )\n  }\n\n  function ContactProfilesContent() {\n    return (\n      <>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Widget disableWidgetMenu>\n            {CreateContactProfileButton()}\n            {ShowProfiles(\"Contact profiles\", contactProfiles)}\n          </Widget>\n        </Grid>\n      </Grid>\n      </>\n    )\n  }\n\n  function CreateSigningProfileButton() {\n    return (\n      <>\n      <Grid item xs={12}>\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              handleClickOpenCreateSigningProfileDialog();\n            }}>Create Signing Profile\n          </Button>\n        </div>\n      </Grid>\n      </>\n    )\n  }\n\n  function ImportSigningProfileButton() {\n    return (\n      <>\n      <Grid item xs={12}>\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              handleClickOpenImportSigningProfileDialog();\n            }}>Import Signing Profile\n          </Button>\n        </div>\n      </Grid>\n      </>\n    )\n  }\n\n  function CreateContactProfileButton() {\n    return (\n      <>\n      <Grid item xs={12}>\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              handleClickOpenCreateContactProfileDialog();\n            }}>Add contact\n          </Button>\n        </div>\n      </Grid>\n      </>\n    )\n  }\n\n  function ShowProfiles(title, profiles) {\n    return (\n      <>\n      <Grid container spacing={4}>\n       <Grid item xs={12}>\n         <MUIDataTable\n           title={title}\n           data={profiles.map(p =>\n              [\n                p.getProfileId(),\n                p.getProfileName(),\n                p.getAddress(),\n                p.getFollowing().toString(),\n                p.getSharing().toString(),\n              ]\n            )}\n           columns={[\n             {\n               name: \"Id\",\n               options: {\n                 display: false,\n               }\n             },\n             \"Name\", \"Address\", \"Following\", \"Sharing\"\n           ]}\n           options={{\n             filter: false,\n             print: false,\n             viewColumns: false,\n             selectableRows: \"none\",\n             onRowClick: rowData => {\n               var id = rowData[0];\n               var address = rowData[2];\n               //goToSqueakAddressPage(address);\n               goToProfilePage(id);\n             }\n           }}/>\n       </Grid>\n     </Grid>\n      </>\n    )\n  }\n\n  function CreateSigningProfileDialogContent() {\n    return (\n      <>\n        <CreateSigningProfileDialog\n          open={createSigningProfileDialogOpen}\n          handleClose={handleCloseCreateSigningProfileDialog}\n          ></CreateSigningProfileDialog>\n      </>\n    )\n  }\n\n  function ImportSigningProfileDialogContent() {\n    return (\n      <>\n        <ImportSigningProfileDialog\n          open={importSigningProfileDialogOpen}\n          handleClose={handleCloseImportSigningProfileDialog}\n          ></ImportSigningProfileDialog>\n      </>\n    )\n  }\n\n  function CreateContactProfileDialogContent() {\n    return (\n      <>\n        <CreateContactProfileDialog\n          open={createContactProfileDialogOpen}\n          handleClose={handleCloseCreateContactProfileDialog}\n          ></CreateContactProfileDialog>\n      </>\n    )\n  }\n\n  return (\n    <>\n     < PageTitle title = \"Profiles\" />\n    {ProfilesTabs()}\n    {CreateSigningProfileDialogContent()}\n    {ImportSigningProfileDialogContent()}\n    {CreateContactProfileDialogContent()}\n   < />);\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nimport LockIcon from '@material-ui/icons/Lock';\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\n\nimport moment from 'moment';\n\nexport default function SentPayment({\n  sentPayment,\n  ...props\n}) {\n  var classes = useStyles();\n\n  const history = useHistory();\n\n  const goToSqueakPage = (hash) => {\n    history.push(\"/app/squeak/\" + hash);\n  };\n\n  const goToPeerPage = (id) => {\n    history.push(\"/app/Peer/\" + id);\n  };\n\n  const goToLightningNodePage = (pubkey, host, port) => {\n      console.log(\"Go to lightning node for pubkey: \" + pubkey);\n      if (pubkey && host && port) {\n        history.push(\"/app/lightningnode/\" + pubkey + \"/\" + host + \"/\" + port);\n      } else if (pubkey && host) {\n        history.push(\"/app/lightningnode/\" + pubkey + \"/\" + host);\n      } else {\n        history.push(\"/app/lightningnode/\" + pubkey);\n      }\n  };\n\n  const onSqueakClick = (event) => {\n    event.preventDefault();\n    var hash = sentPayment.getSqueakHash();\n    console.log(\"Handling squeak click for hash: \" + hash);\n    if (goToSqueakPage) {\n      goToSqueakPage(hash);\n    }\n  }\n\n  const onPeerClick = (event) => {\n    event.preventDefault();\n    const peerId = getPeerId();\n    if (peerId == null) {\n      return;\n    }\n    console.log(\"Handling peer click for peerId: \" + peerId);\n    goToPeerPage(peerId);\n  }\n\n  const onLightningNodeClick = (event) => {\n    event.preventDefault();\n    var nodePubkey = sentPayment.getNodePubkey();\n    console.log(\"Handling lightning node click for nodePubkey: \" + nodePubkey);\n    if (goToLightningNodePage) {\n      goToLightningNodePage(nodePubkey);\n    }\n  }\n\n  const getPeerId = () => {\n    if (!sentPayment.getHasPeer()) {\n      return null;\n    }\n    const peer = sentPayment.getPeer();\n    return peer.getPeerId();\n  }\n\n  const getPeerDisplay = () => {\n    if (!sentPayment.getHasPeer()) {\n      return \"Unknown peer\";\n    }\n    const peer = sentPayment.getPeer();\n    const peerName = peer.getPeerName();\n    const peerId = peer.getPeerId();\n    return peerName ? peerName : peerId;\n  }\n\n  function PeerDisplay() {\n    if (sentPayment.getHasPeer()) {\n      return HasPeerDisplay(sentPayment.getPeer());\n    } else {\n      return HasNoPeerDisplay();\n    }\n  }\n\n  function HasPeerDisplay(peer) {\n    const peerId = peer.getPeerId();\n    const peerName = peer.getPeerName();\n    const peerDisplayName = peerName ? peerName : peerId;\n    return (\n      <Link href=\"#\"\n        onClick={onPeerClick}\n        >{peerDisplayName}\n      </Link>\n    )\n  }\n\n  function HasNoPeerDisplay() {\n    return (\n      <>\n        Unknown Peer\n      </>\n    )\n  }\n\n  console.log(sentPayment);\n  return (\n    <Box\n      p={1}\n      m={0}\n      style={{ backgroundColor: \"lightgray\" }}\n      >\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n                <Box fontWeight=\"fontWeightBold\">\n                  {sentPayment.getPriceMsat()} msats\n                </Box>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n              {moment(sentPayment.getTimeS() * 1000).format(\"DD MMM YYYY hh:mm a\")}\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n              Squeak hash:\n                <Link href=\"#\"\n                  onClick={onSqueakClick}\n                  >\n                  <span> </span>{sentPayment.getSqueakHash()}\n                  </Link>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n              Peer: {PeerDisplay()}\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n              Lightning node:\n                <Link href=\"#\"\n                  onClick={onLightningNodeClick}\n                  >\n                  <span> </span>{sentPayment.getNodePubkey()}\n                </Link>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n              Valid:\n                <span> </span>{sentPayment.getValid().toString()}\n            </Grid>\n          </Grid>\n    </Box>\n  )\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\n\nimport moment from 'moment';\n\nexport default function ReceivedPayment({\n  receivedPayment,\n  ...props\n}) {\n  var classes = useStyles();\n\n  const history = useHistory();\n\n  const goToSqueakPage = (hash) => {\n    history.push(\"/app/squeak/\" + hash);\n  };\n\n  const onSqueakClick = (event) => {\n    event.preventDefault();\n    var hash = receivedPayment.getSqueakHash();\n    console.log(\"Handling squeak click for hash: \" + hash);\n    if (goToSqueakPage) {\n      goToSqueakPage(hash);\n    }\n  }\n\n  console.log(\"receivedPayment:\");\n  console.log(receivedPayment);\n  return (\n    <Box\n      p={1}\n      m={0}\n      style={{ backgroundColor: \"lightgray\" }}\n      >\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n                <Box fontWeight=\"fontWeightBold\">\n                  {receivedPayment.getPriceMsat()} msats\n                </Box>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n              {moment(receivedPayment.getTimeS() * 1000).format(\"DD MMM YYYY hh:mm a\")}\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n              Squeak hash:\n                <Link href=\"#\"\n                  onClick={onSqueakClick}\n                  >\n                  <span> </span>{receivedPayment.getSqueakHash()}\n                  </Link>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid item>\n              Buyer address:<span> </span>{receivedPayment.getClientAddr()}\n            </Grid>\n          </Grid>\n    </Box>\n  )\n}\n","import React, {useState, useEffect} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {\n    Grid,\n    Button,\n    Paper,\n    Tabs,\n    Tab,\n    AppBar,\n    Box,\n    Typography,\n  } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\n// styles\nimport {makeStyles} from '@material-ui/core/styles';\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport Table from \"../dashboard/components/Table/Table\";\nimport SentPayment from \"../../components/SentPayment\";\nimport ReceivedPayment from \"../../components/ReceivedPayment\";\n\n\n// data\nimport mock from \"../dashboard/mock\";\n\nimport {\n  getSentPaymentsRequest,\n  getReceivedPaymentsRequest,\n  getPaymentSummaryRequest\n} from \"../../squeakclient/requests\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nexport default function Payments() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [paymentSummary, setPaymentSummary] = useState(null);\n  const history = useHistory();\n\n  const loadPaymentSummary = () => {\n    getPaymentSummaryRequest((paymentsSummaryReply) => {\n      setPaymentSummary(paymentsSummaryReply.getPaymentSummary());\n    });\n  };\n\n  const goToSentPaymentsPage = () => {\n    history.push(\"/app/sentpayments/\");\n  };\n\n  const goToReceivedPaymentsPage = () => {\n    history.push(\"/app/receivedpayments/\");\n  };\n\n  useEffect(() => {\n    loadPaymentSummary();\n  }, []);\n\n  function PaymentSummaryContent() {\n    return (\n      <>\n      {SentPaymentContent()}\n      {ReceivedPaymentContent()}\n      </>\n    )\n  }\n\n  function SentPaymentContent() {\n    return (\n      <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n        <Grid item>\n          <FormLabel>\n            Total amount spent\n          </FormLabel>\n          <Typography size=\"md\">\n            {paymentSummary.getAmountSpentMsat() / 1000} sats\n          </Typography>\n        </Grid>\n        <Grid item>\n          <FormLabel>\n            Number of sent payments\n          </FormLabel>\n          <Typography size=\"md\">\n            {paymentSummary.getNumSentPayments()}\n          </Typography>\n          {ViewSentPaymentsButton()}\n        </Grid>\n        </Widget>\n      </Grid>\n      </Grid>\n    )\n  }\n\n  function ReceivedPaymentContent() {\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Widget disableWidgetMenu>\n          <Grid item>\n            <FormLabel>\n              Total amount earned\n            </FormLabel>\n            <Typography size=\"md\">\n              {paymentSummary.getAmountEarnedMsat() / 1000} sats\n            </Typography>\n          </Grid>\n          <Grid item>\n            <FormLabel>\n              Number of received payments\n            </FormLabel>\n            <Typography size=\"md\">\n              {paymentSummary.getNumReceivedPayments()}\n            </Typography>\n            {ViewReceivedPaymentsButton()}\n          </Grid>\n          </Widget>\n        </Grid>\n      </Grid>\n    )\n  }\n\n  function ViewSentPaymentsButton() {\n    return (\n      <>\n      <Grid item xs={12}>\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              goToSentPaymentsPage();\n            }}>View Sent Payments\n          </Button>\n        </div>\n      </Grid>\n      </>\n    )\n  }\n\n  function ViewReceivedPaymentsButton() {\n    return (\n      <>\n      <Grid item xs={12}>\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              goToReceivedPaymentsPage();\n            }}>View Received Payments\n          </Button>\n        </div>\n      </Grid>\n      </>\n    )\n  }\n\n  return (\n    <>\n     < PageTitle title = \"Payments\" />\n     {paymentSummary && PaymentSummaryContent()}\n   < />);\n}\n","import React, {useState, useEffect} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {\n    Grid,\n    Button,\n    Paper,\n    Tabs,\n    Tab,\n    AppBar,\n    Box,\n    Typography,\n  } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\n// styles\nimport {makeStyles} from '@material-ui/core/styles';\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport Table from \"../dashboard/components/Table/Table\";\nimport SentPayment from \"../../components/SentPayment\";\nimport ReceivedPayment from \"../../components/ReceivedPayment\";\n\n\n// data\nimport mock from \"../dashboard/mock\";\n\nimport {\n  getSentPaymentsRequest,\n} from \"../../squeakclient/requests\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nexport default function SentPayments() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [sentPayments, setSentPayments] = useState([]);\n  const history = useHistory();\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const loadSentPayments = () => {\n    getSentPaymentsRequest((sentPaymentsReply) => {\n      setSentPayments(sentPaymentsReply.getSentPaymentsList());\n    });\n  };\n\n  useEffect(() => {\n    loadSentPayments();\n  }, []);\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <div>{children}</div>\n        )}\n      </div>\n    );\n  }\n\n  function PaymentsTabs() {\n    return (\n      <>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Sent Payments\" {...a11yProps(0)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        {SentPaymentsContent()}\n      </TabPanel>\n      </>\n    )\n  }\n\n  function SentPaymentsContent() {\n    return (\n      <>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Widget disableWidgetMenu>\n          <div>\n          {sentPayments.map(sentPayment =>\n            <Box\n              p={1}\n              key={sentPayment.getSentPaymentId()}\n              >\n            <SentPayment\n              sentPayment={sentPayment}>\n            </SentPayment>\n            </Box>\n          )}\n          </div>\n          </Widget>\n        </Grid>\n      </Grid>\n      </>\n    )\n  }\n\n  return (\n    <>\n     < PageTitle title = \"Sent Payments\" />\n     {PaymentsTabs()}\n   < />);\n}\n","import React, {useState, useEffect} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {\n    Grid,\n    Button,\n    Paper,\n    Tabs,\n    Tab,\n    AppBar,\n    Box,\n    Typography,\n  } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\n// styles\nimport {makeStyles} from '@material-ui/core/styles';\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport Table from \"../dashboard/components/Table/Table\";\nimport ReceivedPayment from \"../../components/ReceivedPayment\";\n\n\n// data\nimport mock from \"../dashboard/mock\";\n\nimport {\n  getReceivedPaymentsRequest,\n} from \"../../squeakclient/requests\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nexport default function ReceivedPayments() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [receivedPayments, setReceivedPayments] = useState([]);\n  const history = useHistory();\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const loadReceivedPayments = () => {\n    getReceivedPaymentsRequest((receivedPaymentsReply) => {\n      setReceivedPayments(receivedPaymentsReply.getReceivedPaymentsList());\n    });\n  };\n\n  useEffect(() => {\n    loadReceivedPayments();\n  }, []);\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <div>{children}</div>\n        )}\n      </div>\n    );\n  }\n\n  function PaymentsTabs() {\n    return (\n      <>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Received Payments\" {...a11yProps(0)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        {ReceivedPaymentsContent()}\n      </TabPanel>\n      </>\n    )\n  }\n\n  function ReceivedPaymentsContent() {\n    console.log(\"receivedPayments: \" + receivedPayments);\n    return (\n      <>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Widget disableWidgetMenu>\n          <div>\n          {receivedPayments.map(receivedPayment =>\n            <Box\n              p={1}\n              key={receivedPayment.getReceivedPaymentId()}\n              >\n            <ReceivedPayment\n              receivedPayment={receivedPayment}>\n            </ReceivedPayment>\n            </Box>\n          )}\n          </div>\n          </Widget>\n        </Grid>\n      </Grid>\n      </>\n    )\n  }\n\n  return (\n    <>\n     < PageTitle title = \"Payments\" />\n     {PaymentsTabs()}\n   < />);\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  titleBold: {\n    fontWeight: 600,\n  },\n  iconsBar: {\n    marginBottom: theme.spacing(4),\n    borderBottom: \"1px solid\",\n    borderBottomColor: theme.palette.text.hint + \"80\",\n  },\n  tab: {\n    color: theme.palette.primary.light + \"CC\",\n  },\n  materailIcon: {\n    display: \"flex\",\n    paddingLeft: `${theme.spacing(4)}px !important`,\n    paddingRight: `${theme.spacing(4)}px !important`,\n    color: theme.palette.text.secondary,\n    fontSize: 24,\n    overflowX: \"hidden\",\n  },\n  materialIconText: {\n    marginLeft: theme.spacing(2),\n    fontSize: 14,\n  },\n  iconsContainer: {\n    boxShadow: theme.customShadows.widget,\n    overflow: \"hidden\",\n    paddingBottom: theme.spacing(2),\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Typography,\n  Grid,\n  Tabs,\n  Tab,\n  Paper,\n} from \"@material-ui/core\";\nimport * as Icons from \"@material-ui/icons\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\n\n\n// icons sets\nimport \"font-awesome/css/font-awesome.min.css\";\n\nexport default function IconsPage () {\n  var classes = useStyles();\n\n  // local\n  var [activeTabId, setActiveTabId] = useState(0);\n\n  return (\n  <>\n    <PageTitle title=\"Icons\" button=\"Action\" />\n    <Paper className={classes.iconsContainer}>\n      <Tabs\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        value={activeTabId}\n        onChange={(e, id) => setActiveTabId(id)}\n        className={classes.iconsBar}\n      >\n        <Tab label=\"Material Icons\" classes={{ root: classes.tab }} />\n        <Tab label=\"Font Awesome\" classes={{ root: classes.tab }} />\n      </Tabs>\n      {activeTabId === 0 && (\n        <div>\n          <Grid container spacing={2} className=\"icon-list\">\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccessAlarm />\n              <Typography className={classes.materialIconText}>\n                AccessAlarm\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccessAlarms />\n              <Typography className={classes.materialIconText}>\n                AccessAlarms\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Accessibility />\n              <Typography className={classes.materialIconText}>\n                Accessibility\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Accessible />\n              <Typography className={classes.materialIconText}>\n                Accessible\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccessibleForward />\n              <Typography className={classes.materialIconText}>\n                AccessibleForward\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccessTime />\n              <Typography className={classes.materialIconText}>\n                AccessTime\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccountBalance />\n              <Typography className={classes.materialIconText}>\n                AccountBalance\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccountBalanceWallet />\n              <Typography className={classes.materialIconText}>\n                AccountBalanceWallet\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccountBox />\n              <Typography className={classes.materialIconText}>\n                AccountBox\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AccountCircle />\n              <Typography className={classes.materialIconText}>\n                AccountCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AcUnit />\n              <Typography className={classes.materialIconText}>\n                AcUnit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Adb />\n              <Typography className={classes.materialIconText}>Adb</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Adjust />\n              <Typography className={classes.materialIconText}>\n                Adjust\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatFlat />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatFlat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatFlatAngled />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatFlatAngled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatIndividualSuite />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatIndividualSuite\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatLegroomExtra />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatLegroomExtra\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatLegroomNormal />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatLegroomNormal\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatLegroomReduced />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatLegroomReduced\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatReclineExtra />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatReclineExtra\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirlineSeatReclineNormal />\n              <Typography className={classes.materialIconText}>\n                AirlineSeatReclineNormal\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirplanemodeActive />\n              <Typography className={classes.materialIconText}>\n                AirplanemodeActive\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirplanemodeInactive />\n              <Typography className={classes.materialIconText}>\n                AirplanemodeInactive\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Airplay />\n              <Typography className={classes.materialIconText}>\n                Airplay\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AirportShuttle />\n              <Typography className={classes.materialIconText}>\n                AirportShuttle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Alarm />\n              <Typography className={classes.materialIconText}>\n                Alarm\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Album />\n              <Typography className={classes.materialIconText}>\n                Album\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AllInbox />\n              <Typography className={classes.materialIconText}>\n                AllInbox\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AllInclusive />\n              <Typography className={classes.materialIconText}>\n                AllInclusive\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AllOut />\n              <Typography className={classes.materialIconText}>\n                AllOut\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AlternateEmail />\n              <Typography className={classes.materialIconText}>\n                AlternateEmail\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Android />\n              <Typography className={classes.materialIconText}>\n                Android\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Announcement />\n              <Typography className={classes.materialIconText}>\n                Announcement\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Apps />\n              <Typography className={classes.materialIconText}>Apps</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Archive />\n              <Typography className={classes.materialIconText}>\n                Archive\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowBack />\n              <Typography className={classes.materialIconText}>\n                ArrowBack\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowBackIos />\n              <Typography className={classes.materialIconText}>\n                ArrowBackIos\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowDownward />\n              <Typography className={classes.materialIconText}>\n                ArrowDownward\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowDropDown />\n              <Typography className={classes.materialIconText}>\n                ArrowDropDown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowDropDownCircle />\n              <Typography className={classes.materialIconText}>\n                ArrowDropDownCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowDropUp />\n              <Typography className={classes.materialIconText}>\n                ArrowDropUp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowForward />\n              <Typography className={classes.materialIconText}>\n                ArrowForward\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowForwardIos />\n              <Typography className={classes.materialIconText}>\n                ArrowForwardIos\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowLeft />\n              <Typography className={classes.materialIconText}>\n                ArrowLeft\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowRight />\n              <Typography className={classes.materialIconText}>\n                ArrowRight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowRightAlt />\n              <Typography className={classes.materialIconText}>\n                ArrowRightAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArrowUpward />\n              <Typography className={classes.materialIconText}>\n                ArrowUpward\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ArtTrack />\n              <Typography className={classes.materialIconText}>\n                ArtTrack\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AspectRatio />\n              <Typography className={classes.materialIconText}>\n                AspectRatio\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Assessment />\n              <Typography className={classes.materialIconText}>\n                Assessment\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Assignment />\n              <Typography className={classes.materialIconText}>\n                Assignment\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AssignmentInd />\n              <Typography className={classes.materialIconText}>\n                AssignmentInd\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AssignmentLate />\n              <Typography className={classes.materialIconText}>\n                AssignmentLate\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AssignmentReturn />\n              <Typography className={classes.materialIconText}>\n                AssignmentReturn\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AssignmentReturned />\n              <Typography className={classes.materialIconText}>\n                AssignmentReturned\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AssignmentTurnedIn />\n              <Typography className={classes.materialIconText}>\n                AssignmentTurnedIn\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Assistant />\n              <Typography className={classes.materialIconText}>\n                Assistant\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AssistantPhoto />\n              <Typography className={classes.materialIconText}>\n                AssistantPhoto\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Atm />\n              <Typography className={classes.materialIconText}>Atm</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AttachFile />\n              <Typography className={classes.materialIconText}>\n                AttachFile\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Attachment />\n              <Typography className={classes.materialIconText}>\n                Attachment\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AttachMoney />\n              <Typography className={classes.materialIconText}>\n                AttachMoney\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Audiotrack />\n              <Typography className={classes.materialIconText}>\n                Audiotrack\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Autorenew />\n              <Typography className={classes.materialIconText}>\n                Autorenew\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.AvTimer />\n              <Typography className={classes.materialIconText}>\n                AvTimer\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Backspace />\n              <Typography className={classes.materialIconText}>\n                Backspace\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Backup />\n              <Typography className={classes.materialIconText}>\n                Backup\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Ballot />\n              <Typography className={classes.materialIconText}>\n                Ballot\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BarChart />\n              <Typography className={classes.materialIconText}>\n                BarChart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Battery20 />\n              <Typography className={classes.materialIconText}>\n                Battery20\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Battery30 />\n              <Typography className={classes.materialIconText}>\n                Battery30\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Battery50 />\n              <Typography className={classes.materialIconText}>\n                Battery50\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Battery60 />\n              <Typography className={classes.materialIconText}>\n                Battery60\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Battery80 />\n              <Typography className={classes.materialIconText}>\n                Battery80\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Battery90 />\n              <Typography className={classes.materialIconText}>\n                Battery90\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryAlert />\n              <Typography className={classes.materialIconText}>\n                BatteryAlert\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryCharging20 />\n              <Typography className={classes.materialIconText}>\n                BatteryCharging20\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryCharging30 />\n              <Typography className={classes.materialIconText}>\n                BatteryCharging30\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryCharging50 />\n              <Typography className={classes.materialIconText}>\n                BatteryCharging50\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryCharging60 />\n              <Typography className={classes.materialIconText}>\n                BatteryCharging60\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryCharging80 />\n              <Typography className={classes.materialIconText}>\n                BatteryCharging80\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryCharging90 />\n              <Typography className={classes.materialIconText}>\n                BatteryCharging90\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryChargingFull />\n              <Typography className={classes.materialIconText}>\n                BatteryChargingFull\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryFull />\n              <Typography className={classes.materialIconText}>\n                BatteryFull\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryStd />\n              <Typography className={classes.materialIconText}>\n                BatteryStd\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BatteryUnknown />\n              <Typography className={classes.materialIconText}>\n                BatteryUnknown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BeachAccess />\n              <Typography className={classes.materialIconText}>\n                BeachAccess\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Beenhere />\n              <Typography className={classes.materialIconText}>\n                Beenhere\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Block />\n              <Typography className={classes.materialIconText}>\n                Block\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Bluetooth />\n              <Typography className={classes.materialIconText}>\n                Bluetooth\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BluetoothAudio />\n              <Typography className={classes.materialIconText}>\n                BluetoothAudio\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BluetoothConnected />\n              <Typography className={classes.materialIconText}>\n                BluetoothConnected\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BluetoothDisabled />\n              <Typography className={classes.materialIconText}>\n                BluetoothDisabled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BluetoothSearching />\n              <Typography className={classes.materialIconText}>\n                BluetoothSearching\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BlurCircular />\n              <Typography className={classes.materialIconText}>\n                BlurCircular\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BlurLinear />\n              <Typography className={classes.materialIconText}>\n                BlurLinear\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Book />\n              <Typography className={classes.materialIconText}>Book</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Bookmark />\n              <Typography className={classes.materialIconText}>\n                Bookmark\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BookmarkBorder />\n              <Typography className={classes.materialIconText}>\n                BookmarkBorder\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Bookmarks />\n              <Typography className={classes.materialIconText}>\n                Bookmarks\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderAll />\n              <Typography className={classes.materialIconText}>\n                BorderAll\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderBottom />\n              <Typography className={classes.materialIconText}>\n                BorderBottom\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderClear />\n              <Typography className={classes.materialIconText}>\n                BorderClear\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderColor />\n              <Typography className={classes.materialIconText}>\n                BorderColor\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderHorizontal />\n              <Typography className={classes.materialIconText}>\n                BorderHorizontal\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderInner />\n              <Typography className={classes.materialIconText}>\n                BorderInner\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderLeft />\n              <Typography className={classes.materialIconText}>\n                BorderLeft\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderOuter />\n              <Typography className={classes.materialIconText}>\n                BorderOuter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderRight />\n              <Typography className={classes.materialIconText}>\n                BorderRight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderStyle />\n              <Typography className={classes.materialIconText}>\n                BorderStyle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderTop />\n              <Typography className={classes.materialIconText}>\n                BorderTop\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BorderVertical />\n              <Typography className={classes.materialIconText}>\n                BorderVertical\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BrandingWatermark />\n              <Typography className={classes.materialIconText}>\n                BrandingWatermark\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brightness1 />\n              <Typography className={classes.materialIconText}>\n                Brightness1\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brightness2 />\n              <Typography className={classes.materialIconText}>\n                Brightness2\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brightness3 />\n              <Typography className={classes.materialIconText}>\n                Brightness3\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brightness4 />\n              <Typography className={classes.materialIconText}>\n                Brightness4\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brightness5 />\n              <Typography className={classes.materialIconText}>\n                Brightness5\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brightness6 />\n              <Typography className={classes.materialIconText}>\n                Brightness6\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brightness7 />\n              <Typography className={classes.materialIconText}>\n                Brightness7\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BrightnessAuto />\n              <Typography className={classes.materialIconText}>\n                BrightnessAuto\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BrightnessHigh />\n              <Typography className={classes.materialIconText}>\n                BrightnessHigh\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BrightnessLow />\n              <Typography className={classes.materialIconText}>\n                BrightnessLow\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BrightnessMedium />\n              <Typography className={classes.materialIconText}>\n                BrightnessMedium\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BrokenImage />\n              <Typography className={classes.materialIconText}>\n                BrokenImage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Brush />\n              <Typography className={classes.materialIconText}>\n                Brush\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BubbleChart />\n              <Typography className={classes.materialIconText}>\n                BubbleChart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BugReport />\n              <Typography className={classes.materialIconText}>\n                BugReport\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Build />\n              <Typography className={classes.materialIconText}>\n                Build\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BurstMode />\n              <Typography className={classes.materialIconText}>\n                BurstMode\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Business />\n              <Typography className={classes.materialIconText}>\n                Business\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.BusinessCenter />\n              <Typography className={classes.materialIconText}>\n                BusinessCenter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Cached />\n              <Typography className={classes.materialIconText}>\n                Cached\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Cake />\n              <Typography className={classes.materialIconText}>Cake</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CalendarToday />\n              <Typography className={classes.materialIconText}>\n                CalendarToday\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CalendarViewDay />\n              <Typography className={classes.materialIconText}>\n                CalendarViewDay\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Call />\n              <Typography className={classes.materialIconText}>Call</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallEnd />\n              <Typography className={classes.materialIconText}>\n                CallEnd\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallMade />\n              <Typography className={classes.materialIconText}>\n                CallMade\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallMerge />\n              <Typography className={classes.materialIconText}>\n                CallMerge\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallMissed />\n              <Typography className={classes.materialIconText}>\n                CallMissed\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallMissedOutgoing />\n              <Typography className={classes.materialIconText}>\n                CallMissedOutgoing\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallReceived />\n              <Typography className={classes.materialIconText}>\n                CallReceived\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallSplit />\n              <Typography className={classes.materialIconText}>\n                CallSplit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CallToAction />\n              <Typography className={classes.materialIconText}>\n                CallToAction\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Camera />\n              <Typography className={classes.materialIconText}>\n                Camera\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CameraAlt />\n              <Typography className={classes.materialIconText}>\n                CameraAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CameraEnhance />\n              <Typography className={classes.materialIconText}>\n                CameraEnhance\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CameraFront />\n              <Typography className={classes.materialIconText}>\n                CameraFront\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CameraRear />\n              <Typography className={classes.materialIconText}>\n                CameraRear\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CameraRoll />\n              <Typography className={classes.materialIconText}>\n                CameraRoll\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Cancel />\n              <Typography className={classes.materialIconText}>\n                Cancel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CancelPresentation />\n              <Typography className={classes.materialIconText}>\n                CancelPresentation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CardGiftcard />\n              <Typography className={classes.materialIconText}>\n                CardGiftcard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CardMembership />\n              <Typography className={classes.materialIconText}>\n                CardMembership\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CardTravel />\n              <Typography className={classes.materialIconText}>\n                CardTravel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Casino />\n              <Typography className={classes.materialIconText}>\n                Casino\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Cast />\n              <Typography className={classes.materialIconText}>Cast</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CastConnected />\n              <Typography className={classes.materialIconText}>\n                CastConnected\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CastForEducation />\n              <Typography className={classes.materialIconText}>\n                CastForEducation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Category />\n              <Typography className={classes.materialIconText}>\n                Category\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CellWifi />\n              <Typography className={classes.materialIconText}>\n                CellWifi\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CenterFocusStrong />\n              <Typography className={classes.materialIconText}>\n                CenterFocusStrong\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CenterFocusWeak />\n              <Typography className={classes.materialIconText}>\n                CenterFocusWeak\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChangeHistory />\n              <Typography className={classes.materialIconText}>\n                ChangeHistory\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Chat />\n              <Typography className={classes.materialIconText}>Chat</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChatBubble />\n              <Typography className={classes.materialIconText}>\n                ChatBubble\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChatBubbleOutline />\n              <Typography className={classes.materialIconText}>\n                ChatBubbleOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Check />\n              <Typography className={classes.materialIconText}>\n                Check\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CheckBox />\n              <Typography className={classes.materialIconText}>\n                CheckBox\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CheckBoxOutlineBlank />\n              <Typography className={classes.materialIconText}>\n                CheckBoxOutlineBlank\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CheckCircle />\n              <Typography className={classes.materialIconText}>\n                CheckCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CheckCircleOutline />\n              <Typography className={classes.materialIconText}>\n                CheckCircleOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChevronLeft />\n              <Typography className={classes.materialIconText}>\n                ChevronLeft\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChevronRight />\n              <Typography className={classes.materialIconText}>\n                ChevronRight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChildCare />\n              <Typography className={classes.materialIconText}>\n                ChildCare\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChildFriendly />\n              <Typography className={classes.materialIconText}>\n                ChildFriendly\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ChromeReaderMode />\n              <Typography className={classes.materialIconText}>\n                ChromeReaderMode\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Class />\n              <Typography className={classes.materialIconText}>\n                Class\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Clear />\n              <Typography className={classes.materialIconText}>\n                Clear\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ClearAll />\n              <Typography className={classes.materialIconText}>\n                ClearAll\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Close />\n              <Typography className={classes.materialIconText}>\n                Close\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ClosedCaption />\n              <Typography className={classes.materialIconText}>\n                ClosedCaption\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Cloud />\n              <Typography className={classes.materialIconText}>\n                Cloud\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CloudCircle />\n              <Typography className={classes.materialIconText}>\n                CloudCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CloudDone />\n              <Typography className={classes.materialIconText}>\n                CloudDone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CloudDownload />\n              <Typography className={classes.materialIconText}>\n                CloudDownload\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CloudQueue />\n              <Typography className={classes.materialIconText}>\n                CloudQueue\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CloudUpload />\n              <Typography className={classes.materialIconText}>\n                CloudUpload\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Code />\n              <Typography className={classes.materialIconText}>Code</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Collections />\n              <Typography className={classes.materialIconText}>\n                Collections\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CollectionsBookmark />\n              <Typography className={classes.materialIconText}>\n                CollectionsBookmark\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Colorize />\n              <Typography className={classes.materialIconText}>\n                Colorize\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ColorLens />\n              <Typography className={classes.materialIconText}>\n                ColorLens\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Comment />\n              <Typography className={classes.materialIconText}>\n                Comment\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Commute />\n              <Typography className={classes.materialIconText}>\n                Commute\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Compare />\n              <Typography className={classes.materialIconText}>\n                Compare\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CompareArrows />\n              <Typography className={classes.materialIconText}>\n                CompareArrows\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CompassCalibration />\n              <Typography className={classes.materialIconText}>\n                CompassCalibration\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Computer />\n              <Typography className={classes.materialIconText}>\n                Computer\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ConfirmationNumber />\n              <Typography className={classes.materialIconText}>\n                ConfirmationNumber\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ContactMail />\n              <Typography className={classes.materialIconText}>\n                ContactMail\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ContactPhone />\n              <Typography className={classes.materialIconText}>\n                ContactPhone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Contacts />\n              <Typography className={classes.materialIconText}>\n                Contacts\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ContactSupport />\n              <Typography className={classes.materialIconText}>\n                ContactSupport\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ControlCamera />\n              <Typography className={classes.materialIconText}>\n                ControlCamera\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ControlPoint />\n              <Typography className={classes.materialIconText}>\n                ControlPoint\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ControlPointDuplicate />\n              <Typography className={classes.materialIconText}>\n                ControlPointDuplicate\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Copyright />\n              <Typography className={classes.materialIconText}>\n                Copyright\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Create />\n              <Typography className={classes.materialIconText}>\n                Create\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CreditCard />\n              <Typography className={classes.materialIconText}>\n                CreditCard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Crop />\n              <Typography className={classes.materialIconText}>Crop</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Crop169 />\n              <Typography className={classes.materialIconText}>\n                Crop169\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Crop32 />\n              <Typography className={classes.materialIconText}>\n                Crop32\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Crop54 />\n              <Typography className={classes.materialIconText}>\n                Crop54\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Crop75 />\n              <Typography className={classes.materialIconText}>\n                Crop75\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CropDin />\n              <Typography className={classes.materialIconText}>\n                CropDin\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CropFree />\n              <Typography className={classes.materialIconText}>\n                CropFree\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CropLandscape />\n              <Typography className={classes.materialIconText}>\n                CropLandscape\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CropOriginal />\n              <Typography className={classes.materialIconText}>\n                CropOriginal\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CropPortrait />\n              <Typography className={classes.materialIconText}>\n                CropPortrait\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CropRotate />\n              <Typography className={classes.materialIconText}>\n                CropRotate\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.CropSquare />\n              <Typography className={classes.materialIconText}>\n                CropSquare\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Dashboard />\n              <Typography className={classes.materialIconText}>\n                Dashboard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DataUsage />\n              <Typography className={classes.materialIconText}>\n                DataUsage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DateRange />\n              <Typography className={classes.materialIconText}>\n                DateRange\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Dehaze />\n              <Typography className={classes.materialIconText}>\n                Dehaze\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Delete />\n              <Typography className={classes.materialIconText}>\n                Delete\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DeleteForever />\n              <Typography className={classes.materialIconText}>\n                DeleteForever\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DeleteOutline />\n              <Typography className={classes.materialIconText}>\n                DeleteOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DeleteSweep />\n              <Typography className={classes.materialIconText}>\n                DeleteSweep\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DepartureBoard />\n              <Typography className={classes.materialIconText}>\n                DepartureBoard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Description />\n              <Typography className={classes.materialIconText}>\n                Description\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DesktopAccessDisabled />\n              <Typography className={classes.materialIconText}>\n                DesktopAccessDisabled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DesktopMac />\n              <Typography className={classes.materialIconText}>\n                DesktopMac\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DesktopWindows />\n              <Typography className={classes.materialIconText}>\n                DesktopWindows\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Details />\n              <Typography className={classes.materialIconText}>\n                Details\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DeveloperBoard />\n              <Typography className={classes.materialIconText}>\n                DeveloperBoard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DeveloperMode />\n              <Typography className={classes.materialIconText}>\n                DeveloperMode\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DeviceHub />\n              <Typography className={classes.materialIconText}>\n                DeviceHub\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Devices />\n              <Typography className={classes.materialIconText}>\n                Devices\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DevicesOther />\n              <Typography className={classes.materialIconText}>\n                DevicesOther\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DeviceUnknown />\n              <Typography className={classes.materialIconText}>\n                DeviceUnknown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DialerSip />\n              <Typography className={classes.materialIconText}>\n                DialerSip\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Dialpad />\n              <Typography className={classes.materialIconText}>\n                Dialpad\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Directions />\n              <Typography className={classes.materialIconText}>\n                Directions\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsBike />\n              <Typography className={classes.materialIconText}>\n                DirectionsBike\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsBoat />\n              <Typography className={classes.materialIconText}>\n                DirectionsBoat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsBus />\n              <Typography className={classes.materialIconText}>\n                DirectionsBus\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsCar />\n              <Typography className={classes.materialIconText}>\n                DirectionsCar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsRailway />\n              <Typography className={classes.materialIconText}>\n                DirectionsRailway\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsRun />\n              <Typography className={classes.materialIconText}>\n                DirectionsRun\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsSubway />\n              <Typography className={classes.materialIconText}>\n                DirectionsSubway\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsTransit />\n              <Typography className={classes.materialIconText}>\n                DirectionsTransit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DirectionsWalk />\n              <Typography className={classes.materialIconText}>\n                DirectionsWalk\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DiscFull />\n              <Typography className={classes.materialIconText}>\n                DiscFull\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Dns />\n              <Typography className={classes.materialIconText}>Dns</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Dock />\n              <Typography className={classes.materialIconText}>Dock</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Domain />\n              <Typography className={classes.materialIconText}>\n                Domain\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DomainDisabled />\n              <Typography className={classes.materialIconText}>\n                DomainDisabled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Done />\n              <Typography className={classes.materialIconText}>Done</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DoneAll />\n              <Typography className={classes.materialIconText}>\n                DoneAll\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DoneOutline />\n              <Typography className={classes.materialIconText}>\n                DoneOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DonutLarge />\n              <Typography className={classes.materialIconText}>\n                DonutLarge\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DonutSmall />\n              <Typography className={classes.materialIconText}>\n                DonutSmall\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Drafts />\n              <Typography className={classes.materialIconText}>\n                Drafts\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DragHandle />\n              <Typography className={classes.materialIconText}>\n                DragHandle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DragIndicator />\n              <Typography className={classes.materialIconText}>\n                DragIndicator\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.DriveEta />\n              <Typography className={classes.materialIconText}>\n                DriveEta\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Duo />\n              <Typography className={classes.materialIconText}>Duo</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Dvr />\n              <Typography className={classes.materialIconText}>Dvr</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Edit />\n              <Typography className={classes.materialIconText}>Edit</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EditAttributes />\n              <Typography className={classes.materialIconText}>\n                EditAttributes\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EditLocation />\n              <Typography className={classes.materialIconText}>\n                EditLocation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Eject />\n              <Typography className={classes.materialIconText}>\n                Eject\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Email />\n              <Typography className={classes.materialIconText}>\n                Email\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EnhancedEncryption />\n              <Typography className={classes.materialIconText}>\n                EnhancedEncryption\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Equalizer />\n              <Typography className={classes.materialIconText}>\n                Equalizer\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Error />\n              <Typography className={classes.materialIconText}>\n                Error\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ErrorOutline />\n              <Typography className={classes.materialIconText}>\n                ErrorOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EuroSymbol />\n              <Typography className={classes.materialIconText}>\n                EuroSymbol\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Event />\n              <Typography className={classes.materialIconText}>\n                Event\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EventAvailable />\n              <Typography className={classes.materialIconText}>\n                EventAvailable\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EventBusy />\n              <Typography className={classes.materialIconText}>\n                EventBusy\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EventNote />\n              <Typography className={classes.materialIconText}>\n                EventNote\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EventSeat />\n              <Typography className={classes.materialIconText}>\n                EventSeat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.EvStation />\n              <Typography className={classes.materialIconText}>\n                EvStation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExitToApp />\n              <Typography className={classes.materialIconText}>\n                ExitToApp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExpandLess />\n              <Typography className={classes.materialIconText}>\n                ExpandLess\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExpandMore />\n              <Typography className={classes.materialIconText}>\n                ExpandMore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Explicit />\n              <Typography className={classes.materialIconText}>\n                Explicit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Explore />\n              <Typography className={classes.materialIconText}>\n                Explore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Exposure />\n              <Typography className={classes.materialIconText}>\n                Exposure\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExposureNeg1 />\n              <Typography className={classes.materialIconText}>\n                ExposureNeg1\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExposureNeg2 />\n              <Typography className={classes.materialIconText}>\n                ExposureNeg2\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExposurePlus1 />\n              <Typography className={classes.materialIconText}>\n                ExposurePlus1\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExposurePlus2 />\n              <Typography className={classes.materialIconText}>\n                ExposurePlus2\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ExposureZero />\n              <Typography className={classes.materialIconText}>\n                ExposureZero\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Extension />\n              <Typography className={classes.materialIconText}>\n                Extension\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Face />\n              <Typography className={classes.materialIconText}>Face</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Fastfood />\n              <Typography className={classes.materialIconText}>\n                Fastfood\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FastForward />\n              <Typography className={classes.materialIconText}>\n                FastForward\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FastRewind />\n              <Typography className={classes.materialIconText}>\n                FastRewind\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Favorite />\n              <Typography className={classes.materialIconText}>\n                Favorite\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FavoriteBorder />\n              <Typography className={classes.materialIconText}>\n                FavoriteBorder\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FeaturedPlayList />\n              <Typography className={classes.materialIconText}>\n                FeaturedPlayList\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FeaturedVideo />\n              <Typography className={classes.materialIconText}>\n                FeaturedVideo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Feedback />\n              <Typography className={classes.materialIconText}>\n                Feedback\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FiberDvr />\n              <Typography className={classes.materialIconText}>\n                FiberDvr\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FiberManualRecord />\n              <Typography className={classes.materialIconText}>\n                FiberManualRecord\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FiberPin />\n              <Typography className={classes.materialIconText}>\n                FiberPin\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FiberSmartRecord />\n              <Typography className={classes.materialIconText}>\n                FiberSmartRecord\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FileCopy />\n              <Typography className={classes.materialIconText}>\n                FileCopy\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter />\n              <Typography className={classes.materialIconText}>\n                Filter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter1 />\n              <Typography className={classes.materialIconText}>\n                Filter1\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter2 />\n              <Typography className={classes.materialIconText}>\n                Filter2\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter3 />\n              <Typography className={classes.materialIconText}>\n                Filter3\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter4 />\n              <Typography className={classes.materialIconText}>\n                Filter4\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter5 />\n              <Typography className={classes.materialIconText}>\n                Filter5\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter6 />\n              <Typography className={classes.materialIconText}>\n                Filter6\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter7 />\n              <Typography className={classes.materialIconText}>\n                Filter7\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter8 />\n              <Typography className={classes.materialIconText}>\n                Filter8\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter9 />\n              <Typography className={classes.materialIconText}>\n                Filter9\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Filter9Plus />\n              <Typography className={classes.materialIconText}>\n                Filter9Plus\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterBAndW />\n              <Typography className={classes.materialIconText}>\n                FilterBAndW\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterCenterFocus />\n              <Typography className={classes.materialIconText}>\n                FilterCenterFocus\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterDrama />\n              <Typography className={classes.materialIconText}>\n                FilterDrama\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterFrames />\n              <Typography className={classes.materialIconText}>\n                FilterFrames\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterHdr />\n              <Typography className={classes.materialIconText}>\n                FilterHdr\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterList />\n              <Typography className={classes.materialIconText}>\n                FilterList\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterNone />\n              <Typography className={classes.materialIconText}>\n                FilterNone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterTiltShift />\n              <Typography className={classes.materialIconText}>\n                FilterTiltShift\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FilterVintage />\n              <Typography className={classes.materialIconText}>\n                FilterVintage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FindInPage />\n              <Typography className={classes.materialIconText}>\n                FindInPage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FindReplace />\n              <Typography className={classes.materialIconText}>\n                FindReplace\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Fingerprint />\n              <Typography className={classes.materialIconText}>\n                Fingerprint\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FirstPage />\n              <Typography className={classes.materialIconText}>\n                FirstPage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FitnessCenter />\n              <Typography className={classes.materialIconText}>\n                FitnessCenter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Flag />\n              <Typography className={classes.materialIconText}>Flag</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Flare />\n              <Typography className={classes.materialIconText}>\n                Flare\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FlashAuto />\n              <Typography className={classes.materialIconText}>\n                FlashAuto\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Flight />\n              <Typography className={classes.materialIconText}>\n                Flight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FlightLand />\n              <Typography className={classes.materialIconText}>\n                FlightLand\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FlightTakeoff />\n              <Typography className={classes.materialIconText}>\n                FlightTakeoff\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Flip />\n              <Typography className={classes.materialIconText}>Flip</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FlipToBack />\n              <Typography className={classes.materialIconText}>\n                FlipToBack\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FlipToFront />\n              <Typography className={classes.materialIconText}>\n                FlipToFront\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Folder />\n              <Typography className={classes.materialIconText}>\n                Folder\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FolderOpen />\n              <Typography className={classes.materialIconText}>\n                FolderOpen\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FolderShared />\n              <Typography className={classes.materialIconText}>\n                FolderShared\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FolderSpecial />\n              <Typography className={classes.materialIconText}>\n                FolderSpecial\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FontDownload />\n              <Typography className={classes.materialIconText}>\n                FontDownload\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatAlignCenter />\n              <Typography className={classes.materialIconText}>\n                FormatAlignCenter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatAlignJustify />\n              <Typography className={classes.materialIconText}>\n                FormatAlignJustify\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatAlignLeft />\n              <Typography className={classes.materialIconText}>\n                FormatAlignLeft\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatAlignRight />\n              <Typography className={classes.materialIconText}>\n                FormatAlignRight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatBold />\n              <Typography className={classes.materialIconText}>\n                FormatBold\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatClear />\n              <Typography className={classes.materialIconText}>\n                FormatClear\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatColorFill />\n              <Typography className={classes.materialIconText}>\n                FormatColorFill\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatColorReset />\n              <Typography className={classes.materialIconText}>\n                FormatColorReset\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatColorText />\n              <Typography className={classes.materialIconText}>\n                FormatColorText\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatIndentDecrease />\n              <Typography className={classes.materialIconText}>\n                FormatIndentDecrease\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatIndentIncrease />\n              <Typography className={classes.materialIconText}>\n                FormatIndentIncrease\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatItalic />\n              <Typography className={classes.materialIconText}>\n                FormatItalic\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatLineSpacing />\n              <Typography className={classes.materialIconText}>\n                FormatLineSpacing\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatListBulleted />\n              <Typography className={classes.materialIconText}>\n                FormatListBulleted\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatListNumbered />\n              <Typography className={classes.materialIconText}>\n                FormatListNumbered\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatListNumberedRtl />\n              <Typography className={classes.materialIconText}>\n                FormatListNumberedRtl\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatPaint />\n              <Typography className={classes.materialIconText}>\n                FormatPaint\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatQuote />\n              <Typography className={classes.materialIconText}>\n                FormatQuote\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatShapes />\n              <Typography className={classes.materialIconText}>\n                FormatShapes\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatSize />\n              <Typography className={classes.materialIconText}>\n                FormatSize\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatStrikethrough />\n              <Typography className={classes.materialIconText}>\n                FormatStrikethrough\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatTextdirectionLToR />\n              <Typography className={classes.materialIconText}>\n                FormatTextdirectionLToR\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatTextdirectionRToL />\n              <Typography className={classes.materialIconText}>\n                FormatTextdirectionRToL\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FormatUnderlined />\n              <Typography className={classes.materialIconText}>\n                FormatUnderlined\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Forum />\n              <Typography className={classes.materialIconText}>\n                Forum\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Forward />\n              <Typography className={classes.materialIconText}>\n                Forward\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Forward10 />\n              <Typography className={classes.materialIconText}>\n                Forward10\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Forward30 />\n              <Typography className={classes.materialIconText}>\n                Forward30\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Forward5 />\n              <Typography className={classes.materialIconText}>\n                Forward5\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FourK />\n              <Typography className={classes.materialIconText}>\n                FourK\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FreeBreakfast />\n              <Typography className={classes.materialIconText}>\n                FreeBreakfast\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Fullscreen />\n              <Typography className={classes.materialIconText}>\n                Fullscreen\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.FullscreenExit />\n              <Typography className={classes.materialIconText}>\n                FullscreenExit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Functions />\n              <Typography className={classes.materialIconText}>\n                Functions\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Gamepad />\n              <Typography className={classes.materialIconText}>\n                Gamepad\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Games />\n              <Typography className={classes.materialIconText}>\n                Games\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Gavel />\n              <Typography className={classes.materialIconText}>\n                Gavel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Gesture />\n              <Typography className={classes.materialIconText}>\n                Gesture\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.GetApp />\n              <Typography className={classes.materialIconText}>\n                GetApp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Gif />\n              <Typography className={classes.materialIconText}>Gif</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.GolfCourse />\n              <Typography className={classes.materialIconText}>\n                GolfCourse\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.GpsFixed />\n              <Typography className={classes.materialIconText}>\n                GpsFixed\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.GpsNotFixed />\n              <Typography className={classes.materialIconText}>\n                GpsNotFixed\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Grade />\n              <Typography className={classes.materialIconText}>\n                Grade\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Gradient />\n              <Typography className={classes.materialIconText}>\n                Gradient\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Grain />\n              <Typography className={classes.materialIconText}>\n                Grain\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.GraphicEq />\n              <Typography className={classes.materialIconText}>\n                GraphicEq\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Group />\n              <Typography className={classes.materialIconText}>\n                Group\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.GroupWork />\n              <Typography className={classes.materialIconText}>\n                GroupWork\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.GTranslate />\n              <Typography className={classes.materialIconText}>\n                GTranslate\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Hd />\n              <Typography className={classes.materialIconText}>Hd</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HdrStrong />\n              <Typography className={classes.materialIconText}>\n                HdrStrong\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HdrWeak />\n              <Typography className={classes.materialIconText}>\n                HdrWeak\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Headset />\n              <Typography className={classes.materialIconText}>\n                Headset\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HeadsetMic />\n              <Typography className={classes.materialIconText}>\n                HeadsetMic\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Healing />\n              <Typography className={classes.materialIconText}>\n                Healing\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Hearing />\n              <Typography className={classes.materialIconText}>\n                Hearing\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Help />\n              <Typography className={classes.materialIconText}>Help</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HelpOutline />\n              <Typography className={classes.materialIconText}>\n                HelpOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Highlight />\n              <Typography className={classes.materialIconText}>\n                Highlight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HighQuality />\n              <Typography className={classes.materialIconText}>\n                HighQuality\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.History />\n              <Typography className={classes.materialIconText}>\n                History\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Home />\n              <Typography className={classes.materialIconText}>Home</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HorizontalSplit />\n              <Typography className={classes.materialIconText}>\n                HorizontalSplit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Hotel />\n              <Typography className={classes.materialIconText}>\n                Hotel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HotTub />\n              <Typography className={classes.materialIconText}>\n                HotTub\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HourglassEmpty />\n              <Typography className={classes.materialIconText}>\n                HourglassEmpty\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HourglassFull />\n              <Typography className={classes.materialIconText}>\n                HourglassFull\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HowToReg />\n              <Typography className={classes.materialIconText}>\n                HowToReg\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.HowToVote />\n              <Typography className={classes.materialIconText}>\n                HowToVote\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Http />\n              <Typography className={classes.materialIconText}>Http</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Https />\n              <Typography className={classes.materialIconText}>\n                Https\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Image />\n              <Typography className={classes.materialIconText}>\n                Image\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ImageAspectRatio />\n              <Typography className={classes.materialIconText}>\n                ImageAspectRatio\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ImageSearch />\n              <Typography className={classes.materialIconText}>\n                ImageSearch\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ImportantDevices />\n              <Typography className={classes.materialIconText}>\n                ImportantDevices\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ImportContacts />\n              <Typography className={classes.materialIconText}>\n                ImportContacts\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ImportExport />\n              <Typography className={classes.materialIconText}>\n                ImportExport\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Inbox />\n              <Typography className={classes.materialIconText}>\n                Inbox\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.IndeterminateCheckBox />\n              <Typography className={classes.materialIconText}>\n                IndeterminateCheckBox\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Info />\n              <Typography className={classes.materialIconText}>Info</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Input />\n              <Typography className={classes.materialIconText}>\n                Input\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InsertChart />\n              <Typography className={classes.materialIconText}>\n                InsertChart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InsertComment />\n              <Typography className={classes.materialIconText}>\n                InsertComment\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InsertDriveFile />\n              <Typography className={classes.materialIconText}>\n                InsertDriveFile\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InsertEmoticon />\n              <Typography className={classes.materialIconText}>\n                InsertEmoticon\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InsertInvitation />\n              <Typography className={classes.materialIconText}>\n                InsertInvitation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InsertLink />\n              <Typography className={classes.materialIconText}>\n                InsertLink\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InsertPhoto />\n              <Typography className={classes.materialIconText}>\n                InsertPhoto\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.InvertColors />\n              <Typography className={classes.materialIconText}>\n                InvertColors\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Iso />\n              <Typography className={classes.materialIconText}>Iso</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Keyboard />\n              <Typography className={classes.materialIconText}>\n                Keyboard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardArrowDown />\n              <Typography className={classes.materialIconText}>\n                KeyboardArrowDown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardArrowLeft />\n              <Typography className={classes.materialIconText}>\n                KeyboardArrowLeft\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardArrowRight />\n              <Typography className={classes.materialIconText}>\n                KeyboardArrowRight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardArrowUp />\n              <Typography className={classes.materialIconText}>\n                KeyboardArrowUp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardBackspace />\n              <Typography className={classes.materialIconText}>\n                KeyboardBackspace\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardCapslock />\n              <Typography className={classes.materialIconText}>\n                KeyboardCapslock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardHide />\n              <Typography className={classes.materialIconText}>\n                KeyboardHide\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardReturn />\n              <Typography className={classes.materialIconText}>\n                KeyboardReturn\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardTab />\n              <Typography className={classes.materialIconText}>\n                KeyboardTab\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.KeyboardVoice />\n              <Typography className={classes.materialIconText}>\n                KeyboardVoice\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Kitchen />\n              <Typography className={classes.materialIconText}>\n                Kitchen\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Label />\n              <Typography className={classes.materialIconText}>\n                Label\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LabelImportant />\n              <Typography className={classes.materialIconText}>\n                LabelImportant\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Landscape />\n              <Typography className={classes.materialIconText}>\n                Landscape\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Language />\n              <Typography className={classes.materialIconText}>\n                Language\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Laptop />\n              <Typography className={classes.materialIconText}>\n                Laptop\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LaptopChromebook />\n              <Typography className={classes.materialIconText}>\n                LaptopChromebook\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LaptopMac />\n              <Typography className={classes.materialIconText}>\n                LaptopMac\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LaptopWindows />\n              <Typography className={classes.materialIconText}>\n                LaptopWindows\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LastPage />\n              <Typography className={classes.materialIconText}>\n                LastPage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Launch />\n              <Typography className={classes.materialIconText}>\n                Launch\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Layers />\n              <Typography className={classes.materialIconText}>\n                Layers\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LayersClear />\n              <Typography className={classes.materialIconText}>\n                LayersClear\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LeakRemove />\n              <Typography className={classes.materialIconText}>\n                LeakRemove\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Lens />\n              <Typography className={classes.materialIconText}>Lens</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LibraryBooks />\n              <Typography className={classes.materialIconText}>\n                LibraryBooks\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LibraryMusic />\n              <Typography className={classes.materialIconText}>\n                LibraryMusic\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LinearScale />\n              <Typography className={classes.materialIconText}>\n                LinearScale\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LineStyle />\n              <Typography className={classes.materialIconText}>\n                LineStyle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LineWeight />\n              <Typography className={classes.materialIconText}>\n                LineWeight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Link />\n              <Typography className={classes.materialIconText}>Link</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LinkedCamera />\n              <Typography className={classes.materialIconText}>\n                LinkedCamera\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.List />\n              <Typography className={classes.materialIconText}>List</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ListAlt />\n              <Typography className={classes.materialIconText}>\n                ListAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LiveHelp />\n              <Typography className={classes.materialIconText}>\n                LiveHelp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LiveTv />\n              <Typography className={classes.materialIconText}>\n                LiveTv\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalActivity />\n              <Typography className={classes.materialIconText}>\n                LocalActivity\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalAirport />\n              <Typography className={classes.materialIconText}>\n                LocalAirport\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalAtm />\n              <Typography className={classes.materialIconText}>\n                LocalAtm\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalBar />\n              <Typography className={classes.materialIconText}>\n                LocalBar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalCafe />\n              <Typography className={classes.materialIconText}>\n                LocalCafe\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalCarWash />\n              <Typography className={classes.materialIconText}>\n                LocalCarWash\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalConvenienceStore />\n              <Typography className={classes.materialIconText}>\n                LocalConvenienceStore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalDining />\n              <Typography className={classes.materialIconText}>\n                LocalDining\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalDrink />\n              <Typography className={classes.materialIconText}>\n                LocalDrink\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalFlorist />\n              <Typography className={classes.materialIconText}>\n                LocalFlorist\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalGasStation />\n              <Typography className={classes.materialIconText}>\n                LocalGasStation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalGroceryStore />\n              <Typography className={classes.materialIconText}>\n                LocalGroceryStore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalHospital />\n              <Typography className={classes.materialIconText}>\n                LocalHospital\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalHotel />\n              <Typography className={classes.materialIconText}>\n                LocalHotel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalLaundryService />\n              <Typography className={classes.materialIconText}>\n                LocalLaundryService\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalLibrary />\n              <Typography className={classes.materialIconText}>\n                LocalLibrary\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalMall />\n              <Typography className={classes.materialIconText}>\n                LocalMall\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalMovies />\n              <Typography className={classes.materialIconText}>\n                LocalMovies\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalParking />\n              <Typography className={classes.materialIconText}>\n                LocalParking\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalPharmacy />\n              <Typography className={classes.materialIconText}>\n                LocalPharmacy\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalPhone />\n              <Typography className={classes.materialIconText}>\n                LocalPhone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalPizza />\n              <Typography className={classes.materialIconText}>\n                LocalPizza\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalPlay />\n              <Typography className={classes.materialIconText}>\n                LocalPlay\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalPrintshop />\n              <Typography className={classes.materialIconText}>\n                LocalPrintshop\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalSee />\n              <Typography className={classes.materialIconText}>\n                LocalSee\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalShipping />\n              <Typography className={classes.materialIconText}>\n                LocalShipping\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocalTaxi />\n              <Typography className={classes.materialIconText}>\n                LocalTaxi\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocationCity />\n              <Typography className={classes.materialIconText}>\n                LocationCity\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocationDisabled />\n              <Typography className={classes.materialIconText}>\n                LocationDisabled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LocationSearching />\n              <Typography className={classes.materialIconText}>\n                LocationSearching\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Lock />\n              <Typography className={classes.materialIconText}>Lock</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LockOpen />\n              <Typography className={classes.materialIconText}>\n                LockOpen\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Looks />\n              <Typography className={classes.materialIconText}>\n                Looks\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Looks3 />\n              <Typography className={classes.materialIconText}>\n                Looks3\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Looks4 />\n              <Typography className={classes.materialIconText}>\n                Looks4\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Looks5 />\n              <Typography className={classes.materialIconText}>\n                Looks5\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Looks6 />\n              <Typography className={classes.materialIconText}>\n                Looks6\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LooksTwo />\n              <Typography className={classes.materialIconText}>\n                LooksTwo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Loop />\n              <Typography className={classes.materialIconText}>Loop</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Loupe />\n              <Typography className={classes.materialIconText}>\n                Loupe\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.LowPriority />\n              <Typography className={classes.materialIconText}>\n                LowPriority\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Loyalty />\n              <Typography className={classes.materialIconText}>\n                Loyalty\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Mail />\n              <Typography className={classes.materialIconText}>Mail</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MailOutline />\n              <Typography className={classes.materialIconText}>\n                MailOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Map />\n              <Typography className={classes.materialIconText}>Map</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Markunread />\n              <Typography className={classes.materialIconText}>\n                Markunread\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MarkunreadMailbox />\n              <Typography className={classes.materialIconText}>\n                MarkunreadMailbox\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Maximize />\n              <Typography className={classes.materialIconText}>\n                Maximize\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MeetingRoom />\n              <Typography className={classes.materialIconText}>\n                MeetingRoom\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Memory />\n              <Typography className={classes.materialIconText}>\n                Memory\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Menu />\n              <Typography className={classes.materialIconText}>Menu</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MergeType />\n              <Typography className={classes.materialIconText}>\n                MergeType\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Message />\n              <Typography className={classes.materialIconText}>\n                Message\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Mic />\n              <Typography className={classes.materialIconText}>Mic</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MicNone />\n              <Typography className={classes.materialIconText}>\n                MicNone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Minimize />\n              <Typography className={classes.materialIconText}>\n                Minimize\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MissedVideoCall />\n              <Typography className={classes.materialIconText}>\n                MissedVideoCall\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Mms />\n              <Typography className={classes.materialIconText}>Mms</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MobileFriendly />\n              <Typography className={classes.materialIconText}>\n                MobileFriendly\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MobileScreenShare />\n              <Typography className={classes.materialIconText}>\n                MobileScreenShare\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ModeComment />\n              <Typography className={classes.materialIconText}>\n                ModeComment\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Money />\n              <Typography className={classes.materialIconText}>\n                Money\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MonochromePhotos />\n              <Typography className={classes.materialIconText}>\n                MonochromePhotos\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Mood />\n              <Typography className={classes.materialIconText}>Mood</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MoodBad />\n              <Typography className={classes.materialIconText}>\n                MoodBad\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.More />\n              <Typography className={classes.materialIconText}>More</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MoreHoriz />\n              <Typography className={classes.materialIconText}>\n                MoreHoriz\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MoreVert />\n              <Typography className={classes.materialIconText}>\n                MoreVert\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Motorcycle />\n              <Typography className={classes.materialIconText}>\n                Motorcycle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Mouse />\n              <Typography className={classes.materialIconText}>\n                Mouse\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MoveToInbox />\n              <Typography className={classes.materialIconText}>\n                MoveToInbox\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Movie />\n              <Typography className={classes.materialIconText}>\n                Movie\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MovieCreation />\n              <Typography className={classes.materialIconText}>\n                MovieCreation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MovieFilter />\n              <Typography className={classes.materialIconText}>\n                MovieFilter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MultilineChart />\n              <Typography className={classes.materialIconText}>\n                MultilineChart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MusicNote />\n              <Typography className={classes.materialIconText}>\n                MusicNote\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MusicVideo />\n              <Typography className={classes.materialIconText}>\n                MusicVideo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.MyLocation />\n              <Typography className={classes.materialIconText}>\n                MyLocation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Nature />\n              <Typography className={classes.materialIconText}>\n                Nature\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NaturePeople />\n              <Typography className={classes.materialIconText}>\n                NaturePeople\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NavigateBefore />\n              <Typography className={classes.materialIconText}>\n                NavigateBefore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NavigateNext />\n              <Typography className={classes.materialIconText}>\n                NavigateNext\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Navigation />\n              <Typography className={classes.materialIconText}>\n                Navigation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NearMe />\n              <Typography className={classes.materialIconText}>\n                NearMe\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NetworkCell />\n              <Typography className={classes.materialIconText}>\n                NetworkCell\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NetworkCheck />\n              <Typography className={classes.materialIconText}>\n                NetworkCheck\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NetworkLocked />\n              <Typography className={classes.materialIconText}>\n                NetworkLocked\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NetworkWifi />\n              <Typography className={classes.materialIconText}>\n                NetworkWifi\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NextWeek />\n              <Typography className={classes.materialIconText}>\n                NextWeek\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Nfc />\n              <Typography className={classes.materialIconText}>Nfc</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NoEncryption />\n              <Typography className={classes.materialIconText}>\n                NoEncryption\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NoMeetingRoom />\n              <Typography className={classes.materialIconText}>\n                NoMeetingRoom\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NoSim />\n              <Typography className={classes.materialIconText}>\n                NoSim\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Note />\n              <Typography className={classes.materialIconText}>Note</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Notes />\n              <Typography className={classes.materialIconText}>\n                Notes\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NotificationImportant />\n              <Typography className={classes.materialIconText}>\n                NotificationImportant\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Notifications />\n              <Typography className={classes.materialIconText}>\n                Notifications\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NotificationsActive />\n              <Typography className={classes.materialIconText}>\n                NotificationsActive\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NotificationsNone />\n              <Typography className={classes.materialIconText}>\n                NotificationsNone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NotificationsPaused />\n              <Typography className={classes.materialIconText}>\n                NotificationsPaused\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NotInterested />\n              <Typography className={classes.materialIconText}>\n                NotInterested\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.NotListedLocation />\n              <Typography className={classes.materialIconText}>\n                NotListedLocation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Opacity />\n              <Typography className={classes.materialIconText}>\n                Opacity\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.OpenInBrowser />\n              <Typography className={classes.materialIconText}>\n                OpenInBrowser\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.OpenWith />\n              <Typography className={classes.materialIconText}>\n                OpenWith\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Pages />\n              <Typography className={classes.materialIconText}>\n                Pages\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Pageview />\n              <Typography className={classes.materialIconText}>\n                Pageview\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Palette />\n              <Typography className={classes.materialIconText}>\n                Palette\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Panorama />\n              <Typography className={classes.materialIconText}>\n                Panorama\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PanoramaFishEye />\n              <Typography className={classes.materialIconText}>\n                PanoramaFishEye\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PanoramaHorizontal />\n              <Typography className={classes.materialIconText}>\n                PanoramaHorizontal\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PanoramaVertical />\n              <Typography className={classes.materialIconText}>\n                PanoramaVertical\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PanoramaWideAngle />\n              <Typography className={classes.materialIconText}>\n                PanoramaWideAngle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PanTool />\n              <Typography className={classes.materialIconText}>\n                PanTool\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PartyMode />\n              <Typography className={classes.materialIconText}>\n                PartyMode\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Pause />\n              <Typography className={classes.materialIconText}>\n                Pause\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PauseCircleFilled />\n              <Typography className={classes.materialIconText}>\n                PauseCircleFilled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PauseCircleOutline />\n              <Typography className={classes.materialIconText}>\n                PauseCircleOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PausePresentation />\n              <Typography className={classes.materialIconText}>\n                PausePresentation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Payment />\n              <Typography className={classes.materialIconText}>\n                Payment\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.People />\n              <Typography className={classes.materialIconText}>\n                People\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PeopleOutline />\n              <Typography className={classes.materialIconText}>\n                PeopleOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermCameraMic />\n              <Typography className={classes.materialIconText}>\n                PermCameraMic\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermContactCalendar />\n              <Typography className={classes.materialIconText}>\n                PermContactCalendar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermDataSetting />\n              <Typography className={classes.materialIconText}>\n                PermDataSetting\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermDeviceInformation />\n              <Typography className={classes.materialIconText}>\n                PermDeviceInformation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermIdentity />\n              <Typography className={classes.materialIconText}>\n                PermIdentity\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermMedia />\n              <Typography className={classes.materialIconText}>\n                PermMedia\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermPhoneMsg />\n              <Typography className={classes.materialIconText}>\n                PermPhoneMsg\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PermScanWifi />\n              <Typography className={classes.materialIconText}>\n                PermScanWifi\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Person />\n              <Typography className={classes.materialIconText}>\n                Person\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PersonalVideo />\n              <Typography className={classes.materialIconText}>\n                PersonalVideo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PersonOutline />\n              <Typography className={classes.materialIconText}>\n                PersonOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PersonPin />\n              <Typography className={classes.materialIconText}>\n                PersonPin\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PersonPinCircle />\n              <Typography className={classes.materialIconText}>\n                PersonPinCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Pets />\n              <Typography className={classes.materialIconText}>Pets</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Phone />\n              <Typography className={classes.materialIconText}>\n                Phone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneAndroid />\n              <Typography className={classes.materialIconText}>\n                PhoneAndroid\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneBluetoothSpeaker />\n              <Typography className={classes.materialIconText}>\n                PhoneBluetoothSpeaker\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneCallback />\n              <Typography className={classes.materialIconText}>\n                PhoneCallback\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneForwarded />\n              <Typography className={classes.materialIconText}>\n                PhoneForwarded\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneInTalk />\n              <Typography className={classes.materialIconText}>\n                PhoneInTalk\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneIphone />\n              <Typography className={classes.materialIconText}>\n                PhoneIphone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Phonelink />\n              <Typography className={classes.materialIconText}>\n                Phonelink\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhonelinkErase />\n              <Typography className={classes.materialIconText}>\n                PhonelinkErase\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhonelinkLock />\n              <Typography className={classes.materialIconText}>\n                PhonelinkLock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhonelinkRing />\n              <Typography className={classes.materialIconText}>\n                PhonelinkRing\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhonelinkSetup />\n              <Typography className={classes.materialIconText}>\n                PhonelinkSetup\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneLocked />\n              <Typography className={classes.materialIconText}>\n                PhoneLocked\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhoneMissed />\n              <Typography className={classes.materialIconText}>\n                PhoneMissed\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhonePaused />\n              <Typography className={classes.materialIconText}>\n                PhonePaused\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Photo />\n              <Typography className={classes.materialIconText}>\n                Photo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhotoAlbum />\n              <Typography className={classes.materialIconText}>\n                PhotoAlbum\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhotoCamera />\n              <Typography className={classes.materialIconText}>\n                PhotoCamera\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhotoFilter />\n              <Typography className={classes.materialIconText}>\n                PhotoFilter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhotoLibrary />\n              <Typography className={classes.materialIconText}>\n                PhotoLibrary\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhotoSizeSelectActual />\n              <Typography className={classes.materialIconText}>\n                PhotoSizeSelectActual\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhotoSizeSelectLarge />\n              <Typography className={classes.materialIconText}>\n                PhotoSizeSelectLarge\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PhotoSizeSelectSmall />\n              <Typography className={classes.materialIconText}>\n                PhotoSizeSelectSmall\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PictureAsPdf />\n              <Typography className={classes.materialIconText}>\n                PictureAsPdf\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PictureInPicture />\n              <Typography className={classes.materialIconText}>\n                PictureInPicture\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PictureInPictureAlt />\n              <Typography className={classes.materialIconText}>\n                PictureInPictureAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PieChart />\n              <Typography className={classes.materialIconText}>\n                PieChart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PinDrop />\n              <Typography className={classes.materialIconText}>\n                PinDrop\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Place />\n              <Typography className={classes.materialIconText}>\n                Place\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PlayArrow />\n              <Typography className={classes.materialIconText}>\n                PlayArrow\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PlayCircleFilled />\n              <Typography className={classes.materialIconText}>\n                PlayCircleFilled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PlayCircleFilledWhite />\n              <Typography className={classes.materialIconText}>\n                PlayCircleFilledWhite\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PlayCircleOutline />\n              <Typography className={classes.materialIconText}>\n                PlayCircleOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PlayForWork />\n              <Typography className={classes.materialIconText}>\n                PlayForWork\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PlaylistPlay />\n              <Typography className={classes.materialIconText}>\n                PlaylistPlay\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Poll />\n              <Typography className={classes.materialIconText}>Poll</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Polymer />\n              <Typography className={classes.materialIconText}>\n                Polymer\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Pool />\n              <Typography className={classes.materialIconText}>Pool</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Portrait />\n              <Typography className={classes.materialIconText}>\n                Portrait\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Power />\n              <Typography className={classes.materialIconText}>\n                Power\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PowerInput />\n              <Typography className={classes.materialIconText}>\n                PowerInput\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PregnantWoman />\n              <Typography className={classes.materialIconText}>\n                PregnantWoman\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PresentToAll />\n              <Typography className={classes.materialIconText}>\n                PresentToAll\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Print />\n              <Typography className={classes.materialIconText}>\n                Print\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PrintDisabled />\n              <Typography className={classes.materialIconText}>\n                PrintDisabled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.PriorityHigh />\n              <Typography className={classes.materialIconText}>\n                PriorityHigh\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Public />\n              <Typography className={classes.materialIconText}>\n                Public\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Publish />\n              <Typography className={classes.materialIconText}>\n                Publish\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.QueryBuilder />\n              <Typography className={classes.materialIconText}>\n                QueryBuilder\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.QuestionAnswer />\n              <Typography className={classes.materialIconText}>\n                QuestionAnswer\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Queue />\n              <Typography className={classes.materialIconText}>\n                Queue\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.QueueMusic />\n              <Typography className={classes.materialIconText}>\n                QueueMusic\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.QueuePlayNext />\n              <Typography className={classes.materialIconText}>\n                QueuePlayNext\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Radio />\n              <Typography className={classes.materialIconText}>\n                Radio\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RadioButtonChecked />\n              <Typography className={classes.materialIconText}>\n                RadioButtonChecked\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RadioButtonUnchecked />\n              <Typography className={classes.materialIconText}>\n                RadioButtonUnchecked\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RateReview />\n              <Typography className={classes.materialIconText}>\n                RateReview\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Receipt />\n              <Typography className={classes.materialIconText}>\n                Receipt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RecentActors />\n              <Typography className={classes.materialIconText}>\n                RecentActors\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RecordVoiceOver />\n              <Typography className={classes.materialIconText}>\n                RecordVoiceOver\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Redeem />\n              <Typography className={classes.materialIconText}>\n                Redeem\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Redo />\n              <Typography className={classes.materialIconText}>Redo</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Refresh />\n              <Typography className={classes.materialIconText}>\n                Refresh\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Remove />\n              <Typography className={classes.materialIconText}>\n                Remove\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RemoveCircle />\n              <Typography className={classes.materialIconText}>\n                RemoveCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RemoveCircleOutline />\n              <Typography className={classes.materialIconText}>\n                RemoveCircleOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RemoveFromQueue />\n              <Typography className={classes.materialIconText}>\n                RemoveFromQueue\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RemoveRedEye />\n              <Typography className={classes.materialIconText}>\n                RemoveRedEye\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RemoveShoppingCart />\n              <Typography className={classes.materialIconText}>\n                RemoveShoppingCart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Reorder />\n              <Typography className={classes.materialIconText}>\n                Reorder\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Repeat />\n              <Typography className={classes.materialIconText}>\n                Repeat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Replay />\n              <Typography className={classes.materialIconText}>\n                Replay\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Replay10 />\n              <Typography className={classes.materialIconText}>\n                Replay10\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Replay30 />\n              <Typography className={classes.materialIconText}>\n                Replay30\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Replay5 />\n              <Typography className={classes.materialIconText}>\n                Replay5\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Reply />\n              <Typography className={classes.materialIconText}>\n                Reply\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ReplyAll />\n              <Typography className={classes.materialIconText}>\n                ReplyAll\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Report />\n              <Typography className={classes.materialIconText}>\n                Report\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ReportProblem />\n              <Typography className={classes.materialIconText}>\n                ReportProblem\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Restaurant />\n              <Typography className={classes.materialIconText}>\n                Restaurant\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RestaurantMenu />\n              <Typography className={classes.materialIconText}>\n                RestaurantMenu\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Restore />\n              <Typography className={classes.materialIconText}>\n                Restore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RestoreFromTrash />\n              <Typography className={classes.materialIconText}>\n                RestoreFromTrash\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RestorePage />\n              <Typography className={classes.materialIconText}>\n                RestorePage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RingVolume />\n              <Typography className={classes.materialIconText}>\n                RingVolume\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Room />\n              <Typography className={classes.materialIconText}>Room</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RoomService />\n              <Typography className={classes.materialIconText}>\n                RoomService\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Rotate90DegreesCcw />\n              <Typography className={classes.materialIconText}>\n                Rotate90DegreesCcw\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RotateLeft />\n              <Typography className={classes.materialIconText}>\n                RotateLeft\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RotateRight />\n              <Typography className={classes.materialIconText}>\n                RotateRight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Router />\n              <Typography className={classes.materialIconText}>\n                Router\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Rowing />\n              <Typography className={classes.materialIconText}>\n                Rowing\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RssFeed />\n              <Typography className={classes.materialIconText}>\n                RssFeed\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.RvHookup />\n              <Typography className={classes.materialIconText}>\n                RvHookup\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Satellite />\n              <Typography className={classes.materialIconText}>\n                Satellite\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Save />\n              <Typography className={classes.materialIconText}>Save</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SaveAlt />\n              <Typography className={classes.materialIconText}>\n                SaveAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Scanner />\n              <Typography className={classes.materialIconText}>\n                Scanner\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ScatterPlot />\n              <Typography className={classes.materialIconText}>\n                ScatterPlot\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Schedule />\n              <Typography className={classes.materialIconText}>\n                Schedule\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.School />\n              <Typography className={classes.materialIconText}>\n                School\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Score />\n              <Typography className={classes.materialIconText}>\n                Score\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ScreenLockLandscape />\n              <Typography className={classes.materialIconText}>\n                ScreenLockLandscape\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ScreenLockPortrait />\n              <Typography className={classes.materialIconText}>\n                ScreenLockPortrait\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ScreenLockRotation />\n              <Typography className={classes.materialIconText}>\n                ScreenLockRotation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ScreenRotation />\n              <Typography className={classes.materialIconText}>\n                ScreenRotation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ScreenShare />\n              <Typography className={classes.materialIconText}>\n                ScreenShare\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SdCard />\n              <Typography className={classes.materialIconText}>\n                SdCard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SdStorage />\n              <Typography className={classes.materialIconText}>\n                SdStorage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Search />\n              <Typography className={classes.materialIconText}>\n                Search\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Security />\n              <Typography className={classes.materialIconText}>\n                Security\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SelectAll />\n              <Typography className={classes.materialIconText}>\n                SelectAll\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Send />\n              <Typography className={classes.materialIconText}>Send</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SentimentDissatisfied />\n              <Typography className={classes.materialIconText}>\n                SentimentDissatisfied\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SentimentSatisfied />\n              <Typography className={classes.materialIconText}>\n                SentimentSatisfied\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SentimentSatisfiedAlt />\n              <Typography className={classes.materialIconText}>\n                SentimentSatisfiedAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SentimentVeryDissatisfied />\n              <Typography className={classes.materialIconText}>\n                SentimentVeryDissatisfied\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SentimentVerySatisfied />\n              <Typography className={classes.materialIconText}>\n                SentimentVerySatisfied\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Settings />\n              <Typography className={classes.materialIconText}>\n                Settings\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsApplications />\n              <Typography className={classes.materialIconText}>\n                SettingsApplications\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsBackupRestore />\n              <Typography className={classes.materialIconText}>\n                SettingsBackupRestore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsBluetooth />\n              <Typography className={classes.materialIconText}>\n                SettingsBluetooth\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsBrightness />\n              <Typography className={classes.materialIconText}>\n                SettingsBrightness\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsCell />\n              <Typography className={classes.materialIconText}>\n                SettingsCell\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsEthernet />\n              <Typography className={classes.materialIconText}>\n                SettingsEthernet\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsInputAntenna />\n              <Typography className={classes.materialIconText}>\n                SettingsInputAntenna\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsInputComponent />\n              <Typography className={classes.materialIconText}>\n                SettingsInputComponent\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsInputComposite />\n              <Typography className={classes.materialIconText}>\n                SettingsInputComposite\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsInputHdmi />\n              <Typography className={classes.materialIconText}>\n                SettingsInputHdmi\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsInputSvideo />\n              <Typography className={classes.materialIconText}>\n                SettingsInputSvideo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsOverscan />\n              <Typography className={classes.materialIconText}>\n                SettingsOverscan\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsPhone />\n              <Typography className={classes.materialIconText}>\n                SettingsPhone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsPower />\n              <Typography className={classes.materialIconText}>\n                SettingsPower\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsRemote />\n              <Typography className={classes.materialIconText}>\n                SettingsRemote\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsSystemDaydream />\n              <Typography className={classes.materialIconText}>\n                SettingsSystemDaydream\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SettingsVoice />\n              <Typography className={classes.materialIconText}>\n                SettingsVoice\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Share />\n              <Typography className={classes.materialIconText}>\n                Share\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Shop />\n              <Typography className={classes.materialIconText}>Shop</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ShoppingBasket />\n              <Typography className={classes.materialIconText}>\n                ShoppingBasket\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ShoppingCart />\n              <Typography className={classes.materialIconText}>\n                ShoppingCart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ShopTwo />\n              <Typography className={classes.materialIconText}>\n                ShopTwo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ShortText />\n              <Typography className={classes.materialIconText}>\n                ShortText\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ShowChart />\n              <Typography className={classes.materialIconText}>\n                ShowChart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Shuffle />\n              <Typography className={classes.materialIconText}>\n                Shuffle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ShutterSpeed />\n              <Typography className={classes.materialIconText}>\n                ShutterSpeed\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellular0Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellular0Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellular1Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellular1Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellular2Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellular2Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellular3Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellular3Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellular4Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellular4Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularAlt />\n              <Typography className={classes.materialIconText}>\n                SignalCellularAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularConnectedNoInternet0Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellularConnectedNoInternet0Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularConnectedNoInternet1Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellularConnectedNoInternet1Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularConnectedNoInternet2Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellularConnectedNoInternet2Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularConnectedNoInternet3Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellularConnectedNoInternet3Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularConnectedNoInternet4Bar />\n              <Typography className={classes.materialIconText}>\n                SignalCellularConnectedNoInternet4Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularNoSim />\n              <Typography className={classes.materialIconText}>\n                SignalCellularNoSim\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalCellularNull />\n              <Typography className={classes.materialIconText}>\n                SignalCellularNull\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi0Bar />\n              <Typography className={classes.materialIconText}>\n                SignalWifi0Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi1Bar />\n              <Typography className={classes.materialIconText}>\n                SignalWifi1Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi1BarLock />\n              <Typography className={classes.materialIconText}>\n                SignalWifi1BarLock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi2Bar />\n              <Typography className={classes.materialIconText}>\n                SignalWifi2Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi2BarLock />\n              <Typography className={classes.materialIconText}>\n                SignalWifi2BarLock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi3Bar />\n              <Typography className={classes.materialIconText}>\n                SignalWifi3Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi3BarLock />\n              <Typography className={classes.materialIconText}>\n                SignalWifi3BarLock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi4Bar />\n              <Typography className={classes.materialIconText}>\n                SignalWifi4Bar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SignalWifi4BarLock />\n              <Typography className={classes.materialIconText}>\n                SignalWifi4BarLock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SimCard />\n              <Typography className={classes.materialIconText}>\n                SimCard\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SkipNext />\n              <Typography className={classes.materialIconText}>\n                SkipNext\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SkipPrevious />\n              <Typography className={classes.materialIconText}>\n                SkipPrevious\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Slideshow />\n              <Typography className={classes.materialIconText}>\n                Slideshow\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SlowMotionVideo />\n              <Typography className={classes.materialIconText}>\n                SlowMotionVideo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Smartphone />\n              <Typography className={classes.materialIconText}>\n                Smartphone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SmokeFree />\n              <Typography className={classes.materialIconText}>\n                SmokeFree\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SmokingRooms />\n              <Typography className={classes.materialIconText}>\n                SmokingRooms\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Sms />\n              <Typography className={classes.materialIconText}>Sms</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SmsFailed />\n              <Typography className={classes.materialIconText}>\n                SmsFailed\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Snooze />\n              <Typography className={classes.materialIconText}>\n                Snooze\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Sort />\n              <Typography className={classes.materialIconText}>Sort</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SortByAlpha />\n              <Typography className={classes.materialIconText}>\n                SortByAlpha\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Spa />\n              <Typography className={classes.materialIconText}>Spa</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SpaceBar />\n              <Typography className={classes.materialIconText}>\n                SpaceBar\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Speaker />\n              <Typography className={classes.materialIconText}>\n                Speaker\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SpeakerGroup />\n              <Typography className={classes.materialIconText}>\n                SpeakerGroup\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SpeakerNotes />\n              <Typography className={classes.materialIconText}>\n                SpeakerNotes\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SpeakerPhone />\n              <Typography className={classes.materialIconText}>\n                SpeakerPhone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Spellcheck />\n              <Typography className={classes.materialIconText}>\n                Spellcheck\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Star />\n              <Typography className={classes.materialIconText}>Star</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StarBorder />\n              <Typography className={classes.materialIconText}>\n                StarBorder\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StarHalf />\n              <Typography className={classes.materialIconText}>\n                StarHalf\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StarRate />\n              <Typography className={classes.materialIconText}>\n                StarRate\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Stars />\n              <Typography className={classes.materialIconText}>\n                Stars\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StayCurrentLandscape />\n              <Typography className={classes.materialIconText}>\n                StayCurrentLandscape\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StayCurrentPortrait />\n              <Typography className={classes.materialIconText}>\n                StayCurrentPortrait\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StayPrimaryLandscape />\n              <Typography className={classes.materialIconText}>\n                StayPrimaryLandscape\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StayPrimaryPortrait />\n              <Typography className={classes.materialIconText}>\n                StayPrimaryPortrait\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Stop />\n              <Typography className={classes.materialIconText}>Stop</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StopScreenShare />\n              <Typography className={classes.materialIconText}>\n                StopScreenShare\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Storage />\n              <Typography className={classes.materialIconText}>\n                Storage\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Store />\n              <Typography className={classes.materialIconText}>\n                Store\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StoreMallDirectory />\n              <Typography className={classes.materialIconText}>\n                StoreMallDirectory\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Straighten />\n              <Typography className={classes.materialIconText}>\n                Straighten\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Streetview />\n              <Typography className={classes.materialIconText}>\n                Streetview\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.StrikethroughS />\n              <Typography className={classes.materialIconText}>\n                StrikethroughS\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Style />\n              <Typography className={classes.materialIconText}>\n                Style\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SubdirectoryArrowLeft />\n              <Typography className={classes.materialIconText}>\n                SubdirectoryArrowLeft\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SubdirectoryArrowRight />\n              <Typography className={classes.materialIconText}>\n                SubdirectoryArrowRight\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Subject />\n              <Typography className={classes.materialIconText}>\n                Subject\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Subscriptions />\n              <Typography className={classes.materialIconText}>\n                Subscriptions\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Subtitles />\n              <Typography className={classes.materialIconText}>\n                Subtitles\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Subway />\n              <Typography className={classes.materialIconText}>\n                Subway\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SupervisedUserCircle />\n              <Typography className={classes.materialIconText}>\n                SupervisedUserCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SupervisorAccount />\n              <Typography className={classes.materialIconText}>\n                SupervisorAccount\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SurroundSound />\n              <Typography className={classes.materialIconText}>\n                SurroundSound\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SwapCalls />\n              <Typography className={classes.materialIconText}>\n                SwapCalls\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SwapHoriz />\n              <Typography className={classes.materialIconText}>\n                SwapHoriz\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SwapHorizontalCircle />\n              <Typography className={classes.materialIconText}>\n                SwapHorizontalCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SwapVert />\n              <Typography className={classes.materialIconText}>\n                SwapVert\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SwapVerticalCircle />\n              <Typography className={classes.materialIconText}>\n                SwapVerticalCircle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SwitchCamera />\n              <Typography className={classes.materialIconText}>\n                SwitchCamera\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SwitchVideo />\n              <Typography className={classes.materialIconText}>\n                SwitchVideo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Sync />\n              <Typography className={classes.materialIconText}>Sync</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SyncDisabled />\n              <Typography className={classes.materialIconText}>\n                SyncDisabled\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SyncProblem />\n              <Typography className={classes.materialIconText}>\n                SyncProblem\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.SystemUpdate />\n              <Typography className={classes.materialIconText}>\n                SystemUpdate\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Tab />\n              <Typography className={classes.materialIconText}>Tab</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TableChart />\n              <Typography className={classes.materialIconText}>\n                TableChart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Tablet />\n              <Typography className={classes.materialIconText}>\n                Tablet\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TabletAndroid />\n              <Typography className={classes.materialIconText}>\n                TabletAndroid\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TabletMac />\n              <Typography className={classes.materialIconText}>\n                TabletMac\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TabUnselected />\n              <Typography className={classes.materialIconText}>\n                TabUnselected\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TagFaces />\n              <Typography className={classes.materialIconText}>\n                TagFaces\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TapAndPlay />\n              <Typography className={classes.materialIconText}>\n                TapAndPlay\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Terrain />\n              <Typography className={classes.materialIconText}>\n                Terrain\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TextFields />\n              <Typography className={classes.materialIconText}>\n                TextFields\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TextFormat />\n              <Typography className={classes.materialIconText}>\n                TextFormat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TextRotateUp />\n              <Typography className={classes.materialIconText}>\n                TextRotateUp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TextRotateVertical />\n              <Typography className={classes.materialIconText}>\n                TextRotateVertical\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TextRotationDown />\n              <Typography className={classes.materialIconText}>\n                TextRotationDown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TextRotationNone />\n              <Typography className={classes.materialIconText}>\n                TextRotationNone\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Textsms />\n              <Typography className={classes.materialIconText}>\n                Textsms\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Texture />\n              <Typography className={classes.materialIconText}>\n                Texture\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Theaters />\n              <Typography className={classes.materialIconText}>\n                Theaters\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ThreeDRotation />\n              <Typography className={classes.materialIconText}>\n                ThreeDRotation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ThreeSixty />\n              <Typography className={classes.materialIconText}>\n                ThreeSixty\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ThumbDown />\n              <Typography className={classes.materialIconText}>\n                ThumbDown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ThumbDownAlt />\n              <Typography className={classes.materialIconText}>\n                ThumbDownAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ThumbsUpDown />\n              <Typography className={classes.materialIconText}>\n                ThumbsUpDown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ThumbUp />\n              <Typography className={classes.materialIconText}>\n                ThumbUp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ThumbUpAlt />\n              <Typography className={classes.materialIconText}>\n                ThumbUpAlt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Timelapse />\n              <Typography className={classes.materialIconText}>\n                Timelapse\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Timeline />\n              <Typography className={classes.materialIconText}>\n                Timeline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Timer />\n              <Typography className={classes.materialIconText}>\n                Timer\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Timer10 />\n              <Typography className={classes.materialIconText}>\n                Timer10\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Timer3 />\n              <Typography className={classes.materialIconText}>\n                Timer3\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TimeToLeave />\n              <Typography className={classes.materialIconText}>\n                TimeToLeave\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Title />\n              <Typography className={classes.materialIconText}>\n                Title\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Toc />\n              <Typography className={classes.materialIconText}>Toc</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Today />\n              <Typography className={classes.materialIconText}>\n                Today\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Toll />\n              <Typography className={classes.materialIconText}>Toll</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Tonality />\n              <Typography className={classes.materialIconText}>\n                Tonality\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TouchApp />\n              <Typography className={classes.materialIconText}>\n                TouchApp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Toys />\n              <Typography className={classes.materialIconText}>Toys</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TrackChanges />\n              <Typography className={classes.materialIconText}>\n                TrackChanges\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Traffic />\n              <Typography className={classes.materialIconText}>\n                Traffic\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Train />\n              <Typography className={classes.materialIconText}>\n                Train\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Tram />\n              <Typography className={classes.materialIconText}>Tram</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TransferWithinAStation />\n              <Typography className={classes.materialIconText}>\n                TransferWithinAStation\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Transform />\n              <Typography className={classes.materialIconText}>\n                Transform\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TransitEnterexit />\n              <Typography className={classes.materialIconText}>\n                TransitEnterexit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Translate />\n              <Typography className={classes.materialIconText}>\n                Translate\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TrendingDown />\n              <Typography className={classes.materialIconText}>\n                TrendingDown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TrendingFlat />\n              <Typography className={classes.materialIconText}>\n                TrendingFlat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TrendingUp />\n              <Typography className={classes.materialIconText}>\n                TrendingUp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TripOrigin />\n              <Typography className={classes.materialIconText}>\n                TripOrigin\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Tune />\n              <Typography className={classes.materialIconText}>Tune</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TurnedIn />\n              <Typography className={classes.materialIconText}>\n                TurnedIn\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.TurnedInNot />\n              <Typography className={classes.materialIconText}>\n                TurnedInNot\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Tv />\n              <Typography className={classes.materialIconText}>Tv</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Unarchive />\n              <Typography className={classes.materialIconText}>\n                Unarchive\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Undo />\n              <Typography className={classes.materialIconText}>Undo</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.UnfoldLess />\n              <Typography className={classes.materialIconText}>\n                UnfoldLess\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.UnfoldMore />\n              <Typography className={classes.materialIconText}>\n                UnfoldMore\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Unsubscribe />\n              <Typography className={classes.materialIconText}>\n                Unsubscribe\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Update />\n              <Typography className={classes.materialIconText}>\n                Update\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Usb />\n              <Typography className={classes.materialIconText}>Usb</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VerifiedUser />\n              <Typography className={classes.materialIconText}>\n                VerifiedUser\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VerticalAlignBottom />\n              <Typography className={classes.materialIconText}>\n                VerticalAlignBottom\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VerticalAlignCenter />\n              <Typography className={classes.materialIconText}>\n                VerticalAlignCenter\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VerticalAlignTop />\n              <Typography className={classes.materialIconText}>\n                VerticalAlignTop\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VerticalSplit />\n              <Typography className={classes.materialIconText}>\n                VerticalSplit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Vibration />\n              <Typography className={classes.materialIconText}>\n                Vibration\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VideoCall />\n              <Typography className={classes.materialIconText}>\n                VideoCall\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Videocam />\n              <Typography className={classes.materialIconText}>\n                Videocam\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VideogameAsset />\n              <Typography className={classes.materialIconText}>\n                VideogameAsset\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VideoLabel />\n              <Typography className={classes.materialIconText}>\n                VideoLabel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VideoLibrary />\n              <Typography className={classes.materialIconText}>\n                VideoLibrary\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewAgenda />\n              <Typography className={classes.materialIconText}>\n                ViewAgenda\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewArray />\n              <Typography className={classes.materialIconText}>\n                ViewArray\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewCarousel />\n              <Typography className={classes.materialIconText}>\n                ViewCarousel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewColumn />\n              <Typography className={classes.materialIconText}>\n                ViewColumn\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewComfy />\n              <Typography className={classes.materialIconText}>\n                ViewComfy\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewCompact />\n              <Typography className={classes.materialIconText}>\n                ViewCompact\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewDay />\n              <Typography className={classes.materialIconText}>\n                ViewDay\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewHeadline />\n              <Typography className={classes.materialIconText}>\n                ViewHeadline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewList />\n              <Typography className={classes.materialIconText}>\n                ViewList\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewModule />\n              <Typography className={classes.materialIconText}>\n                ViewModule\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewQuilt />\n              <Typography className={classes.materialIconText}>\n                ViewQuilt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewStream />\n              <Typography className={classes.materialIconText}>\n                ViewStream\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ViewWeek />\n              <Typography className={classes.materialIconText}>\n                ViewWeek\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Vignette />\n              <Typography className={classes.materialIconText}>\n                Vignette\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Visibility />\n              <Typography className={classes.materialIconText}>\n                Visibility\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VoiceChat />\n              <Typography className={classes.materialIconText}>\n                VoiceChat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Voicemail />\n              <Typography className={classes.materialIconText}>\n                Voicemail\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VolumeDown />\n              <Typography className={classes.materialIconText}>\n                VolumeDown\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VolumeMute />\n              <Typography className={classes.materialIconText}>\n                VolumeMute\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VolumeUp />\n              <Typography className={classes.materialIconText}>\n                VolumeUp\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VpnKey />\n              <Typography className={classes.materialIconText}>\n                VpnKey\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.VpnLock />\n              <Typography className={classes.materialIconText}>\n                VpnLock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Wallpaper />\n              <Typography className={classes.materialIconText}>\n                Wallpaper\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Warning />\n              <Typography className={classes.materialIconText}>\n                Warning\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Watch />\n              <Typography className={classes.materialIconText}>\n                Watch\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WatchLater />\n              <Typography className={classes.materialIconText}>\n                WatchLater\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Waves />\n              <Typography className={classes.materialIconText}>\n                Waves\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WbAuto />\n              <Typography className={classes.materialIconText}>\n                WbAuto\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WbCloudy />\n              <Typography className={classes.materialIconText}>\n                WbCloudy\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WbIncandescent />\n              <Typography className={classes.materialIconText}>\n                WbIncandescent\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WbIridescent />\n              <Typography className={classes.materialIconText}>\n                WbIridescent\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WbSunny />\n              <Typography className={classes.materialIconText}>\n                WbSunny\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Wc />\n              <Typography className={classes.materialIconText}>Wc</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Web />\n              <Typography className={classes.materialIconText}>Web</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WebAsset />\n              <Typography className={classes.materialIconText}>\n                WebAsset\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Weekend />\n              <Typography className={classes.materialIconText}>\n                Weekend\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Whatshot />\n              <Typography className={classes.materialIconText}>\n                Whatshot\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WhereToVote />\n              <Typography className={classes.materialIconText}>\n                WhereToVote\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Widgets />\n              <Typography className={classes.materialIconText}>\n                Widgets\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Wifi />\n              <Typography className={classes.materialIconText}>Wifi</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WifiLock />\n              <Typography className={classes.materialIconText}>\n                WifiLock\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WifiTethering />\n              <Typography className={classes.materialIconText}>\n                WifiTethering\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.Work />\n              <Typography className={classes.materialIconText}>Work</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WorkOutline />\n              <Typography className={classes.materialIconText}>\n                WorkOutline\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.WrapText />\n              <Typography className={classes.materialIconText}>\n                WrapText\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.YoutubeSearchedFor />\n              <Typography className={classes.materialIconText}>\n                YoutubeSearchedFor\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ZoomIn />\n              <Typography className={classes.materialIconText}>\n                ZoomIn\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ZoomOut />\n              <Typography className={classes.materialIconText}>\n                ZoomOut\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <Icons.ZoomOutMap />\n              <Typography className={classes.materialIconText}>\n                ZoomOutMap\n              </Typography>\n            </Grid>\n          </Grid>\n        </div>\n      )}\n\n      {activeTabId === 1 && (\n        <div>\n          <Grid container spacing={2} className=\"icon-list\">\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-bed\" />\n              <Typography className={classes.materialIconText}>Bed</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-bank\" />\n              <Typography className={classes.materialIconText}>Bank</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-behance\" />\n              <Typography className={classes.materialIconText}>\n                Behance\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-behance-square\" />\n              <Typography className={classes.materialIconText}>\n                Behance-square\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-bomb\" />\n              <Typography className={classes.materialIconText}>Bomb</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-building\" />\n              <Typography className={classes.materialIconText}>\n                Building\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-cab\" />\n              <Typography className={classes.materialIconText}>Cab</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-car\" />\n              <Typography className={classes.materialIconText}>Car</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-child\" />\n              <Typography className={classes.materialIconText}>\n                Child\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-circle-o-notch\" />\n              <Typography className={classes.materialIconText}>\n                Circle-o-notch\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-circle-thin\" />\n              <Typography className={classes.materialIconText}>\n                Circle-thin\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-codepen\" />\n              <Typography className={classes.materialIconText}>\n                Codepen\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-cube\" />\n              <Typography className={classes.materialIconText}>Cube</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-cubes\" />\n              <Typography className={classes.materialIconText}>\n                Cubes\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-database\" />\n              <Typography className={classes.materialIconText}>\n                Database\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-delicious\" />\n              <Typography className={classes.materialIconText}>\n                Delicious\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-deviantart\" />\n              <Typography className={classes.materialIconText}>\n                Deviantart\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-digg\" />\n              <Typography className={classes.materialIconText}>Digg</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-drupal\" />\n              <Typography className={classes.materialIconText}>\n                Drupal\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-empire\" />\n              <Typography className={classes.materialIconText}>\n                Empire\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-envelope-square\" />\n              <Typography className={classes.materialIconText}>\n                Envelope-square\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-fax\" />\n              <Typography className={classes.materialIconText}>Fax</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-archive-o\" />\n              <Typography className={classes.materialIconText}>\n                File-archive-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-audio-o\" />\n              <Typography className={classes.materialIconText}>\n                File-audio-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-code-o\" />\n              <Typography className={classes.materialIconText}>\n                Аile-code-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-excel-o\" />\n              <Typography className={classes.materialIconText}>\n                Аile-excel-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-image-o\" />\n              <Typography className={classes.materialIconText}>\n                File-image-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-movie-o\" />\n              <Typography className={classes.materialIconText}>\n                Аile-movie-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-pdf-o\" />\n              <Typography className={classes.materialIconText}>\n                File-pdf-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-photo-o\" />\n              <Typography className={classes.materialIconText}>\n                File-photo-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-picture-o\" />\n              <Typography className={classes.materialIconText}>\n                File-picture-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-powerpoint-o\" />\n              <Typography className={classes.materialIconText}>\n                File-powerpoint-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-sound-o\" />\n              <Typography className={classes.materialIconText}>\n                File-sound-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-video-o\" />\n              <Typography className={classes.materialIconText}>\n                File-video-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-word-o\" />\n              <Typography className={classes.materialIconText}>\n                File-word-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-file-zip-o\" />\n              <Typography className={classes.materialIconText}>\n                File-zip-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-ge\" />\n              <Typography className={classes.materialIconText}>Ge</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-git\" />\n              <Typography className={classes.materialIconText}>Git</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-git-square\" />\n              <Typography className={classes.materialIconText}>\n                Git-square\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-google\" />\n              <Typography className={classes.materialIconText}>\n                Google\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-graduation-cap\" />\n              <Typography className={classes.materialIconText}>\n                Graduation-cap\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-hacker-news\" />\n              <Typography className={classes.materialIconText}>\n                Hacker-news\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-header\" />\n              <Typography className={classes.materialIconText}>\n                Header\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-history\" />\n              <Typography className={classes.materialIconText}>\n                History\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-institution\" />\n              <Typography className={classes.materialIconText}>\n                Institution\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-joomla\" />\n              <Typography className={classes.materialIconText}>\n                Joomla\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-jsfiddle\" />\n              <Typography className={classes.materialIconText}>\n                Jsfiddle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-language\" />\n              <Typography className={classes.materialIconText}>\n                Language\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-life-bouy\" />\n              <Typography className={classes.materialIconText}>\n                Life-bouy\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-life-ring\" />\n              <Typography className={classes.materialIconText}>\n                Life-ring\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-life-saver\" />\n              <Typography className={classes.materialIconText}>\n                Life-saver\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-mortar-board\" />\n              <Typography className={classes.materialIconText}>\n                Mortar-board\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-openid\" />\n              <Typography className={classes.materialIconText}>\n                Openid\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-paper-plane\" />\n              <Typography className={classes.materialIconText}>\n                Paper-plane\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-paper-plane-o\" />\n              <Typography className={classes.materialIconText}>\n                paper-plane-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-paragraph\" />\n              <Typography className={classes.materialIconText}>\n                Paragraph\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-paw\" />\n              <Typography className={classes.materialIconText}>Paw</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-pied-piper\" />\n              <Typography className={classes.materialIconText}>\n                Pied-piper\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-pied-piper-alt\" />\n              <Typography className={classes.materialIconText}>\n                Pied-piper-alt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-pied-piper-square\" />\n              <Typography className={classes.materialIconText}>\n                Pied-piper-square\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-qq\" />\n              <Typography className={classes.materialIconText}>Qq</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-ra\" />\n              <Typography className={classes.materialIconText}>Ra</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-rebel\" />\n              <Typography className={classes.materialIconText}>\n                Rebel\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-recycle\" />\n              <Typography className={classes.materialIconText}>\n                Recycle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-reddit\" />\n              <Typography className={classes.materialIconText}>\n                Reddit\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-reddit-square\" />\n              <Typography className={classes.materialIconText}>\n                Reddit-square\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-send\" />\n              <Typography className={classes.materialIconText}>Send</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-send-o\" />\n              <Typography className={classes.materialIconText}>\n                Send-o\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-share-alt\" />\n              <Typography className={classes.materialIconText}>\n                Share-alt\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-share-alt-square\" />\n              <Typography className={classes.materialIconText}>\n                Share-alt-square\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-slack\" />\n              <Typography className={classes.materialIconText}>\n                Slack\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-sliders\" />\n              <Typography className={classes.materialIconText}>\n                Sliders\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-soundcloud\" />\n              <Typography className={classes.materialIconText}>\n                Soundcloud\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-space-shuttle\" />\n              <Typography className={classes.materialIconText}>\n                Space-shuttle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-spoon\" />\n              <Typography className={classes.materialIconText}>\n                Spoon\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-spotify\" />\n              <Typography className={classes.materialIconText}>\n                Spotify\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-steam\" />\n              <Typography className={classes.materialIconText}>\n                Steam\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-steam-square\" />\n              <Typography className={classes.materialIconText}>\n                Steam-square\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-stumbleupon\" />\n              <Typography className={classes.materialIconText}>\n                Stumbleupon\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-stumbleupon-circle\" />\n              <Typography className={classes.materialIconText}>\n                Stumbleupon-circle\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-support\" />\n              <Typography className={classes.materialIconText}>\n                Support\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-taxi\" />\n              <Typography className={classes.materialIconText}>Taxi</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-tencent-weibo\" />\n              <Typography className={classes.materialIconText}>\n                Tencent-weibo\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-tree\" />\n              <Typography className={classes.materialIconText}>Tree</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-university\" />\n              <Typography className={classes.materialIconText}>\n                University\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-vine\" />\n              <Typography className={classes.materialIconText}>Vine</Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-wechat\" />\n              <Typography className={classes.materialIconText}>\n                Wechat\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-weixin\" />\n              <Typography className={classes.materialIconText}>\n                Weixin\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-wordpress\" />\n              <Typography className={classes.materialIconText}>\n                Wordpress\n              </Typography>\n            </Grid>\n            <Grid\n              className={classes.materailIcon}\n              item\n              md={3}\n              lg={2}\n              sm={4}\n              xs={12}\n            >\n              <i className=\"fa fa-yahoo\" />\n              <Typography className={classes.materialIconText}>\n                Yahoo\n              </Typography>\n            </Grid>\n          </Grid>\n        </div>\n      )}\n    </Paper>\n  </>\n);}\n","import React from \"react\";\nimport ApexCharts from \"react-apexcharts\";\nimport { useTheme } from \"@material-ui/styles\";\n\nconst series = [\n  {\n    name: \"series1\",\n    data: [31, 40, 28, 51, 42, 109, 100],\n  },\n  {\n    name: \"series2\",\n    data: [11, 32, 45, 32, 34, 52, 41],\n  },\n];\n\nexport default function ApexLineChart() {\n  var theme = useTheme();\n\n  return (\n    <ApexCharts\n      options={themeOptions(theme)}\n      series={series}\n      type=\"area\"\n      height={350}\n    />\n  );\n}\n\n// ############################################################\nfunction themeOptions(theme) {\n  return {\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"smooth\",\n    },\n    xaxis: {\n      type: \"datetime\",\n      categories: [\n        \"2018-09-19T00:00:00\",\n        \"2018-09-19T01:30:00\",\n        \"2018-09-19T02:30:00\",\n        \"2018-09-19T03:30:00\",\n        \"2018-09-19T04:30:00\",\n        \"2018-09-19T05:30:00\",\n        \"2018-09-19T06:30:00\",\n      ],\n    },\n    tooltip: {\n      x: {\n        format: \"dd/MM/yy HH:mm\",\n      },\n    },\n    fill: {\n      colors: [theme.palette.primary.light, theme.palette.success.light],\n    },\n    colors: [theme.palette.primary.main, theme.palette.success.main],\n    chart: {\n      toolbar: {\n        show: false,\n      },\n    },\n    legend: {\n      show: false,\n    },\n  };\n}\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/styles\";\nimport ApexCharts from \"react-apexcharts\";\n\nconst series = [\n  {\n    name: \"Metric1\",\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: \"Metric2\",\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: \"Metric3\",\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: \"Metric4\",\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: \"Metric5\",\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: \"Metric6\",\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: \"Metric7\",\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: \"Metric8\",\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n  {\n    name: \"Metric9\",\n    data: generateData(18, {\n      min: 0,\n      max: 90,\n    }),\n  },\n];\n\nexport default function ApexLineChart() {\n  var theme = useTheme();\n\n  return (\n    <ApexCharts\n      options={themeOptions(theme)}\n      series={series}\n      type=\"heatmap\"\n      height={350}\n    />\n  );\n}\n\n// ##################################################################\nfunction generateData(count, yrange) {\n  var i = 0;\n  var series = [];\n  while (i < count) {\n    var x = \"w\" + (i + 1).toString();\n    var y =\n      Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n    series.push({\n      x: x,\n      y: y,\n    });\n    i++;\n  }\n\n  return series;\n}\n\nfunction themeOptions(theme) {\n  return {\n    chart: {\n      toolbar: {\n        show: false,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    colors: [theme.palette.primary.main],\n  };\n}\n","import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  Pie,\n  PieChart,\n  ResponsiveContainer,\n  Sector,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport ApexLineChart from \"./components/ApexLineChart\";\nimport ApexHeatmap from \"./components/ApexHeatmap\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\n\nconst lineChartData = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nconst pieChartData = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 },\n];\n\nexport default function Charts(props) {\n  var theme = useTheme();\n\n  // local\n  var [activeIndex, setActiveIndexId] = useState(0);\n\n  return (\n    <>\n      <PageTitle title=\"Charts Page - Data Display\" button=\"Latest Reports\" />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"Apex Line Chart\" upperTitle noBodyPadding>\n            <ApexLineChart />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"Apex Heatmap\" upperTitle noBodyPadding>\n            <ApexHeatmap />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <Widget title=\"Simple Line Chart\" noBodyPadding upperTitle>\n            <ResponsiveContainer width=\"100%\" height={350}>\n              <LineChart\n                width={500}\n                height={300}\n                data={lineChartData}\n                margin={{\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 5,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"pv\"\n                  stroke={theme.palette.primary.main}\n                  activeDot={{ r: 8 }}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"uv\"\n                  stroke={theme.palette.secondary.main}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Widget title=\"Pie Chart with Tooltips\" noBodyPadding upperTitle>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart width={200} height={300}>\n                <Pie\n                  activeIndex={activeIndex}\n                  activeShape={renderActiveShape}\n                  data={pieChartData}\n                  cx={200}\n                  cy={150}\n                  innerRadius={60}\n                  outerRadius={80}\n                  fill={theme.palette.primary.main}\n                  dataKey=\"value\"\n                  onMouseEnter={(e, id) => setActiveIndexId(id)}\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// ################################################################\n\nfunction renderActiveShape(props) {\n  var RADIAN = Math.PI / 180;\n  var {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  var sin = Math.sin(-RADIAN * midAngle);\n  var cos = Math.cos(-RADIAN * midAngle);\n  var sx = cx + (outerRadius + 10) * cos;\n  var sy = cy + (outerRadius + 10) * sin;\n  var mx = cx + (outerRadius + 30) * cos;\n  var my = cy + (outerRadius + 30) * sin;\n  var ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  var ey = my;\n  var textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`PV ${value}`}</text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  DialogContent,\n  FormControlLabel,\n  Switch,\n  TextField,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\n// styles\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport {\n  createPeerRequest,\n} from \"../../squeakclient/requests\"\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    margin: 'auto',\n    width: 'fit-content',\n    '& .MuiDialogContent-root': {\n      overflow: `hidden`\n    },\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n    '& .MuiDialogActions-root': {\n      padding: `1rem`,\n    },\n  },\n  formControlLabel: {\n    position: `absolute`,\n    left: `2rem`,\n  },\n}));\n\nconst portDefaultValue = '0';\n\nexport default function CreatePeerDialog({\n  open,\n  handleClose,\n  ...props\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [peerName, setPeerName] = useState('');\n  const [host, setHost] = useState('');\n  const [port, setPort] = useState('');\n  const [customPortChecked, setCustomPortChecked] = React.useState(false)\n\n  const resetFields = () => {\n    setPeerName('');\n    setHost('');\n    setPort(portDefaultValue);\n    setCustomPortChecked(false);\n  };\n\n  const handleChangePeerName = (event) => {\n    setPeerName(event.target.value);\n  };\n\n  const handleChangeHost = (event) => {\n    setHost(event.target.value);\n  };\n\n  const handleChangeCustomPortChecked = (event) => {\n    setPort(\n      event.target.checked ? '' : portDefaultValue\n    );\n    setCustomPortChecked(event.target.checked);\n  }\n\n  const handleChangePort = (event) => {\n    setPort(event.target.value);\n  };\n\n  const createPeer = (peerName, host, port) => {\n    createPeerRequest(peerName, host, port, (response) => {\n      goToPeerPage(response.getPeerId());\n    });\n  };\n\n  const goToPeerPage = (peerId) => {\n    history.push(\"/app/peer/\" + peerId);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log( 'peerName:', peerName);\n    console.log( 'host:', host);\n    console.log( 'port:', port);\n    if (!host) {\n      alert('Host cannot be empty.');\n      return;\n    }\n    if (!port) {\n      alert('Port cannot be empty.');\n      return;\n    }\n    createPeer(peerName, host, port);\n    handleClose();\n  }\n\n  function CreatePeerNameInput() {\n    return (\n      <TextField\n        required\n        variant=\"outlined\"\n        label=\"Peer Name\"\n        autoFocus\n        value={peerName}\n        onChange={handleChangePeerName}\n        fullWidth\n        inputProps={{ maxLength: 64 }}\n        margin=\"normal\"\n      />\n    )\n  }\n\n  function CreateHostInput() {\n    return (\n      <TextField\n        required\n        variant=\"outlined\"\n        label=\"Host\"\n        value={host}\n        onChange={handleChangeHost}\n        inputProps={{ maxLength: 128 }}\n        margin=\"normal\"\n      />\n    )\n  }\n\n  function CreatePortInput() {\n    return (\n      <TextField\n        required={customPortChecked}\n        variant=\"outlined\"\n        label=\"Port\"\n        value={customPortChecked ? port : ''}\n        onChange={handleChangePort}\n        inputProps={{ maxLength: 8 }}\n        disabled={!customPortChecked}\n        margin=\"normal\"\n      />\n    )\n  }\n\n\n  function CustomPortSwitch() {\n    return (\n      <FormControlLabel\n        className={classes.formControlLabel}\n        control={\n          <Switch\n            checked={customPortChecked}\n            onChange={handleChangeCustomPortChecked}\n            name=\"use-custom-port\"\n            size=\"small\"\n          />\n        }\n        label=\"Use custom port\"\n      />\n    )\n  }\n\n\n  function CancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function CreatePeerButton() {\n    return (\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.button}\n      >\n        Create Peer\n      </Button>\n    )\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onEnter={resetFields}\n      onClose={handleClose}\n      aria-labelledby=\"form-dialog-title\"\n      maxWidth=\"sm\"\n    >\n      <DialogTitle id=\"form-dialog-title\">\n        Create Peer\n      </DialogTitle>\n      <form\n        className={classes.form}\n        onSubmit={handleSubmit}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <DialogContent>\n          {CreatePeerNameInput()}\n          {CreateHostInput()}\n          {CreatePortInput()}\n        </DialogContent>\n        <DialogActions>\n          {CustomPortSwitch()}\n          {CancelButton()}\n          {CreatePeerButton()}\n        </DialogActions>\n      </form>\n    </Dialog>\n  )\n}\n","import React, {useState, useEffect} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {\n    Grid,\n    Button,\n    Paper,\n    Tabs,\n    Tab,\n    AppBar,\n    Box,\n    Typography,\n  } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\n\n// styles\nimport {makeStyles} from '@material-ui/core/styles';\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport Table from \"../dashboard/components/Table/Table\";\nimport CreatePeerDialog from \"../../components/CreatePeerDialog\";\n\n// data\nimport mock from \"../dashboard/mock\";\n\nimport {\n  getPeersRequest,\n} from \"../../squeakclient/requests\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nexport default function Peers() {\n  const classes = useStyles();\n  const [peers, setPeers] = useState([]);\n  const [createPeerDialogOpen, setCreatePeerDialogOpen] = useState(false);\n  const history = useHistory();\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const getSqueakPeers = () => {\n    getPeersRequest(setPeers);\n  };\n\n  const goToPeerPage = (id) => {\n    history.push(\"/app/Peer/\" + id);\n  };\n\n  const handleClickOpenCreatePeerDialog = () => {\n    setCreatePeerDialogOpen(true);\n  };\n\n  const handleCloseCreatePeerDialog = () => {\n    setCreatePeerDialogOpen(false);\n  };\n\n  useEffect(() => {\n    getSqueakPeers()\n  }, []);\n\n  function CreatePeerButton() {\n    return (\n      <>\n      <Grid item xs={12}>\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              handleClickOpenCreatePeerDialog();\n            }}>Create Peer\n          </Button>\n        </div>\n      </Grid>\n      </>\n    )\n  }\n\n  function PeersInfo() {\n    return (\n      <>\n      <Grid container spacing={4}>\n        {CreatePeerButton()}\n       <Grid item xs={12}>\n         <MUIDataTable\n           title=\"Peers\"\n           data={peers.map(s =>\n              [\n                s.getPeerId(),\n                s.getPeerName(),\n                s.getHost(),\n                s.getPort(),\n                s.getDownloading().toString(),\n                s.getUploading().toString(),\n              ]\n            )}\n           columns={[\n             {\n               name: \"Id\",\n               options: {\n                 display: false,\n               }\n             },\n             \"Name\",\n             \"Host\",\n             \"Port\",\n             \"Downloading\",\n             \"Uploading\",\n           ]}\n           options={{\n             filter: false,\n             print: false,\n             viewColumns: false,\n             selectableRows: \"none\",\n             onRowClick: rowData => {\n               var id = rowData[0];\n               console.log(\"clicked on id\" + id);\n               goToPeerPage(id);\n             },\n           }}/>\n       </Grid>\n     </Grid>\n      </>\n    )\n  }\n\n  function CreatePeerDialogContent() {\n    return (\n      <>\n        <CreatePeerDialog\n          open={createPeerDialogOpen}\n          handleClose={handleCloseCreatePeerDialog}\n          ></CreatePeerDialog>\n      </>\n    )\n  }\n\n  return (\n    <>\n     < PageTitle title = \"Peers\" />\n    {PeersInfo()}\n    {CreatePeerDialogContent()}\n   < />);\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  dashedBorder: {\n    border: \"1px dashed\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    marginTop: theme.spacing(1),\n  },\n  text: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  widgetWrapper: {\n    display: \"flex\",\n    minHeight: \"100%\",\n  },\n  widgetHeader: {\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  widgetRoot: {\n    boxShadow: theme.customShadows.widget,\n  },\n  widgetBody: {\n    paddingBottom: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingLeft: theme.spacing(3),\n  },\n  noPadding: {\n    padding: 0,\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n  },\n  moreButton: {\n    margin: -theme.spacing(1),\n    padding: 0,\n    width: 40,\n    height: 40,\n    color: theme.palette.text.hint,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"rgba(255, 255, 255, 0.35)\",\n    },\n  },\n}));\n","import React, {useState, useEffect} from 'react';\nimport {\n  Paper,\n  IconButton,\n  Menu,\n  MenuItem,\n  Typography,\n  Grid,\n  Box,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\nimport Widget from \"../../components/Widget\";\n\nimport {\n  deletePeerRequest,\n} from \"../../squeakclient/requests\"\n\n\nexport default function DeletePeerDialog({\n  open,\n  handleClose,\n  peer,\n  ...props\n}) {\n  var classes = useStyles();\n  const history = useHistory();\n\n  const deletePeer = (peerId) => {\n    deletePeerRequest(peerId, (response) => {\n      reloadRoute();\n    });\n  };\n\n  const reloadRoute = () => {\n    history.go(0);\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log( 'peer:', peer);\n    var peerId = peer.getPeerId();\n    console.log( 'peerId:', peerId);\n    deletePeer(peerId);\n    handleClose();\n  }\n\n  function MakeCancelButton() {\n    return (\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    )\n  }\n\n  function DeletePeerButton() {\n    return (\n      <Button\n       type=\"submit\"\n       variant=\"contained\"\n       color=\"primary\"\n       className={classes.button}\n       >\n        Delete peer\n       </Button>\n    )\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n  <DialogTitle id=\"form-dialog-title\">Delete peer</DialogTitle>\n  <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n  <DialogContent>\n    Are you sure you want to delete this peer?\n  </DialogContent>\n  <DialogActions>\n    {MakeCancelButton()}\n    {DeletePeerButton()}\n  </DialogActions>\n  </form>\n    </Dialog>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Grid,\n  FormLabel,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  FormHelperText,\n  Switch,\n  Button,\n} from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport DeletePeerDialog from \"../../components/DeletePeerDialog\";\n\nimport {\n  getPeerRequest,\n  setPeerDownloadingRequest,\n  setPeerUploadingRequest,\n} from \"../../squeakclient/requests\"\n\n\n\nexport default function PeerPage() {\n  var classes = useStyles();\n  const { id } = useParams();\n  const [peer, setPeer] = useState(null);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n\n  const getSqueakPeer = (id) => {\n    getPeerRequest(id, setPeer);\n  };\n  const setDownloading = (id, downloading) => {\n    setPeerDownloadingRequest(id, downloading, () => {\n      getSqueakPeer(id);\n    });\n  };\n  const setUploading = (id, uploading) => {\n    setPeerUploadingRequest(id, uploading, () => {\n      getSqueakPeer(id);\n    });\n  };\n\n  useEffect(()=>{\n    getSqueakPeer(id)\n  },[id]);\n\n  const handleClickOpenDeleteDialog = () => {\n    setDeleteDialogOpen(true);\n    console.log(\"deleteDialogOpen: \" + deleteDialogOpen);\n  };\n\n  const handleCloseDeleteDialog = () => {\n     setDeleteDialogOpen(false);\n  };\n\n  const handleSettingsDownloadingChange = (event) => {\n    console.log(\"Downloading changed for peer id: \" + id);\n    console.log(\"Downloading changed to: \" + event.target.checked);\n    setDownloading(id, event.target.checked);\n  };\n\n  const handleSettingsUploadingChange = (event) => {\n    console.log(\"Uploading changed for peer id: \" + id);\n    console.log(\"Uploading changed to: \" + event.target.checked);\n    setUploading(id, event.target.checked);\n  };\n\n  function NoPeerContent() {\n    return (\n      <p>\n        No peer loaded\n      </p>\n    )\n  }\n\n  function PeerContent() {\n    return (\n      <>\n        <p>\n          Peer name: {peer.getPeerName()}\n        </p>\n        {PeerSettingsForm()}\n        {DeletePeerButton()}\n      </>\n    )\n  }\n\n  function PeerSettingsForm() {\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Peer settings</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Switch checked={peer.getDownloading()} onChange={handleSettingsDownloadingChange} />}\n            label=\"Downloading\"\n          />\n          <FormControlLabel\n            control={<Switch checked={peer.getUploading()} onChange={handleSettingsUploadingChange} />}\n            label=\"Uploading\"\n          />\n        </FormGroup>\n      </FormControl>\n    )\n  }\n\n  function DeletePeerButton() {\n    return (\n      <>\n      <Grid item xs={12}>\n        <div className={classes.root}>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              handleClickOpenDeleteDialog();\n            }}>Delete Peer\n          </Button>\n        </div>\n      </Grid>\n      </>\n    )\n  }\n\n  function DeletePeerDialogContent() {\n    return (\n      <>\n        <DeletePeerDialog\n          open={deleteDialogOpen}\n          handleClose={handleCloseDeleteDialog}\n          peer={peer}\n          ></DeletePeerDialog>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <PageTitle title={'Peer: ' + (peer ? peer.getPeerName() : null)} />\n      <div>\n      {peer\n        ? PeerContent()\n        : NoPeerContent()\n      }\n      </div>\n      {DeletePeerDialogContent()}\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\nimport Timeline from \"../../pages/timeline\";\nimport Dashboard from \"../../pages/dashboard\";\nimport SqueakAddress from \"../../pages/squeakaddress\";\nimport Squeak from \"../../pages/squeak\";\nimport Profile from \"../../pages/profile\";\nimport Wallet from \"../../pages/wallet\";\nimport LightningNode from \"../../pages/lightningnode\";\nimport Channel from \"../../pages/channel\";\nimport Notifications from \"../../pages/notifications\";\nimport Maps from \"../../pages/maps\";\nimport Profiles from \"../../pages/profiles\";\nimport Payments from \"../../pages/payments\";\nimport SentPayments from \"../../pages/sentpayments\";\nimport ReceivedPayments from \"../../pages/receivedpayments\";\nimport Icons from \"../../pages/icons\";\nimport Charts from \"../../pages/charts\";\nimport Peers from \"../../pages/peers\";\nimport Peer from \"../../pages/peer\";\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n        <>\n          <Header history={props.history} />\n          <Sidebar />\n          <div\n            className={classnames(classes.content, {\n              [classes.contentShift]: layoutState.isSidebarOpened,\n            })}\n          >\n            <div className={classes.fakeToolbar} />\n            <Switch>\n              <Route path=\"/app/timeline\" component={Timeline} />\n              <Route path=\"/app/dashboard\" component={Dashboard} />\n              <Route path=\"/app/squeakaddress/:address\" component={SqueakAddress} />\n              <Route path=\"/app/squeak/:hash\" component={Squeak} />\n              <Route path=\"/app/profile/:id\" component={Profile} />\n              <Route path=\"/app/profiles\" component={Profiles} />\n              <Route path=\"/app/payments\" component={Payments} />\n              <Route path=\"/app/sentpayments\" component={SentPayments} />\n              <Route path=\"/app/receivedpayments\" component={ReceivedPayments} />\n              <Route path=\"/app/wallet\" component={Wallet} />\n              <Route path=\"/app/lightningnode/:pubkey/:host/:port\" component={LightningNode} />\n              <Route path=\"/app/lightningnode/:pubkey/:host\" component={LightningNode} />\n              <Route path=\"/app/lightningnode/:pubkey\" component={LightningNode} />\n              <Route path=\"/app/channel/:txId/:outputIndex\" component={Channel} />\n              <Route path=\"/app/peers\" component={Peers} />\n              <Route path=\"/app/peer/:id\" component={Peer} />\n              <Route path=\"/app/notifications\" component={Notifications} />\n              <Route\n                exact\n                path=\"/app/ui\"\n                render={() => <Redirect to=\"/app/ui/icons\" />}\n              />\n              <Route path=\"/app/ui/maps\" component={Maps} />\n              <Route path=\"/app/ui/icons\" component={Icons} />\n              <Route path=\"/app/ui/charts\" component={Charts} />\n            </Switch>\n          </div>\n        </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.main,\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotype: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(12),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeText: {\n    fontWeight: 500,\n    color: \"white\",\n    marginLeft: theme.spacing(2),\n  },\n  logotypeIcon: {\n    width: 70,\n    marginRight: theme.spacing(2),\n  },\n  paperRoot: {\n    boxShadow: theme.customShadows.widgetDark,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(6),\n    paddingRight: theme.spacing(6),\n    maxWidth: 404,\n  },\n  textRow: {\n    marginBottom: theme.spacing(10),\n    textAlign: \"center\",\n  },\n  errorCode: {\n    fontSize: 148,\n    fontWeight: 600,\n  },\n  safetyText: {\n    fontWeight: 300,\n    color: theme.palette.text.hint,\n  },\n  backButton: {\n    boxShadow: theme.customShadows.widget,\n    textTransform: \"none\",\n    fontSize: 22,\n  },\n}));\n","import React from \"react\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"./logo.svg\";\n\nexport default function Error() {\n  var classes = useStyles();\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotype}>\n        <img className={classes.logotypeIcon} src={logo} alt=\"logo\" />\n        <Typography variant=\"h3\" color=\"white\" className={classes.logotypeText}>\n          Material Admin\n        </Typography>\n      </div>\n      <Paper classes={{ root: classes.paperRoot }}>\n        <Typography\n          variant=\"h1\"\n          color=\"primary\"\n          className={classnames(classes.textRow, classes.errorCode)}\n        >\n          404\n        </Typography>\n        <Typography variant=\"h5\" color=\"primary\" className={classes.textRow}>\n          Oops. Looks like the page you're looking for no longer exists\n        </Typography>\n        <Typography\n          variant=\"h6\"\n          color=\"text\"\n          colorBrightness=\"secondary\"\n          className={classnames(classes.textRow, classes.safetyText)}\n        >\n          But we're here to bring you back to safety\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/\"\n          size=\"large\"\n          className={classes.backButton}\n        >\n          Back to Home\n        </Button>\n      </Paper>\n    </Grid>\n  );\n}\n","import { makeStyles } from \"@material-ui/styles\";\n\nexport default makeStyles(theme => ({\n  container: {\n    height: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  logotypeContainer: {\n    backgroundColor: theme.palette.primary.main,\n    width: \"60%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\",\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  logotypeImage: {\n    width: 165,\n    marginBottom: theme.spacing(4),\n  },\n  logotypeText: {\n    color: \"white\",\n    fontWeight: 500,\n    fontSize: 84,\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: 48,\n    },\n  },\n  formContainer: {\n    width: \"40%\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\",\n    },\n  },\n  form: {\n    width: 320,\n  },\n  tab: {\n    fontWeight: 400,\n    fontSize: 18,\n  },\n  greeting: {\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginTop: theme.spacing(4),\n  },\n  subGreeting: {\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginTop: theme.spacing(2),\n  },\n  googleButton: {\n    marginTop: theme.spacing(6),\n    boxShadow: theme.customShadows.widget,\n    backgroundColor: \"white\",\n    width: \"100%\",\n    textTransform: \"none\",\n  },\n  googleButtonCreating: {\n    marginTop: 0,\n  },\n  googleIcon: {\n    width: 30,\n    marginRight: theme.spacing(2),\n  },\n  creatingButtonContainer: {\n    marginTop: theme.spacing(2.5),\n    height: 46,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  createAccountButton: {\n    height: 46,\n    textTransform: \"none\",\n  },\n  formDividerContainer: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  formDividerWord: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  formDivider: {\n    flexGrow: 1,\n    height: 1,\n    backgroundColor: theme.palette.text.hint + \"40\",\n  },\n  errorMessage: {\n    textAlign: \"center\",\n  },\n  textFieldUnderline: {\n    \"&:before\": {\n      borderBottomColor: theme.palette.primary.light,\n    },\n    \"&:after\": {\n      borderBottomColor: theme.palette.primary.main,\n    },\n    \"&:hover:before\": {\n      borderBottomColor: `${theme.palette.primary.light} !important`,\n    },\n  },\n  textField: {\n    borderBottomColor: theme.palette.background.light,\n  },\n  formButtons: {\n    width: \"100%\",\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  forgetButton: {\n    textTransform: \"none\",\n    fontWeight: 400,\n  },\n  loginLoader: {\n    marginLeft: theme.spacing(4),\n  },\n  copyright: {\n    marginTop: theme.spacing(4),\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.up(\"md\")]: {\n      position: \"absolute\",\n      bottom: theme.spacing(2),\n    },\n  },\n}));\n","import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\n\n// context\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [nameValue, setNameValue] = useState(\"\");\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n        <Typography className={classes.logotypeText}>Material Admin</Typography>\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Typography variant=\"h1\" className={classes.greeting}>\n                Good Morning, User\n              </Typography>\n              <Button size=\"large\" className={classes.googleButton}>\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button>\n              <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || passwordValue.length === 0\n                    }\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                  >\n                    Login\n                  </Button>\n                )}\n                <Button\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.forgetButton}\n                >\n                  Forget Password\n                </Button>\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n              <Typography variant=\"h1\" className={classes.greeting}>\n                Welcome!\n              </Typography>\n              <Typography variant=\"h2\" className={classes.subGreeting}>\n                Create your account\n              </Typography>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  Something is wrong with your login or password :(\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"name\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={nameValue}\n                onChange={e => setNameValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Full Name\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"email\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Email Adress\"\n                type=\"email\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"Password\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.creatingButtonContainer}>\n                {isLoading ? (\n                  <CircularProgress size={26} />\n                ) : (\n                  <Button\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    disabled={\n                      loginValue.length === 0 ||\n                      passwordValue.length === 0 ||\n                      nameValue.length === 0\n                    }\n                    size=\"large\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    fullWidth\n                    className={classes.createAccountButton}\n                  >\n                    Create your account\n                  </Button>\n                )}\n              </div>\n              <div className={classes.formDividerContainer}>\n                <div className={classes.formDivider} />\n                <Typography className={classes.formDividerWord}>or</Typography>\n                <div className={classes.formDivider} />\n              </div>\n              <Button\n                size=\"large\"\n                className={classnames(\n                  classes.googleButton,\n                  classes.googleButtonCreating,\n                )}\n              >\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\n                &nbsp;Sign in with Google\n              </Button>\n            </React.Fragment>\n          )}\n        </div>\n        <Typography color=\"primary\" className={classes.copyright}>\n          © 2014-2019 Flatlogic, LLC. All rights reserved.\n        </Typography>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","import React from \"react\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\n// components\nimport Layout from \"./Layout\";\n\n// pages\nimport Error from \"../pages/error\";\nimport Login from \"../pages/login\";\n\n// context\nimport { useUserState } from \"../context/UserContext\";\n\nexport default function App() {\n  // global\n  var { isAuthenticated } = useUserState();\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app/timeline\" />} />\n        <Route\n          exact\n          path=\"/app\"\n          render={() => <Redirect to=\"/app/timeline\" />}\n        />\n        <PublicRoute path=\"/app\" component={Layout} />\n        // <PublicRoute path=\"/login\" component={Login} />\n        <Route component={Error} />\n      </Switch>\n    </HashRouter>\n  );\n\n  // #######################################################################\n\n  // function PrivateRoute({ component, ...rest }) {\n  //   return (\n  //     <Route\n  //       {...rest}\n  //       render={props =>\n  //         isAuthenticated ? (\n  //           React.createElement(component, props)\n  //         ) : (\n  //           <Redirect\n  //             to={{\n  //               pathname: \"/login\",\n  //               state: {\n  //                 from: props.location,\n  //               },\n  //             }}\n  //           />\n  //         )\n  //       }\n  //     />\n  //   );\n  // }\n\n  function PublicRoute({ component, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          React.createElement(component, props)\n        }\n      />\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport Themes from \"./themes\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { LayoutProvider } from \"./context/LayoutContext\";\nimport { UserProvider } from \"./context/UserContext\";\n\nReactDOM.render(\n  <LayoutProvider>\n    <UserProvider>\n      <ThemeProvider theme={Themes.default}>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </UserProvider>\n  </LayoutProvider>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint-disable */\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar proto_lnd_pb = require('../proto/lnd_pb.js');\ngoog.exportSymbol('proto.squeaknode.ClearSqueakProfileImageReply', null, global);\ngoog.exportSymbol('proto.squeaknode.ClearSqueakProfileImageRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.CreateContactProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.CreateContactProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.CreatePeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.CreatePeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.CreateSigningProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.CreateSigningProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DeletePeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DeletePeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DeleteSqueakProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DeleteSqueakProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.DeleteSqueakReply', null, global);\ngoog.exportSymbol('proto.squeaknode.DeleteSqueakRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetAddressSqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetAddressSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetAncestorSqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetAncestorSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetBuyOfferReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetBuyOfferRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetBuyOffersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetBuyOffersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetContactProfilesReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetContactProfilesRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetNetworkReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetNetworkRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPaymentSummaryReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPaymentSummaryRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPeersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetPeersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetReceivedPaymentsReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetReceivedPaymentsRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetReplySqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetReplySqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentOffersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentOffersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentPaymentReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentPaymentRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentPaymentsReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSentPaymentsRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSigningProfilesReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSigningProfilesRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakDetailsReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakDetailsRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakDisplayReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakDisplayRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileByAddressReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileByAddressRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileByNameReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileByNameRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfilePrivateKeyReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfilePrivateKeyRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetSqueakProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.GetTimelineSqueakDisplaysReply', null, global);\ngoog.exportSymbol('proto.squeaknode.GetTimelineSqueakDisplaysRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.ImportSigningProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.ImportSigningProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.LoadBuyOffersReply', null, global);\ngoog.exportSymbol('proto.squeaknode.LoadBuyOffersRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.MakeSqueakReply', null, global);\ngoog.exportSymbol('proto.squeaknode.MakeSqueakRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.OfferDisplayEntry', null, global);\ngoog.exportSymbol('proto.squeaknode.PayOfferReply', null, global);\ngoog.exportSymbol('proto.squeaknode.PayOfferRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.PaymentSummary', null, global);\ngoog.exportSymbol('proto.squeaknode.ReceivedPayment', null, global);\ngoog.exportSymbol('proto.squeaknode.RenamePeerReply', null, global);\ngoog.exportSymbol('proto.squeaknode.RenamePeerRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.RenameSqueakProfileReply', null, global);\ngoog.exportSymbol('proto.squeaknode.RenameSqueakProfileRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SentOffer', null, global);\ngoog.exportSymbol('proto.squeaknode.SentPayment', null, global);\ngoog.exportSymbol('proto.squeaknode.SetPeerDownloadingReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetPeerDownloadingRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SetPeerUploadingReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetPeerUploadingRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileFollowingReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileFollowingRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileImageReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileImageRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileSharingReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SetSqueakProfileSharingRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SqueakDetailEntry', null, global);\ngoog.exportSymbol('proto.squeaknode.SqueakDisplayEntry', null, global);\ngoog.exportSymbol('proto.squeaknode.SqueakPeer', null, global);\ngoog.exportSymbol('proto.squeaknode.SqueakProfile', null, global);\ngoog.exportSymbol('proto.squeaknode.SubscribeReceivedPaymentsRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SyncResult', null, global);\ngoog.exportSymbol('proto.squeaknode.SyncSqueakReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SyncSqueakRequest', null, global);\ngoog.exportSymbol('proto.squeaknode.SyncSqueaksReply', null, global);\ngoog.exportSymbol('proto.squeaknode.SyncSqueaksRequest', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreateSigningProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreateSigningProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreateSigningProfileRequest.displayName = 'proto.squeaknode.CreateSigningProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreateSigningProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreateSigningProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreateSigningProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateSigningProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileName: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreateSigningProfileRequest}\n */\nproto.squeaknode.CreateSigningProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreateSigningProfileRequest;\n  return proto.squeaknode.CreateSigningProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreateSigningProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreateSigningProfileRequest}\n */\nproto.squeaknode.CreateSigningProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreateSigningProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreateSigningProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreateSigningProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateSigningProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string profile_name = 1;\n * @return {string}\n */\nproto.squeaknode.CreateSigningProfileRequest.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.CreateSigningProfileRequest.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreateSigningProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreateSigningProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreateSigningProfileReply.displayName = 'proto.squeaknode.CreateSigningProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreateSigningProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreateSigningProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreateSigningProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateSigningProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreateSigningProfileReply}\n */\nproto.squeaknode.CreateSigningProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreateSigningProfileReply;\n  return proto.squeaknode.CreateSigningProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreateSigningProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreateSigningProfileReply}\n */\nproto.squeaknode.CreateSigningProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreateSigningProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreateSigningProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreateSigningProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateSigningProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.CreateSigningProfileReply.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.CreateSigningProfileReply.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ImportSigningProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ImportSigningProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ImportSigningProfileRequest.displayName = 'proto.squeaknode.ImportSigningProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ImportSigningProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ImportSigningProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ImportSigningProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ImportSigningProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    privateKey: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ImportSigningProfileRequest}\n */\nproto.squeaknode.ImportSigningProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ImportSigningProfileRequest;\n  return proto.squeaknode.ImportSigningProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ImportSigningProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ImportSigningProfileRequest}\n */\nproto.squeaknode.ImportSigningProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivateKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ImportSigningProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ImportSigningProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ImportSigningProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ImportSigningProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPrivateKey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string profile_name = 1;\n * @return {string}\n */\nproto.squeaknode.ImportSigningProfileRequest.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.ImportSigningProfileRequest.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string private_key = 2;\n * @return {string}\n */\nproto.squeaknode.ImportSigningProfileRequest.prototype.getPrivateKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.ImportSigningProfileRequest.prototype.setPrivateKey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ImportSigningProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ImportSigningProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ImportSigningProfileReply.displayName = 'proto.squeaknode.ImportSigningProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ImportSigningProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ImportSigningProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ImportSigningProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ImportSigningProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ImportSigningProfileReply}\n */\nproto.squeaknode.ImportSigningProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ImportSigningProfileReply;\n  return proto.squeaknode.ImportSigningProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ImportSigningProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ImportSigningProfileReply}\n */\nproto.squeaknode.ImportSigningProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ImportSigningProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ImportSigningProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ImportSigningProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ImportSigningProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.ImportSigningProfileReply.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ImportSigningProfileReply.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreateContactProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreateContactProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreateContactProfileRequest.displayName = 'proto.squeaknode.CreateContactProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreateContactProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreateContactProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreateContactProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateContactProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    address: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreateContactProfileRequest}\n */\nproto.squeaknode.CreateContactProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreateContactProfileRequest;\n  return proto.squeaknode.CreateContactProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreateContactProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreateContactProfileRequest}\n */\nproto.squeaknode.CreateContactProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreateContactProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreateContactProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreateContactProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateContactProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string profile_name = 1;\n * @return {string}\n */\nproto.squeaknode.CreateContactProfileRequest.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.CreateContactProfileRequest.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string address = 2;\n * @return {string}\n */\nproto.squeaknode.CreateContactProfileRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.CreateContactProfileRequest.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreateContactProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreateContactProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreateContactProfileReply.displayName = 'proto.squeaknode.CreateContactProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreateContactProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreateContactProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreateContactProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateContactProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreateContactProfileReply}\n */\nproto.squeaknode.CreateContactProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreateContactProfileReply;\n  return proto.squeaknode.CreateContactProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreateContactProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreateContactProfileReply}\n */\nproto.squeaknode.CreateContactProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreateContactProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreateContactProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreateContactProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreateContactProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.CreateContactProfileReply.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.CreateContactProfileReply.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSigningProfilesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSigningProfilesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSigningProfilesRequest.displayName = 'proto.squeaknode.GetSigningProfilesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSigningProfilesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSigningProfilesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSigningProfilesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSigningProfilesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSigningProfilesRequest}\n */\nproto.squeaknode.GetSigningProfilesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSigningProfilesRequest;\n  return proto.squeaknode.GetSigningProfilesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSigningProfilesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSigningProfilesRequest}\n */\nproto.squeaknode.GetSigningProfilesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSigningProfilesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSigningProfilesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSigningProfilesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSigningProfilesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSigningProfilesReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetSigningProfilesReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetSigningProfilesReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSigningProfilesReply.displayName = 'proto.squeaknode.GetSigningProfilesReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetSigningProfilesReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSigningProfilesReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSigningProfilesReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSigningProfilesReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSigningProfilesReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfilesList: jspb.Message.toObjectList(msg.getSqueakProfilesList(),\n    proto.squeaknode.SqueakProfile.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSigningProfilesReply}\n */\nproto.squeaknode.GetSigningProfilesReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSigningProfilesReply;\n  return proto.squeaknode.GetSigningProfilesReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSigningProfilesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSigningProfilesReply}\n */\nproto.squeaknode.GetSigningProfilesReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.addSqueakProfiles(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSigningProfilesReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSigningProfilesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSigningProfilesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSigningProfilesReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfilesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakProfile squeak_profiles = 1;\n * @return {!Array.<!proto.squeaknode.SqueakProfile>}\n */\nproto.squeaknode.GetSigningProfilesReply.prototype.getSqueakProfilesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakProfile>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakProfile>} value */\nproto.squeaknode.GetSigningProfilesReply.prototype.setSqueakProfilesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakProfile=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetSigningProfilesReply.prototype.addSqueakProfiles = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakProfile, opt_index);\n};\n\n\nproto.squeaknode.GetSigningProfilesReply.prototype.clearSqueakProfilesList = function() {\n  this.setSqueakProfilesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetContactProfilesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetContactProfilesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetContactProfilesRequest.displayName = 'proto.squeaknode.GetContactProfilesRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetContactProfilesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetContactProfilesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetContactProfilesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetContactProfilesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetContactProfilesRequest}\n */\nproto.squeaknode.GetContactProfilesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetContactProfilesRequest;\n  return proto.squeaknode.GetContactProfilesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetContactProfilesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetContactProfilesRequest}\n */\nproto.squeaknode.GetContactProfilesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetContactProfilesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetContactProfilesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetContactProfilesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetContactProfilesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetContactProfilesReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetContactProfilesReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetContactProfilesReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetContactProfilesReply.displayName = 'proto.squeaknode.GetContactProfilesReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetContactProfilesReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetContactProfilesReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetContactProfilesReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetContactProfilesReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetContactProfilesReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfilesList: jspb.Message.toObjectList(msg.getSqueakProfilesList(),\n    proto.squeaknode.SqueakProfile.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetContactProfilesReply}\n */\nproto.squeaknode.GetContactProfilesReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetContactProfilesReply;\n  return proto.squeaknode.GetContactProfilesReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetContactProfilesReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetContactProfilesReply}\n */\nproto.squeaknode.GetContactProfilesReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.addSqueakProfiles(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetContactProfilesReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetContactProfilesReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetContactProfilesReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetContactProfilesReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfilesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakProfile squeak_profiles = 1;\n * @return {!Array.<!proto.squeaknode.SqueakProfile>}\n */\nproto.squeaknode.GetContactProfilesReply.prototype.getSqueakProfilesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakProfile>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakProfile>} value */\nproto.squeaknode.GetContactProfilesReply.prototype.setSqueakProfilesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakProfile=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetContactProfilesReply.prototype.addSqueakProfiles = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakProfile, opt_index);\n};\n\n\nproto.squeaknode.GetContactProfilesReply.prototype.clearSqueakProfilesList = function() {\n  this.setSqueakProfilesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileRequest.displayName = 'proto.squeaknode.GetSqueakProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileRequest}\n */\nproto.squeaknode.GetSqueakProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileRequest;\n  return proto.squeaknode.GetSqueakProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileRequest}\n */\nproto.squeaknode.GetSqueakProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetSqueakProfileRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetSqueakProfileRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileReply.displayName = 'proto.squeaknode.GetSqueakProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfile: (f = msg.getSqueakProfile()) && proto.squeaknode.SqueakProfile.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileReply}\n */\nproto.squeaknode.GetSqueakProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileReply;\n  return proto.squeaknode.GetSqueakProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileReply}\n */\nproto.squeaknode.GetSqueakProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.setSqueakProfile(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfile();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakProfile squeak_profile = 1;\n * @return {?proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetSqueakProfileReply.prototype.getSqueakProfile = function() {\n  return /** @type{?proto.squeaknode.SqueakProfile} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakProfile|undefined} value */\nproto.squeaknode.GetSqueakProfileReply.prototype.setSqueakProfile = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSqueakProfileReply.prototype.clearSqueakProfile = function() {\n  this.setSqueakProfile(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSqueakProfileReply.prototype.hasSqueakProfile = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileByAddressRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileByAddressRequest.displayName = 'proto.squeaknode.GetSqueakProfileByAddressRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileByAddressRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileByAddressRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileByAddressRequest}\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileByAddressRequest;\n  return proto.squeaknode.GetSqueakProfileByAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileByAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileByAddressRequest}\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileByAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileByAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.squeaknode.GetSqueakProfileByAddressRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSqueakProfileByAddressRequest.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileByAddressReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileByAddressReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileByAddressReply.displayName = 'proto.squeaknode.GetSqueakProfileByAddressReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileByAddressReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileByAddressReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfile: (f = msg.getSqueakProfile()) && proto.squeaknode.SqueakProfile.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileByAddressReply}\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileByAddressReply;\n  return proto.squeaknode.GetSqueakProfileByAddressReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileByAddressReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileByAddressReply}\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.setSqueakProfile(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileByAddressReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileByAddressReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfile();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakProfile squeak_profile = 1;\n * @return {?proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.prototype.getSqueakProfile = function() {\n  return /** @type{?proto.squeaknode.SqueakProfile} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakProfile|undefined} value */\nproto.squeaknode.GetSqueakProfileByAddressReply.prototype.setSqueakProfile = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSqueakProfileByAddressReply.prototype.clearSqueakProfile = function() {\n  this.setSqueakProfile(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSqueakProfileByAddressReply.prototype.hasSqueakProfile = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileByNameRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileByNameRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileByNameRequest.displayName = 'proto.squeaknode.GetSqueakProfileByNameRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileByNameRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileByNameRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileByNameRequest}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileByNameRequest;\n  return proto.squeaknode.GetSqueakProfileByNameRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileByNameRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileByNameRequest}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileByNameRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileByNameRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.squeaknode.GetSqueakProfileByNameRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSqueakProfileByNameRequest.prototype.setName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfileByNameReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfileByNameReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfileByNameReply.displayName = 'proto.squeaknode.GetSqueakProfileByNameReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfileByNameReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfileByNameReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByNameReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakProfile: (f = msg.getSqueakProfile()) && proto.squeaknode.SqueakProfile.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfileByNameReply}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfileByNameReply;\n  return proto.squeaknode.GetSqueakProfileByNameReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfileByNameReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfileByNameReply}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.setSqueakProfile(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfileByNameReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfileByNameReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfileByNameReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakProfile();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakProfile squeak_profile = 1;\n * @return {?proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.getSqueakProfile = function() {\n  return /** @type{?proto.squeaknode.SqueakProfile} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakProfile, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakProfile|undefined} value */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.setSqueakProfile = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.clearSqueakProfile = function() {\n  this.setSqueakProfile(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSqueakProfileByNameReply.prototype.hasSqueakProfile = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileFollowingRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileFollowingRequest.displayName = 'proto.squeaknode.SetSqueakProfileFollowingRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileFollowingRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileFollowingRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    following: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileFollowingRequest}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileFollowingRequest;\n  return proto.squeaknode.SetSqueakProfileFollowingRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileFollowingRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileFollowingRequest}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFollowing(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileFollowingRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileFollowingRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getFollowing();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool following = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.getFollowing = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SetSqueakProfileFollowingRequest.prototype.setFollowing = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileFollowingReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileFollowingReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileFollowingReply.displayName = 'proto.squeaknode.SetSqueakProfileFollowingReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileFollowingReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileFollowingReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileFollowingReply}\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileFollowingReply;\n  return proto.squeaknode.SetSqueakProfileFollowingReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileFollowingReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileFollowingReply}\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileFollowingReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileFollowingReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileFollowingReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileSharingRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileSharingRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileSharingRequest.displayName = 'proto.squeaknode.SetSqueakProfileSharingRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileSharingRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileSharingRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileSharingRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileSharingRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    sharing: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileSharingRequest}\n */\nproto.squeaknode.SetSqueakProfileSharingRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileSharingRequest;\n  return proto.squeaknode.SetSqueakProfileSharingRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileSharingRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileSharingRequest}\n */\nproto.squeaknode.SetSqueakProfileSharingRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSharing(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileSharingRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileSharingRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileSharingRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileSharingRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSharing();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.SetSqueakProfileSharingRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetSqueakProfileSharingRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool sharing = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SetSqueakProfileSharingRequest.prototype.getSharing = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SetSqueakProfileSharingRequest.prototype.setSharing = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileSharingReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileSharingReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileSharingReply.displayName = 'proto.squeaknode.SetSqueakProfileSharingReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileSharingReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileSharingReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileSharingReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileSharingReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileSharingReply}\n */\nproto.squeaknode.SetSqueakProfileSharingReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileSharingReply;\n  return proto.squeaknode.SetSqueakProfileSharingReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileSharingReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileSharingReply}\n */\nproto.squeaknode.SetSqueakProfileSharingReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileSharingReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileSharingReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileSharingReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileSharingReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.RenameSqueakProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.RenameSqueakProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.RenameSqueakProfileRequest.displayName = 'proto.squeaknode.RenameSqueakProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.RenameSqueakProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.RenameSqueakProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenameSqueakProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    profileName: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.RenameSqueakProfileRequest}\n */\nproto.squeaknode.RenameSqueakProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.RenameSqueakProfileRequest;\n  return proto.squeaknode.RenameSqueakProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.RenameSqueakProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.RenameSqueakProfileRequest}\n */\nproto.squeaknode.RenameSqueakProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.RenameSqueakProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.RenameSqueakProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenameSqueakProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string profile_name = 2;\n * @return {string}\n */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.RenameSqueakProfileRequest.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.RenameSqueakProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.RenameSqueakProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.RenameSqueakProfileReply.displayName = 'proto.squeaknode.RenameSqueakProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.RenameSqueakProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.RenameSqueakProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.RenameSqueakProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenameSqueakProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.RenameSqueakProfileReply}\n */\nproto.squeaknode.RenameSqueakProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.RenameSqueakProfileReply;\n  return proto.squeaknode.RenameSqueakProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.RenameSqueakProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.RenameSqueakProfileReply}\n */\nproto.squeaknode.RenameSqueakProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.RenameSqueakProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.RenameSqueakProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.RenameSqueakProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenameSqueakProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfilePrivateKeyRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfilePrivateKeyRequest.displayName = 'proto.squeaknode.GetSqueakProfilePrivateKeyRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfilePrivateKeyRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfilePrivateKeyRequest;\n  return proto.squeaknode.GetSqueakProfilePrivateKeyRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfilePrivateKeyRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetSqueakProfilePrivateKeyRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakProfilePrivateKeyReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakProfilePrivateKeyReply.displayName = 'proto.squeaknode.GetSqueakProfilePrivateKeyReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakProfilePrivateKeyReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    privateKey: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakProfilePrivateKeyReply}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakProfilePrivateKeyReply;\n  return proto.squeaknode.GetSqueakProfilePrivateKeyReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakProfilePrivateKeyReply}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivateKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakProfilePrivateKeyReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakProfilePrivateKeyReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPrivateKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string private_key = 1;\n * @return {string}\n */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.prototype.getPrivateKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSqueakProfilePrivateKeyReply.prototype.setPrivateKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeleteSqueakProfileRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeleteSqueakProfileRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeleteSqueakProfileRequest.displayName = 'proto.squeaknode.DeleteSqueakProfileRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeleteSqueakProfileRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeleteSqueakProfileRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakProfileRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeleteSqueakProfileRequest}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeleteSqueakProfileRequest;\n  return proto.squeaknode.DeleteSqueakProfileRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeleteSqueakProfileRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeleteSqueakProfileRequest}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeleteSqueakProfileRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeleteSqueakProfileRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakProfileRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.DeleteSqueakProfileRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DeleteSqueakProfileRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeleteSqueakProfileReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeleteSqueakProfileReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeleteSqueakProfileReply.displayName = 'proto.squeaknode.DeleteSqueakProfileReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeleteSqueakProfileReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeleteSqueakProfileReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeleteSqueakProfileReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakProfileReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeleteSqueakProfileReply}\n */\nproto.squeaknode.DeleteSqueakProfileReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeleteSqueakProfileReply;\n  return proto.squeaknode.DeleteSqueakProfileReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeleteSqueakProfileReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeleteSqueakProfileReply}\n */\nproto.squeaknode.DeleteSqueakProfileReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeleteSqueakProfileReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeleteSqueakProfileReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeleteSqueakProfileReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakProfileReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileImageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileImageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileImageRequest.displayName = 'proto.squeaknode.SetSqueakProfileImageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileImageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileImageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileImageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    profileImage: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileImageRequest}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileImageRequest;\n  return proto.squeaknode.SetSqueakProfileImageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileImageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileImageRequest}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileImage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileImageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileImageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileImageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getProfileImage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string profile_image = 2;\n * @return {string}\n */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.getProfileImage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SetSqueakProfileImageRequest.prototype.setProfileImage = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetSqueakProfileImageReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetSqueakProfileImageReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetSqueakProfileImageReply.displayName = 'proto.squeaknode.SetSqueakProfileImageReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetSqueakProfileImageReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetSqueakProfileImageReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetSqueakProfileImageReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileImageReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetSqueakProfileImageReply}\n */\nproto.squeaknode.SetSqueakProfileImageReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetSqueakProfileImageReply;\n  return proto.squeaknode.SetSqueakProfileImageReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetSqueakProfileImageReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetSqueakProfileImageReply}\n */\nproto.squeaknode.SetSqueakProfileImageReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetSqueakProfileImageReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetSqueakProfileImageReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetSqueakProfileImageReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetSqueakProfileImageReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ClearSqueakProfileImageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ClearSqueakProfileImageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ClearSqueakProfileImageRequest.displayName = 'proto.squeaknode.ClearSqueakProfileImageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ClearSqueakProfileImageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ClearSqueakProfileImageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ClearSqueakProfileImageRequest}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ClearSqueakProfileImageRequest;\n  return proto.squeaknode.ClearSqueakProfileImageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ClearSqueakProfileImageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ClearSqueakProfileImageRequest}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ClearSqueakProfileImageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ClearSqueakProfileImageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.ClearSqueakProfileImageRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ClearSqueakProfileImageRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ClearSqueakProfileImageReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ClearSqueakProfileImageReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ClearSqueakProfileImageReply.displayName = 'proto.squeaknode.ClearSqueakProfileImageReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ClearSqueakProfileImageReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ClearSqueakProfileImageReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ClearSqueakProfileImageReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSqueakProfileImageReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ClearSqueakProfileImageReply}\n */\nproto.squeaknode.ClearSqueakProfileImageReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ClearSqueakProfileImageReply;\n  return proto.squeaknode.ClearSqueakProfileImageReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ClearSqueakProfileImageReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ClearSqueakProfileImageReply}\n */\nproto.squeaknode.ClearSqueakProfileImageReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ClearSqueakProfileImageReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ClearSqueakProfileImageReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ClearSqueakProfileImageReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ClearSqueakProfileImageReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SqueakProfile = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SqueakProfile, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SqueakProfile.displayName = 'proto.squeaknode.SqueakProfile';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SqueakProfile.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SqueakProfile.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SqueakProfile} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakProfile.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    profileName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    hasPrivateKey: jspb.Message.getFieldWithDefault(msg, 3, false),\n    address: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    sharing: jspb.Message.getFieldWithDefault(msg, 5, false),\n    following: jspb.Message.getFieldWithDefault(msg, 6, false),\n    profileImage: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    hasCustomProfileImage: jspb.Message.getFieldWithDefault(msg, 8, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.SqueakProfile.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SqueakProfile;\n  return proto.squeaknode.SqueakProfile.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SqueakProfile} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.SqueakProfile.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileName(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasPrivateKey(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSharing(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFollowing(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProfileImage(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasCustomProfileImage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SqueakProfile.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SqueakProfile.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SqueakProfile} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakProfile.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getProfileName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getHasPrivateKey();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getSharing();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getFollowing();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = message.getProfileImage();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getHasCustomProfileImage();\n  if (f) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.SqueakProfile.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakProfile.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string profile_name = 2;\n * @return {string}\n */\nproto.squeaknode.SqueakProfile.prototype.getProfileName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakProfile.prototype.setProfileName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool has_private_key = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakProfile.prototype.getHasPrivateKey = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakProfile.prototype.setHasPrivateKey = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string address = 4;\n * @return {string}\n */\nproto.squeaknode.SqueakProfile.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakProfile.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bool sharing = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakProfile.prototype.getSharing = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakProfile.prototype.setSharing = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional bool following = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakProfile.prototype.getFollowing = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakProfile.prototype.setFollowing = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string profile_image = 7;\n * @return {string}\n */\nproto.squeaknode.SqueakProfile.prototype.getProfileImage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakProfile.prototype.setProfileImage = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional bool has_custom_profile_image = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakProfile.prototype.getHasCustomProfileImage = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakProfile.prototype.setHasCustomProfileImage = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.MakeSqueakRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.MakeSqueakRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.MakeSqueakRequest.displayName = 'proto.squeaknode.MakeSqueakRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.MakeSqueakRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.MakeSqueakRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.MakeSqueakRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    profileId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    content: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    replyto: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.MakeSqueakRequest}\n */\nproto.squeaknode.MakeSqueakRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.MakeSqueakRequest;\n  return proto.squeaknode.MakeSqueakRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.MakeSqueakRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.MakeSqueakRequest}\n */\nproto.squeaknode.MakeSqueakRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setProfileId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setContent(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReplyto(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.MakeSqueakRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.MakeSqueakRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.MakeSqueakRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProfileId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getContent();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getReplyto();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 profile_id = 1;\n * @return {number}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.getProfileId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.MakeSqueakRequest.prototype.setProfileId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string content = 2;\n * @return {string}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.getContent = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.MakeSqueakRequest.prototype.setContent = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string replyto = 3;\n * @return {string}\n */\nproto.squeaknode.MakeSqueakRequest.prototype.getReplyto = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.MakeSqueakRequest.prototype.setReplyto = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.MakeSqueakReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.MakeSqueakReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.MakeSqueakReply.displayName = 'proto.squeaknode.MakeSqueakReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.MakeSqueakReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.MakeSqueakReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.MakeSqueakReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.MakeSqueakReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.MakeSqueakReply}\n */\nproto.squeaknode.MakeSqueakReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.MakeSqueakReply;\n  return proto.squeaknode.MakeSqueakReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.MakeSqueakReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.MakeSqueakReply}\n */\nproto.squeaknode.MakeSqueakReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.MakeSqueakReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.MakeSqueakReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.MakeSqueakReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.MakeSqueakReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.MakeSqueakReply.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.MakeSqueakReply.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakDisplayRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakDisplayRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakDisplayRequest.displayName = 'proto.squeaknode.GetSqueakDisplayRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakDisplayRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakDisplayRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakDisplayRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDisplayRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakDisplayRequest}\n */\nproto.squeaknode.GetSqueakDisplayRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakDisplayRequest;\n  return proto.squeaknode.GetSqueakDisplayRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakDisplayRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakDisplayRequest}\n */\nproto.squeaknode.GetSqueakDisplayRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakDisplayRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakDisplayRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakDisplayRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDisplayRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.GetSqueakDisplayRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSqueakDisplayRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakDisplayReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakDisplayReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakDisplayReply.displayName = 'proto.squeaknode.GetSqueakDisplayReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakDisplayReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakDisplayReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakDisplayReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDisplayReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntry: (f = msg.getSqueakDisplayEntry()) && proto.squeaknode.SqueakDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakDisplayReply}\n */\nproto.squeaknode.GetSqueakDisplayReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakDisplayReply;\n  return proto.squeaknode.GetSqueakDisplayReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakDisplayReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakDisplayReply}\n */\nproto.squeaknode.GetSqueakDisplayReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.setSqueakDisplayEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakDisplayReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakDisplayReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakDisplayReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDisplayReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntry();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakDisplayEntry squeak_display_entry = 1;\n * @return {?proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetSqueakDisplayReply.prototype.getSqueakDisplayEntry = function() {\n  return /** @type{?proto.squeaknode.SqueakDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakDisplayEntry|undefined} value */\nproto.squeaknode.GetSqueakDisplayReply.prototype.setSqueakDisplayEntry = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSqueakDisplayReply.prototype.clearSqueakDisplayEntry = function() {\n  this.setSqueakDisplayEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSqueakDisplayReply.prototype.hasSqueakDisplayEntry = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SqueakDisplayEntry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SqueakDisplayEntry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SqueakDisplayEntry.displayName = 'proto.squeaknode.SqueakDisplayEntry';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SqueakDisplayEntry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SqueakDisplayEntry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakDisplayEntry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    isUnlocked: jspb.Message.getFieldWithDefault(msg, 2, false),\n    contentStr: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    isReply: jspb.Message.getFieldWithDefault(msg, 4, false),\n    replyTo: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    blockHeight: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    blockHash: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    blockTime: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    authorAddress: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    isAuthorKnown: jspb.Message.getFieldWithDefault(msg, 10, false),\n    author: (f = msg.getAuthor()) && proto.squeaknode.SqueakProfile.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.SqueakDisplayEntry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SqueakDisplayEntry;\n  return proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SqueakDisplayEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsUnlocked(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setContentStr(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsReply(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReplyTo(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlockHeight(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBlockHash(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBlockTime(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAuthorAddress(value);\n      break;\n    case 10:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsAuthorKnown(value);\n      break;\n    case 11:\n      var value = new proto.squeaknode.SqueakProfile;\n      reader.readMessage(value,proto.squeaknode.SqueakProfile.deserializeBinaryFromReader);\n      msg.setAuthor(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SqueakDisplayEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getIsUnlocked();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getContentStr();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getIsReply();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getReplyTo();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getBlockHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getBlockHash();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getBlockTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getAuthorAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getIsAuthorKnown();\n  if (f) {\n    writer.writeBool(\n      10,\n      f\n    );\n  }\n  f = message.getAuthor();\n  if (f != null) {\n    writer.writeMessage(\n      11,\n      f,\n      proto.squeaknode.SqueakProfile.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool is_unlocked = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getIsUnlocked = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setIsUnlocked = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string content_str = 3;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getContentStr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setContentStr = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool is_reply = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getIsReply = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setIsReply = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string reply_to = 5;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getReplyTo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setReplyTo = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int32 block_height = 6;\n * @return {number}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setBlockHeight = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string block_hash = 7;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getBlockHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setBlockHash = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 block_time = 8;\n * @return {number}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getBlockTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setBlockTime = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string author_address = 9;\n * @return {string}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getAuthorAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setAuthorAddress = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional bool is_author_known = 10;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getIsAuthorKnown = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setIsAuthorKnown = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional SqueakProfile author = 11;\n * @return {?proto.squeaknode.SqueakProfile}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.getAuthor = function() {\n  return /** @type{?proto.squeaknode.SqueakProfile} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakProfile, 11));\n};\n\n\n/** @param {?proto.squeaknode.SqueakProfile|undefined} value */\nproto.squeaknode.SqueakDisplayEntry.prototype.setAuthor = function(value) {\n  jspb.Message.setWrapperField(this, 11, value);\n};\n\n\nproto.squeaknode.SqueakDisplayEntry.prototype.clearAuthor = function() {\n  this.setAuthor(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.SqueakDisplayEntry.prototype.hasAuthor = function() {\n  return jspb.Message.getField(this, 11) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetTimelineSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetTimelineSqueakDisplaysRequest.displayName = 'proto.squeaknode.GetTimelineSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetTimelineSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetTimelineSqueakDisplaysRequest}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetTimelineSqueakDisplaysRequest;\n  return proto.squeaknode.GetTimelineSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetTimelineSqueakDisplaysRequest}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetTimelineSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTimelineSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetTimelineSqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetTimelineSqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetTimelineSqueakDisplaysReply.displayName = 'proto.squeaknode.GetTimelineSqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetTimelineSqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetTimelineSqueakDisplaysReply}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetTimelineSqueakDisplaysReply;\n  return proto.squeaknode.GetTimelineSqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetTimelineSqueakDisplaysReply}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetTimelineSqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetTimelineSqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetTimelineSqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetAddressSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetAddressSqueakDisplaysRequest.displayName = 'proto.squeaknode.GetAddressSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetAddressSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetAddressSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetAddressSqueakDisplaysRequest}\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetAddressSqueakDisplaysRequest;\n  return proto.squeaknode.GetAddressSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetAddressSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetAddressSqueakDisplaysRequest}\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetAddressSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetAddressSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetAddressSqueakDisplaysRequest.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetAddressSqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetAddressSqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetAddressSqueakDisplaysReply.displayName = 'proto.squeaknode.GetAddressSqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetAddressSqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetAddressSqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetAddressSqueakDisplaysReply}\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetAddressSqueakDisplaysReply;\n  return proto.squeaknode.GetAddressSqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetAddressSqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetAddressSqueakDisplaysReply}\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetAddressSqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetAddressSqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetAddressSqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetAddressSqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetAddressSqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetAncestorSqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetAncestorSqueakDisplaysRequest.displayName = 'proto.squeaknode.GetAncestorSqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetAncestorSqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetAncestorSqueakDisplaysRequest}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetAncestorSqueakDisplaysRequest;\n  return proto.squeaknode.GetAncestorSqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetAncestorSqueakDisplaysRequest}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetAncestorSqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetAncestorSqueakDisplaysRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetAncestorSqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetAncestorSqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetAncestorSqueakDisplaysReply.displayName = 'proto.squeaknode.GetAncestorSqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetAncestorSqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetAncestorSqueakDisplaysReply}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetAncestorSqueakDisplaysReply;\n  return proto.squeaknode.GetAncestorSqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetAncestorSqueakDisplaysReply}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetAncestorSqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetAncestorSqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetAncestorSqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetReplySqueakDisplaysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetReplySqueakDisplaysRequest.displayName = 'proto.squeaknode.GetReplySqueakDisplaysRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetReplySqueakDisplaysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetReplySqueakDisplaysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetReplySqueakDisplaysRequest}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetReplySqueakDisplaysRequest;\n  return proto.squeaknode.GetReplySqueakDisplaysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetReplySqueakDisplaysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetReplySqueakDisplaysRequest}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetReplySqueakDisplaysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetReplySqueakDisplaysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetReplySqueakDisplaysRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetReplySqueakDisplaysReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetReplySqueakDisplaysReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetReplySqueakDisplaysReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetReplySqueakDisplaysReply.displayName = 'proto.squeaknode.GetReplySqueakDisplaysReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetReplySqueakDisplaysReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetReplySqueakDisplaysReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDisplayEntriesList: jspb.Message.toObjectList(msg.getSqueakDisplayEntriesList(),\n    proto.squeaknode.SqueakDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetReplySqueakDisplaysReply}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetReplySqueakDisplaysReply;\n  return proto.squeaknode.GetReplySqueakDisplaysReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetReplySqueakDisplaysReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetReplySqueakDisplaysReply}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDisplayEntry.deserializeBinaryFromReader);\n      msg.addSqueakDisplayEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetReplySqueakDisplaysReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetReplySqueakDisplaysReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDisplayEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakDisplayEntry squeak_display_entries = 1;\n * @return {!Array.<!proto.squeaknode.SqueakDisplayEntry>}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.getSqueakDisplayEntriesList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakDisplayEntry>} value */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.setSqueakDisplayEntriesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakDisplayEntry}\n */\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.addSqueakDisplayEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetReplySqueakDisplaysReply.prototype.clearSqueakDisplayEntriesList = function() {\n  this.setSqueakDisplayEntriesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeleteSqueakRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeleteSqueakRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeleteSqueakRequest.displayName = 'proto.squeaknode.DeleteSqueakRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeleteSqueakRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeleteSqueakRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeleteSqueakRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeleteSqueakRequest}\n */\nproto.squeaknode.DeleteSqueakRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeleteSqueakRequest;\n  return proto.squeaknode.DeleteSqueakRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeleteSqueakRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeleteSqueakRequest}\n */\nproto.squeaknode.DeleteSqueakRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeleteSqueakRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeleteSqueakRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeleteSqueakRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.DeleteSqueakRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.DeleteSqueakRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeleteSqueakReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeleteSqueakReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeleteSqueakReply.displayName = 'proto.squeaknode.DeleteSqueakReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeleteSqueakReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeleteSqueakReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeleteSqueakReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeleteSqueakReply}\n */\nproto.squeaknode.DeleteSqueakReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeleteSqueakReply;\n  return proto.squeaknode.DeleteSqueakReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeleteSqueakReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeleteSqueakReply}\n */\nproto.squeaknode.DeleteSqueakReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeleteSqueakReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeleteSqueakReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeleteSqueakReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeleteSqueakReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreatePeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreatePeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreatePeerRequest.displayName = 'proto.squeaknode.CreatePeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreatePeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreatePeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreatePeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreatePeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    host: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    port: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreatePeerRequest}\n */\nproto.squeaknode.CreatePeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreatePeerRequest;\n  return proto.squeaknode.CreatePeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreatePeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreatePeerRequest}\n */\nproto.squeaknode.CreatePeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPeerName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHost(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPort(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreatePeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreatePeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreatePeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreatePeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getHost();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPort();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string peer_name = 1;\n * @return {string}\n */\nproto.squeaknode.CreatePeerRequest.prototype.getPeerName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.CreatePeerRequest.prototype.setPeerName = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string host = 2;\n * @return {string}\n */\nproto.squeaknode.CreatePeerRequest.prototype.getHost = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.CreatePeerRequest.prototype.setHost = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 port = 3;\n * @return {number}\n */\nproto.squeaknode.CreatePeerRequest.prototype.getPort = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.CreatePeerRequest.prototype.setPort = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.CreatePeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.CreatePeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.CreatePeerReply.displayName = 'proto.squeaknode.CreatePeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.CreatePeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.CreatePeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.CreatePeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreatePeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.CreatePeerReply}\n */\nproto.squeaknode.CreatePeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.CreatePeerReply;\n  return proto.squeaknode.CreatePeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.CreatePeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.CreatePeerReply}\n */\nproto.squeaknode.CreatePeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.CreatePeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.CreatePeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.CreatePeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.CreatePeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.CreatePeerReply.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.CreatePeerReply.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPeerRequest.displayName = 'proto.squeaknode.GetPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPeerRequest}\n */\nproto.squeaknode.GetPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPeerRequest;\n  return proto.squeaknode.GetPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPeerRequest}\n */\nproto.squeaknode.GetPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetPeerRequest.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetPeerRequest.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPeerReply.displayName = 'proto.squeaknode.GetPeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakPeer: (f = msg.getSqueakPeer()) && proto.squeaknode.SqueakPeer.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPeerReply}\n */\nproto.squeaknode.GetPeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPeerReply;\n  return proto.squeaknode.GetPeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPeerReply}\n */\nproto.squeaknode.GetPeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakPeer;\n      reader.readMessage(value,proto.squeaknode.SqueakPeer.deserializeBinaryFromReader);\n      msg.setSqueakPeer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakPeer();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakPeer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakPeer squeak_peer = 1;\n * @return {?proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.GetPeerReply.prototype.getSqueakPeer = function() {\n  return /** @type{?proto.squeaknode.SqueakPeer} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakPeer, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakPeer|undefined} value */\nproto.squeaknode.GetPeerReply.prototype.setSqueakPeer = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetPeerReply.prototype.clearSqueakPeer = function() {\n  this.setSqueakPeer(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetPeerReply.prototype.hasSqueakPeer = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPeersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPeersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPeersRequest.displayName = 'proto.squeaknode.GetPeersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPeersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPeersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPeersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPeersRequest}\n */\nproto.squeaknode.GetPeersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPeersRequest;\n  return proto.squeaknode.GetPeersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPeersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPeersRequest}\n */\nproto.squeaknode.GetPeersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPeersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPeersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPeersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPeersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetPeersReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetPeersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPeersReply.displayName = 'proto.squeaknode.GetPeersReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetPeersReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPeersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPeersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPeersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakPeersList: jspb.Message.toObjectList(msg.getSqueakPeersList(),\n    proto.squeaknode.SqueakPeer.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPeersReply}\n */\nproto.squeaknode.GetPeersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPeersReply;\n  return proto.squeaknode.GetPeersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPeersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPeersReply}\n */\nproto.squeaknode.GetPeersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakPeer;\n      reader.readMessage(value,proto.squeaknode.SqueakPeer.deserializeBinaryFromReader);\n      msg.addSqueakPeers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPeersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPeersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPeersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPeersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakPeersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakPeer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SqueakPeer squeak_peers = 1;\n * @return {!Array.<!proto.squeaknode.SqueakPeer>}\n */\nproto.squeaknode.GetPeersReply.prototype.getSqueakPeersList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SqueakPeer>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SqueakPeer, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SqueakPeer>} value */\nproto.squeaknode.GetPeersReply.prototype.setSqueakPeersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SqueakPeer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.GetPeersReply.prototype.addSqueakPeers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SqueakPeer, opt_index);\n};\n\n\nproto.squeaknode.GetPeersReply.prototype.clearSqueakPeersList = function() {\n  this.setSqueakPeersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SqueakPeer = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SqueakPeer, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SqueakPeer.displayName = 'proto.squeaknode.SqueakPeer';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SqueakPeer.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SqueakPeer.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SqueakPeer} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakPeer.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    peerName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    host: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    port: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    uploading: jspb.Message.getFieldWithDefault(msg, 5, false),\n    downloading: jspb.Message.getFieldWithDefault(msg, 6, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.SqueakPeer.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SqueakPeer;\n  return proto.squeaknode.SqueakPeer.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SqueakPeer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.SqueakPeer.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPeerName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHost(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPort(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setUploading(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDownloading(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SqueakPeer.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SqueakPeer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SqueakPeer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakPeer.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getPeerName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getHost();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPort();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getUploading();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getDownloading();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.SqueakPeer.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakPeer.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string peer_name = 2;\n * @return {string}\n */\nproto.squeaknode.SqueakPeer.prototype.getPeerName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakPeer.prototype.setPeerName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string host = 3;\n * @return {string}\n */\nproto.squeaknode.SqueakPeer.prototype.getHost = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakPeer.prototype.setHost = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int32 port = 4;\n * @return {number}\n */\nproto.squeaknode.SqueakPeer.prototype.getPort = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SqueakPeer.prototype.setPort = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bool uploading = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakPeer.prototype.getUploading = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakPeer.prototype.setUploading = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional bool downloading = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SqueakPeer.prototype.getDownloading = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SqueakPeer.prototype.setDownloading = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetPeerDownloadingRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetPeerDownloadingRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetPeerDownloadingRequest.displayName = 'proto.squeaknode.SetPeerDownloadingRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetPeerDownloadingRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetPeerDownloadingRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetPeerDownloadingRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerDownloadingRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    downloading: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetPeerDownloadingRequest}\n */\nproto.squeaknode.SetPeerDownloadingRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetPeerDownloadingRequest;\n  return proto.squeaknode.SetPeerDownloadingRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetPeerDownloadingRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetPeerDownloadingRequest}\n */\nproto.squeaknode.SetPeerDownloadingRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDownloading(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetPeerDownloadingRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetPeerDownloadingRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetPeerDownloadingRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerDownloadingRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getDownloading();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.SetPeerDownloadingRequest.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetPeerDownloadingRequest.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool downloading = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SetPeerDownloadingRequest.prototype.getDownloading = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SetPeerDownloadingRequest.prototype.setDownloading = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetPeerDownloadingReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetPeerDownloadingReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetPeerDownloadingReply.displayName = 'proto.squeaknode.SetPeerDownloadingReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetPeerDownloadingReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetPeerDownloadingReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetPeerDownloadingReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerDownloadingReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetPeerDownloadingReply}\n */\nproto.squeaknode.SetPeerDownloadingReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetPeerDownloadingReply;\n  return proto.squeaknode.SetPeerDownloadingReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetPeerDownloadingReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetPeerDownloadingReply}\n */\nproto.squeaknode.SetPeerDownloadingReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetPeerDownloadingReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetPeerDownloadingReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetPeerDownloadingReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerDownloadingReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetPeerUploadingRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetPeerUploadingRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetPeerUploadingRequest.displayName = 'proto.squeaknode.SetPeerUploadingRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetPeerUploadingRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetPeerUploadingRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetPeerUploadingRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerUploadingRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    uploading: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetPeerUploadingRequest}\n */\nproto.squeaknode.SetPeerUploadingRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetPeerUploadingRequest;\n  return proto.squeaknode.SetPeerUploadingRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetPeerUploadingRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetPeerUploadingRequest}\n */\nproto.squeaknode.SetPeerUploadingRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setUploading(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetPeerUploadingRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetPeerUploadingRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetPeerUploadingRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerUploadingRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getUploading();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.SetPeerUploadingRequest.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SetPeerUploadingRequest.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool uploading = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SetPeerUploadingRequest.prototype.getUploading = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SetPeerUploadingRequest.prototype.setUploading = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SetPeerUploadingReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SetPeerUploadingReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SetPeerUploadingReply.displayName = 'proto.squeaknode.SetPeerUploadingReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SetPeerUploadingReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SetPeerUploadingReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SetPeerUploadingReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerUploadingReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SetPeerUploadingReply}\n */\nproto.squeaknode.SetPeerUploadingReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SetPeerUploadingReply;\n  return proto.squeaknode.SetPeerUploadingReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SetPeerUploadingReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SetPeerUploadingReply}\n */\nproto.squeaknode.SetPeerUploadingReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SetPeerUploadingReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SetPeerUploadingReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SetPeerUploadingReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SetPeerUploadingReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.RenamePeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.RenamePeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.RenamePeerRequest.displayName = 'proto.squeaknode.RenamePeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.RenamePeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.RenamePeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.RenamePeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenamePeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    peerName: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.RenamePeerRequest}\n */\nproto.squeaknode.RenamePeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.RenamePeerRequest;\n  return proto.squeaknode.RenamePeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.RenamePeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.RenamePeerRequest}\n */\nproto.squeaknode.RenamePeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPeerName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.RenamePeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.RenamePeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.RenamePeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenamePeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getPeerName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.RenamePeerRequest.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.RenamePeerRequest.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string peer_name = 2;\n * @return {string}\n */\nproto.squeaknode.RenamePeerRequest.prototype.getPeerName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.RenamePeerRequest.prototype.setPeerName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.RenamePeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.RenamePeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.RenamePeerReply.displayName = 'proto.squeaknode.RenamePeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.RenamePeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.RenamePeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.RenamePeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenamePeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.RenamePeerReply}\n */\nproto.squeaknode.RenamePeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.RenamePeerReply;\n  return proto.squeaknode.RenamePeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.RenamePeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.RenamePeerReply}\n */\nproto.squeaknode.RenamePeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.RenamePeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.RenamePeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.RenamePeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.RenamePeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeletePeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeletePeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeletePeerRequest.displayName = 'proto.squeaknode.DeletePeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeletePeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeletePeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeletePeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeletePeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeletePeerRequest}\n */\nproto.squeaknode.DeletePeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeletePeerRequest;\n  return proto.squeaknode.DeletePeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeletePeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeletePeerRequest}\n */\nproto.squeaknode.DeletePeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPeerId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeletePeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeletePeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeletePeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeletePeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeerId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 peer_id = 1;\n * @return {number}\n */\nproto.squeaknode.DeletePeerRequest.prototype.getPeerId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.DeletePeerRequest.prototype.setPeerId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.DeletePeerReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.DeletePeerReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.DeletePeerReply.displayName = 'proto.squeaknode.DeletePeerReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.DeletePeerReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.DeletePeerReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.DeletePeerReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeletePeerReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.DeletePeerReply}\n */\nproto.squeaknode.DeletePeerReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.DeletePeerReply;\n  return proto.squeaknode.DeletePeerReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.DeletePeerReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.DeletePeerReply}\n */\nproto.squeaknode.DeletePeerReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.DeletePeerReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.DeletePeerReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.DeletePeerReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.DeletePeerReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.LoadBuyOffersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.LoadBuyOffersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.LoadBuyOffersRequest.displayName = 'proto.squeaknode.LoadBuyOffersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.LoadBuyOffersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.LoadBuyOffersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.LoadBuyOffersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LoadBuyOffersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.LoadBuyOffersRequest}\n */\nproto.squeaknode.LoadBuyOffersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.LoadBuyOffersRequest;\n  return proto.squeaknode.LoadBuyOffersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.LoadBuyOffersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.LoadBuyOffersRequest}\n */\nproto.squeaknode.LoadBuyOffersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.LoadBuyOffersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.LoadBuyOffersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.LoadBuyOffersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LoadBuyOffersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.LoadBuyOffersRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.LoadBuyOffersRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.LoadBuyOffersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.LoadBuyOffersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.LoadBuyOffersReply.displayName = 'proto.squeaknode.LoadBuyOffersReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.LoadBuyOffersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.LoadBuyOffersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.LoadBuyOffersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LoadBuyOffersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.LoadBuyOffersReply}\n */\nproto.squeaknode.LoadBuyOffersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.LoadBuyOffersReply;\n  return proto.squeaknode.LoadBuyOffersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.LoadBuyOffersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.LoadBuyOffersReply}\n */\nproto.squeaknode.LoadBuyOffersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.LoadBuyOffersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.LoadBuyOffersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.LoadBuyOffersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.LoadBuyOffersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetBuyOffersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetBuyOffersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetBuyOffersRequest.displayName = 'proto.squeaknode.GetBuyOffersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetBuyOffersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetBuyOffersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetBuyOffersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOffersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetBuyOffersRequest}\n */\nproto.squeaknode.GetBuyOffersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetBuyOffersRequest;\n  return proto.squeaknode.GetBuyOffersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetBuyOffersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetBuyOffersRequest}\n */\nproto.squeaknode.GetBuyOffersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetBuyOffersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetBuyOffersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetBuyOffersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOffersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.GetBuyOffersRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetBuyOffersRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetBuyOffersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetBuyOffersReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetBuyOffersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetBuyOffersReply.displayName = 'proto.squeaknode.GetBuyOffersReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetBuyOffersReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetBuyOffersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetBuyOffersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetBuyOffersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOffersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offersList: jspb.Message.toObjectList(msg.getOffersList(),\n    proto.squeaknode.OfferDisplayEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetBuyOffersReply}\n */\nproto.squeaknode.GetBuyOffersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetBuyOffersReply;\n  return proto.squeaknode.GetBuyOffersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetBuyOffersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetBuyOffersReply}\n */\nproto.squeaknode.GetBuyOffersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.OfferDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.OfferDisplayEntry.deserializeBinaryFromReader);\n      msg.addOffers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetBuyOffersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetBuyOffersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetBuyOffersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOffersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOffersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.OfferDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated OfferDisplayEntry offers = 1;\n * @return {!Array.<!proto.squeaknode.OfferDisplayEntry>}\n */\nproto.squeaknode.GetBuyOffersReply.prototype.getOffersList = function() {\n  return /** @type{!Array.<!proto.squeaknode.OfferDisplayEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.OfferDisplayEntry, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.OfferDisplayEntry>} value */\nproto.squeaknode.GetBuyOffersReply.prototype.setOffersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.OfferDisplayEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.OfferDisplayEntry}\n */\nproto.squeaknode.GetBuyOffersReply.prototype.addOffers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.OfferDisplayEntry, opt_index);\n};\n\n\nproto.squeaknode.GetBuyOffersReply.prototype.clearOffersList = function() {\n  this.setOffersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetBuyOfferRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetBuyOfferRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetBuyOfferRequest.displayName = 'proto.squeaknode.GetBuyOfferRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetBuyOfferRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetBuyOfferRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetBuyOfferRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOfferRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetBuyOfferRequest}\n */\nproto.squeaknode.GetBuyOfferRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetBuyOfferRequest;\n  return proto.squeaknode.GetBuyOfferRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetBuyOfferRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetBuyOfferRequest}\n */\nproto.squeaknode.GetBuyOfferRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setOfferId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetBuyOfferRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetBuyOfferRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetBuyOfferRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOfferRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOfferId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 offer_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetBuyOfferRequest.prototype.getOfferId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetBuyOfferRequest.prototype.setOfferId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetBuyOfferReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetBuyOfferReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetBuyOfferReply.displayName = 'proto.squeaknode.GetBuyOfferReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetBuyOfferReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetBuyOfferReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetBuyOfferReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOfferReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offer: (f = msg.getOffer()) && proto.squeaknode.OfferDisplayEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetBuyOfferReply}\n */\nproto.squeaknode.GetBuyOfferReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetBuyOfferReply;\n  return proto.squeaknode.GetBuyOfferReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetBuyOfferReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetBuyOfferReply}\n */\nproto.squeaknode.GetBuyOfferReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.OfferDisplayEntry;\n      reader.readMessage(value,proto.squeaknode.OfferDisplayEntry.deserializeBinaryFromReader);\n      msg.setOffer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetBuyOfferReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetBuyOfferReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetBuyOfferReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetBuyOfferReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOffer();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.OfferDisplayEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional OfferDisplayEntry offer = 1;\n * @return {?proto.squeaknode.OfferDisplayEntry}\n */\nproto.squeaknode.GetBuyOfferReply.prototype.getOffer = function() {\n  return /** @type{?proto.squeaknode.OfferDisplayEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.OfferDisplayEntry, 1));\n};\n\n\n/** @param {?proto.squeaknode.OfferDisplayEntry|undefined} value */\nproto.squeaknode.GetBuyOfferReply.prototype.setOffer = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetBuyOfferReply.prototype.clearOffer = function() {\n  this.setOffer(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetBuyOfferReply.prototype.hasOffer = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.OfferDisplayEntry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.OfferDisplayEntry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.OfferDisplayEntry.displayName = 'proto.squeaknode.OfferDisplayEntry';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.OfferDisplayEntry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.OfferDisplayEntry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.OfferDisplayEntry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offerId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    priceMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    nodePubkey: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    nodeHost: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    nodePort: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    hasPeer: jspb.Message.getFieldWithDefault(msg, 7, false),\n    peer: (f = msg.getPeer()) && proto.squeaknode.SqueakPeer.toObject(includeInstance, f),\n    invoiceTimestamp: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    invoiceExpiry: jspb.Message.getFieldWithDefault(msg, 10, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.OfferDisplayEntry}\n */\nproto.squeaknode.OfferDisplayEntry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.OfferDisplayEntry;\n  return proto.squeaknode.OfferDisplayEntry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.OfferDisplayEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.OfferDisplayEntry}\n */\nproto.squeaknode.OfferDisplayEntry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setOfferId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPriceMsat(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodePubkey(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodeHost(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNodePort(value);\n      break;\n    case 7:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasPeer(value);\n      break;\n    case 8:\n      var value = new proto.squeaknode.SqueakPeer;\n      reader.readMessage(value,proto.squeaknode.SqueakPeer.deserializeBinaryFromReader);\n      msg.setPeer(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setInvoiceTimestamp(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setInvoiceExpiry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.OfferDisplayEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.OfferDisplayEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.OfferDisplayEntry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOfferId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getNodePubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getNodeHost();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getNodePort();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getHasPeer();\n  if (f) {\n    writer.writeBool(\n      7,\n      f\n    );\n  }\n  f = message.getPeer();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.squeaknode.SqueakPeer.serializeBinaryToWriter\n    );\n  }\n  f = message.getInvoiceTimestamp();\n  if (f !== 0) {\n    writer.writeInt32(\n      9,\n      f\n    );\n  }\n  f = message.getInvoiceExpiry();\n  if (f !== 0) {\n    writer.writeInt32(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 offer_id = 1;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getOfferId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setOfferId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string squeak_hash = 2;\n * @return {string}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 price_msat = 3;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setPriceMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string node_pubkey = 4;\n * @return {string}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getNodePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setNodePubkey = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string node_host = 5;\n * @return {string}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getNodeHost = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setNodeHost = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int32 node_port = 6;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getNodePort = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setNodePort = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional bool has_peer = 7;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getHasPeer = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setHasPeer = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional SqueakPeer peer = 8;\n * @return {?proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getPeer = function() {\n  return /** @type{?proto.squeaknode.SqueakPeer} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakPeer, 8));\n};\n\n\n/** @param {?proto.squeaknode.SqueakPeer|undefined} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setPeer = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.squeaknode.OfferDisplayEntry.prototype.clearPeer = function() {\n  this.setPeer(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.hasPeer = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional int32 invoice_timestamp = 9;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getInvoiceTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setInvoiceTimestamp = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional int32 invoice_expiry = 10;\n * @return {number}\n */\nproto.squeaknode.OfferDisplayEntry.prototype.getInvoiceExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.OfferDisplayEntry.prototype.setInvoiceExpiry = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SyncSqueaksRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SyncSqueaksRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SyncSqueaksRequest.displayName = 'proto.squeaknode.SyncSqueaksRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SyncSqueaksRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SyncSqueaksRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SyncSqueaksRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SyncSqueaksRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SyncSqueaksRequest}\n */\nproto.squeaknode.SyncSqueaksRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SyncSqueaksRequest;\n  return proto.squeaknode.SyncSqueaksRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SyncSqueaksRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SyncSqueaksRequest}\n */\nproto.squeaknode.SyncSqueaksRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SyncSqueaksRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SyncSqueaksRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SyncSqueaksRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SyncSqueaksRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SyncSqueaksReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SyncSqueaksReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SyncSqueaksReply.displayName = 'proto.squeaknode.SyncSqueaksReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SyncSqueaksReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SyncSqueaksReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SyncSqueaksReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SyncSqueaksReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    syncResult: (f = msg.getSyncResult()) && proto.squeaknode.SyncResult.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SyncSqueaksReply}\n */\nproto.squeaknode.SyncSqueaksReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SyncSqueaksReply;\n  return proto.squeaknode.SyncSqueaksReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SyncSqueaksReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SyncSqueaksReply}\n */\nproto.squeaknode.SyncSqueaksReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SyncResult;\n      reader.readMessage(value,proto.squeaknode.SyncResult.deserializeBinaryFromReader);\n      msg.setSyncResult(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SyncSqueaksReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SyncSqueaksReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SyncSqueaksReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SyncSqueaksReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSyncResult();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SyncResult.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SyncResult sync_result = 1;\n * @return {?proto.squeaknode.SyncResult}\n */\nproto.squeaknode.SyncSqueaksReply.prototype.getSyncResult = function() {\n  return /** @type{?proto.squeaknode.SyncResult} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SyncResult, 1));\n};\n\n\n/** @param {?proto.squeaknode.SyncResult|undefined} value */\nproto.squeaknode.SyncSqueaksReply.prototype.setSyncResult = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.SyncSqueaksReply.prototype.clearSyncResult = function() {\n  this.setSyncResult(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.SyncSqueaksReply.prototype.hasSyncResult = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.PayOfferRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.PayOfferRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.PayOfferRequest.displayName = 'proto.squeaknode.PayOfferRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.PayOfferRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.PayOfferRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.PayOfferRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PayOfferRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    offerId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.PayOfferRequest}\n */\nproto.squeaknode.PayOfferRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.PayOfferRequest;\n  return proto.squeaknode.PayOfferRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.PayOfferRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.PayOfferRequest}\n */\nproto.squeaknode.PayOfferRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setOfferId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.PayOfferRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.PayOfferRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.PayOfferRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PayOfferRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOfferId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 offer_id = 1;\n * @return {number}\n */\nproto.squeaknode.PayOfferRequest.prototype.getOfferId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PayOfferRequest.prototype.setOfferId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.PayOfferReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.PayOfferReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.PayOfferReply.displayName = 'proto.squeaknode.PayOfferReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.PayOfferReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.PayOfferReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.PayOfferReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PayOfferReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPaymentId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.PayOfferReply}\n */\nproto.squeaknode.PayOfferReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.PayOfferReply;\n  return proto.squeaknode.PayOfferReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.PayOfferReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.PayOfferReply}\n */\nproto.squeaknode.PayOfferReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSentPaymentId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.PayOfferReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.PayOfferReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.PayOfferReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PayOfferReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPaymentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 sent_payment_id = 1;\n * @return {number}\n */\nproto.squeaknode.PayOfferReply.prototype.getSentPaymentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PayOfferReply.prototype.setSentPaymentId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSentPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentPaymentsRequest.displayName = 'proto.squeaknode.GetSentPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentPaymentsRequest}\n */\nproto.squeaknode.GetSentPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentPaymentsRequest;\n  return proto.squeaknode.GetSentPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentPaymentsRequest}\n */\nproto.squeaknode.GetSentPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentPaymentsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetSentPaymentsReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetSentPaymentsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentPaymentsReply.displayName = 'proto.squeaknode.GetSentPaymentsReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetSentPaymentsReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentPaymentsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentPaymentsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentPaymentsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPaymentsList: jspb.Message.toObjectList(msg.getSentPaymentsList(),\n    proto.squeaknode.SentPayment.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentPaymentsReply}\n */\nproto.squeaknode.GetSentPaymentsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentPaymentsReply;\n  return proto.squeaknode.GetSentPaymentsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentPaymentsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentPaymentsReply}\n */\nproto.squeaknode.GetSentPaymentsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SentPayment;\n      reader.readMessage(value,proto.squeaknode.SentPayment.deserializeBinaryFromReader);\n      msg.addSentPayments(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentPaymentsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentPaymentsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentPaymentsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPaymentsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SentPayment.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SentPayment sent_payments = 1;\n * @return {!Array.<!proto.squeaknode.SentPayment>}\n */\nproto.squeaknode.GetSentPaymentsReply.prototype.getSentPaymentsList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SentPayment>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SentPayment, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SentPayment>} value */\nproto.squeaknode.GetSentPaymentsReply.prototype.setSentPaymentsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SentPayment=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SentPayment}\n */\nproto.squeaknode.GetSentPaymentsReply.prototype.addSentPayments = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SentPayment, opt_index);\n};\n\n\nproto.squeaknode.GetSentPaymentsReply.prototype.clearSentPaymentsList = function() {\n  this.setSentPaymentsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentPaymentRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSentPaymentRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentPaymentRequest.displayName = 'proto.squeaknode.GetSentPaymentRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentPaymentRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentPaymentRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentPaymentRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPaymentId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentPaymentRequest}\n */\nproto.squeaknode.GetSentPaymentRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentPaymentRequest;\n  return proto.squeaknode.GetSentPaymentRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentPaymentRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentPaymentRequest}\n */\nproto.squeaknode.GetSentPaymentRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSentPaymentId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentPaymentRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentPaymentRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentPaymentRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPaymentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 sent_payment_id = 1;\n * @return {number}\n */\nproto.squeaknode.GetSentPaymentRequest.prototype.getSentPaymentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.GetSentPaymentRequest.prototype.setSentPaymentId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentPaymentReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSentPaymentReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentPaymentReply.displayName = 'proto.squeaknode.GetSentPaymentReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentPaymentReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentPaymentReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentPaymentReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPayment: (f = msg.getSentPayment()) && proto.squeaknode.SentPayment.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentPaymentReply}\n */\nproto.squeaknode.GetSentPaymentReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentPaymentReply;\n  return proto.squeaknode.GetSentPaymentReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentPaymentReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentPaymentReply}\n */\nproto.squeaknode.GetSentPaymentReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SentPayment;\n      reader.readMessage(value,proto.squeaknode.SentPayment.deserializeBinaryFromReader);\n      msg.setSentPayment(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentPaymentReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentPaymentReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentPaymentReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentPaymentReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPayment();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SentPayment.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SentPayment sent_payment = 1;\n * @return {?proto.squeaknode.SentPayment}\n */\nproto.squeaknode.GetSentPaymentReply.prototype.getSentPayment = function() {\n  return /** @type{?proto.squeaknode.SentPayment} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SentPayment, 1));\n};\n\n\n/** @param {?proto.squeaknode.SentPayment|undefined} value */\nproto.squeaknode.GetSentPaymentReply.prototype.setSentPayment = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSentPaymentReply.prototype.clearSentPayment = function() {\n  this.setSentPayment(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSentPaymentReply.prototype.hasSentPayment = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SentPayment = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SentPayment, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SentPayment.displayName = 'proto.squeaknode.SentPayment';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SentPayment.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SentPayment.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SentPayment} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SentPayment.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentPaymentId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    hasPeer: jspb.Message.getFieldWithDefault(msg, 2, false),\n    peer: (f = msg.getPeer()) && proto.squeaknode.SqueakPeer.toObject(includeInstance, f),\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    priceMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    nodePubkey: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    valid: jspb.Message.getFieldWithDefault(msg, 8, false),\n    timeS: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SentPayment}\n */\nproto.squeaknode.SentPayment.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SentPayment;\n  return proto.squeaknode.SentPayment.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SentPayment} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SentPayment}\n */\nproto.squeaknode.SentPayment.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSentPaymentId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setHasPeer(value);\n      break;\n    case 3:\n      var value = new proto.squeaknode.SqueakPeer;\n      reader.readMessage(value,proto.squeaknode.SqueakPeer.deserializeBinaryFromReader);\n      msg.setPeer(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPriceMsat(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodePubkey(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setValid(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimeS(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SentPayment.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SentPayment.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SentPayment} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SentPayment.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentPaymentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getHasPeer();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getPeer();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.squeaknode.SqueakPeer.serializeBinaryToWriter\n    );\n  }\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getNodePubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getValid();\n  if (f) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n  f = message.getTimeS();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 sent_payment_id = 1;\n * @return {number}\n */\nproto.squeaknode.SentPayment.prototype.getSentPaymentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentPayment.prototype.setSentPaymentId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool has_peer = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SentPayment.prototype.getHasPeer = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SentPayment.prototype.setHasPeer = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional SqueakPeer peer = 3;\n * @return {?proto.squeaknode.SqueakPeer}\n */\nproto.squeaknode.SentPayment.prototype.getPeer = function() {\n  return /** @type{?proto.squeaknode.SqueakPeer} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakPeer, 3));\n};\n\n\n/** @param {?proto.squeaknode.SqueakPeer|undefined} value */\nproto.squeaknode.SentPayment.prototype.setPeer = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.squeaknode.SentPayment.prototype.clearPeer = function() {\n  this.setPeer(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.SentPayment.prototype.hasPeer = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional string squeak_hash = 4;\n * @return {string}\n */\nproto.squeaknode.SentPayment.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentPayment.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string payment_hash = 5;\n * @return {string}\n */\nproto.squeaknode.SentPayment.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentPayment.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 price_msat = 6;\n * @return {number}\n */\nproto.squeaknode.SentPayment.prototype.getPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentPayment.prototype.setPriceMsat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string node_pubkey = 7;\n * @return {string}\n */\nproto.squeaknode.SentPayment.prototype.getNodePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentPayment.prototype.setNodePubkey = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional bool valid = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.squeaknode.SentPayment.prototype.getValid = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));\n};\n\n\n/** @param {boolean} value */\nproto.squeaknode.SentPayment.prototype.setValid = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 time_s = 9;\n * @return {number}\n */\nproto.squeaknode.SentPayment.prototype.getTimeS = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentPayment.prototype.setTimeS = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SyncSqueakRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SyncSqueakRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SyncSqueakRequest.displayName = 'proto.squeaknode.SyncSqueakRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SyncSqueakRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SyncSqueakRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SyncSqueakRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SyncSqueakRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SyncSqueakRequest}\n */\nproto.squeaknode.SyncSqueakRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SyncSqueakRequest;\n  return proto.squeaknode.SyncSqueakRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SyncSqueakRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SyncSqueakRequest}\n */\nproto.squeaknode.SyncSqueakRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SyncSqueakRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SyncSqueakRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SyncSqueakRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SyncSqueakRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.SyncSqueakRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SyncSqueakRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SyncSqueakReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SyncSqueakReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SyncSqueakReply.displayName = 'proto.squeaknode.SyncSqueakReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SyncSqueakReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SyncSqueakReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SyncSqueakReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SyncSqueakReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    syncResult: (f = msg.getSyncResult()) && proto.squeaknode.SyncResult.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SyncSqueakReply}\n */\nproto.squeaknode.SyncSqueakReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SyncSqueakReply;\n  return proto.squeaknode.SyncSqueakReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SyncSqueakReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SyncSqueakReply}\n */\nproto.squeaknode.SyncSqueakReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SyncResult;\n      reader.readMessage(value,proto.squeaknode.SyncResult.deserializeBinaryFromReader);\n      msg.setSyncResult(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SyncSqueakReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SyncSqueakReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SyncSqueakReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SyncSqueakReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSyncResult();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SyncResult.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SyncResult sync_result = 1;\n * @return {?proto.squeaknode.SyncResult}\n */\nproto.squeaknode.SyncSqueakReply.prototype.getSyncResult = function() {\n  return /** @type{?proto.squeaknode.SyncResult} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SyncResult, 1));\n};\n\n\n/** @param {?proto.squeaknode.SyncResult|undefined} value */\nproto.squeaknode.SyncSqueakReply.prototype.setSyncResult = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.SyncSqueakReply.prototype.clearSyncResult = function() {\n  this.setSyncResult(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.SyncSqueakReply.prototype.hasSyncResult = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SyncResult = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.SyncResult.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.SyncResult, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SyncResult.displayName = 'proto.squeaknode.SyncResult';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.SyncResult.repeatedFields_ = [1,2,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SyncResult.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SyncResult.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SyncResult} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SyncResult.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    completedPeerIdsList: jspb.Message.getRepeatedField(msg, 1),\n    failedPeerIdsList: jspb.Message.getRepeatedField(msg, 2),\n    timeoutPeerIdsList: jspb.Message.getRepeatedField(msg, 3)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SyncResult}\n */\nproto.squeaknode.SyncResult.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SyncResult;\n  return proto.squeaknode.SyncResult.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SyncResult} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SyncResult}\n */\nproto.squeaknode.SyncResult.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());\n      msg.setCompletedPeerIdsList(value);\n      break;\n    case 2:\n      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());\n      msg.setFailedPeerIdsList(value);\n      break;\n    case 3:\n      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());\n      msg.setTimeoutPeerIdsList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SyncResult.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SyncResult.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SyncResult} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SyncResult.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCompletedPeerIdsList();\n  if (f.length > 0) {\n    writer.writePackedInt32(\n      1,\n      f\n    );\n  }\n  f = message.getFailedPeerIdsList();\n  if (f.length > 0) {\n    writer.writePackedInt32(\n      2,\n      f\n    );\n  }\n  f = message.getTimeoutPeerIdsList();\n  if (f.length > 0) {\n    writer.writePackedInt32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated int32 completed_peer_ids = 1;\n * @return {!Array.<number>}\n */\nproto.squeaknode.SyncResult.prototype.getCompletedPeerIdsList = function() {\n  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array.<number>} value */\nproto.squeaknode.SyncResult.prototype.setCompletedPeerIdsList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!number} value\n * @param {number=} opt_index\n */\nproto.squeaknode.SyncResult.prototype.addCompletedPeerIds = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.squeaknode.SyncResult.prototype.clearCompletedPeerIdsList = function() {\n  this.setCompletedPeerIdsList([]);\n};\n\n\n/**\n * repeated int32 failed_peer_ids = 2;\n * @return {!Array.<number>}\n */\nproto.squeaknode.SyncResult.prototype.getFailedPeerIdsList = function() {\n  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/** @param {!Array.<number>} value */\nproto.squeaknode.SyncResult.prototype.setFailedPeerIdsList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!number} value\n * @param {number=} opt_index\n */\nproto.squeaknode.SyncResult.prototype.addFailedPeerIds = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.squeaknode.SyncResult.prototype.clearFailedPeerIdsList = function() {\n  this.setFailedPeerIdsList([]);\n};\n\n\n/**\n * repeated int32 timeout_peer_ids = 3;\n * @return {!Array.<number>}\n */\nproto.squeaknode.SyncResult.prototype.getTimeoutPeerIdsList = function() {\n  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 3));\n};\n\n\n/** @param {!Array.<number>} value */\nproto.squeaknode.SyncResult.prototype.setTimeoutPeerIdsList = function(value) {\n  jspb.Message.setField(this, 3, value || []);\n};\n\n\n/**\n * @param {!number} value\n * @param {number=} opt_index\n */\nproto.squeaknode.SyncResult.prototype.addTimeoutPeerIds = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n\n\nproto.squeaknode.SyncResult.prototype.clearTimeoutPeerIdsList = function() {\n  this.setTimeoutPeerIdsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakDetailsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakDetailsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakDetailsRequest.displayName = 'proto.squeaknode.GetSqueakDetailsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakDetailsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakDetailsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakDetailsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDetailsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakDetailsRequest}\n */\nproto.squeaknode.GetSqueakDetailsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakDetailsRequest;\n  return proto.squeaknode.GetSqueakDetailsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakDetailsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakDetailsRequest}\n */\nproto.squeaknode.GetSqueakDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakDetailsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakDetailsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakDetailsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDetailsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string squeak_hash = 1;\n * @return {string}\n */\nproto.squeaknode.GetSqueakDetailsRequest.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetSqueakDetailsRequest.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSqueakDetailsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSqueakDetailsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSqueakDetailsReply.displayName = 'proto.squeaknode.GetSqueakDetailsReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSqueakDetailsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSqueakDetailsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSqueakDetailsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDetailsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    squeakDetailEntry: (f = msg.getSqueakDetailEntry()) && proto.squeaknode.SqueakDetailEntry.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSqueakDetailsReply}\n */\nproto.squeaknode.GetSqueakDetailsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSqueakDetailsReply;\n  return proto.squeaknode.GetSqueakDetailsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSqueakDetailsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSqueakDetailsReply}\n */\nproto.squeaknode.GetSqueakDetailsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SqueakDetailEntry;\n      reader.readMessage(value,proto.squeaknode.SqueakDetailEntry.deserializeBinaryFromReader);\n      msg.setSqueakDetailEntry(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSqueakDetailsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSqueakDetailsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSqueakDetailsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSqueakDetailsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSqueakDetailEntry();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.SqueakDetailEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional SqueakDetailEntry squeak_detail_entry = 1;\n * @return {?proto.squeaknode.SqueakDetailEntry}\n */\nproto.squeaknode.GetSqueakDetailsReply.prototype.getSqueakDetailEntry = function() {\n  return /** @type{?proto.squeaknode.SqueakDetailEntry} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.SqueakDetailEntry, 1));\n};\n\n\n/** @param {?proto.squeaknode.SqueakDetailEntry|undefined} value */\nproto.squeaknode.GetSqueakDetailsReply.prototype.setSqueakDetailEntry = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetSqueakDetailsReply.prototype.clearSqueakDetailEntry = function() {\n  this.setSqueakDetailEntry(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetSqueakDetailsReply.prototype.hasSqueakDetailEntry = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SqueakDetailEntry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SqueakDetailEntry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SqueakDetailEntry.displayName = 'proto.squeaknode.SqueakDetailEntry';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SqueakDetailEntry.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SqueakDetailEntry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SqueakDetailEntry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakDetailEntry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    serializedSqueakHex: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SqueakDetailEntry}\n */\nproto.squeaknode.SqueakDetailEntry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SqueakDetailEntry;\n  return proto.squeaknode.SqueakDetailEntry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SqueakDetailEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SqueakDetailEntry}\n */\nproto.squeaknode.SqueakDetailEntry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSerializedSqueakHex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SqueakDetailEntry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SqueakDetailEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SqueakDetailEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SqueakDetailEntry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSerializedSqueakHex();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string serialized_squeak_hex = 1;\n * @return {string}\n */\nproto.squeaknode.SqueakDetailEntry.prototype.getSerializedSqueakHex = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SqueakDetailEntry.prototype.setSerializedSqueakHex = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentOffersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetSentOffersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentOffersRequest.displayName = 'proto.squeaknode.GetSentOffersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentOffersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentOffersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentOffersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentOffersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentOffersRequest}\n */\nproto.squeaknode.GetSentOffersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentOffersRequest;\n  return proto.squeaknode.GetSentOffersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentOffersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentOffersRequest}\n */\nproto.squeaknode.GetSentOffersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentOffersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentOffersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentOffersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentOffersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetSentOffersReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetSentOffersReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetSentOffersReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetSentOffersReply.displayName = 'proto.squeaknode.GetSentOffersReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetSentOffersReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetSentOffersReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetSentOffersReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetSentOffersReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentOffersReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentOffersList: jspb.Message.toObjectList(msg.getSentOffersList(),\n    proto.squeaknode.SentOffer.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetSentOffersReply}\n */\nproto.squeaknode.GetSentOffersReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetSentOffersReply;\n  return proto.squeaknode.GetSentOffersReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetSentOffersReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetSentOffersReply}\n */\nproto.squeaknode.GetSentOffersReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.SentOffer;\n      reader.readMessage(value,proto.squeaknode.SentOffer.deserializeBinaryFromReader);\n      msg.addSentOffers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetSentOffersReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetSentOffersReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetSentOffersReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetSentOffersReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentOffersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.SentOffer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SentOffer sent_offers = 1;\n * @return {!Array.<!proto.squeaknode.SentOffer>}\n */\nproto.squeaknode.GetSentOffersReply.prototype.getSentOffersList = function() {\n  return /** @type{!Array.<!proto.squeaknode.SentOffer>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.SentOffer, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.SentOffer>} value */\nproto.squeaknode.GetSentOffersReply.prototype.setSentOffersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.SentOffer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.SentOffer}\n */\nproto.squeaknode.GetSentOffersReply.prototype.addSentOffers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.SentOffer, opt_index);\n};\n\n\nproto.squeaknode.GetSentOffersReply.prototype.clearSentOffersList = function() {\n  this.setSentOffersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SentOffer = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SentOffer, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SentOffer.displayName = 'proto.squeaknode.SentOffer';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SentOffer.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SentOffer.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SentOffer} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SentOffer.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    sentOfferId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    priceMsat: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SentOffer}\n */\nproto.squeaknode.SentOffer.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SentOffer;\n  return proto.squeaknode.SentOffer.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SentOffer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SentOffer}\n */\nproto.squeaknode.SentOffer.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setSentOfferId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPriceMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SentOffer.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SentOffer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SentOffer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SentOffer.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSentOfferId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 sent_offer_id = 1;\n * @return {number}\n */\nproto.squeaknode.SentOffer.prototype.getSentOfferId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentOffer.prototype.setSentOfferId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string squeak_hash = 2;\n * @return {string}\n */\nproto.squeaknode.SentOffer.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentOffer.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string payment_hash = 3;\n * @return {string}\n */\nproto.squeaknode.SentOffer.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.SentOffer.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 price_msat = 4;\n * @return {number}\n */\nproto.squeaknode.SentOffer.prototype.getPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SentOffer.prototype.setPriceMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetReceivedPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetReceivedPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetReceivedPaymentsRequest.displayName = 'proto.squeaknode.GetReceivedPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetReceivedPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetReceivedPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReceivedPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetReceivedPaymentsRequest}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetReceivedPaymentsRequest;\n  return proto.squeaknode.GetReceivedPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetReceivedPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetReceivedPaymentsRequest}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetReceivedPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetReceivedPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetReceivedPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReceivedPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetReceivedPaymentsReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.squeaknode.GetReceivedPaymentsReply.repeatedFields_, null);\n};\ngoog.inherits(proto.squeaknode.GetReceivedPaymentsReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetReceivedPaymentsReply.displayName = 'proto.squeaknode.GetReceivedPaymentsReply';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.squeaknode.GetReceivedPaymentsReply.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetReceivedPaymentsReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetReceivedPaymentsReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReceivedPaymentsReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    receivedPaymentsList: jspb.Message.toObjectList(msg.getReceivedPaymentsList(),\n    proto.squeaknode.ReceivedPayment.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetReceivedPaymentsReply}\n */\nproto.squeaknode.GetReceivedPaymentsReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetReceivedPaymentsReply;\n  return proto.squeaknode.GetReceivedPaymentsReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetReceivedPaymentsReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetReceivedPaymentsReply}\n */\nproto.squeaknode.GetReceivedPaymentsReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.ReceivedPayment;\n      reader.readMessage(value,proto.squeaknode.ReceivedPayment.deserializeBinaryFromReader);\n      msg.addReceivedPayments(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetReceivedPaymentsReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetReceivedPaymentsReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetReceivedPaymentsReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getReceivedPaymentsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.squeaknode.ReceivedPayment.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ReceivedPayment received_payments = 1;\n * @return {!Array.<!proto.squeaknode.ReceivedPayment>}\n */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.getReceivedPaymentsList = function() {\n  return /** @type{!Array.<!proto.squeaknode.ReceivedPayment>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.squeaknode.ReceivedPayment, 1));\n};\n\n\n/** @param {!Array.<!proto.squeaknode.ReceivedPayment>} value */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.setReceivedPaymentsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.squeaknode.ReceivedPayment=} opt_value\n * @param {number=} opt_index\n * @return {!proto.squeaknode.ReceivedPayment}\n */\nproto.squeaknode.GetReceivedPaymentsReply.prototype.addReceivedPayments = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.squeaknode.ReceivedPayment, opt_index);\n};\n\n\nproto.squeaknode.GetReceivedPaymentsReply.prototype.clearReceivedPaymentsList = function() {\n  this.setReceivedPaymentsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.ReceivedPayment = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.ReceivedPayment, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.ReceivedPayment.displayName = 'proto.squeaknode.ReceivedPayment';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.ReceivedPayment.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.ReceivedPayment.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.ReceivedPayment} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ReceivedPayment.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    receivedPaymentId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    squeakHash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    priceMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    timeS: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    clientAddr: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.ReceivedPayment}\n */\nproto.squeaknode.ReceivedPayment.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.ReceivedPayment;\n  return proto.squeaknode.ReceivedPayment.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.ReceivedPayment} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.ReceivedPayment}\n */\nproto.squeaknode.ReceivedPayment.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setReceivedPaymentId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSqueakHash(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPriceMsat(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimeS(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClientAddr(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.ReceivedPayment.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.ReceivedPayment.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.ReceivedPayment} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.ReceivedPayment.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getReceivedPaymentId();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSqueakHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPriceMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getTimeS();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getClientAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 received_payment_id = 1;\n * @return {number}\n */\nproto.squeaknode.ReceivedPayment.prototype.getReceivedPaymentId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ReceivedPayment.prototype.setReceivedPaymentId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string squeak_hash = 2;\n * @return {string}\n */\nproto.squeaknode.ReceivedPayment.prototype.getSqueakHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.ReceivedPayment.prototype.setSqueakHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string payment_hash = 3;\n * @return {string}\n */\nproto.squeaknode.ReceivedPayment.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.ReceivedPayment.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 price_msat = 4;\n * @return {number}\n */\nproto.squeaknode.ReceivedPayment.prototype.getPriceMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ReceivedPayment.prototype.setPriceMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 time_s = 5;\n * @return {number}\n */\nproto.squeaknode.ReceivedPayment.prototype.getTimeS = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.ReceivedPayment.prototype.setTimeS = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string client_addr = 6;\n * @return {string}\n */\nproto.squeaknode.ReceivedPayment.prototype.getClientAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.ReceivedPayment.prototype.setClientAddr = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.SubscribeReceivedPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.SubscribeReceivedPaymentsRequest.displayName = 'proto.squeaknode.SubscribeReceivedPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.SubscribeReceivedPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.SubscribeReceivedPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentIndex: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.SubscribeReceivedPaymentsRequest}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.SubscribeReceivedPaymentsRequest;\n  return proto.squeaknode.SubscribeReceivedPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.SubscribeReceivedPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.SubscribeReceivedPaymentsRequest}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPaymentIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.SubscribeReceivedPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.SubscribeReceivedPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentIndex();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 payment_index = 1;\n * @return {number}\n */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.prototype.getPaymentIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.SubscribeReceivedPaymentsRequest.prototype.setPaymentIndex = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetNetworkRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetNetworkRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetNetworkRequest.displayName = 'proto.squeaknode.GetNetworkRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetNetworkRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetNetworkRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetNetworkRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetNetworkRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetNetworkRequest}\n */\nproto.squeaknode.GetNetworkRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetNetworkRequest;\n  return proto.squeaknode.GetNetworkRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetNetworkRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetNetworkRequest}\n */\nproto.squeaknode.GetNetworkRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetNetworkRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetNetworkRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetNetworkRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetNetworkRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetNetworkReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetNetworkReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetNetworkReply.displayName = 'proto.squeaknode.GetNetworkReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetNetworkReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetNetworkReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetNetworkReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetNetworkReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    network: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetNetworkReply}\n */\nproto.squeaknode.GetNetworkReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetNetworkReply;\n  return proto.squeaknode.GetNetworkReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetNetworkReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetNetworkReply}\n */\nproto.squeaknode.GetNetworkReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNetwork(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetNetworkReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetNetworkReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetNetworkReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetNetworkReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNetwork();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string network = 1;\n * @return {string}\n */\nproto.squeaknode.GetNetworkReply.prototype.getNetwork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.squeaknode.GetNetworkReply.prototype.setNetwork = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPaymentSummaryRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPaymentSummaryRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPaymentSummaryRequest.displayName = 'proto.squeaknode.GetPaymentSummaryRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPaymentSummaryRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPaymentSummaryRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPaymentSummaryRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPaymentSummaryRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPaymentSummaryRequest}\n */\nproto.squeaknode.GetPaymentSummaryRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPaymentSummaryRequest;\n  return proto.squeaknode.GetPaymentSummaryRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPaymentSummaryRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPaymentSummaryRequest}\n */\nproto.squeaknode.GetPaymentSummaryRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPaymentSummaryRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPaymentSummaryRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPaymentSummaryRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPaymentSummaryRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.GetPaymentSummaryReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.GetPaymentSummaryReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.GetPaymentSummaryReply.displayName = 'proto.squeaknode.GetPaymentSummaryReply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.GetPaymentSummaryReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.GetPaymentSummaryReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.GetPaymentSummaryReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPaymentSummaryReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentSummary: (f = msg.getPaymentSummary()) && proto.squeaknode.PaymentSummary.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.GetPaymentSummaryReply}\n */\nproto.squeaknode.GetPaymentSummaryReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.GetPaymentSummaryReply;\n  return proto.squeaknode.GetPaymentSummaryReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.GetPaymentSummaryReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.GetPaymentSummaryReply}\n */\nproto.squeaknode.GetPaymentSummaryReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.squeaknode.PaymentSummary;\n      reader.readMessage(value,proto.squeaknode.PaymentSummary.deserializeBinaryFromReader);\n      msg.setPaymentSummary(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.GetPaymentSummaryReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.GetPaymentSummaryReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.GetPaymentSummaryReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.GetPaymentSummaryReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentSummary();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.squeaknode.PaymentSummary.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PaymentSummary payment_summary = 1;\n * @return {?proto.squeaknode.PaymentSummary}\n */\nproto.squeaknode.GetPaymentSummaryReply.prototype.getPaymentSummary = function() {\n  return /** @type{?proto.squeaknode.PaymentSummary} */ (\n    jspb.Message.getWrapperField(this, proto.squeaknode.PaymentSummary, 1));\n};\n\n\n/** @param {?proto.squeaknode.PaymentSummary|undefined} value */\nproto.squeaknode.GetPaymentSummaryReply.prototype.setPaymentSummary = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.squeaknode.GetPaymentSummaryReply.prototype.clearPaymentSummary = function() {\n  this.setPaymentSummary(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.squeaknode.GetPaymentSummaryReply.prototype.hasPaymentSummary = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.squeaknode.PaymentSummary = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.squeaknode.PaymentSummary, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.squeaknode.PaymentSummary.displayName = 'proto.squeaknode.PaymentSummary';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.squeaknode.PaymentSummary.prototype.toObject = function(opt_includeInstance) {\n  return proto.squeaknode.PaymentSummary.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.squeaknode.PaymentSummary} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PaymentSummary.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    numReceivedPayments: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    numSentPayments: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    amountEarnedMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    amountSpentMsat: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.squeaknode.PaymentSummary}\n */\nproto.squeaknode.PaymentSummary.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.squeaknode.PaymentSummary;\n  return proto.squeaknode.PaymentSummary.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.squeaknode.PaymentSummary} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.squeaknode.PaymentSummary}\n */\nproto.squeaknode.PaymentSummary.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumReceivedPayments(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumSentPayments(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmountEarnedMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmountSpentMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.squeaknode.PaymentSummary.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.squeaknode.PaymentSummary.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.squeaknode.PaymentSummary} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.squeaknode.PaymentSummary.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNumReceivedPayments();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getNumSentPayments();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getAmountEarnedMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getAmountSpentMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 num_received_payments = 1;\n * @return {number}\n */\nproto.squeaknode.PaymentSummary.prototype.getNumReceivedPayments = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PaymentSummary.prototype.setNumReceivedPayments = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 num_sent_payments = 2;\n * @return {number}\n */\nproto.squeaknode.PaymentSummary.prototype.getNumSentPayments = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PaymentSummary.prototype.setNumSentPayments = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amount_earned_msat = 3;\n * @return {number}\n */\nproto.squeaknode.PaymentSummary.prototype.getAmountEarnedMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PaymentSummary.prototype.setAmountEarnedMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 amount_spent_msat = 4;\n * @return {number}\n */\nproto.squeaknode.PaymentSummary.prototype.getAmountSpentMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.squeaknode.PaymentSummary.prototype.setAmountSpentMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\ngoog.object.extend(exports, proto.squeaknode);\n","/* eslint-disable */\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.lnrpc.AbandonChannelRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.AbandonChannelResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.AddInvoiceResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.AddressType', null, global);\ngoog.exportSymbol('proto.lnrpc.BakeMacaroonRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.BakeMacaroonResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.Chain', null, global);\ngoog.exportSymbol('proto.lnrpc.ChanBackupExportRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChanBackupSnapshot', null, global);\ngoog.exportSymbol('proto.lnrpc.ChanInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChanPointShim', null, global);\ngoog.exportSymbol('proto.lnrpc.Channel', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelAcceptRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelAcceptResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBackup', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBackupSubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBackups', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBalanceRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelBalanceResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelCloseSummary', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelCloseSummary.ClosureType', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelCloseUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelConstraints', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEdge', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEdgeUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEventSubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEventUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelEventUpdate.UpdateType', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelFeeReport', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelGraph', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelGraphRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelOpenUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelPoint', null, global);\ngoog.exportSymbol('proto.lnrpc.ChannelUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.CloseChannelRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.CloseStatusUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ClosedChannelUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ClosedChannelsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ClosedChannelsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.CommitmentType', null, global);\ngoog.exportSymbol('proto.lnrpc.ConfirmationUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.ConnectPeerRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ConnectPeerResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.DebugLevelRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.DebugLevelResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.DeleteAllPaymentsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.DeleteAllPaymentsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.DisconnectPeerRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.DisconnectPeerResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.EdgeLocator', null, global);\ngoog.exportSymbol('proto.lnrpc.EstimateFeeRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.EstimateFeeResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ExportChannelBackupRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.Failure', null, global);\ngoog.exportSymbol('proto.lnrpc.Failure.FailureCode', null, global);\ngoog.exportSymbol('proto.lnrpc.Feature', null, global);\ngoog.exportSymbol('proto.lnrpc.FeatureBit', null, global);\ngoog.exportSymbol('proto.lnrpc.FeeLimit', null, global);\ngoog.exportSymbol('proto.lnrpc.FeeReportRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.FeeReportResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.FloatMetric', null, global);\ngoog.exportSymbol('proto.lnrpc.ForwardingEvent', null, global);\ngoog.exportSymbol('proto.lnrpc.ForwardingHistoryRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ForwardingHistoryResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingPsbtFinalize', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingPsbtVerify', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingShim', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingShimCancel', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingStateStepResp', null, global);\ngoog.exportSymbol('proto.lnrpc.FundingTransitionMsg', null, global);\ngoog.exportSymbol('proto.lnrpc.GetInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.GetInfoResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.GetRecoveryInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.GetRecoveryInfoResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.GetTransactionsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.GraphTopologySubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.GraphTopologyUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.HTLC', null, global);\ngoog.exportSymbol('proto.lnrpc.HTLCAttempt', null, global);\ngoog.exportSymbol('proto.lnrpc.HTLCAttempt.HTLCStatus', null, global);\ngoog.exportSymbol('proto.lnrpc.Hop', null, global);\ngoog.exportSymbol('proto.lnrpc.HopHint', null, global);\ngoog.exportSymbol('proto.lnrpc.Initiator', null, global);\ngoog.exportSymbol('proto.lnrpc.Invoice', null, global);\ngoog.exportSymbol('proto.lnrpc.Invoice.InvoiceState', null, global);\ngoog.exportSymbol('proto.lnrpc.InvoiceHTLC', null, global);\ngoog.exportSymbol('proto.lnrpc.InvoiceHTLCState', null, global);\ngoog.exportSymbol('proto.lnrpc.InvoiceSubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.KeyDescriptor', null, global);\ngoog.exportSymbol('proto.lnrpc.KeyLocator', null, global);\ngoog.exportSymbol('proto.lnrpc.LightningAddress', null, global);\ngoog.exportSymbol('proto.lnrpc.LightningNode', null, global);\ngoog.exportSymbol('proto.lnrpc.ListChannelsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListChannelsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ListInvoiceRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListInvoiceResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ListPaymentsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListPaymentsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ListPeersRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListPeersResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ListUnspentRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.ListUnspentResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.MPPRecord', null, global);\ngoog.exportSymbol('proto.lnrpc.MacaroonPermission', null, global);\ngoog.exportSymbol('proto.lnrpc.MultiChanBackup', null, global);\ngoog.exportSymbol('proto.lnrpc.NetworkInfo', null, global);\ngoog.exportSymbol('proto.lnrpc.NetworkInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.NewAddressRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.NewAddressResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeAddress', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeInfo', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeInfoRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeMetricType', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeMetricsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeMetricsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.NodePair', null, global);\ngoog.exportSymbol('proto.lnrpc.NodeUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.OpenChannelRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.OpenStatusUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.OutPoint', null, global);\ngoog.exportSymbol('proto.lnrpc.PayReq', null, global);\ngoog.exportSymbol('proto.lnrpc.PayReqString', null, global);\ngoog.exportSymbol('proto.lnrpc.Payment', null, global);\ngoog.exportSymbol('proto.lnrpc.Payment.PaymentStatus', null, global);\ngoog.exportSymbol('proto.lnrpc.PaymentFailureReason', null, global);\ngoog.exportSymbol('proto.lnrpc.PaymentHash', null, global);\ngoog.exportSymbol('proto.lnrpc.Peer', null, global);\ngoog.exportSymbol('proto.lnrpc.Peer.SyncType', null, global);\ngoog.exportSymbol('proto.lnrpc.PeerEvent', null, global);\ngoog.exportSymbol('proto.lnrpc.PeerEvent.EventType', null, global);\ngoog.exportSymbol('proto.lnrpc.PeerEventSubscription', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.ClosedChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.Commitments', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.ForceClosedChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.PendingChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.PendingOpenChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingHTLC', null, global);\ngoog.exportSymbol('proto.lnrpc.PendingUpdate', null, global);\ngoog.exportSymbol('proto.lnrpc.PolicyUpdateRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.PolicyUpdateResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.PsbtShim', null, global);\ngoog.exportSymbol('proto.lnrpc.QueryRoutesRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.QueryRoutesResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.ReadyForPsbtFunding', null, global);\ngoog.exportSymbol('proto.lnrpc.Resolution', null, global);\ngoog.exportSymbol('proto.lnrpc.ResolutionOutcome', null, global);\ngoog.exportSymbol('proto.lnrpc.ResolutionType', null, global);\ngoog.exportSymbol('proto.lnrpc.RestoreBackupResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.RestoreChanBackupRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.Route', null, global);\ngoog.exportSymbol('proto.lnrpc.RouteHint', null, global);\ngoog.exportSymbol('proto.lnrpc.RoutingPolicy', null, global);\ngoog.exportSymbol('proto.lnrpc.SendCoinsRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SendCoinsResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.SendManyRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SendManyResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.SendRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SendResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.SendToRouteRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SignMessageRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.SignMessageResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.StopRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.StopResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.TimestampedError', null, global);\ngoog.exportSymbol('proto.lnrpc.Transaction', null, global);\ngoog.exportSymbol('proto.lnrpc.TransactionDetails', null, global);\ngoog.exportSymbol('proto.lnrpc.Utxo', null, global);\ngoog.exportSymbol('proto.lnrpc.VerifyChanBackupResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.VerifyMessageRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.VerifyMessageResponse', null, global);\ngoog.exportSymbol('proto.lnrpc.WalletBalanceRequest', null, global);\ngoog.exportSymbol('proto.lnrpc.WalletBalanceResponse', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Utxo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Utxo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Utxo.displayName = 'proto.lnrpc.Utxo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Utxo.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Utxo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Utxo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Utxo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressType: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    address: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    amountSat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    pkScript: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    outpoint: (f = msg.getOutpoint()) && proto.lnrpc.OutPoint.toObject(includeInstance, f),\n    confirmations: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Utxo}\n */\nproto.lnrpc.Utxo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Utxo;\n  return proto.lnrpc.Utxo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Utxo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Utxo}\n */\nproto.lnrpc.Utxo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lnrpc.AddressType} */ (reader.readEnum());\n      msg.setAddressType(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmountSat(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPkScript(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.OutPoint;\n      reader.readMessage(value,proto.lnrpc.OutPoint.deserializeBinaryFromReader);\n      msg.setOutpoint(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setConfirmations(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Utxo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Utxo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Utxo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Utxo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmountSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getPkScript();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getOutpoint();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.lnrpc.OutPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getConfirmations();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional AddressType address_type = 1;\n * @return {!proto.lnrpc.AddressType}\n */\nproto.lnrpc.Utxo.prototype.getAddressType = function() {\n  return /** @type {!proto.lnrpc.AddressType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.AddressType} value */\nproto.lnrpc.Utxo.prototype.setAddressType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string address = 2;\n * @return {string}\n */\nproto.lnrpc.Utxo.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Utxo.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amount_sat = 3;\n * @return {number}\n */\nproto.lnrpc.Utxo.prototype.getAmountSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Utxo.prototype.setAmountSat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string pk_script = 4;\n * @return {string}\n */\nproto.lnrpc.Utxo.prototype.getPkScript = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Utxo.prototype.setPkScript = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional OutPoint outpoint = 5;\n * @return {?proto.lnrpc.OutPoint}\n */\nproto.lnrpc.Utxo.prototype.getOutpoint = function() {\n  return /** @type{?proto.lnrpc.OutPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.OutPoint, 5));\n};\n\n\n/** @param {?proto.lnrpc.OutPoint|undefined} value */\nproto.lnrpc.Utxo.prototype.setOutpoint = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.lnrpc.Utxo.prototype.clearOutpoint = function() {\n  this.setOutpoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Utxo.prototype.hasOutpoint = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional int64 confirmations = 6;\n * @return {number}\n */\nproto.lnrpc.Utxo.prototype.getConfirmations = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Utxo.prototype.setConfirmations = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Transaction = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Transaction.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Transaction, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Transaction.displayName = 'proto.lnrpc.Transaction';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Transaction.repeatedFields_ = [8];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Transaction.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Transaction.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Transaction} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Transaction.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txHash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    numConfirmations: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    blockHash: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    blockHeight: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    timeStamp: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    totalFees: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    destAddressesList: jspb.Message.getRepeatedField(msg, 8),\n    rawTxHex: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    label: jspb.Message.getFieldWithDefault(msg, 10, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Transaction}\n */\nproto.lnrpc.Transaction.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Transaction;\n  return proto.lnrpc.Transaction.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Transaction} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Transaction}\n */\nproto.lnrpc.Transaction.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNumConfirmations(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBlockHash(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlockHeight(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimeStamp(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalFees(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addDestAddresses(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRawTxHex(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Transaction.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Transaction.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Transaction} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Transaction.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getNumConfirmations();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getBlockHash();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getBlockHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getTimeStamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getTotalFees();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getDestAddressesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      8,\n      f\n    );\n  }\n  f = message.getRawTxHex();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getLabel();\n  if (f.length > 0) {\n    writer.writeString(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string tx_hash = 1;\n * @return {string}\n */\nproto.lnrpc.Transaction.prototype.getTxHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Transaction.prototype.setTxHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amount = 2;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 num_confirmations = 3;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getNumConfirmations = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setNumConfirmations = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string block_hash = 4;\n * @return {string}\n */\nproto.lnrpc.Transaction.prototype.getBlockHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Transaction.prototype.setBlockHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int32 block_height = 5;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setBlockHeight = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 time_stamp = 6;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getTimeStamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setTimeStamp = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 total_fees = 7;\n * @return {number}\n */\nproto.lnrpc.Transaction.prototype.getTotalFees = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Transaction.prototype.setTotalFees = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * repeated string dest_addresses = 8;\n * @return {!Array.<string>}\n */\nproto.lnrpc.Transaction.prototype.getDestAddressesList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 8));\n};\n\n\n/** @param {!Array.<string>} value */\nproto.lnrpc.Transaction.prototype.setDestAddressesList = function(value) {\n  jspb.Message.setField(this, 8, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.lnrpc.Transaction.prototype.addDestAddresses = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 8, value, opt_index);\n};\n\n\nproto.lnrpc.Transaction.prototype.clearDestAddressesList = function() {\n  this.setDestAddressesList([]);\n};\n\n\n/**\n * optional string raw_tx_hex = 9;\n * @return {string}\n */\nproto.lnrpc.Transaction.prototype.getRawTxHex = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Transaction.prototype.setRawTxHex = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional string label = 10;\n * @return {string}\n */\nproto.lnrpc.Transaction.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Transaction.prototype.setLabel = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetTransactionsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GetTransactionsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetTransactionsRequest.displayName = 'proto.lnrpc.GetTransactionsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetTransactionsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetTransactionsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetTransactionsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetTransactionsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    startHeight: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    endHeight: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetTransactionsRequest}\n */\nproto.lnrpc.GetTransactionsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetTransactionsRequest;\n  return proto.lnrpc.GetTransactionsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetTransactionsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetTransactionsRequest}\n */\nproto.lnrpc.GetTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setStartHeight(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setEndHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetTransactionsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetTransactionsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetTransactionsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetTransactionsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStartHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getEndHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 start_height = 1;\n * @return {number}\n */\nproto.lnrpc.GetTransactionsRequest.prototype.getStartHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetTransactionsRequest.prototype.setStartHeight = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 end_height = 2;\n * @return {number}\n */\nproto.lnrpc.GetTransactionsRequest.prototype.getEndHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetTransactionsRequest.prototype.setEndHeight = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.TransactionDetails = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.TransactionDetails.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.TransactionDetails, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.TransactionDetails.displayName = 'proto.lnrpc.TransactionDetails';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.TransactionDetails.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.TransactionDetails.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.TransactionDetails.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.TransactionDetails} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.TransactionDetails.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),\n    proto.lnrpc.Transaction.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.TransactionDetails}\n */\nproto.lnrpc.TransactionDetails.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.TransactionDetails;\n  return proto.lnrpc.TransactionDetails.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.TransactionDetails} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.TransactionDetails}\n */\nproto.lnrpc.TransactionDetails.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Transaction;\n      reader.readMessage(value,proto.lnrpc.Transaction.deserializeBinaryFromReader);\n      msg.addTransactions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.TransactionDetails.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.TransactionDetails.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.TransactionDetails} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.TransactionDetails.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTransactionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Transaction.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Transaction transactions = 1;\n * @return {!Array.<!proto.lnrpc.Transaction>}\n */\nproto.lnrpc.TransactionDetails.prototype.getTransactionsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Transaction>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Transaction, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Transaction>} value */\nproto.lnrpc.TransactionDetails.prototype.setTransactionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Transaction=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Transaction}\n */\nproto.lnrpc.TransactionDetails.prototype.addTransactions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Transaction, opt_index);\n};\n\n\nproto.lnrpc.TransactionDetails.prototype.clearTransactionsList = function() {\n  this.setTransactionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FeeLimit = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.FeeLimit.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.FeeLimit, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FeeLimit.displayName = 'proto.lnrpc.FeeLimit';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.FeeLimit.oneofGroups_ = [[1,3,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.FeeLimit.LimitCase = {\n  LIMIT_NOT_SET: 0,\n  FIXED: 1,\n  FIXED_MSAT: 3,\n  PERCENT: 2\n};\n\n/**\n * @return {proto.lnrpc.FeeLimit.LimitCase}\n */\nproto.lnrpc.FeeLimit.prototype.getLimitCase = function() {\n  return /** @type {proto.lnrpc.FeeLimit.LimitCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.FeeLimit.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FeeLimit.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FeeLimit.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FeeLimit} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeLimit.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fixed: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    fixedMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    percent: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FeeLimit}\n */\nproto.lnrpc.FeeLimit.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FeeLimit;\n  return proto.lnrpc.FeeLimit.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FeeLimit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FeeLimit}\n */\nproto.lnrpc.FeeLimit.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFixed(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFixedMsat(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPercent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FeeLimit.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FeeLimit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FeeLimit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeLimit.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {number} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 3));\n  if (f != null) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = /** @type {number} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 fixed = 1;\n * @return {number}\n */\nproto.lnrpc.FeeLimit.prototype.getFixed = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeLimit.prototype.setFixed = function(value) {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.FeeLimit.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FeeLimit.prototype.clearFixed = function() {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.FeeLimit.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FeeLimit.prototype.hasFixed = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 fixed_msat = 3;\n * @return {number}\n */\nproto.lnrpc.FeeLimit.prototype.getFixedMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeLimit.prototype.setFixedMsat = function(value) {\n  jspb.Message.setOneofField(this, 3, proto.lnrpc.FeeLimit.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FeeLimit.prototype.clearFixedMsat = function() {\n  jspb.Message.setOneofField(this, 3, proto.lnrpc.FeeLimit.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FeeLimit.prototype.hasFixedMsat = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional int64 percent = 2;\n * @return {number}\n */\nproto.lnrpc.FeeLimit.prototype.getPercent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeLimit.prototype.setPercent = function(value) {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.FeeLimit.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FeeLimit.prototype.clearPercent = function() {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.FeeLimit.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FeeLimit.prototype.hasPercent = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.SendRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.SendRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendRequest.displayName = 'proto.lnrpc.SendRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.SendRequest.repeatedFields_ = [15];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dest: msg.getDest_asB64(),\n    destString: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    amt: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    amtMsat: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    paymentHash: msg.getPaymentHash_asB64(),\n    paymentHashString: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    paymentRequest: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    finalCltvDelta: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    feeLimit: (f = msg.getFeeLimit()) && proto.lnrpc.FeeLimit.toObject(includeInstance, f),\n    outgoingChanId: jspb.Message.getFieldWithDefault(msg, 9, \"0\"),\n    lastHopPubkey: msg.getLastHopPubkey_asB64(),\n    cltvLimit: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    destCustomRecordsMap: (f = msg.getDestCustomRecordsMap()) ? f.toObject(includeInstance, undefined) : [],\n    allowSelfPayment: jspb.Message.getFieldWithDefault(msg, 14, false),\n    destFeaturesList: jspb.Message.getRepeatedField(msg, 15)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendRequest}\n */\nproto.lnrpc.SendRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendRequest;\n  return proto.lnrpc.SendRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendRequest}\n */\nproto.lnrpc.SendRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDest(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDestString(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmt(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentHash(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHashString(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentRequest(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setFinalCltvDelta(value);\n      break;\n    case 8:\n      var value = new proto.lnrpc.FeeLimit;\n      reader.readMessage(value,proto.lnrpc.FeeLimit.deserializeBinaryFromReader);\n      msg.setFeeLimit(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setOutgoingChanId(value);\n      break;\n    case 13:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setLastHopPubkey(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCltvLimit(value);\n      break;\n    case 11:\n      var value = msg.getDestCustomRecordsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readBytes);\n         });\n      break;\n    case 14:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAllowSelfPayment(value);\n      break;\n    case 15:\n      var value = /** @type {!Array.<!proto.lnrpc.FeatureBit>} */ (reader.readPackedEnum());\n      msg.setDestFeaturesList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDest_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getDestString();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAmt();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getPaymentHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getPaymentHashString();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getPaymentRequest();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getFinalCltvDelta();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n  f = message.getFeeLimit();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.lnrpc.FeeLimit.serializeBinaryToWriter\n    );\n  }\n  f = message.getOutgoingChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      9,\n      f\n    );\n  }\n  f = message.getLastHopPubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      13,\n      f\n    );\n  }\n  f = message.getCltvLimit();\n  if (f !== 0) {\n    writer.writeUint32(\n      10,\n      f\n    );\n  }\n  f = message.getDestCustomRecordsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getAllowSelfPayment();\n  if (f) {\n    writer.writeBool(\n      14,\n      f\n    );\n  }\n  f = message.getDestFeaturesList();\n  if (f.length > 0) {\n    writer.writePackedEnum(\n      15,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes dest = 1;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getDest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes dest = 1;\n * This is a type-conversion wrapper around `getDest()`\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getDest_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDest()));\n};\n\n\n/**\n * optional bytes dest = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDest()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendRequest.prototype.getDest_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDest()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendRequest.prototype.setDest = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string dest_string = 2;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getDestString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendRequest.prototype.setDestString = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt = 3;\n * @return {number}\n */\nproto.lnrpc.SendRequest.prototype.getAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendRequest.prototype.setAmt = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 amt_msat = 12;\n * @return {number}\n */\nproto.lnrpc.SendRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentHash()));\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendRequest.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string payment_hash_string = 5;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentHashString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendRequest.prototype.setPaymentHashString = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string payment_request = 6;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getPaymentRequest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendRequest.prototype.setPaymentRequest = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int32 final_cltv_delta = 7;\n * @return {number}\n */\nproto.lnrpc.SendRequest.prototype.getFinalCltvDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendRequest.prototype.setFinalCltvDelta = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional FeeLimit fee_limit = 8;\n * @return {?proto.lnrpc.FeeLimit}\n */\nproto.lnrpc.SendRequest.prototype.getFeeLimit = function() {\n  return /** @type{?proto.lnrpc.FeeLimit} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FeeLimit, 8));\n};\n\n\n/** @param {?proto.lnrpc.FeeLimit|undefined} value */\nproto.lnrpc.SendRequest.prototype.setFeeLimit = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.lnrpc.SendRequest.prototype.clearFeeLimit = function() {\n  this.setFeeLimit(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.SendRequest.prototype.hasFeeLimit = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n/**\n * optional uint64 outgoing_chan_id = 9;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getOutgoingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendRequest.prototype.setOutgoingChanId = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 13;\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getLastHopPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 13;\n * This is a type-conversion wrapper around `getLastHopPubkey()`\n * @return {string}\n */\nproto.lnrpc.SendRequest.prototype.getLastHopPubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getLastHopPubkey()));\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 13;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getLastHopPubkey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendRequest.prototype.getLastHopPubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getLastHopPubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendRequest.prototype.setLastHopPubkey = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional uint32 cltv_limit = 10;\n * @return {number}\n */\nproto.lnrpc.SendRequest.prototype.getCltvLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendRequest.prototype.setCltvLimit = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * map<uint64, bytes> dest_custom_records = 11;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!(string|Uint8Array)>}\n */\nproto.lnrpc.SendRequest.prototype.getDestCustomRecordsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 11, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.SendRequest.prototype.clearDestCustomRecordsMap = function() {\n  this.getDestCustomRecordsMap().clear();\n};\n\n\n/**\n * optional bool allow_self_payment = 14;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.SendRequest.prototype.getAllowSelfPayment = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.SendRequest.prototype.setAllowSelfPayment = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * repeated FeatureBit dest_features = 15;\n * @return {!Array.<!proto.lnrpc.FeatureBit>}\n */\nproto.lnrpc.SendRequest.prototype.getDestFeaturesList = function() {\n  return /** @type {!Array.<!proto.lnrpc.FeatureBit>} */ (jspb.Message.getRepeatedField(this, 15));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.FeatureBit>} value */\nproto.lnrpc.SendRequest.prototype.setDestFeaturesList = function(value) {\n  jspb.Message.setField(this, 15, value || []);\n};\n\n\n/**\n * @param {!proto.lnrpc.FeatureBit} value\n * @param {number=} opt_index\n */\nproto.lnrpc.SendRequest.prototype.addDestFeatures = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 15, value, opt_index);\n};\n\n\nproto.lnrpc.SendRequest.prototype.clearDestFeaturesList = function() {\n  this.setDestFeaturesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendResponse.displayName = 'proto.lnrpc.SendResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentError: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    paymentPreimage: msg.getPaymentPreimage_asB64(),\n    paymentRoute: (f = msg.getPaymentRoute()) && proto.lnrpc.Route.toObject(includeInstance, f),\n    paymentHash: msg.getPaymentHash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendResponse}\n */\nproto.lnrpc.SendResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendResponse;\n  return proto.lnrpc.SendResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendResponse}\n */\nproto.lnrpc.SendResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentError(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentPreimage(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.Route;\n      reader.readMessage(value,proto.lnrpc.Route.deserializeBinaryFromReader);\n      msg.setPaymentRoute(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentError();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPaymentPreimage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getPaymentRoute();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.Route.serializeBinaryToWriter\n    );\n  }\n  f = message.getPaymentHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string payment_error = 1;\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendResponse.prototype.setPaymentError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes payment_preimage = 2;\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes payment_preimage = 2;\n * This is a type-conversion wrapper around `getPaymentPreimage()`\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentPreimage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentPreimage()));\n};\n\n\n/**\n * optional bytes payment_preimage = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentPreimage()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentPreimage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentPreimage()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendResponse.prototype.setPaymentPreimage = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional Route payment_route = 3;\n * @return {?proto.lnrpc.Route}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentRoute = function() {\n  return /** @type{?proto.lnrpc.Route} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Route, 3));\n};\n\n\n/** @param {?proto.lnrpc.Route|undefined} value */\nproto.lnrpc.SendResponse.prototype.setPaymentRoute = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.SendResponse.prototype.clearPaymentRoute = function() {\n  this.setPaymentRoute(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.SendResponse.prototype.hasPaymentRoute = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {string}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentHash()));\n};\n\n\n/**\n * optional bytes payment_hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendResponse.prototype.getPaymentHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendResponse.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendToRouteRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendToRouteRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendToRouteRequest.displayName = 'proto.lnrpc.SendToRouteRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendToRouteRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendToRouteRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendToRouteRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendToRouteRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentHash: msg.getPaymentHash_asB64(),\n    paymentHashString: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    route: (f = msg.getRoute()) && proto.lnrpc.Route.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendToRouteRequest}\n */\nproto.lnrpc.SendToRouteRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendToRouteRequest;\n  return proto.lnrpc.SendToRouteRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendToRouteRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendToRouteRequest}\n */\nproto.lnrpc.SendToRouteRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentHash(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHashString(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.Route;\n      reader.readMessage(value,proto.lnrpc.Route.deserializeBinaryFromReader);\n      msg.setRoute(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendToRouteRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendToRouteRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendToRouteRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendToRouteRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPaymentHashString();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getRoute();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.Route.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes payment_hash = 1;\n * @return {string}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes payment_hash = 1;\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {string}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getPaymentHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentHash()));\n};\n\n\n/**\n * optional bytes payment_hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getPaymentHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SendToRouteRequest.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string payment_hash_string = 2;\n * @return {string}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getPaymentHashString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendToRouteRequest.prototype.setPaymentHashString = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional Route route = 4;\n * @return {?proto.lnrpc.Route}\n */\nproto.lnrpc.SendToRouteRequest.prototype.getRoute = function() {\n  return /** @type{?proto.lnrpc.Route} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Route, 4));\n};\n\n\n/** @param {?proto.lnrpc.Route|undefined} value */\nproto.lnrpc.SendToRouteRequest.prototype.setRoute = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.lnrpc.SendToRouteRequest.prototype.clearRoute = function() {\n  this.setRoute(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.SendToRouteRequest.prototype.hasRoute = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelAcceptRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelAcceptRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelAcceptRequest.displayName = 'proto.lnrpc.ChannelAcceptRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelAcceptRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelAcceptRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelAcceptRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodePubkey: msg.getNodePubkey_asB64(),\n    chainHash: msg.getChainHash_asB64(),\n    pendingChanId: msg.getPendingChanId_asB64(),\n    fundingAmt: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    pushAmt: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    dustLimit: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    maxValueInFlight: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    channelReserve: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    minHtlc: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    feePerKw: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    csvDelay: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    maxAcceptedHtlcs: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    channelFlags: jspb.Message.getFieldWithDefault(msg, 13, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelAcceptRequest}\n */\nproto.lnrpc.ChannelAcceptRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelAcceptRequest;\n  return proto.lnrpc.ChannelAcceptRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelAcceptRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelAcceptRequest}\n */\nproto.lnrpc.ChannelAcceptRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNodePubkey(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChainHash(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFundingAmt(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPushAmt(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDustLimit(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxValueInFlight(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChannelReserve(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMinHtlc(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFeePerKw(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCsvDelay(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaxAcceptedHtlcs(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setChannelFlags(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelAcceptRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelAcceptRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelAcceptRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodePubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getChainHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getFundingAmt();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getPushAmt();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getDustLimit();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getMaxValueInFlight();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getChannelReserve();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n  f = message.getMinHtlc();\n  if (f !== 0) {\n    writer.writeUint64(\n      9,\n      f\n    );\n  }\n  f = message.getFeePerKw();\n  if (f !== 0) {\n    writer.writeUint64(\n      10,\n      f\n    );\n  }\n  f = message.getCsvDelay();\n  if (f !== 0) {\n    writer.writeUint32(\n      11,\n      f\n    );\n  }\n  f = message.getMaxAcceptedHtlcs();\n  if (f !== 0) {\n    writer.writeUint32(\n      12,\n      f\n    );\n  }\n  f = message.getChannelFlags();\n  if (f !== 0) {\n    writer.writeUint32(\n      13,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes node_pubkey = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getNodePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes node_pubkey = 1;\n * This is a type-conversion wrapper around `getNodePubkey()`\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getNodePubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNodePubkey()));\n};\n\n\n/**\n * optional bytes node_pubkey = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNodePubkey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getNodePubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNodePubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setNodePubkey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChainHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * This is a type-conversion wrapper around `getChainHash()`\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChainHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChainHash()));\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChainHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChainHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChainHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setChainHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 3;\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 3;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 funding_amt = 4;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getFundingAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setFundingAmt = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 push_amt = 5;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getPushAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setPushAmt = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 dust_limit = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getDustLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setDustLimit = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 max_value_in_flight = 7;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getMaxValueInFlight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setMaxValueInFlight = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional uint64 channel_reserve = 8;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChannelReserve = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setChannelReserve = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional uint64 min_htlc = 9;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getMinHtlc = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setMinHtlc = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional uint64 fee_per_kw = 10;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getFeePerKw = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setFeePerKw = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional uint32 csv_delay = 11;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getCsvDelay = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setCsvDelay = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional uint32 max_accepted_htlcs = 12;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getMaxAcceptedHtlcs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setMaxAcceptedHtlcs = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional uint32 channel_flags = 13;\n * @return {number}\n */\nproto.lnrpc.ChannelAcceptRequest.prototype.getChannelFlags = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelAcceptRequest.prototype.setChannelFlags = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelAcceptResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelAcceptResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelAcceptResponse.displayName = 'proto.lnrpc.ChannelAcceptResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelAcceptResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelAcceptResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelAcceptResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accept: jspb.Message.getFieldWithDefault(msg, 1, false),\n    pendingChanId: msg.getPendingChanId_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelAcceptResponse}\n */\nproto.lnrpc.ChannelAcceptResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelAcceptResponse;\n  return proto.lnrpc.ChannelAcceptResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelAcceptResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelAcceptResponse}\n */\nproto.lnrpc.ChannelAcceptResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAccept(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelAcceptResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelAcceptResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelAcceptResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccept();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool accept = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getAccept = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ChannelAcceptResponse.prototype.setAccept = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelAcceptResponse.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelAcceptResponse.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelPoint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.ChannelPoint.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.ChannelPoint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelPoint.displayName = 'proto.lnrpc.ChannelPoint';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.ChannelPoint.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ChannelPoint.FundingTxidCase = {\n  FUNDING_TXID_NOT_SET: 0,\n  FUNDING_TXID_BYTES: 1,\n  FUNDING_TXID_STR: 2\n};\n\n/**\n * @return {proto.lnrpc.ChannelPoint.FundingTxidCase}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidCase = function() {\n  return /** @type {proto.lnrpc.ChannelPoint.FundingTxidCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.ChannelPoint.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelPoint.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelPoint.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelPoint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelPoint.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fundingTxidBytes: msg.getFundingTxidBytes_asB64(),\n    fundingTxidStr: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    outputIndex: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelPoint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelPoint;\n  return proto.lnrpc.ChannelPoint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelPoint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelPoint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFundingTxidBytes(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFundingTxidStr(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOutputIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelPoint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelPoint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelPoint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelPoint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = /** @type {string} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getOutputIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes funding_txid_bytes = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidBytes = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes funding_txid_bytes = 1;\n * This is a type-conversion wrapper around `getFundingTxidBytes()`\n * @return {string}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidBytes_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFundingTxidBytes()));\n};\n\n\n/**\n * optional bytes funding_txid_bytes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFundingTxidBytes()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidBytes_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFundingTxidBytes()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelPoint.prototype.setFundingTxidBytes = function(value) {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.ChannelPoint.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelPoint.prototype.clearFundingTxidBytes = function() {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.ChannelPoint.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelPoint.prototype.hasFundingTxidBytes = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string funding_txid_str = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelPoint.prototype.getFundingTxidStr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelPoint.prototype.setFundingTxidStr = function(value) {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.ChannelPoint.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelPoint.prototype.clearFundingTxidStr = function() {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.ChannelPoint.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelPoint.prototype.hasFundingTxidStr = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional uint32 output_index = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelPoint.prototype.getOutputIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelPoint.prototype.setOutputIndex = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.OutPoint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.OutPoint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.OutPoint.displayName = 'proto.lnrpc.OutPoint';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.OutPoint.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.OutPoint.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.OutPoint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OutPoint.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txidBytes: msg.getTxidBytes_asB64(),\n    txidStr: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    outputIndex: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.OutPoint}\n */\nproto.lnrpc.OutPoint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.OutPoint;\n  return proto.lnrpc.OutPoint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.OutPoint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.OutPoint}\n */\nproto.lnrpc.OutPoint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTxidBytes(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxidStr(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOutputIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.OutPoint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.OutPoint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.OutPoint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OutPoint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxidBytes_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getTxidStr();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getOutputIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes txid_bytes = 1;\n * @return {string}\n */\nproto.lnrpc.OutPoint.prototype.getTxidBytes = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes txid_bytes = 1;\n * This is a type-conversion wrapper around `getTxidBytes()`\n * @return {string}\n */\nproto.lnrpc.OutPoint.prototype.getTxidBytes_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTxidBytes()));\n};\n\n\n/**\n * optional bytes txid_bytes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxidBytes()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.OutPoint.prototype.getTxidBytes_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTxidBytes()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.OutPoint.prototype.setTxidBytes = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string txid_str = 2;\n * @return {string}\n */\nproto.lnrpc.OutPoint.prototype.getTxidStr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.OutPoint.prototype.setTxidStr = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 output_index = 3;\n * @return {number}\n */\nproto.lnrpc.OutPoint.prototype.getOutputIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OutPoint.prototype.setOutputIndex = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.LightningAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.LightningAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.LightningAddress.displayName = 'proto.lnrpc.LightningAddress';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.LightningAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.LightningAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.LightningAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.LightningAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubkey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    host: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.LightningAddress}\n */\nproto.lnrpc.LightningAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.LightningAddress;\n  return proto.lnrpc.LightningAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.LightningAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.LightningAddress}\n */\nproto.lnrpc.LightningAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubkey(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHost(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.LightningAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.LightningAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.LightningAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.LightningAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getHost();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pubkey = 1;\n * @return {string}\n */\nproto.lnrpc.LightningAddress.prototype.getPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningAddress.prototype.setPubkey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string host = 2;\n * @return {string}\n */\nproto.lnrpc.LightningAddress.prototype.getHost = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningAddress.prototype.setHost = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.EstimateFeeRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.EstimateFeeRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.EstimateFeeRequest.displayName = 'proto.lnrpc.EstimateFeeRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.EstimateFeeRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.EstimateFeeRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.EstimateFeeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EstimateFeeRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addrtoamountMap: (f = msg.getAddrtoamountMap()) ? f.toObject(includeInstance, undefined) : [],\n    targetConf: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.EstimateFeeRequest}\n */\nproto.lnrpc.EstimateFeeRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.EstimateFeeRequest;\n  return proto.lnrpc.EstimateFeeRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.EstimateFeeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.EstimateFeeRequest}\n */\nproto.lnrpc.EstimateFeeRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = msg.getAddrtoamountMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64);\n         });\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.EstimateFeeRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.EstimateFeeRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.EstimateFeeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EstimateFeeRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddrtoamountMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * map<string, int64> AddrToAmount = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nproto.lnrpc.EstimateFeeRequest.prototype.getAddrtoamountMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.EstimateFeeRequest.prototype.clearAddrtoamountMap = function() {\n  this.getAddrtoamountMap().clear();\n};\n\n\n/**\n * optional int32 target_conf = 2;\n * @return {number}\n */\nproto.lnrpc.EstimateFeeRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.EstimateFeeRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.EstimateFeeResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.EstimateFeeResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.EstimateFeeResponse.displayName = 'proto.lnrpc.EstimateFeeResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.EstimateFeeResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.EstimateFeeResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.EstimateFeeResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EstimateFeeResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    feeSat: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    feerateSatPerByte: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.EstimateFeeResponse}\n */\nproto.lnrpc.EstimateFeeResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.EstimateFeeResponse;\n  return proto.lnrpc.EstimateFeeResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.EstimateFeeResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.EstimateFeeResponse}\n */\nproto.lnrpc.EstimateFeeResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeSat(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeerateSatPerByte(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.EstimateFeeResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.EstimateFeeResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.EstimateFeeResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EstimateFeeResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFeeSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getFeerateSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 fee_sat = 1;\n * @return {number}\n */\nproto.lnrpc.EstimateFeeResponse.prototype.getFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.EstimateFeeResponse.prototype.setFeeSat = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 feerate_sat_per_byte = 2;\n * @return {number}\n */\nproto.lnrpc.EstimateFeeResponse.prototype.getFeerateSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.EstimateFeeResponse.prototype.setFeerateSatPerByte = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendManyRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendManyRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendManyRequest.displayName = 'proto.lnrpc.SendManyRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendManyRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendManyRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendManyRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendManyRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addrtoamountMap: (f = msg.getAddrtoamountMap()) ? f.toObject(includeInstance, undefined) : [],\n    targetConf: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    satPerByte: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    label: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendManyRequest}\n */\nproto.lnrpc.SendManyRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendManyRequest;\n  return proto.lnrpc.SendManyRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendManyRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendManyRequest}\n */\nproto.lnrpc.SendManyRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = msg.getAddrtoamountMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64);\n         });\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatPerByte(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendManyRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendManyRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendManyRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendManyRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddrtoamountMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getLabel();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * map<string, int64> AddrToAmount = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nproto.lnrpc.SendManyRequest.prototype.getAddrtoamountMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.SendManyRequest.prototype.clearAddrtoamountMap = function() {\n  this.getAddrtoamountMap().clear();\n};\n\n\n/**\n * optional int32 target_conf = 3;\n * @return {number}\n */\nproto.lnrpc.SendManyRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendManyRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 sat_per_byte = 5;\n * @return {number}\n */\nproto.lnrpc.SendManyRequest.prototype.getSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendManyRequest.prototype.setSatPerByte = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string label = 6;\n * @return {string}\n */\nproto.lnrpc.SendManyRequest.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendManyRequest.prototype.setLabel = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendManyResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendManyResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendManyResponse.displayName = 'proto.lnrpc.SendManyResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendManyResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendManyResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendManyResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendManyResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendManyResponse}\n */\nproto.lnrpc.SendManyResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendManyResponse;\n  return proto.lnrpc.SendManyResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendManyResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendManyResponse}\n */\nproto.lnrpc.SendManyResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendManyResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendManyResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendManyResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendManyResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string txid = 1;\n * @return {string}\n */\nproto.lnrpc.SendManyResponse.prototype.getTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendManyResponse.prototype.setTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendCoinsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendCoinsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendCoinsRequest.displayName = 'proto.lnrpc.SendCoinsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendCoinsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendCoinsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendCoinsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendCoinsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addr: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    targetConf: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    satPerByte: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    sendAll: jspb.Message.getFieldWithDefault(msg, 6, false),\n    label: jspb.Message.getFieldWithDefault(msg, 7, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendCoinsRequest}\n */\nproto.lnrpc.SendCoinsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendCoinsRequest;\n  return proto.lnrpc.SendCoinsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendCoinsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendCoinsRequest}\n */\nproto.lnrpc.SendCoinsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddr(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatPerByte(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSendAll(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLabel(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendCoinsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendCoinsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendCoinsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendCoinsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getSendAll();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = message.getLabel();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string addr = 1;\n * @return {string}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendCoinsRequest.prototype.setAddr = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amount = 2;\n * @return {number}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendCoinsRequest.prototype.setAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 target_conf = 3;\n * @return {number}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendCoinsRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 sat_per_byte = 5;\n * @return {number}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.SendCoinsRequest.prototype.setSatPerByte = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional bool send_all = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getSendAll = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.SendCoinsRequest.prototype.setSendAll = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string label = 7;\n * @return {string}\n */\nproto.lnrpc.SendCoinsRequest.prototype.getLabel = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendCoinsRequest.prototype.setLabel = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SendCoinsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SendCoinsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SendCoinsResponse.displayName = 'proto.lnrpc.SendCoinsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SendCoinsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SendCoinsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SendCoinsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendCoinsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txid: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SendCoinsResponse}\n */\nproto.lnrpc.SendCoinsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SendCoinsResponse;\n  return proto.lnrpc.SendCoinsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SendCoinsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SendCoinsResponse}\n */\nproto.lnrpc.SendCoinsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SendCoinsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SendCoinsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SendCoinsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SendCoinsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string txid = 1;\n * @return {string}\n */\nproto.lnrpc.SendCoinsResponse.prototype.getTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SendCoinsResponse.prototype.setTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListUnspentRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListUnspentRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListUnspentRequest.displayName = 'proto.lnrpc.ListUnspentRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListUnspentRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListUnspentRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListUnspentRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListUnspentRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    minConfs: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    maxConfs: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListUnspentRequest}\n */\nproto.lnrpc.ListUnspentRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListUnspentRequest;\n  return proto.lnrpc.ListUnspentRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListUnspentRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListUnspentRequest}\n */\nproto.lnrpc.ListUnspentRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinConfs(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMaxConfs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListUnspentRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListUnspentRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListUnspentRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListUnspentRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMinConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getMaxConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 min_confs = 1;\n * @return {number}\n */\nproto.lnrpc.ListUnspentRequest.prototype.getMinConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListUnspentRequest.prototype.setMinConfs = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 max_confs = 2;\n * @return {number}\n */\nproto.lnrpc.ListUnspentRequest.prototype.getMaxConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListUnspentRequest.prototype.setMaxConfs = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListUnspentResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListUnspentResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListUnspentResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListUnspentResponse.displayName = 'proto.lnrpc.ListUnspentResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListUnspentResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListUnspentResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListUnspentResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListUnspentResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListUnspentResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    utxosList: jspb.Message.toObjectList(msg.getUtxosList(),\n    proto.lnrpc.Utxo.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListUnspentResponse}\n */\nproto.lnrpc.ListUnspentResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListUnspentResponse;\n  return proto.lnrpc.ListUnspentResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListUnspentResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListUnspentResponse}\n */\nproto.lnrpc.ListUnspentResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Utxo;\n      reader.readMessage(value,proto.lnrpc.Utxo.deserializeBinaryFromReader);\n      msg.addUtxos(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListUnspentResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListUnspentResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListUnspentResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListUnspentResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUtxosList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Utxo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Utxo utxos = 1;\n * @return {!Array.<!proto.lnrpc.Utxo>}\n */\nproto.lnrpc.ListUnspentResponse.prototype.getUtxosList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Utxo>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Utxo, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Utxo>} value */\nproto.lnrpc.ListUnspentResponse.prototype.setUtxosList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Utxo=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Utxo}\n */\nproto.lnrpc.ListUnspentResponse.prototype.addUtxos = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Utxo, opt_index);\n};\n\n\nproto.lnrpc.ListUnspentResponse.prototype.clearUtxosList = function() {\n  this.setUtxosList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NewAddressRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NewAddressRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NewAddressRequest.displayName = 'proto.lnrpc.NewAddressRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NewAddressRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NewAddressRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NewAddressRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NewAddressRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NewAddressRequest}\n */\nproto.lnrpc.NewAddressRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NewAddressRequest;\n  return proto.lnrpc.NewAddressRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NewAddressRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NewAddressRequest}\n */\nproto.lnrpc.NewAddressRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lnrpc.AddressType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NewAddressRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NewAddressRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NewAddressRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NewAddressRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional AddressType type = 1;\n * @return {!proto.lnrpc.AddressType}\n */\nproto.lnrpc.NewAddressRequest.prototype.getType = function() {\n  return /** @type {!proto.lnrpc.AddressType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.AddressType} value */\nproto.lnrpc.NewAddressRequest.prototype.setType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NewAddressResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NewAddressResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NewAddressResponse.displayName = 'proto.lnrpc.NewAddressResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NewAddressResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NewAddressResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NewAddressResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NewAddressResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NewAddressResponse}\n */\nproto.lnrpc.NewAddressResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NewAddressResponse;\n  return proto.lnrpc.NewAddressResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NewAddressResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NewAddressResponse}\n */\nproto.lnrpc.NewAddressResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NewAddressResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NewAddressResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NewAddressResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NewAddressResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.lnrpc.NewAddressResponse.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NewAddressResponse.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SignMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SignMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SignMessageRequest.displayName = 'proto.lnrpc.SignMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SignMessageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SignMessageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SignMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SignMessageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    msg: msg.getMsg_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SignMessageRequest}\n */\nproto.lnrpc.SignMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SignMessageRequest;\n  return proto.lnrpc.SignMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SignMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SignMessageRequest}\n */\nproto.lnrpc.SignMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMsg(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SignMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SignMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SignMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SignMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMsg_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes msg = 1;\n * @return {string}\n */\nproto.lnrpc.SignMessageRequest.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes msg = 1;\n * This is a type-conversion wrapper around `getMsg()`\n * @return {string}\n */\nproto.lnrpc.SignMessageRequest.prototype.getMsg_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMsg()));\n};\n\n\n/**\n * optional bytes msg = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMsg()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.SignMessageRequest.prototype.getMsg_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMsg()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.SignMessageRequest.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.SignMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.SignMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.SignMessageResponse.displayName = 'proto.lnrpc.SignMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.SignMessageResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.SignMessageResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.SignMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SignMessageResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    signature: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.SignMessageResponse}\n */\nproto.lnrpc.SignMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.SignMessageResponse;\n  return proto.lnrpc.SignMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.SignMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.SignMessageResponse}\n */\nproto.lnrpc.SignMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.SignMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.SignMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.SignMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.SignMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSignature();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string signature = 1;\n * @return {string}\n */\nproto.lnrpc.SignMessageResponse.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.SignMessageResponse.prototype.setSignature = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.VerifyMessageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.VerifyMessageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.VerifyMessageRequest.displayName = 'proto.lnrpc.VerifyMessageRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.VerifyMessageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.VerifyMessageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyMessageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    msg: msg.getMsg_asB64(),\n    signature: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.VerifyMessageRequest}\n */\nproto.lnrpc.VerifyMessageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.VerifyMessageRequest;\n  return proto.lnrpc.VerifyMessageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.VerifyMessageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.VerifyMessageRequest}\n */\nproto.lnrpc.VerifyMessageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMsg(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.VerifyMessageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.VerifyMessageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyMessageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMsg_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getSignature();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes msg = 1;\n * @return {string}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.getMsg = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes msg = 1;\n * This is a type-conversion wrapper around `getMsg()`\n * @return {string}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.getMsg_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMsg()));\n};\n\n\n/**\n * optional bytes msg = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMsg()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.getMsg_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMsg()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.VerifyMessageRequest.prototype.setMsg = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string signature = 2;\n * @return {string}\n */\nproto.lnrpc.VerifyMessageRequest.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.VerifyMessageRequest.prototype.setSignature = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.VerifyMessageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.VerifyMessageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.VerifyMessageResponse.displayName = 'proto.lnrpc.VerifyMessageResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.VerifyMessageResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.VerifyMessageResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.VerifyMessageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyMessageResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    valid: jspb.Message.getFieldWithDefault(msg, 1, false),\n    pubkey: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.VerifyMessageResponse}\n */\nproto.lnrpc.VerifyMessageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.VerifyMessageResponse;\n  return proto.lnrpc.VerifyMessageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.VerifyMessageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.VerifyMessageResponse}\n */\nproto.lnrpc.VerifyMessageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setValid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubkey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.VerifyMessageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.VerifyMessageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.VerifyMessageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyMessageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValid();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool valid = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.VerifyMessageResponse.prototype.getValid = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.VerifyMessageResponse.prototype.setValid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string pubkey = 2;\n * @return {string}\n */\nproto.lnrpc.VerifyMessageResponse.prototype.getPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.VerifyMessageResponse.prototype.setPubkey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ConnectPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ConnectPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ConnectPeerRequest.displayName = 'proto.lnrpc.ConnectPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ConnectPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ConnectPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConnectPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addr: (f = msg.getAddr()) && proto.lnrpc.LightningAddress.toObject(includeInstance, f),\n    perm: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ConnectPeerRequest}\n */\nproto.lnrpc.ConnectPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ConnectPeerRequest;\n  return proto.lnrpc.ConnectPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ConnectPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ConnectPeerRequest}\n */\nproto.lnrpc.ConnectPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.LightningAddress;\n      reader.readMessage(value,proto.lnrpc.LightningAddress.deserializeBinaryFromReader);\n      msg.setAddr(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPerm(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ConnectPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ConnectPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConnectPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddr();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.LightningAddress.serializeBinaryToWriter\n    );\n  }\n  f = message.getPerm();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional LightningAddress addr = 1;\n * @return {?proto.lnrpc.LightningAddress}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.getAddr = function() {\n  return /** @type{?proto.lnrpc.LightningAddress} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.LightningAddress, 1));\n};\n\n\n/** @param {?proto.lnrpc.LightningAddress|undefined} value */\nproto.lnrpc.ConnectPeerRequest.prototype.setAddr = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ConnectPeerRequest.prototype.clearAddr = function() {\n  this.setAddr(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.hasAddr = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool perm = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ConnectPeerRequest.prototype.getPerm = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ConnectPeerRequest.prototype.setPerm = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ConnectPeerResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ConnectPeerResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ConnectPeerResponse.displayName = 'proto.lnrpc.ConnectPeerResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ConnectPeerResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ConnectPeerResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ConnectPeerResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConnectPeerResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ConnectPeerResponse}\n */\nproto.lnrpc.ConnectPeerResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ConnectPeerResponse;\n  return proto.lnrpc.ConnectPeerResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ConnectPeerResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ConnectPeerResponse}\n */\nproto.lnrpc.ConnectPeerResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ConnectPeerResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ConnectPeerResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ConnectPeerResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConnectPeerResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DisconnectPeerRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DisconnectPeerRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DisconnectPeerRequest.displayName = 'proto.lnrpc.DisconnectPeerRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DisconnectPeerRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DisconnectPeerRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DisconnectPeerRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DisconnectPeerRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DisconnectPeerRequest}\n */\nproto.lnrpc.DisconnectPeerRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DisconnectPeerRequest;\n  return proto.lnrpc.DisconnectPeerRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DisconnectPeerRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DisconnectPeerRequest}\n */\nproto.lnrpc.DisconnectPeerRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DisconnectPeerRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DisconnectPeerRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DisconnectPeerRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DisconnectPeerRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.DisconnectPeerRequest.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.DisconnectPeerRequest.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DisconnectPeerResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DisconnectPeerResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DisconnectPeerResponse.displayName = 'proto.lnrpc.DisconnectPeerResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DisconnectPeerResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DisconnectPeerResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DisconnectPeerResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DisconnectPeerResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DisconnectPeerResponse}\n */\nproto.lnrpc.DisconnectPeerResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DisconnectPeerResponse;\n  return proto.lnrpc.DisconnectPeerResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DisconnectPeerResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DisconnectPeerResponse}\n */\nproto.lnrpc.DisconnectPeerResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DisconnectPeerResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DisconnectPeerResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DisconnectPeerResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DisconnectPeerResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.HTLC = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.HTLC, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.HTLC.displayName = 'proto.lnrpc.HTLC';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.HTLC.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.HTLC.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.HTLC} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HTLC.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    incoming: jspb.Message.getFieldWithDefault(msg, 1, false),\n    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    hashLock: msg.getHashLock_asB64(),\n    expirationHeight: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.HTLC}\n */\nproto.lnrpc.HTLC.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.HTLC;\n  return proto.lnrpc.HTLC.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.HTLC} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.HTLC}\n */\nproto.lnrpc.HTLC.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncoming(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHashLock(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setExpirationHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.HTLC.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.HTLC.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.HTLC} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HTLC.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIncoming();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getHashLock_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getExpirationHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool incoming = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.HTLC.prototype.getIncoming = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.HTLC.prototype.setIncoming = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amount = 2;\n * @return {number}\n */\nproto.lnrpc.HTLC.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLC.prototype.setAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bytes hash_lock = 3;\n * @return {string}\n */\nproto.lnrpc.HTLC.prototype.getHashLock = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes hash_lock = 3;\n * This is a type-conversion wrapper around `getHashLock()`\n * @return {string}\n */\nproto.lnrpc.HTLC.prototype.getHashLock_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHashLock()));\n};\n\n\n/**\n * optional bytes hash_lock = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHashLock()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.HTLC.prototype.getHashLock_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHashLock()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.HTLC.prototype.setHashLock = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 expiration_height = 4;\n * @return {number}\n */\nproto.lnrpc.HTLC.prototype.getExpirationHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLC.prototype.setExpirationHeight = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelConstraints = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelConstraints, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelConstraints.displayName = 'proto.lnrpc.ChannelConstraints';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelConstraints.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelConstraints.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelConstraints} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelConstraints.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    csvDelay: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    chanReserveSat: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    dustLimitSat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    maxPendingAmtMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    minHtlcMsat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    maxAcceptedHtlcs: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelConstraints}\n */\nproto.lnrpc.ChannelConstraints.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelConstraints;\n  return proto.lnrpc.ChannelConstraints.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelConstraints} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelConstraints}\n */\nproto.lnrpc.ChannelConstraints.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCsvDelay(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setChanReserveSat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDustLimitSat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxPendingAmtMsat(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMinHtlcMsat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaxAcceptedHtlcs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelConstraints.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelConstraints.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelConstraints} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelConstraints.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCsvDelay();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getChanReserveSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getDustLimitSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getMaxPendingAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getMinHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getMaxAcceptedHtlcs();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 csv_delay = 1;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getCsvDelay = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setCsvDelay = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 chan_reserve_sat = 2;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setChanReserveSat = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 dust_limit_sat = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getDustLimitSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setDustLimitSat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 max_pending_amt_msat = 4;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getMaxPendingAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setMaxPendingAmtMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 min_htlc_msat = 5;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getMinHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setMinHtlcMsat = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 max_accepted_htlcs = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelConstraints.prototype.getMaxAcceptedHtlcs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelConstraints.prototype.setMaxAcceptedHtlcs = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Channel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Channel.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Channel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Channel.displayName = 'proto.lnrpc.Channel';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Channel.repeatedFields_ = [15];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Channel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Channel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Channel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Channel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    active: jspb.Message.getFieldWithDefault(msg, 1, false),\n    remotePubkey: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    channelPoint: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    chanId: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    localBalance: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    remoteBalance: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    commitFee: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    commitWeight: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    feePerKw: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    unsettledBalance: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    totalSatoshisSent: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    totalSatoshisReceived: jspb.Message.getFieldWithDefault(msg, 13, 0),\n    numUpdates: jspb.Message.getFieldWithDefault(msg, 14, 0),\n    pendingHtlcsList: jspb.Message.toObjectList(msg.getPendingHtlcsList(),\n    proto.lnrpc.HTLC.toObject, includeInstance),\n    csvDelay: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    pb_private: jspb.Message.getFieldWithDefault(msg, 17, false),\n    initiator: jspb.Message.getFieldWithDefault(msg, 18, false),\n    chanStatusFlags: jspb.Message.getFieldWithDefault(msg, 19, \"\"),\n    localChanReserveSat: jspb.Message.getFieldWithDefault(msg, 20, 0),\n    remoteChanReserveSat: jspb.Message.getFieldWithDefault(msg, 21, 0),\n    staticRemoteKey: jspb.Message.getFieldWithDefault(msg, 22, false),\n    commitmentType: jspb.Message.getFieldWithDefault(msg, 26, 0),\n    lifetime: jspb.Message.getFieldWithDefault(msg, 23, 0),\n    uptime: jspb.Message.getFieldWithDefault(msg, 24, 0),\n    closeAddress: jspb.Message.getFieldWithDefault(msg, 25, \"\"),\n    pushAmountSat: jspb.Message.getFieldWithDefault(msg, 27, 0),\n    thawHeight: jspb.Message.getFieldWithDefault(msg, 28, 0),\n    localConstraints: (f = msg.getLocalConstraints()) && proto.lnrpc.ChannelConstraints.toObject(includeInstance, f),\n    remoteConstraints: (f = msg.getRemoteConstraints()) && proto.lnrpc.ChannelConstraints.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Channel}\n */\nproto.lnrpc.Channel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Channel;\n  return proto.lnrpc.Channel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Channel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Channel}\n */\nproto.lnrpc.Channel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActive(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemotePubkey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelPoint(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalBalance(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRemoteBalance(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommitFee(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommitWeight(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeePerKw(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUnsettledBalance(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalSatoshisSent(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalSatoshisReceived(value);\n      break;\n    case 14:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNumUpdates(value);\n      break;\n    case 15:\n      var value = new proto.lnrpc.HTLC;\n      reader.readMessage(value,proto.lnrpc.HTLC.deserializeBinaryFromReader);\n      msg.addPendingHtlcs(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCsvDelay(value);\n      break;\n    case 17:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivate(value);\n      break;\n    case 18:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setInitiator(value);\n      break;\n    case 19:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChanStatusFlags(value);\n      break;\n    case 20:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalChanReserveSat(value);\n      break;\n    case 21:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRemoteChanReserveSat(value);\n      break;\n    case 22:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setStaticRemoteKey(value);\n      break;\n    case 26:\n      var value = /** @type {!proto.lnrpc.CommitmentType} */ (reader.readEnum());\n      msg.setCommitmentType(value);\n      break;\n    case 23:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLifetime(value);\n      break;\n    case 24:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUptime(value);\n      break;\n    case 25:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCloseAddress(value);\n      break;\n    case 27:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPushAmountSat(value);\n      break;\n    case 28:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setThawHeight(value);\n      break;\n    case 29:\n      var value = new proto.lnrpc.ChannelConstraints;\n      reader.readMessage(value,proto.lnrpc.ChannelConstraints.deserializeBinaryFromReader);\n      msg.setLocalConstraints(value);\n      break;\n    case 30:\n      var value = new proto.lnrpc.ChannelConstraints;\n      reader.readMessage(value,proto.lnrpc.ChannelConstraints.deserializeBinaryFromReader);\n      msg.setRemoteConstraints(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Channel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Channel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Channel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Channel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getActive();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getRemotePubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getChannelPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      4,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getLocalBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getRemoteBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getCommitFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getCommitWeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getFeePerKw();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n  f = message.getUnsettledBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getTotalSatoshisSent();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getTotalSatoshisReceived();\n  if (f !== 0) {\n    writer.writeInt64(\n      13,\n      f\n    );\n  }\n  f = message.getNumUpdates();\n  if (f !== 0) {\n    writer.writeUint64(\n      14,\n      f\n    );\n  }\n  f = message.getPendingHtlcsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      15,\n      f,\n      proto.lnrpc.HTLC.serializeBinaryToWriter\n    );\n  }\n  f = message.getCsvDelay();\n  if (f !== 0) {\n    writer.writeUint32(\n      16,\n      f\n    );\n  }\n  f = message.getPrivate();\n  if (f) {\n    writer.writeBool(\n      17,\n      f\n    );\n  }\n  f = message.getInitiator();\n  if (f) {\n    writer.writeBool(\n      18,\n      f\n    );\n  }\n  f = message.getChanStatusFlags();\n  if (f.length > 0) {\n    writer.writeString(\n      19,\n      f\n    );\n  }\n  f = message.getLocalChanReserveSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      20,\n      f\n    );\n  }\n  f = message.getRemoteChanReserveSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      21,\n      f\n    );\n  }\n  f = message.getStaticRemoteKey();\n  if (f) {\n    writer.writeBool(\n      22,\n      f\n    );\n  }\n  f = message.getCommitmentType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      26,\n      f\n    );\n  }\n  f = message.getLifetime();\n  if (f !== 0) {\n    writer.writeInt64(\n      23,\n      f\n    );\n  }\n  f = message.getUptime();\n  if (f !== 0) {\n    writer.writeInt64(\n      24,\n      f\n    );\n  }\n  f = message.getCloseAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      25,\n      f\n    );\n  }\n  f = message.getPushAmountSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      27,\n      f\n    );\n  }\n  f = message.getThawHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      28,\n      f\n    );\n  }\n  f = message.getLocalConstraints();\n  if (f != null) {\n    writer.writeMessage(\n      29,\n      f,\n      proto.lnrpc.ChannelConstraints.serializeBinaryToWriter\n    );\n  }\n  f = message.getRemoteConstraints();\n  if (f != null) {\n    writer.writeMessage(\n      30,\n      f,\n      proto.lnrpc.ChannelConstraints.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bool active = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Channel.prototype.getActive = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Channel.prototype.setActive = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string remote_pubkey = 2;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getRemotePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setRemotePubkey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string channel_point = 3;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getChannelPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setChannelPoint = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 chan_id = 4;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 capacity = 5;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 local_balance = 6;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getLocalBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setLocalBalance = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 remote_balance = 7;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getRemoteBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setRemoteBalance = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 commit_fee = 8;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getCommitFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setCommitFee = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 commit_weight = 9;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getCommitWeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setCommitWeight = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional int64 fee_per_kw = 10;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getFeePerKw = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setFeePerKw = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional int64 unsettled_balance = 11;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getUnsettledBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setUnsettledBalance = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional int64 total_satoshis_sent = 12;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getTotalSatoshisSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setTotalSatoshisSent = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional int64 total_satoshis_received = 13;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getTotalSatoshisReceived = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setTotalSatoshisReceived = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional uint64 num_updates = 14;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getNumUpdates = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setNumUpdates = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * repeated HTLC pending_htlcs = 15;\n * @return {!Array.<!proto.lnrpc.HTLC>}\n */\nproto.lnrpc.Channel.prototype.getPendingHtlcsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.HTLC>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.HTLC, 15));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.HTLC>} value */\nproto.lnrpc.Channel.prototype.setPendingHtlcsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 15, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.HTLC=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.HTLC}\n */\nproto.lnrpc.Channel.prototype.addPendingHtlcs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.lnrpc.HTLC, opt_index);\n};\n\n\nproto.lnrpc.Channel.prototype.clearPendingHtlcsList = function() {\n  this.setPendingHtlcsList([]);\n};\n\n\n/**\n * optional uint32 csv_delay = 16;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getCsvDelay = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setCsvDelay = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n/**\n * optional bool private = 17;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Channel.prototype.getPrivate = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 17, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Channel.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\n/**\n * optional bool initiator = 18;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Channel.prototype.getInitiator = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Channel.prototype.setInitiator = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\n/**\n * optional string chan_status_flags = 19;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getChanStatusFlags = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setChanStatusFlags = function(value) {\n  jspb.Message.setField(this, 19, value);\n};\n\n\n/**\n * optional int64 local_chan_reserve_sat = 20;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getLocalChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setLocalChanReserveSat = function(value) {\n  jspb.Message.setField(this, 20, value);\n};\n\n\n/**\n * optional int64 remote_chan_reserve_sat = 21;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getRemoteChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setRemoteChanReserveSat = function(value) {\n  jspb.Message.setField(this, 21, value);\n};\n\n\n/**\n * optional bool static_remote_key = 22;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Channel.prototype.getStaticRemoteKey = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 22, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Channel.prototype.setStaticRemoteKey = function(value) {\n  jspb.Message.setField(this, 22, value);\n};\n\n\n/**\n * optional CommitmentType commitment_type = 26;\n * @return {!proto.lnrpc.CommitmentType}\n */\nproto.lnrpc.Channel.prototype.getCommitmentType = function() {\n  return /** @type {!proto.lnrpc.CommitmentType} */ (jspb.Message.getFieldWithDefault(this, 26, 0));\n};\n\n\n/** @param {!proto.lnrpc.CommitmentType} value */\nproto.lnrpc.Channel.prototype.setCommitmentType = function(value) {\n  jspb.Message.setField(this, 26, value);\n};\n\n\n/**\n * optional int64 lifetime = 23;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getLifetime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setLifetime = function(value) {\n  jspb.Message.setField(this, 23, value);\n};\n\n\n/**\n * optional int64 uptime = 24;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getUptime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setUptime = function(value) {\n  jspb.Message.setField(this, 24, value);\n};\n\n\n/**\n * optional string close_address = 25;\n * @return {string}\n */\nproto.lnrpc.Channel.prototype.getCloseAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Channel.prototype.setCloseAddress = function(value) {\n  jspb.Message.setField(this, 25, value);\n};\n\n\n/**\n * optional uint64 push_amount_sat = 27;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getPushAmountSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setPushAmountSat = function(value) {\n  jspb.Message.setField(this, 27, value);\n};\n\n\n/**\n * optional uint32 thaw_height = 28;\n * @return {number}\n */\nproto.lnrpc.Channel.prototype.getThawHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Channel.prototype.setThawHeight = function(value) {\n  jspb.Message.setField(this, 28, value);\n};\n\n\n/**\n * optional ChannelConstraints local_constraints = 29;\n * @return {?proto.lnrpc.ChannelConstraints}\n */\nproto.lnrpc.Channel.prototype.getLocalConstraints = function() {\n  return /** @type{?proto.lnrpc.ChannelConstraints} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelConstraints, 29));\n};\n\n\n/** @param {?proto.lnrpc.ChannelConstraints|undefined} value */\nproto.lnrpc.Channel.prototype.setLocalConstraints = function(value) {\n  jspb.Message.setWrapperField(this, 29, value);\n};\n\n\nproto.lnrpc.Channel.prototype.clearLocalConstraints = function() {\n  this.setLocalConstraints(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Channel.prototype.hasLocalConstraints = function() {\n  return jspb.Message.getField(this, 29) != null;\n};\n\n\n/**\n * optional ChannelConstraints remote_constraints = 30;\n * @return {?proto.lnrpc.ChannelConstraints}\n */\nproto.lnrpc.Channel.prototype.getRemoteConstraints = function() {\n  return /** @type{?proto.lnrpc.ChannelConstraints} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelConstraints, 30));\n};\n\n\n/** @param {?proto.lnrpc.ChannelConstraints|undefined} value */\nproto.lnrpc.Channel.prototype.setRemoteConstraints = function(value) {\n  jspb.Message.setWrapperField(this, 30, value);\n};\n\n\nproto.lnrpc.Channel.prototype.clearRemoteConstraints = function() {\n  this.setRemoteConstraints(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Channel.prototype.hasRemoteConstraints = function() {\n  return jspb.Message.getField(this, 30) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListChannelsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListChannelsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListChannelsRequest.displayName = 'proto.lnrpc.ListChannelsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListChannelsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListChannelsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListChannelsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListChannelsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    activeOnly: jspb.Message.getFieldWithDefault(msg, 1, false),\n    inactiveOnly: jspb.Message.getFieldWithDefault(msg, 2, false),\n    publicOnly: jspb.Message.getFieldWithDefault(msg, 3, false),\n    privateOnly: jspb.Message.getFieldWithDefault(msg, 4, false),\n    peer: msg.getPeer_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListChannelsRequest}\n */\nproto.lnrpc.ListChannelsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListChannelsRequest;\n  return proto.lnrpc.ListChannelsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListChannelsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListChannelsRequest}\n */\nproto.lnrpc.ListChannelsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setActiveOnly(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setInactiveOnly(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPublicOnly(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivateOnly(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPeer(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListChannelsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListChannelsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListChannelsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListChannelsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getActiveOnly();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getInactiveOnly();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getPublicOnly();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getPrivateOnly();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getPeer_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool active_only = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getActiveOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListChannelsRequest.prototype.setActiveOnly = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool inactive_only = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getInactiveOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListChannelsRequest.prototype.setInactiveOnly = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool public_only = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPublicOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListChannelsRequest.prototype.setPublicOnly = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool private_only = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPrivateOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListChannelsRequest.prototype.setPrivateOnly = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bytes peer = 5;\n * @return {string}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPeer = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes peer = 5;\n * This is a type-conversion wrapper around `getPeer()`\n * @return {string}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPeer_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPeer()));\n};\n\n\n/**\n * optional bytes peer = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPeer()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListChannelsRequest.prototype.getPeer_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPeer()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ListChannelsRequest.prototype.setPeer = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListChannelsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListChannelsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListChannelsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListChannelsResponse.displayName = 'proto.lnrpc.ListChannelsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListChannelsResponse.repeatedFields_ = [11];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListChannelsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListChannelsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListChannelsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListChannelsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),\n    proto.lnrpc.Channel.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListChannelsResponse}\n */\nproto.lnrpc.ListChannelsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListChannelsResponse;\n  return proto.lnrpc.ListChannelsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListChannelsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListChannelsResponse}\n */\nproto.lnrpc.ListChannelsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 11:\n      var value = new proto.lnrpc.Channel;\n      reader.readMessage(value,proto.lnrpc.Channel.deserializeBinaryFromReader);\n      msg.addChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListChannelsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListChannelsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListChannelsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListChannelsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      11,\n      f,\n      proto.lnrpc.Channel.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Channel channels = 11;\n * @return {!Array.<!proto.lnrpc.Channel>}\n */\nproto.lnrpc.ListChannelsResponse.prototype.getChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Channel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Channel, 11));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Channel>} value */\nproto.lnrpc.ListChannelsResponse.prototype.setChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 11, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Channel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Channel}\n */\nproto.lnrpc.ListChannelsResponse.prototype.addChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.lnrpc.Channel, opt_index);\n};\n\n\nproto.lnrpc.ListChannelsResponse.prototype.clearChannelsList = function() {\n  this.setChannelsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelCloseSummary = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ChannelCloseSummary.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ChannelCloseSummary, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelCloseSummary.displayName = 'proto.lnrpc.ChannelCloseSummary';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ChannelCloseSummary.repeatedFields_ = [13];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelCloseSummary.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelCloseSummary} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelCloseSummary.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelPoint: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    chanId: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\n    chainHash: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    closingTxHash: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    remotePubkey: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    closeHeight: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    settledBalance: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    timeLockedBalance: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    closeType: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    openInitiator: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    closeInitiator: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    resolutionsList: jspb.Message.toObjectList(msg.getResolutionsList(),\n    proto.lnrpc.Resolution.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelCloseSummary}\n */\nproto.lnrpc.ChannelCloseSummary.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelCloseSummary;\n  return proto.lnrpc.ChannelCloseSummary.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelCloseSummary} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelCloseSummary}\n */\nproto.lnrpc.ChannelCloseSummary.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelPoint(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChainHash(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClosingTxHash(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemotePubkey(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCloseHeight(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSettledBalance(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimeLockedBalance(value);\n      break;\n    case 10:\n      var value = /** @type {!proto.lnrpc.ChannelCloseSummary.ClosureType} */ (reader.readEnum());\n      msg.setCloseType(value);\n      break;\n    case 11:\n      var value = /** @type {!proto.lnrpc.Initiator} */ (reader.readEnum());\n      msg.setOpenInitiator(value);\n      break;\n    case 12:\n      var value = /** @type {!proto.lnrpc.Initiator} */ (reader.readEnum());\n      msg.setCloseInitiator(value);\n      break;\n    case 13:\n      var value = new proto.lnrpc.Resolution;\n      reader.readMessage(value,proto.lnrpc.Resolution.deserializeBinaryFromReader);\n      msg.addResolutions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelCloseSummary.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelCloseSummary} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelCloseSummary.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      2,\n      f\n    );\n  }\n  f = message.getChainHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getClosingTxHash();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getRemotePubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getCloseHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      7,\n      f\n    );\n  }\n  f = message.getSettledBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getTimeLockedBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getCloseType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getOpenInitiator();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      11,\n      f\n    );\n  }\n  f = message.getCloseInitiator();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      12,\n      f\n    );\n  }\n  f = message.getResolutionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      13,\n      f,\n      proto.lnrpc.Resolution.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ChannelCloseSummary.ClosureType = {\n  COOPERATIVE_CLOSE: 0,\n  LOCAL_FORCE_CLOSE: 1,\n  REMOTE_FORCE_CLOSE: 2,\n  BREACH_CLOSE: 3,\n  FUNDING_CANCELED: 4,\n  ABANDONED: 5\n};\n\n/**\n * optional string channel_point = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getChannelPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setChannelPoint = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string chain_hash = 3;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getChainHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setChainHash = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string closing_tx_hash = 4;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getClosingTxHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setClosingTxHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string remote_pubkey = 5;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getRemotePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setRemotePubkey = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 capacity = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint32 close_height = 7;\n * @return {number}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getCloseHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setCloseHeight = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 settled_balance = 8;\n * @return {number}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getSettledBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setSettledBalance = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 time_locked_balance = 9;\n * @return {number}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getTimeLockedBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setTimeLockedBalance = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional ClosureType close_type = 10;\n * @return {!proto.lnrpc.ChannelCloseSummary.ClosureType}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getCloseType = function() {\n  return /** @type {!proto.lnrpc.ChannelCloseSummary.ClosureType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {!proto.lnrpc.ChannelCloseSummary.ClosureType} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setCloseType = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional Initiator open_initiator = 11;\n * @return {!proto.lnrpc.Initiator}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getOpenInitiator = function() {\n  return /** @type {!proto.lnrpc.Initiator} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {!proto.lnrpc.Initiator} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setOpenInitiator = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional Initiator close_initiator = 12;\n * @return {!proto.lnrpc.Initiator}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getCloseInitiator = function() {\n  return /** @type {!proto.lnrpc.Initiator} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {!proto.lnrpc.Initiator} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setCloseInitiator = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * repeated Resolution resolutions = 13;\n * @return {!Array.<!proto.lnrpc.Resolution>}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.getResolutionsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Resolution>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Resolution, 13));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Resolution>} value */\nproto.lnrpc.ChannelCloseSummary.prototype.setResolutionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 13, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Resolution=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Resolution}\n */\nproto.lnrpc.ChannelCloseSummary.prototype.addResolutions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.lnrpc.Resolution, opt_index);\n};\n\n\nproto.lnrpc.ChannelCloseSummary.prototype.clearResolutionsList = function() {\n  this.setResolutionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Resolution = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Resolution, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Resolution.displayName = 'proto.lnrpc.Resolution';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Resolution.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Resolution.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Resolution} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Resolution.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    resolutionType: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    outcome: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    outpoint: (f = msg.getOutpoint()) && proto.lnrpc.OutPoint.toObject(includeInstance, f),\n    amountSat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    sweepTxid: jspb.Message.getFieldWithDefault(msg, 5, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Resolution}\n */\nproto.lnrpc.Resolution.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Resolution;\n  return proto.lnrpc.Resolution.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Resolution} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Resolution}\n */\nproto.lnrpc.Resolution.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lnrpc.ResolutionType} */ (reader.readEnum());\n      msg.setResolutionType(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.lnrpc.ResolutionOutcome} */ (reader.readEnum());\n      msg.setOutcome(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.OutPoint;\n      reader.readMessage(value,proto.lnrpc.OutPoint.deserializeBinaryFromReader);\n      msg.setOutpoint(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmountSat(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSweepTxid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Resolution.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Resolution.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Resolution} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Resolution.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getResolutionType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getOutcome();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getOutpoint();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.OutPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getAmountSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getSweepTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ResolutionType resolution_type = 1;\n * @return {!proto.lnrpc.ResolutionType}\n */\nproto.lnrpc.Resolution.prototype.getResolutionType = function() {\n  return /** @type {!proto.lnrpc.ResolutionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.ResolutionType} value */\nproto.lnrpc.Resolution.prototype.setResolutionType = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional ResolutionOutcome outcome = 2;\n * @return {!proto.lnrpc.ResolutionOutcome}\n */\nproto.lnrpc.Resolution.prototype.getOutcome = function() {\n  return /** @type {!proto.lnrpc.ResolutionOutcome} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {!proto.lnrpc.ResolutionOutcome} value */\nproto.lnrpc.Resolution.prototype.setOutcome = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional OutPoint outpoint = 3;\n * @return {?proto.lnrpc.OutPoint}\n */\nproto.lnrpc.Resolution.prototype.getOutpoint = function() {\n  return /** @type{?proto.lnrpc.OutPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.OutPoint, 3));\n};\n\n\n/** @param {?proto.lnrpc.OutPoint|undefined} value */\nproto.lnrpc.Resolution.prototype.setOutpoint = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.Resolution.prototype.clearOutpoint = function() {\n  this.setOutpoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Resolution.prototype.hasOutpoint = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint64 amount_sat = 4;\n * @return {number}\n */\nproto.lnrpc.Resolution.prototype.getAmountSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Resolution.prototype.setAmountSat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string sweep_txid = 5;\n * @return {string}\n */\nproto.lnrpc.Resolution.prototype.getSweepTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Resolution.prototype.setSweepTxid = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ClosedChannelsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ClosedChannelsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ClosedChannelsRequest.displayName = 'proto.lnrpc.ClosedChannelsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ClosedChannelsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ClosedChannelsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    cooperative: jspb.Message.getFieldWithDefault(msg, 1, false),\n    localForce: jspb.Message.getFieldWithDefault(msg, 2, false),\n    remoteForce: jspb.Message.getFieldWithDefault(msg, 3, false),\n    breach: jspb.Message.getFieldWithDefault(msg, 4, false),\n    fundingCanceled: jspb.Message.getFieldWithDefault(msg, 5, false),\n    abandoned: jspb.Message.getFieldWithDefault(msg, 6, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ClosedChannelsRequest}\n */\nproto.lnrpc.ClosedChannelsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ClosedChannelsRequest;\n  return proto.lnrpc.ClosedChannelsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ClosedChannelsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ClosedChannelsRequest}\n */\nproto.lnrpc.ClosedChannelsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setCooperative(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setLocalForce(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRemoteForce(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setBreach(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setFundingCanceled(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setAbandoned(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ClosedChannelsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ClosedChannelsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCooperative();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getLocalForce();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getRemoteForce();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getBreach();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getFundingCanceled();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getAbandoned();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool cooperative = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getCooperative = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setCooperative = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool local_force = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getLocalForce = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setLocalForce = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool remote_force = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getRemoteForce = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setRemoteForce = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool breach = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getBreach = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setBreach = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bool funding_canceled = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getFundingCanceled = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setFundingCanceled = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional bool abandoned = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ClosedChannelsRequest.prototype.getAbandoned = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ClosedChannelsRequest.prototype.setAbandoned = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ClosedChannelsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ClosedChannelsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ClosedChannelsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ClosedChannelsResponse.displayName = 'proto.lnrpc.ClosedChannelsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ClosedChannelsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ClosedChannelsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ClosedChannelsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ClosedChannelsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),\n    proto.lnrpc.ChannelCloseSummary.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ClosedChannelsResponse}\n */\nproto.lnrpc.ClosedChannelsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ClosedChannelsResponse;\n  return proto.lnrpc.ClosedChannelsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ClosedChannelsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ClosedChannelsResponse}\n */\nproto.lnrpc.ClosedChannelsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelCloseSummary;\n      reader.readMessage(value,proto.lnrpc.ChannelCloseSummary.deserializeBinaryFromReader);\n      msg.addChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ClosedChannelsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ClosedChannelsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ClosedChannelsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelCloseSummary.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ChannelCloseSummary channels = 1;\n * @return {!Array.<!proto.lnrpc.ChannelCloseSummary>}\n */\nproto.lnrpc.ClosedChannelsResponse.prototype.getChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelCloseSummary>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelCloseSummary, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelCloseSummary>} value */\nproto.lnrpc.ClosedChannelsResponse.prototype.setChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelCloseSummary=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelCloseSummary}\n */\nproto.lnrpc.ClosedChannelsResponse.prototype.addChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ChannelCloseSummary, opt_index);\n};\n\n\nproto.lnrpc.ClosedChannelsResponse.prototype.clearChannelsList = function() {\n  this.setChannelsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Peer = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Peer.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Peer, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Peer.displayName = 'proto.lnrpc.Peer';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Peer.repeatedFields_ = [12];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Peer.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Peer.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Peer} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Peer.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    address: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    bytesSent: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    bytesRecv: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    satSent: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    satRecv: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    inbound: jspb.Message.getFieldWithDefault(msg, 8, false),\n    pingTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    syncType: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : [],\n    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),\n    proto.lnrpc.TimestampedError.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Peer}\n */\nproto.lnrpc.Peer.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Peer;\n  return proto.lnrpc.Peer.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Peer} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Peer}\n */\nproto.lnrpc.Peer.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBytesSent(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBytesRecv(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatSent(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatRecv(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setInbound(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPingTime(value);\n      break;\n    case 10:\n      var value = /** @type {!proto.lnrpc.Peer.SyncType} */ (reader.readEnum());\n      msg.setSyncType(value);\n      break;\n    case 11:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    case 12:\n      var value = new proto.lnrpc.TimestampedError;\n      reader.readMessage(value,proto.lnrpc.TimestampedError.deserializeBinaryFromReader);\n      msg.addErrors(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Peer.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Peer.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Peer} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Peer.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getBytesSent();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getBytesRecv();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getSatSent();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getSatRecv();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getInbound();\n  if (f) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n  f = message.getPingTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getSyncType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n  f = message.getErrorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      12,\n      f,\n      proto.lnrpc.TimestampedError.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Peer.SyncType = {\n  UNKNOWN_SYNC: 0,\n  ACTIVE_SYNC: 1,\n  PASSIVE_SYNC: 2\n};\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.Peer.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Peer.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string address = 3;\n * @return {string}\n */\nproto.lnrpc.Peer.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Peer.prototype.setAddress = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 bytes_sent = 4;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getBytesSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setBytesSent = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 bytes_recv = 5;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getBytesRecv = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setBytesRecv = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 sat_sent = 6;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getSatSent = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setSatSent = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 sat_recv = 7;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getSatRecv = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setSatRecv = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional bool inbound = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Peer.prototype.getInbound = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Peer.prototype.setInbound = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 ping_time = 9;\n * @return {number}\n */\nproto.lnrpc.Peer.prototype.getPingTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Peer.prototype.setPingTime = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional SyncType sync_type = 10;\n * @return {!proto.lnrpc.Peer.SyncType}\n */\nproto.lnrpc.Peer.prototype.getSyncType = function() {\n  return /** @type {!proto.lnrpc.Peer.SyncType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {!proto.lnrpc.Peer.SyncType} value */\nproto.lnrpc.Peer.prototype.setSyncType = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * map<uint32, Feature> features = 11;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.Peer.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 11, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.Peer.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n/**\n * repeated TimestampedError errors = 12;\n * @return {!Array.<!proto.lnrpc.TimestampedError>}\n */\nproto.lnrpc.Peer.prototype.getErrorsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.TimestampedError>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.TimestampedError, 12));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.TimestampedError>} value */\nproto.lnrpc.Peer.prototype.setErrorsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 12, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.TimestampedError=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.TimestampedError}\n */\nproto.lnrpc.Peer.prototype.addErrors = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.lnrpc.TimestampedError, opt_index);\n};\n\n\nproto.lnrpc.Peer.prototype.clearErrorsList = function() {\n  this.setErrorsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.TimestampedError = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.TimestampedError, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.TimestampedError.displayName = 'proto.lnrpc.TimestampedError';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.TimestampedError.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.TimestampedError.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.TimestampedError} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.TimestampedError.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    error: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.TimestampedError}\n */\nproto.lnrpc.TimestampedError.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.TimestampedError;\n  return proto.lnrpc.TimestampedError.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.TimestampedError} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.TimestampedError}\n */\nproto.lnrpc.TimestampedError.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setTimestamp(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.TimestampedError.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.TimestampedError.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.TimestampedError} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.TimestampedError.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getError();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 timestamp = 1;\n * @return {number}\n */\nproto.lnrpc.TimestampedError.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.TimestampedError.prototype.setTimestamp = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string error = 2;\n * @return {string}\n */\nproto.lnrpc.TimestampedError.prototype.getError = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.TimestampedError.prototype.setError = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListPeersRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListPeersRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListPeersRequest.displayName = 'proto.lnrpc.ListPeersRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListPeersRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListPeersRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListPeersRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPeersRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    latestError: jspb.Message.getFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListPeersRequest}\n */\nproto.lnrpc.ListPeersRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListPeersRequest;\n  return proto.lnrpc.ListPeersRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListPeersRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListPeersRequest}\n */\nproto.lnrpc.ListPeersRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setLatestError(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListPeersRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListPeersRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListPeersRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPeersRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLatestError();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool latest_error = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListPeersRequest.prototype.getLatestError = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListPeersRequest.prototype.setLatestError = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListPeersResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListPeersResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListPeersResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListPeersResponse.displayName = 'proto.lnrpc.ListPeersResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListPeersResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListPeersResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListPeersResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListPeersResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPeersResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    peersList: jspb.Message.toObjectList(msg.getPeersList(),\n    proto.lnrpc.Peer.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListPeersResponse}\n */\nproto.lnrpc.ListPeersResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListPeersResponse;\n  return proto.lnrpc.ListPeersResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListPeersResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListPeersResponse}\n */\nproto.lnrpc.ListPeersResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Peer;\n      reader.readMessage(value,proto.lnrpc.Peer.deserializeBinaryFromReader);\n      msg.addPeers(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListPeersResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListPeersResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListPeersResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPeersResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPeersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Peer.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Peer peers = 1;\n * @return {!Array.<!proto.lnrpc.Peer>}\n */\nproto.lnrpc.ListPeersResponse.prototype.getPeersList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Peer>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Peer, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Peer>} value */\nproto.lnrpc.ListPeersResponse.prototype.setPeersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Peer=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Peer}\n */\nproto.lnrpc.ListPeersResponse.prototype.addPeers = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Peer, opt_index);\n};\n\n\nproto.lnrpc.ListPeersResponse.prototype.clearPeersList = function() {\n  this.setPeersList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PeerEventSubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PeerEventSubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PeerEventSubscription.displayName = 'proto.lnrpc.PeerEventSubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PeerEventSubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PeerEventSubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PeerEventSubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PeerEventSubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PeerEventSubscription}\n */\nproto.lnrpc.PeerEventSubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PeerEventSubscription;\n  return proto.lnrpc.PeerEventSubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PeerEventSubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PeerEventSubscription}\n */\nproto.lnrpc.PeerEventSubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PeerEventSubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PeerEventSubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PeerEventSubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PeerEventSubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PeerEvent = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PeerEvent, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PeerEvent.displayName = 'proto.lnrpc.PeerEvent';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PeerEvent.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PeerEvent.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PeerEvent} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PeerEvent.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    type: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PeerEvent}\n */\nproto.lnrpc.PeerEvent.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PeerEvent;\n  return proto.lnrpc.PeerEvent.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PeerEvent} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PeerEvent}\n */\nproto.lnrpc.PeerEvent.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.lnrpc.PeerEvent.EventType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PeerEvent.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PeerEvent.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PeerEvent} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PeerEvent.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.PeerEvent.EventType = {\n  PEER_ONLINE: 0,\n  PEER_OFFLINE: 1\n};\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.PeerEvent.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PeerEvent.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional EventType type = 2;\n * @return {!proto.lnrpc.PeerEvent.EventType}\n */\nproto.lnrpc.PeerEvent.prototype.getType = function() {\n  return /** @type {!proto.lnrpc.PeerEvent.EventType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {!proto.lnrpc.PeerEvent.EventType} value */\nproto.lnrpc.PeerEvent.prototype.setType = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GetInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetInfoRequest.displayName = 'proto.lnrpc.GetInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetInfoRequest}\n */\nproto.lnrpc.GetInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetInfoRequest;\n  return proto.lnrpc.GetInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetInfoRequest}\n */\nproto.lnrpc.GetInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.GetInfoResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.GetInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetInfoResponse.displayName = 'proto.lnrpc.GetInfoResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.GetInfoResponse.repeatedFields_ = [16,12];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetInfoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetInfoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetInfoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    version: jspb.Message.getFieldWithDefault(msg, 14, \"\"),\n    commitHash: jspb.Message.getFieldWithDefault(msg, 20, \"\"),\n    identityPubkey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    alias: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    color: jspb.Message.getFieldWithDefault(msg, 17, \"\"),\n    numPendingChannels: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    numActiveChannels: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    numInactiveChannels: jspb.Message.getFieldWithDefault(msg, 15, 0),\n    numPeers: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    blockHeight: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    blockHash: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    bestHeaderTimestamp: jspb.Message.getFieldWithDefault(msg, 13, 0),\n    syncedToChain: jspb.Message.getFieldWithDefault(msg, 9, false),\n    syncedToGraph: jspb.Message.getFieldWithDefault(msg, 18, false),\n    testnet: jspb.Message.getFieldWithDefault(msg, 10, false),\n    chainsList: jspb.Message.toObjectList(msg.getChainsList(),\n    proto.lnrpc.Chain.toObject, includeInstance),\n    urisList: jspb.Message.getRepeatedField(msg, 12),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetInfoResponse}\n */\nproto.lnrpc.GetInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetInfoResponse;\n  return proto.lnrpc.GetInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetInfoResponse}\n */\nproto.lnrpc.GetInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 14:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 20:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCommitHash(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIdentityPubkey(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    case 17:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setColor(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumPendingChannels(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumActiveChannels(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumInactiveChannels(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumPeers(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setBlockHeight(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBlockHash(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBestHeaderTimestamp(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSyncedToChain(value);\n      break;\n    case 18:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSyncedToGraph(value);\n      break;\n    case 10:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setTestnet(value);\n      break;\n    case 16:\n      var value = new proto.lnrpc.Chain;\n      reader.readMessage(value,proto.lnrpc.Chain.deserializeBinaryFromReader);\n      msg.addChains(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addUris(value);\n      break;\n    case 19:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      14,\n      f\n    );\n  }\n  f = message.getCommitHash();\n  if (f.length > 0) {\n    writer.writeString(\n      20,\n      f\n    );\n  }\n  f = message.getIdentityPubkey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getColor();\n  if (f.length > 0) {\n    writer.writeString(\n      17,\n      f\n    );\n  }\n  f = message.getNumPendingChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getNumActiveChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getNumInactiveChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      15,\n      f\n    );\n  }\n  f = message.getNumPeers();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getBlockHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n  f = message.getBlockHash();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getBestHeaderTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      13,\n      f\n    );\n  }\n  f = message.getSyncedToChain();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n  f = message.getSyncedToGraph();\n  if (f) {\n    writer.writeBool(\n      18,\n      f\n    );\n  }\n  f = message.getTestnet();\n  if (f) {\n    writer.writeBool(\n      10,\n      f\n    );\n  }\n  f = message.getChainsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      16,\n      f,\n      proto.lnrpc.Chain.serializeBinaryToWriter\n    );\n  }\n  f = message.getUrisList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      12,\n      f\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(19, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * optional string version = 14;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setVersion = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * optional string commit_hash = 20;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getCommitHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setCommitHash = function(value) {\n  jspb.Message.setField(this, 20, value);\n};\n\n\n/**\n * optional string identity_pubkey = 1;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getIdentityPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setIdentityPubkey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string alias = 2;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setAlias = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string color = 17;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getColor = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setColor = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\n/**\n * optional uint32 num_pending_channels = 3;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getNumPendingChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setNumPendingChannels = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 num_active_channels = 4;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getNumActiveChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setNumActiveChannels = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 num_inactive_channels = 15;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getNumInactiveChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setNumInactiveChannels = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * optional uint32 num_peers = 5;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getNumPeers = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setNumPeers = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 block_height = 6;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setBlockHeight = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string block_hash = 8;\n * @return {string}\n */\nproto.lnrpc.GetInfoResponse.prototype.getBlockHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.GetInfoResponse.prototype.setBlockHash = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 best_header_timestamp = 13;\n * @return {number}\n */\nproto.lnrpc.GetInfoResponse.prototype.getBestHeaderTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetInfoResponse.prototype.setBestHeaderTimestamp = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional bool synced_to_chain = 9;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetInfoResponse.prototype.getSyncedToChain = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetInfoResponse.prototype.setSyncedToChain = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional bool synced_to_graph = 18;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetInfoResponse.prototype.getSyncedToGraph = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetInfoResponse.prototype.setSyncedToGraph = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\n/**\n * optional bool testnet = 10;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetInfoResponse.prototype.getTestnet = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetInfoResponse.prototype.setTestnet = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * repeated Chain chains = 16;\n * @return {!Array.<!proto.lnrpc.Chain>}\n */\nproto.lnrpc.GetInfoResponse.prototype.getChainsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Chain>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Chain, 16));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Chain>} value */\nproto.lnrpc.GetInfoResponse.prototype.setChainsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 16, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Chain=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Chain}\n */\nproto.lnrpc.GetInfoResponse.prototype.addChains = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.lnrpc.Chain, opt_index);\n};\n\n\nproto.lnrpc.GetInfoResponse.prototype.clearChainsList = function() {\n  this.setChainsList([]);\n};\n\n\n/**\n * repeated string uris = 12;\n * @return {!Array.<string>}\n */\nproto.lnrpc.GetInfoResponse.prototype.getUrisList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 12));\n};\n\n\n/** @param {!Array.<string>} value */\nproto.lnrpc.GetInfoResponse.prototype.setUrisList = function(value) {\n  jspb.Message.setField(this, 12, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.lnrpc.GetInfoResponse.prototype.addUris = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 12, value, opt_index);\n};\n\n\nproto.lnrpc.GetInfoResponse.prototype.clearUrisList = function() {\n  this.setUrisList([]);\n};\n\n\n/**\n * map<uint32, Feature> features = 19;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.GetInfoResponse.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 19, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.GetInfoResponse.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetRecoveryInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GetRecoveryInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetRecoveryInfoRequest.displayName = 'proto.lnrpc.GetRecoveryInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetRecoveryInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetRecoveryInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetRecoveryInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetRecoveryInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetRecoveryInfoRequest}\n */\nproto.lnrpc.GetRecoveryInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetRecoveryInfoRequest;\n  return proto.lnrpc.GetRecoveryInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetRecoveryInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetRecoveryInfoRequest}\n */\nproto.lnrpc.GetRecoveryInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetRecoveryInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetRecoveryInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetRecoveryInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetRecoveryInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GetRecoveryInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GetRecoveryInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GetRecoveryInfoResponse.displayName = 'proto.lnrpc.GetRecoveryInfoResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GetRecoveryInfoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GetRecoveryInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetRecoveryInfoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    recoveryMode: jspb.Message.getFieldWithDefault(msg, 1, false),\n    recoveryFinished: jspb.Message.getFieldWithDefault(msg, 2, false),\n    progress: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GetRecoveryInfoResponse}\n */\nproto.lnrpc.GetRecoveryInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GetRecoveryInfoResponse;\n  return proto.lnrpc.GetRecoveryInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GetRecoveryInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GetRecoveryInfoResponse}\n */\nproto.lnrpc.GetRecoveryInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRecoveryMode(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRecoveryFinished(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setProgress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GetRecoveryInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GetRecoveryInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GetRecoveryInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRecoveryMode();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getRecoveryFinished();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getProgress();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool recovery_mode = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.getRecoveryMode = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.setRecoveryMode = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool recovery_finished = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.getRecoveryFinished = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.setRecoveryFinished = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional double progress = 3;\n * @return {number}\n */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.getProgress = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.GetRecoveryInfoResponse.prototype.setProgress = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Chain = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Chain, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Chain.displayName = 'proto.lnrpc.Chain';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Chain.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Chain.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Chain} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Chain.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chain: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    network: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Chain}\n */\nproto.lnrpc.Chain.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Chain;\n  return proto.lnrpc.Chain.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Chain} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Chain}\n */\nproto.lnrpc.Chain.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChain(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNetwork(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Chain.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Chain.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Chain} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Chain.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChain();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getNetwork();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string chain = 1;\n * @return {string}\n */\nproto.lnrpc.Chain.prototype.getChain = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Chain.prototype.setChain = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string network = 2;\n * @return {string}\n */\nproto.lnrpc.Chain.prototype.getNetwork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Chain.prototype.setNetwork = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ConfirmationUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ConfirmationUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ConfirmationUpdate.displayName = 'proto.lnrpc.ConfirmationUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ConfirmationUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ConfirmationUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConfirmationUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    blockSha: msg.getBlockSha_asB64(),\n    blockHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    numConfsLeft: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ConfirmationUpdate}\n */\nproto.lnrpc.ConfirmationUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ConfirmationUpdate;\n  return proto.lnrpc.ConfirmationUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ConfirmationUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ConfirmationUpdate}\n */\nproto.lnrpc.ConfirmationUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBlockSha(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlockHeight(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumConfsLeft(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ConfirmationUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ConfirmationUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ConfirmationUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBlockSha_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBlockHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getNumConfsLeft();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes block_sha = 1;\n * @return {string}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getBlockSha = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes block_sha = 1;\n * This is a type-conversion wrapper around `getBlockSha()`\n * @return {string}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getBlockSha_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBlockSha()));\n};\n\n\n/**\n * optional bytes block_sha = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBlockSha()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getBlockSha_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBlockSha()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ConfirmationUpdate.prototype.setBlockSha = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 block_height = 2;\n * @return {number}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getBlockHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ConfirmationUpdate.prototype.setBlockHeight = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 num_confs_left = 3;\n * @return {number}\n */\nproto.lnrpc.ConfirmationUpdate.prototype.getNumConfsLeft = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ConfirmationUpdate.prototype.setNumConfsLeft = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelOpenUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelOpenUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelOpenUpdate.displayName = 'proto.lnrpc.ChannelOpenUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelOpenUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelOpenUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelOpenUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelOpenUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelPoint: (f = msg.getChannelPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelOpenUpdate}\n */\nproto.lnrpc.ChannelOpenUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelOpenUpdate;\n  return proto.lnrpc.ChannelOpenUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelOpenUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelOpenUpdate}\n */\nproto.lnrpc.ChannelOpenUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChannelPoint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelOpenUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelOpenUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelOpenUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelOpenUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint channel_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelOpenUpdate.prototype.getChannelPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelOpenUpdate.prototype.setChannelPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ChannelOpenUpdate.prototype.clearChannelPoint = function() {\n  this.setChannelPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelOpenUpdate.prototype.hasChannelPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelCloseUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelCloseUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelCloseUpdate.displayName = 'proto.lnrpc.ChannelCloseUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelCloseUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelCloseUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelCloseUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    closingTxid: msg.getClosingTxid_asB64(),\n    success: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelCloseUpdate}\n */\nproto.lnrpc.ChannelCloseUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelCloseUpdate;\n  return proto.lnrpc.ChannelCloseUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelCloseUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelCloseUpdate}\n */\nproto.lnrpc.ChannelCloseUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setClosingTxid(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSuccess(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelCloseUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelCloseUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelCloseUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getClosingTxid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getSuccess();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes closing_txid = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.getClosingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes closing_txid = 1;\n * This is a type-conversion wrapper around `getClosingTxid()`\n * @return {string}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.getClosingTxid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getClosingTxid()));\n};\n\n\n/**\n * optional bytes closing_txid = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getClosingTxid()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.getClosingTxid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getClosingTxid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelCloseUpdate.prototype.setClosingTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool success = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ChannelCloseUpdate.prototype.getSuccess = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ChannelCloseUpdate.prototype.setSuccess = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.CloseChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.CloseChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.CloseChannelRequest.displayName = 'proto.lnrpc.CloseChannelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.CloseChannelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.CloseChannelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.CloseChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CloseChannelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelPoint: (f = msg.getChannelPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    force: jspb.Message.getFieldWithDefault(msg, 2, false),\n    targetConf: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    satPerByte: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    deliveryAddress: jspb.Message.getFieldWithDefault(msg, 5, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.CloseChannelRequest}\n */\nproto.lnrpc.CloseChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.CloseChannelRequest;\n  return proto.lnrpc.CloseChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.CloseChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.CloseChannelRequest}\n */\nproto.lnrpc.CloseChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChannelPoint(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setForce(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatPerByte(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeliveryAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.CloseChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.CloseChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.CloseChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CloseChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getForce();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getDeliveryAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint channel_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getChannelPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.CloseChannelRequest.prototype.setChannelPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.CloseChannelRequest.prototype.clearChannelPoint = function() {\n  this.setChannelPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.CloseChannelRequest.prototype.hasChannelPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bool force = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getForce = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.CloseChannelRequest.prototype.setForce = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int32 target_conf = 3;\n * @return {number}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.CloseChannelRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 sat_per_byte = 4;\n * @return {number}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.CloseChannelRequest.prototype.setSatPerByte = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string delivery_address = 5;\n * @return {string}\n */\nproto.lnrpc.CloseChannelRequest.prototype.getDeliveryAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.CloseChannelRequest.prototype.setDeliveryAddress = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.CloseStatusUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.CloseStatusUpdate.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.CloseStatusUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.CloseStatusUpdate.displayName = 'proto.lnrpc.CloseStatusUpdate';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.CloseStatusUpdate.oneofGroups_ = [[1,3]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.CloseStatusUpdate.UpdateCase = {\n  UPDATE_NOT_SET: 0,\n  CLOSE_PENDING: 1,\n  CHAN_CLOSE: 3\n};\n\n/**\n * @return {proto.lnrpc.CloseStatusUpdate.UpdateCase}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.getUpdateCase = function() {\n  return /** @type {proto.lnrpc.CloseStatusUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.CloseStatusUpdate.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.CloseStatusUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.CloseStatusUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CloseStatusUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    closePending: (f = msg.getClosePending()) && proto.lnrpc.PendingUpdate.toObject(includeInstance, f),\n    chanClose: (f = msg.getChanClose()) && proto.lnrpc.ChannelCloseUpdate.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.CloseStatusUpdate}\n */\nproto.lnrpc.CloseStatusUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.CloseStatusUpdate;\n  return proto.lnrpc.CloseStatusUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.CloseStatusUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.CloseStatusUpdate}\n */\nproto.lnrpc.CloseStatusUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingUpdate;\n      reader.readMessage(value,proto.lnrpc.PendingUpdate.deserializeBinaryFromReader);\n      msg.setClosePending(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ChannelCloseUpdate;\n      reader.readMessage(value,proto.lnrpc.ChannelCloseUpdate.deserializeBinaryFromReader);\n      msg.setChanClose(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.CloseStatusUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.CloseStatusUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.CloseStatusUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getClosePending();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getChanClose();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.ChannelCloseUpdate.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PendingUpdate close_pending = 1;\n * @return {?proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.getClosePending = function() {\n  return /** @type{?proto.lnrpc.PendingUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingUpdate, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingUpdate|undefined} value */\nproto.lnrpc.CloseStatusUpdate.prototype.setClosePending = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.CloseStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.CloseStatusUpdate.prototype.clearClosePending = function() {\n  this.setClosePending(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.hasClosePending = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ChannelCloseUpdate chan_close = 3;\n * @return {?proto.lnrpc.ChannelCloseUpdate}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.getChanClose = function() {\n  return /** @type{?proto.lnrpc.ChannelCloseUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelCloseUpdate, 3));\n};\n\n\n/** @param {?proto.lnrpc.ChannelCloseUpdate|undefined} value */\nproto.lnrpc.CloseStatusUpdate.prototype.setChanClose = function(value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.lnrpc.CloseStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.CloseStatusUpdate.prototype.clearChanClose = function() {\n  this.setChanClose(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.CloseStatusUpdate.prototype.hasChanClose = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingUpdate.displayName = 'proto.lnrpc.PendingUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txid: msg.getTxid_asB64(),\n    outputIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.PendingUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingUpdate;\n  return proto.lnrpc.PendingUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.PendingUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTxid(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setOutputIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOutputIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes txid = 1;\n * @return {string}\n */\nproto.lnrpc.PendingUpdate.prototype.getTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes txid = 1;\n * This is a type-conversion wrapper around `getTxid()`\n * @return {string}\n */\nproto.lnrpc.PendingUpdate.prototype.getTxid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTxid()));\n};\n\n\n/**\n * optional bytes txid = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxid()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingUpdate.prototype.getTxid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTxid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PendingUpdate.prototype.setTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint32 output_index = 2;\n * @return {number}\n */\nproto.lnrpc.PendingUpdate.prototype.getOutputIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingUpdate.prototype.setOutputIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ReadyForPsbtFunding = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ReadyForPsbtFunding, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ReadyForPsbtFunding.displayName = 'proto.lnrpc.ReadyForPsbtFunding';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ReadyForPsbtFunding.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ReadyForPsbtFunding} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ReadyForPsbtFunding.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fundingAddress: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    fundingAmount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    psbt: msg.getPsbt_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ReadyForPsbtFunding}\n */\nproto.lnrpc.ReadyForPsbtFunding.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ReadyForPsbtFunding;\n  return proto.lnrpc.ReadyForPsbtFunding.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ReadyForPsbtFunding} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ReadyForPsbtFunding}\n */\nproto.lnrpc.ReadyForPsbtFunding.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFundingAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFundingAmount(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPsbt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ReadyForPsbtFunding.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ReadyForPsbtFunding} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ReadyForPsbtFunding.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFundingAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getFundingAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getPsbt_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string funding_address = 1;\n * @return {string}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getFundingAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ReadyForPsbtFunding.prototype.setFundingAddress = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 funding_amount = 2;\n * @return {number}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getFundingAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ReadyForPsbtFunding.prototype.setFundingAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bytes psbt = 3;\n * @return {string}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getPsbt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes psbt = 3;\n * This is a type-conversion wrapper around `getPsbt()`\n * @return {string}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getPsbt_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPsbt()));\n};\n\n\n/**\n * optional bytes psbt = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPsbt()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ReadyForPsbtFunding.prototype.getPsbt_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPsbt()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ReadyForPsbtFunding.prototype.setPsbt = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.OpenChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.OpenChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.OpenChannelRequest.displayName = 'proto.lnrpc.OpenChannelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.OpenChannelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.OpenChannelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.OpenChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OpenChannelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodePubkey: msg.getNodePubkey_asB64(),\n    nodePubkeyString: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    localFundingAmount: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    pushSat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    targetConf: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    satPerByte: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    pb_private: jspb.Message.getFieldWithDefault(msg, 8, false),\n    minHtlcMsat: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    remoteCsvDelay: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    minConfs: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    spendUnconfirmed: jspb.Message.getFieldWithDefault(msg, 12, false),\n    closeAddress: jspb.Message.getFieldWithDefault(msg, 13, \"\"),\n    fundingShim: (f = msg.getFundingShim()) && proto.lnrpc.FundingShim.toObject(includeInstance, f),\n    remoteMaxValueInFlightMsat: jspb.Message.getFieldWithDefault(msg, 15, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.OpenChannelRequest}\n */\nproto.lnrpc.OpenChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.OpenChannelRequest;\n  return proto.lnrpc.OpenChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.OpenChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.OpenChannelRequest}\n */\nproto.lnrpc.OpenChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNodePubkey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodePubkeyString(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalFundingAmount(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPushSat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTargetConf(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSatPerByte(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivate(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMinHtlcMsat(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setRemoteCsvDelay(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setMinConfs(value);\n      break;\n    case 12:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSpendUnconfirmed(value);\n      break;\n    case 13:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCloseAddress(value);\n      break;\n    case 14:\n      var value = new proto.lnrpc.FundingShim;\n      reader.readMessage(value,proto.lnrpc.FundingShim.deserializeBinaryFromReader);\n      msg.setFundingShim(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRemoteMaxValueInFlightMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.OpenChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.OpenChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.OpenChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OpenChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodePubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getNodePubkeyString();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getLocalFundingAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getPushSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getTargetConf();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getSatPerByte();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getPrivate();\n  if (f) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n  f = message.getMinHtlcMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getRemoteCsvDelay();\n  if (f !== 0) {\n    writer.writeUint32(\n      10,\n      f\n    );\n  }\n  f = message.getMinConfs();\n  if (f !== 0) {\n    writer.writeInt32(\n      11,\n      f\n    );\n  }\n  f = message.getSpendUnconfirmed();\n  if (f) {\n    writer.writeBool(\n      12,\n      f\n    );\n  }\n  f = message.getCloseAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      13,\n      f\n    );\n  }\n  f = message.getFundingShim();\n  if (f != null) {\n    writer.writeMessage(\n      14,\n      f,\n      proto.lnrpc.FundingShim.serializeBinaryToWriter\n    );\n  }\n  f = message.getRemoteMaxValueInFlightMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      15,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes node_pubkey = 2;\n * @return {string}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getNodePubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes node_pubkey = 2;\n * This is a type-conversion wrapper around `getNodePubkey()`\n * @return {string}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getNodePubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNodePubkey()));\n};\n\n\n/**\n * optional bytes node_pubkey = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNodePubkey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getNodePubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNodePubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.OpenChannelRequest.prototype.setNodePubkey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string node_pubkey_string = 3;\n * @return {string}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getNodePubkeyString = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.OpenChannelRequest.prototype.setNodePubkeyString = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 local_funding_amount = 4;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getLocalFundingAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setLocalFundingAmount = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 push_sat = 5;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getPushSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setPushSat = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int32 target_conf = 6;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getTargetConf = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setTargetConf = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 sat_per_byte = 7;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getSatPerByte = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setSatPerByte = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional bool private = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getPrivate = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.OpenChannelRequest.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 min_htlc_msat = 9;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getMinHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setMinHtlcMsat = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional uint32 remote_csv_delay = 10;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getRemoteCsvDelay = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setRemoteCsvDelay = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional int32 min_confs = 11;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getMinConfs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setMinConfs = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional bool spend_unconfirmed = 12;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getSpendUnconfirmed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.OpenChannelRequest.prototype.setSpendUnconfirmed = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional string close_address = 13;\n * @return {string}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getCloseAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.OpenChannelRequest.prototype.setCloseAddress = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * optional FundingShim funding_shim = 14;\n * @return {?proto.lnrpc.FundingShim}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getFundingShim = function() {\n  return /** @type{?proto.lnrpc.FundingShim} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingShim, 14));\n};\n\n\n/** @param {?proto.lnrpc.FundingShim|undefined} value */\nproto.lnrpc.OpenChannelRequest.prototype.setFundingShim = function(value) {\n  jspb.Message.setWrapperField(this, 14, value);\n};\n\n\nproto.lnrpc.OpenChannelRequest.prototype.clearFundingShim = function() {\n  this.setFundingShim(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.OpenChannelRequest.prototype.hasFundingShim = function() {\n  return jspb.Message.getField(this, 14) != null;\n};\n\n\n/**\n * optional uint64 remote_max_value_in_flight_msat = 15;\n * @return {number}\n */\nproto.lnrpc.OpenChannelRequest.prototype.getRemoteMaxValueInFlightMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.OpenChannelRequest.prototype.setRemoteMaxValueInFlightMsat = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.OpenStatusUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.OpenStatusUpdate.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.OpenStatusUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.OpenStatusUpdate.displayName = 'proto.lnrpc.OpenStatusUpdate';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.OpenStatusUpdate.oneofGroups_ = [[1,3,5]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.OpenStatusUpdate.UpdateCase = {\n  UPDATE_NOT_SET: 0,\n  CHAN_PENDING: 1,\n  CHAN_OPEN: 3,\n  PSBT_FUND: 5\n};\n\n/**\n * @return {proto.lnrpc.OpenStatusUpdate.UpdateCase}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getUpdateCase = function() {\n  return /** @type {proto.lnrpc.OpenStatusUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.OpenStatusUpdate.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.OpenStatusUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.OpenStatusUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OpenStatusUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPending: (f = msg.getChanPending()) && proto.lnrpc.PendingUpdate.toObject(includeInstance, f),\n    chanOpen: (f = msg.getChanOpen()) && proto.lnrpc.ChannelOpenUpdate.toObject(includeInstance, f),\n    psbtFund: (f = msg.getPsbtFund()) && proto.lnrpc.ReadyForPsbtFunding.toObject(includeInstance, f),\n    pendingChanId: msg.getPendingChanId_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.OpenStatusUpdate}\n */\nproto.lnrpc.OpenStatusUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.OpenStatusUpdate;\n  return proto.lnrpc.OpenStatusUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.OpenStatusUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.OpenStatusUpdate}\n */\nproto.lnrpc.OpenStatusUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingUpdate;\n      reader.readMessage(value,proto.lnrpc.PendingUpdate.deserializeBinaryFromReader);\n      msg.setChanPending(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ChannelOpenUpdate;\n      reader.readMessage(value,proto.lnrpc.ChannelOpenUpdate.deserializeBinaryFromReader);\n      msg.setChanOpen(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.ReadyForPsbtFunding;\n      reader.readMessage(value,proto.lnrpc.ReadyForPsbtFunding.deserializeBinaryFromReader);\n      msg.setPsbtFund(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.OpenStatusUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.OpenStatusUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.OpenStatusUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPending();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getChanOpen();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.ChannelOpenUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getPsbtFund();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.lnrpc.ReadyForPsbtFunding.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PendingUpdate chan_pending = 1;\n * @return {?proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getChanPending = function() {\n  return /** @type{?proto.lnrpc.PendingUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingUpdate, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingUpdate|undefined} value */\nproto.lnrpc.OpenStatusUpdate.prototype.setChanPending = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.OpenStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.OpenStatusUpdate.prototype.clearChanPending = function() {\n  this.setChanPending(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.hasChanPending = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ChannelOpenUpdate chan_open = 3;\n * @return {?proto.lnrpc.ChannelOpenUpdate}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getChanOpen = function() {\n  return /** @type{?proto.lnrpc.ChannelOpenUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelOpenUpdate, 3));\n};\n\n\n/** @param {?proto.lnrpc.ChannelOpenUpdate|undefined} value */\nproto.lnrpc.OpenStatusUpdate.prototype.setChanOpen = function(value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.lnrpc.OpenStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.OpenStatusUpdate.prototype.clearChanOpen = function() {\n  this.setChanOpen(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.hasChanOpen = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional ReadyForPsbtFunding psbt_fund = 5;\n * @return {?proto.lnrpc.ReadyForPsbtFunding}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getPsbtFund = function() {\n  return /** @type{?proto.lnrpc.ReadyForPsbtFunding} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ReadyForPsbtFunding, 5));\n};\n\n\n/** @param {?proto.lnrpc.ReadyForPsbtFunding|undefined} value */\nproto.lnrpc.OpenStatusUpdate.prototype.setPsbtFund = function(value) {\n  jspb.Message.setOneofWrapperField(this, 5, proto.lnrpc.OpenStatusUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.OpenStatusUpdate.prototype.clearPsbtFund = function() {\n  this.setPsbtFund(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.hasPsbtFund = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bytes pending_chan_id = 4;\n * @return {string}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 4;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.OpenStatusUpdate.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.OpenStatusUpdate.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.KeyLocator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.KeyLocator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.KeyLocator.displayName = 'proto.lnrpc.KeyLocator';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.KeyLocator.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.KeyLocator.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.KeyLocator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.KeyLocator.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    keyFamily: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    keyIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.KeyLocator}\n */\nproto.lnrpc.KeyLocator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.KeyLocator;\n  return proto.lnrpc.KeyLocator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.KeyLocator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.KeyLocator}\n */\nproto.lnrpc.KeyLocator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setKeyFamily(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setKeyIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.KeyLocator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.KeyLocator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.KeyLocator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.KeyLocator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKeyFamily();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getKeyIndex();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 key_family = 1;\n * @return {number}\n */\nproto.lnrpc.KeyLocator.prototype.getKeyFamily = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.KeyLocator.prototype.setKeyFamily = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int32 key_index = 2;\n * @return {number}\n */\nproto.lnrpc.KeyLocator.prototype.getKeyIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.KeyLocator.prototype.setKeyIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.KeyDescriptor = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.KeyDescriptor, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.KeyDescriptor.displayName = 'proto.lnrpc.KeyDescriptor';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.KeyDescriptor.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.KeyDescriptor.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.KeyDescriptor} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.KeyDescriptor.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rawKeyBytes: msg.getRawKeyBytes_asB64(),\n    keyLoc: (f = msg.getKeyLoc()) && proto.lnrpc.KeyLocator.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.KeyDescriptor}\n */\nproto.lnrpc.KeyDescriptor.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.KeyDescriptor;\n  return proto.lnrpc.KeyDescriptor.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.KeyDescriptor} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.KeyDescriptor}\n */\nproto.lnrpc.KeyDescriptor.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRawKeyBytes(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.KeyLocator;\n      reader.readMessage(value,proto.lnrpc.KeyLocator.deserializeBinaryFromReader);\n      msg.setKeyLoc(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.KeyDescriptor.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.KeyDescriptor.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.KeyDescriptor} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.KeyDescriptor.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRawKeyBytes_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getKeyLoc();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.KeyLocator.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes raw_key_bytes = 1;\n * @return {string}\n */\nproto.lnrpc.KeyDescriptor.prototype.getRawKeyBytes = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes raw_key_bytes = 1;\n * This is a type-conversion wrapper around `getRawKeyBytes()`\n * @return {string}\n */\nproto.lnrpc.KeyDescriptor.prototype.getRawKeyBytes_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRawKeyBytes()));\n};\n\n\n/**\n * optional bytes raw_key_bytes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRawKeyBytes()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.KeyDescriptor.prototype.getRawKeyBytes_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRawKeyBytes()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.KeyDescriptor.prototype.setRawKeyBytes = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional KeyLocator key_loc = 2;\n * @return {?proto.lnrpc.KeyLocator}\n */\nproto.lnrpc.KeyDescriptor.prototype.getKeyLoc = function() {\n  return /** @type{?proto.lnrpc.KeyLocator} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.KeyLocator, 2));\n};\n\n\n/** @param {?proto.lnrpc.KeyLocator|undefined} value */\nproto.lnrpc.KeyDescriptor.prototype.setKeyLoc = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.KeyDescriptor.prototype.clearKeyLoc = function() {\n  this.setKeyLoc(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.KeyDescriptor.prototype.hasKeyLoc = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChanPointShim = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChanPointShim, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChanPointShim.displayName = 'proto.lnrpc.ChanPointShim';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChanPointShim.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChanPointShim.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChanPointShim} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanPointShim.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    amt: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    localKey: (f = msg.getLocalKey()) && proto.lnrpc.KeyDescriptor.toObject(includeInstance, f),\n    remoteKey: msg.getRemoteKey_asB64(),\n    pendingChanId: msg.getPendingChanId_asB64(),\n    thawHeight: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChanPointShim}\n */\nproto.lnrpc.ChanPointShim.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChanPointShim;\n  return proto.lnrpc.ChanPointShim.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChanPointShim} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChanPointShim}\n */\nproto.lnrpc.ChanPointShim.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmt(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.KeyDescriptor;\n      reader.readMessage(value,proto.lnrpc.KeyDescriptor.deserializeBinaryFromReader);\n      msg.setLocalKey(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRemoteKey(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setThawHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanPointShim.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChanPointShim.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChanPointShim} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanPointShim.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAmt();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getLocalKey();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.KeyDescriptor.serializeBinaryToWriter\n    );\n  }\n  f = message.getRemoteKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getThawHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 amt = 1;\n * @return {number}\n */\nproto.lnrpc.ChanPointShim.prototype.getAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChanPointShim.prototype.setAmt = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional ChannelPoint chan_point = 2;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChanPointShim.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 2));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChanPointShim.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.ChanPointShim.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChanPointShim.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional KeyDescriptor local_key = 3;\n * @return {?proto.lnrpc.KeyDescriptor}\n */\nproto.lnrpc.ChanPointShim.prototype.getLocalKey = function() {\n  return /** @type{?proto.lnrpc.KeyDescriptor} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.KeyDescriptor, 3));\n};\n\n\n/** @param {?proto.lnrpc.KeyDescriptor|undefined} value */\nproto.lnrpc.ChanPointShim.prototype.setLocalKey = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.ChanPointShim.prototype.clearLocalKey = function() {\n  this.setLocalKey(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChanPointShim.prototype.hasLocalKey = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional bytes remote_key = 4;\n * @return {string}\n */\nproto.lnrpc.ChanPointShim.prototype.getRemoteKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes remote_key = 4;\n * This is a type-conversion wrapper around `getRemoteKey()`\n * @return {string}\n */\nproto.lnrpc.ChanPointShim.prototype.getRemoteKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRemoteKey()));\n};\n\n\n/**\n * optional bytes remote_key = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRemoteKey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanPointShim.prototype.getRemoteKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRemoteKey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChanPointShim.prototype.setRemoteKey = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 5;\n * @return {string}\n */\nproto.lnrpc.ChanPointShim.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 5;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.ChanPointShim.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanPointShim.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChanPointShim.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 thaw_height = 6;\n * @return {number}\n */\nproto.lnrpc.ChanPointShim.prototype.getThawHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChanPointShim.prototype.setThawHeight = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PsbtShim = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PsbtShim, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PsbtShim.displayName = 'proto.lnrpc.PsbtShim';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PsbtShim.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PsbtShim.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PsbtShim} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PsbtShim.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pendingChanId: msg.getPendingChanId_asB64(),\n    basePsbt: msg.getBasePsbt_asB64(),\n    noPublish: jspb.Message.getFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PsbtShim}\n */\nproto.lnrpc.PsbtShim.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PsbtShim;\n  return proto.lnrpc.PsbtShim.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PsbtShim} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PsbtShim}\n */\nproto.lnrpc.PsbtShim.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBasePsbt(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setNoPublish(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PsbtShim.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PsbtShim.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PsbtShim} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PsbtShim.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getBasePsbt_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getNoPublish();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.PsbtShim.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.PsbtShim.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PsbtShim.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PsbtShim.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes base_psbt = 2;\n * @return {string}\n */\nproto.lnrpc.PsbtShim.prototype.getBasePsbt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes base_psbt = 2;\n * This is a type-conversion wrapper around `getBasePsbt()`\n * @return {string}\n */\nproto.lnrpc.PsbtShim.prototype.getBasePsbt_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBasePsbt()));\n};\n\n\n/**\n * optional bytes base_psbt = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBasePsbt()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PsbtShim.prototype.getBasePsbt_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBasePsbt()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PsbtShim.prototype.setBasePsbt = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool no_publish = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.PsbtShim.prototype.getNoPublish = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.PsbtShim.prototype.setNoPublish = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingShim = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.FundingShim.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.FundingShim, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingShim.displayName = 'proto.lnrpc.FundingShim';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.FundingShim.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.FundingShim.ShimCase = {\n  SHIM_NOT_SET: 0,\n  CHAN_POINT_SHIM: 1,\n  PSBT_SHIM: 2\n};\n\n/**\n * @return {proto.lnrpc.FundingShim.ShimCase}\n */\nproto.lnrpc.FundingShim.prototype.getShimCase = function() {\n  return /** @type {proto.lnrpc.FundingShim.ShimCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.FundingShim.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingShim.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingShim.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingShim} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingShim.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPointShim: (f = msg.getChanPointShim()) && proto.lnrpc.ChanPointShim.toObject(includeInstance, f),\n    psbtShim: (f = msg.getPsbtShim()) && proto.lnrpc.PsbtShim.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingShim}\n */\nproto.lnrpc.FundingShim.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingShim;\n  return proto.lnrpc.FundingShim.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingShim} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingShim}\n */\nproto.lnrpc.FundingShim.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChanPointShim;\n      reader.readMessage(value,proto.lnrpc.ChanPointShim.deserializeBinaryFromReader);\n      msg.setChanPointShim(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.PsbtShim;\n      reader.readMessage(value,proto.lnrpc.PsbtShim.deserializeBinaryFromReader);\n      msg.setPsbtShim(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingShim.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingShim.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingShim} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingShim.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPointShim();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChanPointShim.serializeBinaryToWriter\n    );\n  }\n  f = message.getPsbtShim();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.PsbtShim.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ChanPointShim chan_point_shim = 1;\n * @return {?proto.lnrpc.ChanPointShim}\n */\nproto.lnrpc.FundingShim.prototype.getChanPointShim = function() {\n  return /** @type{?proto.lnrpc.ChanPointShim} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChanPointShim, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChanPointShim|undefined} value */\nproto.lnrpc.FundingShim.prototype.setChanPointShim = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.FundingShim.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingShim.prototype.clearChanPointShim = function() {\n  this.setChanPointShim(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingShim.prototype.hasChanPointShim = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional PsbtShim psbt_shim = 2;\n * @return {?proto.lnrpc.PsbtShim}\n */\nproto.lnrpc.FundingShim.prototype.getPsbtShim = function() {\n  return /** @type{?proto.lnrpc.PsbtShim} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PsbtShim, 2));\n};\n\n\n/** @param {?proto.lnrpc.PsbtShim|undefined} value */\nproto.lnrpc.FundingShim.prototype.setPsbtShim = function(value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.lnrpc.FundingShim.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingShim.prototype.clearPsbtShim = function() {\n  this.setPsbtShim(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingShim.prototype.hasPsbtShim = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingShimCancel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FundingShimCancel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingShimCancel.displayName = 'proto.lnrpc.FundingShimCancel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingShimCancel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingShimCancel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingShimCancel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingShimCancel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pendingChanId: msg.getPendingChanId_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingShimCancel}\n */\nproto.lnrpc.FundingShimCancel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingShimCancel;\n  return proto.lnrpc.FundingShimCancel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingShimCancel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingShimCancel}\n */\nproto.lnrpc.FundingShimCancel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingShimCancel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingShimCancel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingShimCancel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingShimCancel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.FundingShimCancel.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.FundingShimCancel.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingShimCancel.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingShimCancel.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingPsbtVerify = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FundingPsbtVerify, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingPsbtVerify.displayName = 'proto.lnrpc.FundingPsbtVerify';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingPsbtVerify.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingPsbtVerify} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingPsbtVerify.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fundedPsbt: msg.getFundedPsbt_asB64(),\n    pendingChanId: msg.getPendingChanId_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingPsbtVerify}\n */\nproto.lnrpc.FundingPsbtVerify.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingPsbtVerify;\n  return proto.lnrpc.FundingPsbtVerify.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingPsbtVerify} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingPsbtVerify}\n */\nproto.lnrpc.FundingPsbtVerify.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFundedPsbt(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingPsbtVerify.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingPsbtVerify} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingPsbtVerify.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFundedPsbt_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes funded_psbt = 1;\n * @return {string}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getFundedPsbt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes funded_psbt = 1;\n * This is a type-conversion wrapper around `getFundedPsbt()`\n * @return {string}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getFundedPsbt_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFundedPsbt()));\n};\n\n\n/**\n * optional bytes funded_psbt = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFundedPsbt()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getFundedPsbt_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFundedPsbt()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingPsbtVerify.prototype.setFundedPsbt = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtVerify.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingPsbtVerify.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingPsbtFinalize = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FundingPsbtFinalize, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingPsbtFinalize.displayName = 'proto.lnrpc.FundingPsbtFinalize';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingPsbtFinalize.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingPsbtFinalize} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingPsbtFinalize.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    signedPsbt: msg.getSignedPsbt_asB64(),\n    pendingChanId: msg.getPendingChanId_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingPsbtFinalize}\n */\nproto.lnrpc.FundingPsbtFinalize.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingPsbtFinalize;\n  return proto.lnrpc.FundingPsbtFinalize.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingPsbtFinalize} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingPsbtFinalize}\n */\nproto.lnrpc.FundingPsbtFinalize.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignedPsbt(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPendingChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingPsbtFinalize.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingPsbtFinalize} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingPsbtFinalize.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSignedPsbt_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPendingChanId_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes signed_psbt = 1;\n * @return {string}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getSignedPsbt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes signed_psbt = 1;\n * This is a type-conversion wrapper around `getSignedPsbt()`\n * @return {string}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getSignedPsbt_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignedPsbt()));\n};\n\n\n/**\n * optional bytes signed_psbt = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignedPsbt()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getSignedPsbt_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignedPsbt()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingPsbtFinalize.prototype.setSignedPsbt = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getPendingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {string}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getPendingChanId_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPendingChanId()));\n};\n\n\n/**\n * optional bytes pending_chan_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPendingChanId()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingPsbtFinalize.prototype.getPendingChanId_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPendingChanId()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.FundingPsbtFinalize.prototype.setPendingChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingTransitionMsg = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.FundingTransitionMsg.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.FundingTransitionMsg, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingTransitionMsg.displayName = 'proto.lnrpc.FundingTransitionMsg';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.FundingTransitionMsg.oneofGroups_ = [[1,2,3,4]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.FundingTransitionMsg.TriggerCase = {\n  TRIGGER_NOT_SET: 0,\n  SHIM_REGISTER: 1,\n  SHIM_CANCEL: 2,\n  PSBT_VERIFY: 3,\n  PSBT_FINALIZE: 4\n};\n\n/**\n * @return {proto.lnrpc.FundingTransitionMsg.TriggerCase}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getTriggerCase = function() {\n  return /** @type {proto.lnrpc.FundingTransitionMsg.TriggerCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingTransitionMsg.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingTransitionMsg} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingTransitionMsg.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    shimRegister: (f = msg.getShimRegister()) && proto.lnrpc.FundingShim.toObject(includeInstance, f),\n    shimCancel: (f = msg.getShimCancel()) && proto.lnrpc.FundingShimCancel.toObject(includeInstance, f),\n    psbtVerify: (f = msg.getPsbtVerify()) && proto.lnrpc.FundingPsbtVerify.toObject(includeInstance, f),\n    psbtFinalize: (f = msg.getPsbtFinalize()) && proto.lnrpc.FundingPsbtFinalize.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingTransitionMsg}\n */\nproto.lnrpc.FundingTransitionMsg.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingTransitionMsg;\n  return proto.lnrpc.FundingTransitionMsg.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingTransitionMsg} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingTransitionMsg}\n */\nproto.lnrpc.FundingTransitionMsg.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.FundingShim;\n      reader.readMessage(value,proto.lnrpc.FundingShim.deserializeBinaryFromReader);\n      msg.setShimRegister(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.FundingShimCancel;\n      reader.readMessage(value,proto.lnrpc.FundingShimCancel.deserializeBinaryFromReader);\n      msg.setShimCancel(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.FundingPsbtVerify;\n      reader.readMessage(value,proto.lnrpc.FundingPsbtVerify.deserializeBinaryFromReader);\n      msg.setPsbtVerify(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.FundingPsbtFinalize;\n      reader.readMessage(value,proto.lnrpc.FundingPsbtFinalize.deserializeBinaryFromReader);\n      msg.setPsbtFinalize(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingTransitionMsg.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingTransitionMsg} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingTransitionMsg.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getShimRegister();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.FundingShim.serializeBinaryToWriter\n    );\n  }\n  f = message.getShimCancel();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.FundingShimCancel.serializeBinaryToWriter\n    );\n  }\n  f = message.getPsbtVerify();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.FundingPsbtVerify.serializeBinaryToWriter\n    );\n  }\n  f = message.getPsbtFinalize();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.FundingPsbtFinalize.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional FundingShim shim_register = 1;\n * @return {?proto.lnrpc.FundingShim}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getShimRegister = function() {\n  return /** @type{?proto.lnrpc.FundingShim} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingShim, 1));\n};\n\n\n/** @param {?proto.lnrpc.FundingShim|undefined} value */\nproto.lnrpc.FundingTransitionMsg.prototype.setShimRegister = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingTransitionMsg.prototype.clearShimRegister = function() {\n  this.setShimRegister(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.hasShimRegister = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional FundingShimCancel shim_cancel = 2;\n * @return {?proto.lnrpc.FundingShimCancel}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getShimCancel = function() {\n  return /** @type{?proto.lnrpc.FundingShimCancel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingShimCancel, 2));\n};\n\n\n/** @param {?proto.lnrpc.FundingShimCancel|undefined} value */\nproto.lnrpc.FundingTransitionMsg.prototype.setShimCancel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingTransitionMsg.prototype.clearShimCancel = function() {\n  this.setShimCancel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.hasShimCancel = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional FundingPsbtVerify psbt_verify = 3;\n * @return {?proto.lnrpc.FundingPsbtVerify}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getPsbtVerify = function() {\n  return /** @type{?proto.lnrpc.FundingPsbtVerify} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingPsbtVerify, 3));\n};\n\n\n/** @param {?proto.lnrpc.FundingPsbtVerify|undefined} value */\nproto.lnrpc.FundingTransitionMsg.prototype.setPsbtVerify = function(value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingTransitionMsg.prototype.clearPsbtVerify = function() {\n  this.setPsbtVerify(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.hasPsbtVerify = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional FundingPsbtFinalize psbt_finalize = 4;\n * @return {?proto.lnrpc.FundingPsbtFinalize}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.getPsbtFinalize = function() {\n  return /** @type{?proto.lnrpc.FundingPsbtFinalize} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FundingPsbtFinalize, 4));\n};\n\n\n/** @param {?proto.lnrpc.FundingPsbtFinalize|undefined} value */\nproto.lnrpc.FundingTransitionMsg.prototype.setPsbtFinalize = function(value) {\n  jspb.Message.setOneofWrapperField(this, 4, proto.lnrpc.FundingTransitionMsg.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.FundingTransitionMsg.prototype.clearPsbtFinalize = function() {\n  this.setPsbtFinalize(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.FundingTransitionMsg.prototype.hasPsbtFinalize = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FundingStateStepResp = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FundingStateStepResp, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FundingStateStepResp.displayName = 'proto.lnrpc.FundingStateStepResp';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FundingStateStepResp.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FundingStateStepResp.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FundingStateStepResp} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingStateStepResp.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FundingStateStepResp}\n */\nproto.lnrpc.FundingStateStepResp.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FundingStateStepResp;\n  return proto.lnrpc.FundingStateStepResp.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FundingStateStepResp} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FundingStateStepResp}\n */\nproto.lnrpc.FundingStateStepResp.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FundingStateStepResp.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FundingStateStepResp.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FundingStateStepResp} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FundingStateStepResp.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingHTLC = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingHTLC, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingHTLC.displayName = 'proto.lnrpc.PendingHTLC';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingHTLC.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingHTLC.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingHTLC} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingHTLC.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    incoming: jspb.Message.getFieldWithDefault(msg, 1, false),\n    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    outpoint: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    maturityHeight: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    blocksTilMaturity: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    stage: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingHTLC}\n */\nproto.lnrpc.PendingHTLC.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingHTLC;\n  return proto.lnrpc.PendingHTLC.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingHTLC} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingHTLC}\n */\nproto.lnrpc.PendingHTLC.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncoming(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOutpoint(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaturityHeight(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlocksTilMaturity(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setStage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingHTLC.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingHTLC.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingHTLC} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingHTLC.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIncoming();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getOutpoint();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getMaturityHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getBlocksTilMaturity();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getStage();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool incoming = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.PendingHTLC.prototype.getIncoming = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.PendingHTLC.prototype.setIncoming = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amount = 2;\n * @return {number}\n */\nproto.lnrpc.PendingHTLC.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingHTLC.prototype.setAmount = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string outpoint = 3;\n * @return {string}\n */\nproto.lnrpc.PendingHTLC.prototype.getOutpoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingHTLC.prototype.setOutpoint = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 maturity_height = 4;\n * @return {number}\n */\nproto.lnrpc.PendingHTLC.prototype.getMaturityHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingHTLC.prototype.setMaturityHeight = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int32 blocks_til_maturity = 5;\n * @return {number}\n */\nproto.lnrpc.PendingHTLC.prototype.getBlocksTilMaturity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingHTLC.prototype.setBlocksTilMaturity = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 stage = 6;\n * @return {number}\n */\nproto.lnrpc.PendingHTLC.prototype.getStage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingHTLC.prototype.setStage = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsRequest.displayName = 'proto.lnrpc.PendingChannelsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsRequest}\n */\nproto.lnrpc.PendingChannelsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsRequest;\n  return proto.lnrpc.PendingChannelsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsRequest}\n */\nproto.lnrpc.PendingChannelsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.PendingChannelsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.displayName = 'proto.lnrpc.PendingChannelsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.PendingChannelsResponse.repeatedFields_ = [2,3,4,5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    totalLimboBalance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    pendingOpenChannelsList: jspb.Message.toObjectList(msg.getPendingOpenChannelsList(),\n    proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.toObject, includeInstance),\n    pendingClosingChannelsList: jspb.Message.toObjectList(msg.getPendingClosingChannelsList(),\n    proto.lnrpc.PendingChannelsResponse.ClosedChannel.toObject, includeInstance),\n    pendingForceClosingChannelsList: jspb.Message.toObjectList(msg.getPendingForceClosingChannelsList(),\n    proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.toObject, includeInstance),\n    waitingCloseChannelsList: jspb.Message.toObjectList(msg.getWaitingCloseChannelsList(),\n    proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse}\n */\nproto.lnrpc.PendingChannelsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse;\n  return proto.lnrpc.PendingChannelsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse}\n */\nproto.lnrpc.PendingChannelsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalLimboBalance(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingOpenChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.deserializeBinaryFromReader);\n      msg.addPendingOpenChannels(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.PendingChannelsResponse.ClosedChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.ClosedChannel.deserializeBinaryFromReader);\n      msg.addPendingClosingChannels(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.PendingChannelsResponse.ForceClosedChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.deserializeBinaryFromReader);\n      msg.addPendingForceClosingChannels(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.deserializeBinaryFromReader);\n      msg.addWaitingCloseChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTotalLimboBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPendingOpenChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingClosingChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.lnrpc.PendingChannelsResponse.ClosedChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingForceClosingChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getWaitingCloseChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.PendingChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.PendingChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.PendingChannel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    remoteNodePub: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    channelPoint: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    localBalance: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    remoteBalance: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    localChanReserveSat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    remoteChanReserveSat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    initiator: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    commitmentType: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n  return proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemoteNodePub(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelPoint(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalBalance(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRemoteBalance(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLocalChanReserveSat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRemoteChanReserveSat(value);\n      break;\n    case 8:\n      var value = /** @type {!proto.lnrpc.Initiator} */ (reader.readEnum());\n      msg.setInitiator(value);\n      break;\n    case 9:\n      var value = /** @type {!proto.lnrpc.CommitmentType} */ (reader.readEnum());\n      msg.setCommitmentType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRemoteNodePub();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getChannelPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getLocalBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getRemoteBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getLocalChanReserveSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getRemoteChanReserveSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getInitiator();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      8,\n      f\n    );\n  }\n  f = message.getCommitmentType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string remote_node_pub = 1;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getRemoteNodePub = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setRemoteNodePub = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string channel_point = 2;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getChannelPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setChannelPoint = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 capacity = 3;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 local_balance = 4;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getLocalBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setLocalBalance = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 remote_balance = 5;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getRemoteBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setRemoteBalance = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 local_chan_reserve_sat = 6;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getLocalChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setLocalChanReserveSat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 remote_chan_reserve_sat = 7;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getRemoteChanReserveSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setRemoteChanReserveSat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional Initiator initiator = 8;\n * @return {!proto.lnrpc.Initiator}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getInitiator = function() {\n  return /** @type {!proto.lnrpc.Initiator} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {!proto.lnrpc.Initiator} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setInitiator = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional CommitmentType commitment_type = 9;\n * @return {!proto.lnrpc.CommitmentType}\n */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.getCommitmentType = function() {\n  return /** @type {!proto.lnrpc.CommitmentType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {!proto.lnrpc.CommitmentType} value */\nproto.lnrpc.PendingChannelsResponse.PendingChannel.prototype.setCommitmentType = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.PendingOpenChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.PendingOpenChannel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channel: (f = msg.getChannel()) && proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(includeInstance, f),\n    confirmationHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    commitFee: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    commitWeight: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    feePerKw: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.PendingOpenChannel;\n  return proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader);\n      msg.setChannel(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setConfirmationHeight(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommitFee(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommitWeight(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeePerKw(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.PendingOpenChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getConfirmationHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getCommitFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getCommitWeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getFeePerKw();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PendingChannel channel = 1;\n * @return {?proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getChannel = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.PendingChannel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingChannel, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.PendingChannel|undefined} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setChannel = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.clearChannel = function() {\n  this.setChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.hasChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 confirmation_height = 2;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getConfirmationHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setConfirmationHeight = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 commit_fee = 4;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getCommitFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setCommitFee = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 commit_weight = 5;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getCommitWeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setCommitWeight = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 fee_per_kw = 6;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.getFeePerKw = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.PendingOpenChannel.prototype.setFeePerKw = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channel: (f = msg.getChannel()) && proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(includeInstance, f),\n    limboBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    commitments: (f = msg.getCommitments()) && proto.lnrpc.PendingChannelsResponse.Commitments.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel;\n  return proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader);\n      msg.setChannel(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLimboBalance(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.PendingChannelsResponse.Commitments;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.Commitments.deserializeBinaryFromReader);\n      msg.setCommitments(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getLimboBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getCommitments();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.PendingChannelsResponse.Commitments.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional PendingChannel channel = 1;\n * @return {?proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.getChannel = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.PendingChannel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingChannel, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.PendingChannel|undefined} value */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.setChannel = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.clearChannel = function() {\n  this.setChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.hasChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 limbo_balance = 2;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.getLimboBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.setLimboBalance = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional Commitments commitments = 3;\n * @return {?proto.lnrpc.PendingChannelsResponse.Commitments}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.getCommitments = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.Commitments} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.Commitments, 3));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.Commitments|undefined} value */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.setCommitments = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.clearCommitments = function() {\n  this.setCommitments(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.WaitingCloseChannel.prototype.hasCommitments = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.Commitments = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.Commitments, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.Commitments.displayName = 'proto.lnrpc.PendingChannelsResponse.Commitments';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.Commitments.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.Commitments} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    localTxid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    remoteTxid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    remotePendingTxid: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    localCommitFeeSat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    remoteCommitFeeSat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    remotePendingCommitFeeSat: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.Commitments}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.Commitments;\n  return proto.lnrpc.PendingChannelsResponse.Commitments.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.Commitments} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.Commitments}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLocalTxid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemoteTxid(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRemotePendingTxid(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLocalCommitFeeSat(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRemoteCommitFeeSat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRemotePendingCommitFeeSat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.Commitments.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.Commitments} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLocalTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRemoteTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getRemotePendingTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getLocalCommitFeeSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getRemoteCommitFeeSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getRemotePendingCommitFeeSat();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string local_txid = 1;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getLocalTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setLocalTxid = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string remote_txid = 2;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getRemoteTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setRemoteTxid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string remote_pending_txid = 3;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getRemotePendingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setRemotePendingTxid = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 local_commit_fee_sat = 4;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getLocalCommitFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setLocalCommitFeeSat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 remote_commit_fee_sat = 5;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getRemoteCommitFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setRemoteCommitFeeSat = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 remote_pending_commit_fee_sat = 6;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.getRemotePendingCommitFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.Commitments.prototype.setRemotePendingCommitFeeSat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.ClosedChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.ClosedChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.ClosedChannel';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.ClosedChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.ClosedChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channel: (f = msg.getChannel()) && proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(includeInstance, f),\n    closingTxid: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.ClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.ClosedChannel;\n  return proto.lnrpc.PendingChannelsResponse.ClosedChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.ClosedChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.ClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader);\n      msg.setChannel(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClosingTxid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.ClosedChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.ClosedChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getClosingTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional PendingChannel channel = 1;\n * @return {?proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.getChannel = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.PendingChannel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingChannel, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.PendingChannel|undefined} value */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.setChannel = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.clearChannel = function() {\n  this.setChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.hasChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string closing_txid = 2;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.getClosingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.ClosedChannel.prototype.setClosingTxid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.PendingChannelsResponse.ForceClosedChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.displayName = 'proto.lnrpc.PendingChannelsResponse.ForceClosedChannel';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.repeatedFields_ = [8];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channel: (f = msg.getChannel()) && proto.lnrpc.PendingChannelsResponse.PendingChannel.toObject(includeInstance, f),\n    closingTxid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    limboBalance: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    maturityHeight: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    blocksTilMaturity: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    recoveredBalance: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    pendingHtlcsList: jspb.Message.toObjectList(msg.getPendingHtlcsList(),\n    proto.lnrpc.PendingHTLC.toObject, includeInstance),\n    anchor: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PendingChannelsResponse.ForceClosedChannel;\n  return proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.PendingChannelsResponse.PendingChannel;\n      reader.readMessage(value,proto.lnrpc.PendingChannelsResponse.PendingChannel.deserializeBinaryFromReader);\n      msg.setChannel(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClosingTxid(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLimboBalance(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaturityHeight(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setBlocksTilMaturity(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRecoveredBalance(value);\n      break;\n    case 8:\n      var value = new proto.lnrpc.PendingHTLC;\n      reader.readMessage(value,proto.lnrpc.PendingHTLC.deserializeBinaryFromReader);\n      msg.addPendingHtlcs(value);\n      break;\n    case 9:\n      var value = /** @type {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState} */ (reader.readEnum());\n      msg.setAnchor(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.PendingChannelsResponse.PendingChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getClosingTxid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getLimboBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getMaturityHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getBlocksTilMaturity();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n  f = message.getRecoveredBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getPendingHtlcsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      8,\n      f,\n      proto.lnrpc.PendingHTLC.serializeBinaryToWriter\n    );\n  }\n  f = message.getAnchor();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState = {\n  LIMBO: 0,\n  RECOVERED: 1,\n  LOST: 2\n};\n\n/**\n * optional PendingChannel channel = 1;\n * @return {?proto.lnrpc.PendingChannelsResponse.PendingChannel}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getChannel = function() {\n  return /** @type{?proto.lnrpc.PendingChannelsResponse.PendingChannel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingChannel, 1));\n};\n\n\n/** @param {?proto.lnrpc.PendingChannelsResponse.PendingChannel|undefined} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setChannel = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.clearChannel = function() {\n  this.setChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.hasChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string closing_txid = 2;\n * @return {string}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getClosingTxid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setClosingTxid = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 limbo_balance = 3;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getLimboBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setLimboBalance = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 maturity_height = 4;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getMaturityHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setMaturityHeight = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int32 blocks_til_maturity = 5;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getBlocksTilMaturity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setBlocksTilMaturity = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 recovered_balance = 6;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getRecoveredBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setRecoveredBalance = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * repeated PendingHTLC pending_htlcs = 8;\n * @return {!Array.<!proto.lnrpc.PendingHTLC>}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getPendingHtlcsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingHTLC>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingHTLC, 8));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingHTLC>} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setPendingHtlcsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 8, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingHTLC=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingHTLC}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.addPendingHtlcs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.lnrpc.PendingHTLC, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.clearPendingHtlcsList = function() {\n  this.setPendingHtlcsList([]);\n};\n\n\n/**\n * optional AnchorState anchor = 9;\n * @return {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState}\n */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.getAnchor = function() {\n  return /** @type {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState} value */\nproto.lnrpc.PendingChannelsResponse.ForceClosedChannel.prototype.setAnchor = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional int64 total_limbo_balance = 1;\n * @return {number}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getTotalLimboBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setTotalLimboBalance = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * repeated PendingOpenChannel pending_open_channels = 2;\n * @return {!Array.<!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel>}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getPendingOpenChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingChannelsResponse.PendingOpenChannel, 2));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel>} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setPendingOpenChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingChannelsResponse.PendingOpenChannel}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.addPendingOpenChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.lnrpc.PendingChannelsResponse.PendingOpenChannel, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.prototype.clearPendingOpenChannelsList = function() {\n  this.setPendingOpenChannelsList([]);\n};\n\n\n/**\n * repeated ClosedChannel pending_closing_channels = 3;\n * @return {!Array.<!proto.lnrpc.PendingChannelsResponse.ClosedChannel>}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getPendingClosingChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingChannelsResponse.ClosedChannel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingChannelsResponse.ClosedChannel, 3));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingChannelsResponse.ClosedChannel>} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setPendingClosingChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingChannelsResponse.ClosedChannel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingChannelsResponse.ClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.addPendingClosingChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.lnrpc.PendingChannelsResponse.ClosedChannel, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.prototype.clearPendingClosingChannelsList = function() {\n  this.setPendingClosingChannelsList([]);\n};\n\n\n/**\n * repeated ForceClosedChannel pending_force_closing_channels = 4;\n * @return {!Array.<!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel>}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getPendingForceClosingChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingChannelsResponse.ForceClosedChannel, 4));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel>} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setPendingForceClosingChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingChannelsResponse.ForceClosedChannel}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.addPendingForceClosingChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.lnrpc.PendingChannelsResponse.ForceClosedChannel, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.prototype.clearPendingForceClosingChannelsList = function() {\n  this.setPendingForceClosingChannelsList([]);\n};\n\n\n/**\n * repeated WaitingCloseChannel waiting_close_channels = 5;\n * @return {!Array.<!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel>}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.getWaitingCloseChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel, 5));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel>} value */\nproto.lnrpc.PendingChannelsResponse.prototype.setWaitingCloseChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel}\n */\nproto.lnrpc.PendingChannelsResponse.prototype.addWaitingCloseChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.lnrpc.PendingChannelsResponse.WaitingCloseChannel, opt_index);\n};\n\n\nproto.lnrpc.PendingChannelsResponse.prototype.clearWaitingCloseChannelsList = function() {\n  this.setWaitingCloseChannelsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelEventSubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelEventSubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelEventSubscription.displayName = 'proto.lnrpc.ChannelEventSubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelEventSubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelEventSubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelEventSubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEventSubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelEventSubscription}\n */\nproto.lnrpc.ChannelEventSubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelEventSubscription;\n  return proto.lnrpc.ChannelEventSubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelEventSubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelEventSubscription}\n */\nproto.lnrpc.ChannelEventSubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelEventSubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelEventSubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelEventSubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEventSubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelEventUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.ChannelEventUpdate.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.ChannelEventUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelEventUpdate.displayName = 'proto.lnrpc.ChannelEventUpdate';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.ChannelEventUpdate.oneofGroups_ = [[1,2,3,4,6]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ChannelEventUpdate.ChannelCase = {\n  CHANNEL_NOT_SET: 0,\n  OPEN_CHANNEL: 1,\n  CLOSED_CHANNEL: 2,\n  ACTIVE_CHANNEL: 3,\n  INACTIVE_CHANNEL: 4,\n  PENDING_OPEN_CHANNEL: 6\n};\n\n/**\n * @return {proto.lnrpc.ChannelEventUpdate.ChannelCase}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getChannelCase = function() {\n  return /** @type {proto.lnrpc.ChannelEventUpdate.ChannelCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelEventUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelEventUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEventUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    openChannel: (f = msg.getOpenChannel()) && proto.lnrpc.Channel.toObject(includeInstance, f),\n    closedChannel: (f = msg.getClosedChannel()) && proto.lnrpc.ChannelCloseSummary.toObject(includeInstance, f),\n    activeChannel: (f = msg.getActiveChannel()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    inactiveChannel: (f = msg.getInactiveChannel()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    pendingOpenChannel: (f = msg.getPendingOpenChannel()) && proto.lnrpc.PendingUpdate.toObject(includeInstance, f),\n    type: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelEventUpdate}\n */\nproto.lnrpc.ChannelEventUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelEventUpdate;\n  return proto.lnrpc.ChannelEventUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelEventUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelEventUpdate}\n */\nproto.lnrpc.ChannelEventUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Channel;\n      reader.readMessage(value,proto.lnrpc.Channel.deserializeBinaryFromReader);\n      msg.setOpenChannel(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelCloseSummary;\n      reader.readMessage(value,proto.lnrpc.ChannelCloseSummary.deserializeBinaryFromReader);\n      msg.setClosedChannel(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setActiveChannel(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setInactiveChannel(value);\n      break;\n    case 6:\n      var value = new proto.lnrpc.PendingUpdate;\n      reader.readMessage(value,proto.lnrpc.PendingUpdate.deserializeBinaryFromReader);\n      msg.setPendingOpenChannel(value);\n      break;\n    case 5:\n      var value = /** @type {!proto.lnrpc.ChannelEventUpdate.UpdateType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelEventUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelEventUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEventUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOpenChannel();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.Channel.serializeBinaryToWriter\n    );\n  }\n  f = message.getClosedChannel();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelCloseSummary.serializeBinaryToWriter\n    );\n  }\n  f = message.getActiveChannel();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getInactiveChannel();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getPendingOpenChannel();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.lnrpc.PendingUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ChannelEventUpdate.UpdateType = {\n  OPEN_CHANNEL: 0,\n  CLOSED_CHANNEL: 1,\n  ACTIVE_CHANNEL: 2,\n  INACTIVE_CHANNEL: 3,\n  PENDING_OPEN_CHANNEL: 4\n};\n\n/**\n * optional Channel open_channel = 1;\n * @return {?proto.lnrpc.Channel}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getOpenChannel = function() {\n  return /** @type{?proto.lnrpc.Channel} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Channel, 1));\n};\n\n\n/** @param {?proto.lnrpc.Channel|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setOpenChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearOpenChannel = function() {\n  this.setOpenChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasOpenChannel = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ChannelCloseSummary closed_channel = 2;\n * @return {?proto.lnrpc.ChannelCloseSummary}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getClosedChannel = function() {\n  return /** @type{?proto.lnrpc.ChannelCloseSummary} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelCloseSummary, 2));\n};\n\n\n/** @param {?proto.lnrpc.ChannelCloseSummary|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setClosedChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearClosedChannel = function() {\n  this.setClosedChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasClosedChannel = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional ChannelPoint active_channel = 3;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getActiveChannel = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 3));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setActiveChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearActiveChannel = function() {\n  this.setActiveChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasActiveChannel = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional ChannelPoint inactive_channel = 4;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getInactiveChannel = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 4));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setInactiveChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 4, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearInactiveChannel = function() {\n  this.setInactiveChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasInactiveChannel = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional PendingUpdate pending_open_channel = 6;\n * @return {?proto.lnrpc.PendingUpdate}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getPendingOpenChannel = function() {\n  return /** @type{?proto.lnrpc.PendingUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.PendingUpdate, 6));\n};\n\n\n/** @param {?proto.lnrpc.PendingUpdate|undefined} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setPendingOpenChannel = function(value) {\n  jspb.Message.setOneofWrapperField(this, 6, proto.lnrpc.ChannelEventUpdate.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.ChannelEventUpdate.prototype.clearPendingOpenChannel = function() {\n  this.setPendingOpenChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.hasPendingOpenChannel = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * optional UpdateType type = 5;\n * @return {!proto.lnrpc.ChannelEventUpdate.UpdateType}\n */\nproto.lnrpc.ChannelEventUpdate.prototype.getType = function() {\n  return /** @type {!proto.lnrpc.ChannelEventUpdate.UpdateType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {!proto.lnrpc.ChannelEventUpdate.UpdateType} value */\nproto.lnrpc.ChannelEventUpdate.prototype.setType = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.WalletBalanceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.WalletBalanceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.WalletBalanceRequest.displayName = 'proto.lnrpc.WalletBalanceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.WalletBalanceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.WalletBalanceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.WalletBalanceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.WalletBalanceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.WalletBalanceRequest}\n */\nproto.lnrpc.WalletBalanceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.WalletBalanceRequest;\n  return proto.lnrpc.WalletBalanceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.WalletBalanceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.WalletBalanceRequest}\n */\nproto.lnrpc.WalletBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.WalletBalanceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.WalletBalanceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.WalletBalanceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.WalletBalanceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.WalletBalanceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.WalletBalanceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.WalletBalanceResponse.displayName = 'proto.lnrpc.WalletBalanceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.WalletBalanceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.WalletBalanceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.WalletBalanceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    totalBalance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    confirmedBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    unconfirmedBalance: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.WalletBalanceResponse}\n */\nproto.lnrpc.WalletBalanceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.WalletBalanceResponse;\n  return proto.lnrpc.WalletBalanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.WalletBalanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.WalletBalanceResponse}\n */\nproto.lnrpc.WalletBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalBalance(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setConfirmedBalance(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setUnconfirmedBalance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.WalletBalanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.WalletBalanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.WalletBalanceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTotalBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getConfirmedBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getUnconfirmedBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 total_balance = 1;\n * @return {number}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.getTotalBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.WalletBalanceResponse.prototype.setTotalBalance = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 confirmed_balance = 2;\n * @return {number}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.getConfirmedBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.WalletBalanceResponse.prototype.setConfirmedBalance = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 unconfirmed_balance = 3;\n * @return {number}\n */\nproto.lnrpc.WalletBalanceResponse.prototype.getUnconfirmedBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.WalletBalanceResponse.prototype.setUnconfirmedBalance = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBalanceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBalanceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBalanceRequest.displayName = 'proto.lnrpc.ChannelBalanceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBalanceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBalanceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBalanceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBalanceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBalanceRequest}\n */\nproto.lnrpc.ChannelBalanceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBalanceRequest;\n  return proto.lnrpc.ChannelBalanceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBalanceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBalanceRequest}\n */\nproto.lnrpc.ChannelBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBalanceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBalanceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBalanceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBalanceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBalanceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBalanceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBalanceResponse.displayName = 'proto.lnrpc.ChannelBalanceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBalanceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBalanceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBalanceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    balance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    pendingOpenBalance: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBalanceResponse}\n */\nproto.lnrpc.ChannelBalanceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBalanceResponse;\n  return proto.lnrpc.ChannelBalanceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBalanceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBalanceResponse}\n */\nproto.lnrpc.ChannelBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPendingOpenBalance(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBalanceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBalanceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBalanceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPendingOpenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 balance = 1;\n * @return {number}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelBalanceResponse.prototype.setBalance = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 pending_open_balance = 2;\n * @return {number}\n */\nproto.lnrpc.ChannelBalanceResponse.prototype.getPendingOpenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelBalanceResponse.prototype.setPendingOpenBalance = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.QueryRoutesRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.QueryRoutesRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.QueryRoutesRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.QueryRoutesRequest.displayName = 'proto.lnrpc.QueryRoutesRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.QueryRoutesRequest.repeatedFields_ = [6,7,10,16,17];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.QueryRoutesRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.QueryRoutesRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.QueryRoutesRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    amt: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    amtMsat: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    finalCltvDelta: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    feeLimit: (f = msg.getFeeLimit()) && proto.lnrpc.FeeLimit.toObject(includeInstance, f),\n    ignoredNodesList: msg.getIgnoredNodesList_asB64(),\n    ignoredEdgesList: jspb.Message.toObjectList(msg.getIgnoredEdgesList(),\n    proto.lnrpc.EdgeLocator.toObject, includeInstance),\n    sourcePubKey: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    useMissionControl: jspb.Message.getFieldWithDefault(msg, 9, false),\n    ignoredPairsList: jspb.Message.toObjectList(msg.getIgnoredPairsList(),\n    proto.lnrpc.NodePair.toObject, includeInstance),\n    cltvLimit: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    destCustomRecordsMap: (f = msg.getDestCustomRecordsMap()) ? f.toObject(includeInstance, undefined) : [],\n    outgoingChanId: jspb.Message.getFieldWithDefault(msg, 14, \"0\"),\n    lastHopPubkey: msg.getLastHopPubkey_asB64(),\n    routeHintsList: jspb.Message.toObjectList(msg.getRouteHintsList(),\n    proto.lnrpc.RouteHint.toObject, includeInstance),\n    destFeaturesList: jspb.Message.getRepeatedField(msg, 17)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.QueryRoutesRequest}\n */\nproto.lnrpc.QueryRoutesRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.QueryRoutesRequest;\n  return proto.lnrpc.QueryRoutesRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.QueryRoutesRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.QueryRoutesRequest}\n */\nproto.lnrpc.QueryRoutesRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmt(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setFinalCltvDelta(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.FeeLimit;\n      reader.readMessage(value,proto.lnrpc.FeeLimit.deserializeBinaryFromReader);\n      msg.setFeeLimit(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addIgnoredNodes(value);\n      break;\n    case 7:\n      var value = new proto.lnrpc.EdgeLocator;\n      reader.readMessage(value,proto.lnrpc.EdgeLocator.deserializeBinaryFromReader);\n      msg.addIgnoredEdges(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSourcePubKey(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setUseMissionControl(value);\n      break;\n    case 10:\n      var value = new proto.lnrpc.NodePair;\n      reader.readMessage(value,proto.lnrpc.NodePair.deserializeBinaryFromReader);\n      msg.addIgnoredPairs(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCltvLimit(value);\n      break;\n    case 13:\n      var value = msg.getDestCustomRecordsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readBytes);\n         });\n      break;\n    case 14:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setOutgoingChanId(value);\n      break;\n    case 15:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setLastHopPubkey(value);\n      break;\n    case 16:\n      var value = new proto.lnrpc.RouteHint;\n      reader.readMessage(value,proto.lnrpc.RouteHint.deserializeBinaryFromReader);\n      msg.addRouteHints(value);\n      break;\n    case 17:\n      var value = /** @type {!Array.<!proto.lnrpc.FeatureBit>} */ (reader.readPackedEnum());\n      msg.setDestFeaturesList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.QueryRoutesRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.QueryRoutesRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.QueryRoutesRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmt();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getFinalCltvDelta();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getFeeLimit();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.lnrpc.FeeLimit.serializeBinaryToWriter\n    );\n  }\n  f = message.getIgnoredNodesList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      6,\n      f\n    );\n  }\n  f = message.getIgnoredEdgesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      proto.lnrpc.EdgeLocator.serializeBinaryToWriter\n    );\n  }\n  f = message.getSourcePubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getUseMissionControl();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n  f = message.getIgnoredPairsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      10,\n      f,\n      proto.lnrpc.NodePair.serializeBinaryToWriter\n    );\n  }\n  f = message.getCltvLimit();\n  if (f !== 0) {\n    writer.writeUint32(\n      11,\n      f\n    );\n  }\n  f = message.getDestCustomRecordsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getOutgoingChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      14,\n      f\n    );\n  }\n  f = message.getLastHopPubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      15,\n      f\n    );\n  }\n  f = message.getRouteHintsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      16,\n      f,\n      proto.lnrpc.RouteHint.serializeBinaryToWriter\n    );\n  }\n  f = message.getDestFeaturesList();\n  if (f.length > 0) {\n    writer.writePackedEnum(\n      17,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 amt = 2;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setAmt = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_msat = 12;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setAmtMsat = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional int32 final_cltv_delta = 4;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getFinalCltvDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setFinalCltvDelta = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional FeeLimit fee_limit = 5;\n * @return {?proto.lnrpc.FeeLimit}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getFeeLimit = function() {\n  return /** @type{?proto.lnrpc.FeeLimit} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.FeeLimit, 5));\n};\n\n\n/** @param {?proto.lnrpc.FeeLimit|undefined} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setFeeLimit = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearFeeLimit = function() {\n  this.setFeeLimit(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.hasFeeLimit = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * repeated bytes ignored_nodes = 6;\n * @return {!Array.<string>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredNodesList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 6));\n};\n\n\n/**\n * repeated bytes ignored_nodes = 6;\n * This is a type-conversion wrapper around `getIgnoredNodesList()`\n * @return {!Array.<string>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredNodesList_asB64 = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(\n      this.getIgnoredNodesList()));\n};\n\n\n/**\n * repeated bytes ignored_nodes = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getIgnoredNodesList()`\n * @return {!Array.<!Uint8Array>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredNodesList_asU8 = function() {\n  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getIgnoredNodesList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setIgnoredNodesList = function(value) {\n  jspb.Message.setField(this, 6, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addIgnoredNodes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 6, value, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearIgnoredNodesList = function() {\n  this.setIgnoredNodesList([]);\n};\n\n\n/**\n * repeated EdgeLocator ignored_edges = 7;\n * @return {!Array.<!proto.lnrpc.EdgeLocator>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredEdgesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.EdgeLocator>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.EdgeLocator, 7));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.EdgeLocator>} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setIgnoredEdgesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.EdgeLocator=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.EdgeLocator}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addIgnoredEdges = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.lnrpc.EdgeLocator, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearIgnoredEdgesList = function() {\n  this.setIgnoredEdgesList([]);\n};\n\n\n/**\n * optional string source_pub_key = 8;\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getSourcePubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setSourcePubKey = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional bool use_mission_control = 9;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getUseMissionControl = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setUseMissionControl = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * repeated NodePair ignored_pairs = 10;\n * @return {!Array.<!proto.lnrpc.NodePair>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getIgnoredPairsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.NodePair>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.NodePair, 10));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.NodePair>} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setIgnoredPairsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 10, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.NodePair=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.NodePair}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addIgnoredPairs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.lnrpc.NodePair, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearIgnoredPairsList = function() {\n  this.setIgnoredPairsList([]);\n};\n\n\n/**\n * optional uint32 cltv_limit = 11;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getCltvLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setCltvLimit = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * map<uint64, bytes> dest_custom_records = 13;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!(string|Uint8Array)>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getDestCustomRecordsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 13, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearDestCustomRecordsMap = function() {\n  this.getDestCustomRecordsMap().clear();\n};\n\n\n/**\n * optional uint64 outgoing_chan_id = 14;\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getOutgoingChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setOutgoingChanId = function(value) {\n  jspb.Message.setField(this, 14, value);\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 15;\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getLastHopPubkey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, \"\"));\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 15;\n * This is a type-conversion wrapper around `getLastHopPubkey()`\n * @return {string}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getLastHopPubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getLastHopPubkey()));\n};\n\n\n/**\n * optional bytes last_hop_pubkey = 15;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getLastHopPubkey()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getLastHopPubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getLastHopPubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setLastHopPubkey = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * repeated RouteHint route_hints = 16;\n * @return {!Array.<!proto.lnrpc.RouteHint>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getRouteHintsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.RouteHint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.RouteHint, 16));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.RouteHint>} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setRouteHintsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 16, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.RouteHint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addRouteHints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.lnrpc.RouteHint, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearRouteHintsList = function() {\n  this.setRouteHintsList([]);\n};\n\n\n/**\n * repeated FeatureBit dest_features = 17;\n * @return {!Array.<!proto.lnrpc.FeatureBit>}\n */\nproto.lnrpc.QueryRoutesRequest.prototype.getDestFeaturesList = function() {\n  return /** @type {!Array.<!proto.lnrpc.FeatureBit>} */ (jspb.Message.getRepeatedField(this, 17));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.FeatureBit>} value */\nproto.lnrpc.QueryRoutesRequest.prototype.setDestFeaturesList = function(value) {\n  jspb.Message.setField(this, 17, value || []);\n};\n\n\n/**\n * @param {!proto.lnrpc.FeatureBit} value\n * @param {number=} opt_index\n */\nproto.lnrpc.QueryRoutesRequest.prototype.addDestFeatures = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 17, value, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesRequest.prototype.clearDestFeaturesList = function() {\n  this.setDestFeaturesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodePair = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NodePair, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodePair.displayName = 'proto.lnrpc.NodePair';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodePair.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodePair.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodePair} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodePair.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: msg.getFrom_asB64(),\n    to: msg.getTo_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodePair}\n */\nproto.lnrpc.NodePair.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodePair;\n  return proto.lnrpc.NodePair.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodePair} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodePair}\n */\nproto.lnrpc.NodePair.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodePair.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodePair.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodePair} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodePair.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getTo_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes from = 1;\n * @return {string}\n */\nproto.lnrpc.NodePair.prototype.getFrom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes from = 1;\n * This is a type-conversion wrapper around `getFrom()`\n * @return {string}\n */\nproto.lnrpc.NodePair.prototype.getFrom_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getFrom()));\n};\n\n\n/**\n * optional bytes from = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getFrom()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodePair.prototype.getFrom_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getFrom()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.NodePair.prototype.setFrom = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes to = 2;\n * @return {string}\n */\nproto.lnrpc.NodePair.prototype.getTo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes to = 2;\n * This is a type-conversion wrapper around `getTo()`\n * @return {string}\n */\nproto.lnrpc.NodePair.prototype.getTo_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTo()));\n};\n\n\n/**\n * optional bytes to = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTo()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodePair.prototype.getTo_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTo()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.NodePair.prototype.setTo = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.EdgeLocator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.EdgeLocator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.EdgeLocator.displayName = 'proto.lnrpc.EdgeLocator';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.EdgeLocator.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.EdgeLocator.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.EdgeLocator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EdgeLocator.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    directionReverse: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.EdgeLocator}\n */\nproto.lnrpc.EdgeLocator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.EdgeLocator;\n  return proto.lnrpc.EdgeLocator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.EdgeLocator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.EdgeLocator}\n */\nproto.lnrpc.EdgeLocator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChannelId(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDirectionReverse(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.EdgeLocator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.EdgeLocator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.EdgeLocator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.EdgeLocator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getDirectionReverse();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 channel_id = 1;\n * @return {string}\n */\nproto.lnrpc.EdgeLocator.prototype.getChannelId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.EdgeLocator.prototype.setChannelId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool direction_reverse = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.EdgeLocator.prototype.getDirectionReverse = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.EdgeLocator.prototype.setDirectionReverse = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.QueryRoutesResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.QueryRoutesResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.QueryRoutesResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.QueryRoutesResponse.displayName = 'proto.lnrpc.QueryRoutesResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.QueryRoutesResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.QueryRoutesResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.QueryRoutesResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.QueryRoutesResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    routesList: jspb.Message.toObjectList(msg.getRoutesList(),\n    proto.lnrpc.Route.toObject, includeInstance),\n    successProb: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.QueryRoutesResponse}\n */\nproto.lnrpc.QueryRoutesResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.QueryRoutesResponse;\n  return proto.lnrpc.QueryRoutesResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.QueryRoutesResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.QueryRoutesResponse}\n */\nproto.lnrpc.QueryRoutesResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Route;\n      reader.readMessage(value,proto.lnrpc.Route.deserializeBinaryFromReader);\n      msg.addRoutes(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setSuccessProb(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.QueryRoutesResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.QueryRoutesResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.QueryRoutesResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRoutesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Route.serializeBinaryToWriter\n    );\n  }\n  f = message.getSuccessProb();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated Route routes = 1;\n * @return {!Array.<!proto.lnrpc.Route>}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.getRoutesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Route>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Route, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Route>} value */\nproto.lnrpc.QueryRoutesResponse.prototype.setRoutesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Route=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Route}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.addRoutes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Route, opt_index);\n};\n\n\nproto.lnrpc.QueryRoutesResponse.prototype.clearRoutesList = function() {\n  this.setRoutesList([]);\n};\n\n\n/**\n * optional double success_prob = 2;\n * @return {number}\n */\nproto.lnrpc.QueryRoutesResponse.prototype.getSuccessProb = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.QueryRoutesResponse.prototype.setSuccessProb = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Hop = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Hop, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Hop.displayName = 'proto.lnrpc.Hop';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Hop.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Hop.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Hop} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Hop.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    chanCapacity: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    amtToForward: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    fee: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    expiry: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    amtToForwardMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    feeMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    pubKey: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    tlvPayload: jspb.Message.getFieldWithDefault(msg, 9, false),\n    mppRecord: (f = msg.getMppRecord()) && proto.lnrpc.MPPRecord.toObject(includeInstance, f),\n    customRecordsMap: (f = msg.getCustomRecordsMap()) ? f.toObject(includeInstance, undefined) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Hop}\n */\nproto.lnrpc.Hop.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Hop;\n  return proto.lnrpc.Hop.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Hop} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Hop}\n */\nproto.lnrpc.Hop.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setChanCapacity(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtToForward(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFee(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setExpiry(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtToForwardMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeMsat(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setTlvPayload(value);\n      break;\n    case 10:\n      var value = new proto.lnrpc.MPPRecord;\n      reader.readMessage(value,proto.lnrpc.MPPRecord.deserializeBinaryFromReader);\n      msg.setMppRecord(value);\n      break;\n    case 11:\n      var value = msg.getCustomRecordsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readBytes);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Hop.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Hop.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Hop} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Hop.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getChanCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getAmtToForward();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getExpiry();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getAmtToForwardMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getTlvPayload();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n  f = message.getMppRecord();\n  if (f != null) {\n    writer.writeMessage(\n      10,\n      f,\n      proto.lnrpc.MPPRecord.serializeBinaryToWriter\n    );\n  }\n  f = message.getCustomRecordsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeBytes);\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.Hop.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Hop.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 chan_capacity = 2;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getChanCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setChanCapacity = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 amt_to_forward = 3;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getAmtToForward = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setAmtToForward = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 fee = 4;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setFee = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 expiry = 5;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setExpiry = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 amt_to_forward_msat = 6;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getAmtToForwardMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setAmtToForwardMsat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 fee_msat = 7;\n * @return {number}\n */\nproto.lnrpc.Hop.prototype.getFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Hop.prototype.setFeeMsat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string pub_key = 8;\n * @return {string}\n */\nproto.lnrpc.Hop.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Hop.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional bool tlv_payload = 9;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Hop.prototype.getTlvPayload = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Hop.prototype.setTlvPayload = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional MPPRecord mpp_record = 10;\n * @return {?proto.lnrpc.MPPRecord}\n */\nproto.lnrpc.Hop.prototype.getMppRecord = function() {\n  return /** @type{?proto.lnrpc.MPPRecord} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.MPPRecord, 10));\n};\n\n\n/** @param {?proto.lnrpc.MPPRecord|undefined} value */\nproto.lnrpc.Hop.prototype.setMppRecord = function(value) {\n  jspb.Message.setWrapperField(this, 10, value);\n};\n\n\nproto.lnrpc.Hop.prototype.clearMppRecord = function() {\n  this.setMppRecord(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Hop.prototype.hasMppRecord = function() {\n  return jspb.Message.getField(this, 10) != null;\n};\n\n\n/**\n * map<uint64, bytes> custom_records = 11;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!(string|Uint8Array)>}\n */\nproto.lnrpc.Hop.prototype.getCustomRecordsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 11, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.Hop.prototype.clearCustomRecordsMap = function() {\n  this.getCustomRecordsMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.MPPRecord = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.MPPRecord, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.MPPRecord.displayName = 'proto.lnrpc.MPPRecord';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.MPPRecord.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.MPPRecord.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.MPPRecord} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MPPRecord.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentAddr: msg.getPaymentAddr_asB64(),\n    totalAmtMsat: jspb.Message.getFieldWithDefault(msg, 10, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.MPPRecord}\n */\nproto.lnrpc.MPPRecord.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.MPPRecord;\n  return proto.lnrpc.MPPRecord.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.MPPRecord} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.MPPRecord}\n */\nproto.lnrpc.MPPRecord.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 11:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentAddr(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalAmtMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.MPPRecord.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.MPPRecord.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.MPPRecord} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MPPRecord.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentAddr_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      11,\n      f\n    );\n  }\n  f = message.getTotalAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * @return {string}\n */\nproto.lnrpc.MPPRecord.prototype.getPaymentAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {string}\n */\nproto.lnrpc.MPPRecord.prototype.getPaymentAddr_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentAddr()));\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.MPPRecord.prototype.getPaymentAddr_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentAddr()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.MPPRecord.prototype.setPaymentAddr = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional int64 total_amt_msat = 10;\n * @return {number}\n */\nproto.lnrpc.MPPRecord.prototype.getTotalAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.MPPRecord.prototype.setTotalAmtMsat = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Route = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Route.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Route, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Route.displayName = 'proto.lnrpc.Route';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Route.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Route.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Route.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Route} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Route.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    totalTimeLock: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    totalFees: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    totalAmt: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    hopsList: jspb.Message.toObjectList(msg.getHopsList(),\n    proto.lnrpc.Hop.toObject, includeInstance),\n    totalFeesMsat: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    totalAmtMsat: jspb.Message.getFieldWithDefault(msg, 6, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Route}\n */\nproto.lnrpc.Route.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Route;\n  return proto.lnrpc.Route.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Route} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Route}\n */\nproto.lnrpc.Route.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTotalTimeLock(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalFees(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalAmt(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.Hop;\n      reader.readMessage(value,proto.lnrpc.Hop.deserializeBinaryFromReader);\n      msg.addHops(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalFeesMsat(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalAmtMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Route.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Route.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Route} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Route.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTotalTimeLock();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getTotalFees();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getTotalAmt();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getHopsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.lnrpc.Hop.serializeBinaryToWriter\n    );\n  }\n  f = message.getTotalFeesMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getTotalAmtMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 total_time_lock = 1;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalTimeLock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalTimeLock = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 total_fees = 2;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalFees = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalFees = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 total_amt = 3;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalAmt = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalAmt = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * repeated Hop hops = 4;\n * @return {!Array.<!proto.lnrpc.Hop>}\n */\nproto.lnrpc.Route.prototype.getHopsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Hop>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Hop, 4));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Hop>} value */\nproto.lnrpc.Route.prototype.setHopsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Hop=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Hop}\n */\nproto.lnrpc.Route.prototype.addHops = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.lnrpc.Hop, opt_index);\n};\n\n\nproto.lnrpc.Route.prototype.clearHopsList = function() {\n  this.setHopsList([]);\n};\n\n\n/**\n * optional int64 total_fees_msat = 5;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalFeesMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalFeesMsat = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 total_amt_msat = 6;\n * @return {number}\n */\nproto.lnrpc.Route.prototype.getTotalAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Route.prototype.setTotalAmtMsat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NodeInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeInfoRequest.displayName = 'proto.lnrpc.NodeInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    includeChannels: jspb.Message.getFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeInfoRequest}\n */\nproto.lnrpc.NodeInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeInfoRequest;\n  return proto.lnrpc.NodeInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeInfoRequest}\n */\nproto.lnrpc.NodeInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getIncludeChannels();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pub_key = 1;\n * @return {string}\n */\nproto.lnrpc.NodeInfoRequest.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeInfoRequest.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bool include_channels = 2;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.NodeInfoRequest.prototype.getIncludeChannels = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.NodeInfoRequest.prototype.setIncludeChannels = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.NodeInfo.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.NodeInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeInfo.displayName = 'proto.lnrpc.NodeInfo';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.NodeInfo.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    node: (f = msg.getNode()) && proto.lnrpc.LightningNode.toObject(includeInstance, f),\n    numChannels: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    totalCapacity: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    channelsList: jspb.Message.toObjectList(msg.getChannelsList(),\n    proto.lnrpc.ChannelEdge.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeInfo}\n */\nproto.lnrpc.NodeInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeInfo;\n  return proto.lnrpc.NodeInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeInfo}\n */\nproto.lnrpc.NodeInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.LightningNode;\n      reader.readMessage(value,proto.lnrpc.LightningNode.deserializeBinaryFromReader);\n      msg.setNode(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumChannels(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalCapacity(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.ChannelEdge;\n      reader.readMessage(value,proto.lnrpc.ChannelEdge.deserializeBinaryFromReader);\n      msg.addChannels(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNode();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.LightningNode.serializeBinaryToWriter\n    );\n  }\n  f = message.getNumChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getTotalCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getChannelsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.lnrpc.ChannelEdge.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional LightningNode node = 1;\n * @return {?proto.lnrpc.LightningNode}\n */\nproto.lnrpc.NodeInfo.prototype.getNode = function() {\n  return /** @type{?proto.lnrpc.LightningNode} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.LightningNode, 1));\n};\n\n\n/** @param {?proto.lnrpc.LightningNode|undefined} value */\nproto.lnrpc.NodeInfo.prototype.setNode = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.NodeInfo.prototype.clearNode = function() {\n  this.setNode(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.NodeInfo.prototype.hasNode = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional uint32 num_channels = 2;\n * @return {number}\n */\nproto.lnrpc.NodeInfo.prototype.getNumChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NodeInfo.prototype.setNumChannels = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 total_capacity = 3;\n * @return {number}\n */\nproto.lnrpc.NodeInfo.prototype.getTotalCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NodeInfo.prototype.setTotalCapacity = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * repeated ChannelEdge channels = 4;\n * @return {!Array.<!proto.lnrpc.ChannelEdge>}\n */\nproto.lnrpc.NodeInfo.prototype.getChannelsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelEdge>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelEdge, 4));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelEdge>} value */\nproto.lnrpc.NodeInfo.prototype.setChannelsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelEdge=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelEdge}\n */\nproto.lnrpc.NodeInfo.prototype.addChannels = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.lnrpc.ChannelEdge, opt_index);\n};\n\n\nproto.lnrpc.NodeInfo.prototype.clearChannelsList = function() {\n  this.setChannelsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.LightningNode = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.LightningNode.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.LightningNode, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.LightningNode.displayName = 'proto.lnrpc.LightningNode';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.LightningNode.repeatedFields_ = [4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.LightningNode.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.LightningNode.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.LightningNode} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.LightningNode.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    lastUpdate: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    pubKey: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    alias: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    addressesList: jspb.Message.toObjectList(msg.getAddressesList(),\n    proto.lnrpc.NodeAddress.toObject, includeInstance),\n    color: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.LightningNode}\n */\nproto.lnrpc.LightningNode.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.LightningNode;\n  return proto.lnrpc.LightningNode.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.LightningNode} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.LightningNode}\n */\nproto.lnrpc.LightningNode.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLastUpdate(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPubKey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.NodeAddress;\n      reader.readMessage(value,proto.lnrpc.NodeAddress.deserializeBinaryFromReader);\n      msg.addAddresses(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setColor(value);\n      break;\n    case 6:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.LightningNode.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.LightningNode.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.LightningNode} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.LightningNode.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLastUpdate();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getPubKey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getAddressesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.lnrpc.NodeAddress.serializeBinaryToWriter\n    );\n  }\n  f = message.getColor();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * optional uint32 last_update = 1;\n * @return {number}\n */\nproto.lnrpc.LightningNode.prototype.getLastUpdate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.LightningNode.prototype.setLastUpdate = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string pub_key = 2;\n * @return {string}\n */\nproto.lnrpc.LightningNode.prototype.getPubKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningNode.prototype.setPubKey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional string alias = 3;\n * @return {string}\n */\nproto.lnrpc.LightningNode.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningNode.prototype.setAlias = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * repeated NodeAddress addresses = 4;\n * @return {!Array.<!proto.lnrpc.NodeAddress>}\n */\nproto.lnrpc.LightningNode.prototype.getAddressesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.NodeAddress>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.NodeAddress, 4));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.NodeAddress>} value */\nproto.lnrpc.LightningNode.prototype.setAddressesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.NodeAddress=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.NodeAddress}\n */\nproto.lnrpc.LightningNode.prototype.addAddresses = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.lnrpc.NodeAddress, opt_index);\n};\n\n\nproto.lnrpc.LightningNode.prototype.clearAddressesList = function() {\n  this.setAddressesList([]);\n};\n\n\n/**\n * optional string color = 5;\n * @return {string}\n */\nproto.lnrpc.LightningNode.prototype.getColor = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.LightningNode.prototype.setColor = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * map<uint32, Feature> features = 6;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.LightningNode.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 6, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.LightningNode.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NodeAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeAddress.displayName = 'proto.lnrpc.NodeAddress';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    network: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    addr: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeAddress}\n */\nproto.lnrpc.NodeAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeAddress;\n  return proto.lnrpc.NodeAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeAddress}\n */\nproto.lnrpc.NodeAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNetwork(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddr(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNetwork();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string network = 1;\n * @return {string}\n */\nproto.lnrpc.NodeAddress.prototype.getNetwork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeAddress.prototype.setNetwork = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string addr = 2;\n * @return {string}\n */\nproto.lnrpc.NodeAddress.prototype.getAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeAddress.prototype.setAddr = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RoutingPolicy = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.RoutingPolicy, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RoutingPolicy.displayName = 'proto.lnrpc.RoutingPolicy';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RoutingPolicy.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RoutingPolicy.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RoutingPolicy} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RoutingPolicy.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    timeLockDelta: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    minHtlc: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    feeBaseMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    feeRateMilliMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    disabled: jspb.Message.getFieldWithDefault(msg, 5, false),\n    maxHtlcMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    lastUpdate: jspb.Message.getFieldWithDefault(msg, 7, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.RoutingPolicy.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RoutingPolicy;\n  return proto.lnrpc.RoutingPolicy.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RoutingPolicy} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.RoutingPolicy.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTimeLockDelta(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMinHtlc(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeBaseMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeRateMilliMsat(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDisabled(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxHtlcMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLastUpdate(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RoutingPolicy.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RoutingPolicy.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RoutingPolicy} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RoutingPolicy.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTimeLockDelta();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getMinHtlc();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getFeeBaseMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFeeRateMilliMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getDisabled();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n  f = message.getMaxHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getLastUpdate();\n  if (f !== 0) {\n    writer.writeUint32(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 time_lock_delta = 1;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getTimeLockDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setTimeLockDelta = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 min_htlc = 2;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getMinHtlc = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setMinHtlc = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 fee_base_msat = 3;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getFeeBaseMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setFeeBaseMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 fee_rate_milli_msat = 4;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getFeeRateMilliMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setFeeRateMilliMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bool disabled = 5;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.RoutingPolicy.prototype.getDisabled = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.RoutingPolicy.prototype.setDisabled = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 max_htlc_msat = 6;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getMaxHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setMaxHtlcMsat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint32 last_update = 7;\n * @return {number}\n */\nproto.lnrpc.RoutingPolicy.prototype.getLastUpdate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.RoutingPolicy.prototype.setLastUpdate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelEdge = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelEdge, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelEdge.displayName = 'proto.lnrpc.ChannelEdge';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelEdge.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelEdge.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelEdge} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEdge.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    chanPoint: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    lastUpdate: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    node1Pub: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    node2Pub: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    node1Policy: (f = msg.getNode1Policy()) && proto.lnrpc.RoutingPolicy.toObject(includeInstance, f),\n    node2Policy: (f = msg.getNode2Policy()) && proto.lnrpc.RoutingPolicy.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelEdge}\n */\nproto.lnrpc.ChannelEdge.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelEdge;\n  return proto.lnrpc.ChannelEdge.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelEdge} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelEdge}\n */\nproto.lnrpc.ChannelEdge.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChannelId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChanPoint(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLastUpdate(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNode1Pub(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNode2Pub(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 7:\n      var value = new proto.lnrpc.RoutingPolicy;\n      reader.readMessage(value,proto.lnrpc.RoutingPolicy.deserializeBinaryFromReader);\n      msg.setNode1Policy(value);\n      break;\n    case 8:\n      var value = new proto.lnrpc.RoutingPolicy;\n      reader.readMessage(value,proto.lnrpc.RoutingPolicy.deserializeBinaryFromReader);\n      msg.setNode2Policy(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelEdge.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelEdge.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelEdge} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEdge.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getLastUpdate();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getNode1Pub();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getNode2Pub();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getNode1Policy();\n  if (f != null) {\n    writer.writeMessage(\n      7,\n      f,\n      proto.lnrpc.RoutingPolicy.serializeBinaryToWriter\n    );\n  }\n  f = message.getNode2Policy();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.lnrpc.RoutingPolicy.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 channel_id = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelEdge.prototype.getChannelId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdge.prototype.setChannelId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string chan_point = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelEdge.prototype.getChanPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdge.prototype.setChanPoint = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 last_update = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelEdge.prototype.getLastUpdate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelEdge.prototype.setLastUpdate = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string node1_pub = 4;\n * @return {string}\n */\nproto.lnrpc.ChannelEdge.prototype.getNode1Pub = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdge.prototype.setNode1Pub = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string node2_pub = 5;\n * @return {string}\n */\nproto.lnrpc.ChannelEdge.prototype.getNode2Pub = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdge.prototype.setNode2Pub = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 capacity = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelEdge.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelEdge.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional RoutingPolicy node1_policy = 7;\n * @return {?proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.ChannelEdge.prototype.getNode1Policy = function() {\n  return /** @type{?proto.lnrpc.RoutingPolicy} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.RoutingPolicy, 7));\n};\n\n\n/** @param {?proto.lnrpc.RoutingPolicy|undefined} value */\nproto.lnrpc.ChannelEdge.prototype.setNode1Policy = function(value) {\n  jspb.Message.setWrapperField(this, 7, value);\n};\n\n\nproto.lnrpc.ChannelEdge.prototype.clearNode1Policy = function() {\n  this.setNode1Policy(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEdge.prototype.hasNode1Policy = function() {\n  return jspb.Message.getField(this, 7) != null;\n};\n\n\n/**\n * optional RoutingPolicy node2_policy = 8;\n * @return {?proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.ChannelEdge.prototype.getNode2Policy = function() {\n  return /** @type{?proto.lnrpc.RoutingPolicy} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.RoutingPolicy, 8));\n};\n\n\n/** @param {?proto.lnrpc.RoutingPolicy|undefined} value */\nproto.lnrpc.ChannelEdge.prototype.setNode2Policy = function(value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n\n\nproto.lnrpc.ChannelEdge.prototype.clearNode2Policy = function() {\n  this.setNode2Policy(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEdge.prototype.hasNode2Policy = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelGraphRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelGraphRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelGraphRequest.displayName = 'proto.lnrpc.ChannelGraphRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelGraphRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelGraphRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelGraphRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelGraphRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    includeUnannounced: jspb.Message.getFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelGraphRequest}\n */\nproto.lnrpc.ChannelGraphRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelGraphRequest;\n  return proto.lnrpc.ChannelGraphRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelGraphRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelGraphRequest}\n */\nproto.lnrpc.ChannelGraphRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeUnannounced(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelGraphRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelGraphRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelGraphRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelGraphRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIncludeUnannounced();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool include_unannounced = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ChannelGraphRequest.prototype.getIncludeUnannounced = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ChannelGraphRequest.prototype.setIncludeUnannounced = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelGraph = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ChannelGraph.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ChannelGraph, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelGraph.displayName = 'proto.lnrpc.ChannelGraph';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ChannelGraph.repeatedFields_ = [1,2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelGraph.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelGraph.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelGraph} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelGraph.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodesList: jspb.Message.toObjectList(msg.getNodesList(),\n    proto.lnrpc.LightningNode.toObject, includeInstance),\n    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),\n    proto.lnrpc.ChannelEdge.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelGraph}\n */\nproto.lnrpc.ChannelGraph.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelGraph;\n  return proto.lnrpc.ChannelGraph.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelGraph} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelGraph}\n */\nproto.lnrpc.ChannelGraph.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.LightningNode;\n      reader.readMessage(value,proto.lnrpc.LightningNode.deserializeBinaryFromReader);\n      msg.addNodes(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelEdge;\n      reader.readMessage(value,proto.lnrpc.ChannelEdge.deserializeBinaryFromReader);\n      msg.addEdges(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelGraph.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelGraph.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelGraph} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelGraph.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.LightningNode.serializeBinaryToWriter\n    );\n  }\n  f = message.getEdgesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelEdge.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated LightningNode nodes = 1;\n * @return {!Array.<!proto.lnrpc.LightningNode>}\n */\nproto.lnrpc.ChannelGraph.prototype.getNodesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.LightningNode>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.LightningNode, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.LightningNode>} value */\nproto.lnrpc.ChannelGraph.prototype.setNodesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.LightningNode=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.LightningNode}\n */\nproto.lnrpc.ChannelGraph.prototype.addNodes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.LightningNode, opt_index);\n};\n\n\nproto.lnrpc.ChannelGraph.prototype.clearNodesList = function() {\n  this.setNodesList([]);\n};\n\n\n/**\n * repeated ChannelEdge edges = 2;\n * @return {!Array.<!proto.lnrpc.ChannelEdge>}\n */\nproto.lnrpc.ChannelGraph.prototype.getEdgesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelEdge>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelEdge, 2));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelEdge>} value */\nproto.lnrpc.ChannelGraph.prototype.setEdgesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelEdge=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelEdge}\n */\nproto.lnrpc.ChannelGraph.prototype.addEdges = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.lnrpc.ChannelEdge, opt_index);\n};\n\n\nproto.lnrpc.ChannelGraph.prototype.clearEdgesList = function() {\n  this.setEdgesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeMetricsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.NodeMetricsRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.NodeMetricsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeMetricsRequest.displayName = 'proto.lnrpc.NodeMetricsRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.NodeMetricsRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeMetricsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeMetricsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeMetricsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeMetricsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    typesList: jspb.Message.getRepeatedField(msg, 1)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeMetricsRequest}\n */\nproto.lnrpc.NodeMetricsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeMetricsRequest;\n  return proto.lnrpc.NodeMetricsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeMetricsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeMetricsRequest}\n */\nproto.lnrpc.NodeMetricsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Array.<!proto.lnrpc.NodeMetricType>} */ (reader.readPackedEnum());\n      msg.setTypesList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeMetricsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeMetricsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeMetricsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeMetricsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTypesList();\n  if (f.length > 0) {\n    writer.writePackedEnum(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated NodeMetricType types = 1;\n * @return {!Array.<!proto.lnrpc.NodeMetricType>}\n */\nproto.lnrpc.NodeMetricsRequest.prototype.getTypesList = function() {\n  return /** @type {!Array.<!proto.lnrpc.NodeMetricType>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.NodeMetricType>} value */\nproto.lnrpc.NodeMetricsRequest.prototype.setTypesList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!proto.lnrpc.NodeMetricType} value\n * @param {number=} opt_index\n */\nproto.lnrpc.NodeMetricsRequest.prototype.addTypes = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.lnrpc.NodeMetricsRequest.prototype.clearTypesList = function() {\n  this.setTypesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeMetricsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NodeMetricsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeMetricsResponse.displayName = 'proto.lnrpc.NodeMetricsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeMetricsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeMetricsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeMetricsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeMetricsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    betweennessCentralityMap: (f = msg.getBetweennessCentralityMap()) ? f.toObject(includeInstance, proto.lnrpc.FloatMetric.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeMetricsResponse}\n */\nproto.lnrpc.NodeMetricsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeMetricsResponse;\n  return proto.lnrpc.NodeMetricsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeMetricsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeMetricsResponse}\n */\nproto.lnrpc.NodeMetricsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = msg.getBetweennessCentralityMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.FloatMetric.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeMetricsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeMetricsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeMetricsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeMetricsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBetweennessCentralityMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.FloatMetric.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * map<string, FloatMetric> betweenness_centrality = 1;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,!proto.lnrpc.FloatMetric>}\n */\nproto.lnrpc.NodeMetricsResponse.prototype.getBetweennessCentralityMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,!proto.lnrpc.FloatMetric>} */ (\n      jspb.Message.getMapField(this, 1, opt_noLazyCreate,\n      proto.lnrpc.FloatMetric));\n};\n\n\nproto.lnrpc.NodeMetricsResponse.prototype.clearBetweennessCentralityMap = function() {\n  this.getBetweennessCentralityMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FloatMetric = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FloatMetric, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FloatMetric.displayName = 'proto.lnrpc.FloatMetric';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FloatMetric.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FloatMetric.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FloatMetric} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FloatMetric.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),\n    normalizedValue: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FloatMetric}\n */\nproto.lnrpc.FloatMetric.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FloatMetric;\n  return proto.lnrpc.FloatMetric.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FloatMetric} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FloatMetric}\n */\nproto.lnrpc.FloatMetric.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setValue(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setNormalizedValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FloatMetric.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FloatMetric.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FloatMetric} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FloatMetric.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      1,\n      f\n    );\n  }\n  f = message.getNormalizedValue();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional double value = 1;\n * @return {number}\n */\nproto.lnrpc.FloatMetric.prototype.getValue = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FloatMetric.prototype.setValue = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional double normalized_value = 2;\n * @return {number}\n */\nproto.lnrpc.FloatMetric.prototype.getNormalizedValue = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FloatMetric.prototype.setNormalizedValue = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChanInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChanInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChanInfoRequest.displayName = 'proto.lnrpc.ChanInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChanInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChanInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChanInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChanInfoRequest}\n */\nproto.lnrpc.ChanInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChanInfoRequest;\n  return proto.lnrpc.ChanInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChanInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChanInfoRequest}\n */\nproto.lnrpc.ChanInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChanInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChanInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.ChanInfoRequest.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChanInfoRequest.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NetworkInfoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NetworkInfoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NetworkInfoRequest.displayName = 'proto.lnrpc.NetworkInfoRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NetworkInfoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NetworkInfoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NetworkInfoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NetworkInfoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NetworkInfoRequest}\n */\nproto.lnrpc.NetworkInfoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NetworkInfoRequest;\n  return proto.lnrpc.NetworkInfoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NetworkInfoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NetworkInfoRequest}\n */\nproto.lnrpc.NetworkInfoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NetworkInfoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NetworkInfoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NetworkInfoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NetworkInfoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NetworkInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.NetworkInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NetworkInfo.displayName = 'proto.lnrpc.NetworkInfo';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NetworkInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NetworkInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NetworkInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NetworkInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    graphDiameter: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    avgOutDegree: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),\n    maxOutDegree: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    numNodes: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    numChannels: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    totalNetworkCapacity: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    avgChannelSize: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),\n    minChannelSize: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    maxChannelSize: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    medianChannelSizeSat: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    numZombieChans: jspb.Message.getFieldWithDefault(msg, 11, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NetworkInfo}\n */\nproto.lnrpc.NetworkInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NetworkInfo;\n  return proto.lnrpc.NetworkInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NetworkInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NetworkInfo}\n */\nproto.lnrpc.NetworkInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setGraphDiameter(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setAvgOutDegree(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMaxOutDegree(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumNodes(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumChannels(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalNetworkCapacity(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setAvgChannelSize(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMinChannelSize(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMaxChannelSize(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setMedianChannelSizeSat(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNumZombieChans(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NetworkInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NetworkInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NetworkInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NetworkInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getGraphDiameter();\n  if (f !== 0) {\n    writer.writeUint32(\n      1,\n      f\n    );\n  }\n  f = message.getAvgOutDegree();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      2,\n      f\n    );\n  }\n  f = message.getMaxOutDegree();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getNumNodes();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getNumChannels();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getTotalNetworkCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getAvgChannelSize();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      7,\n      f\n    );\n  }\n  f = message.getMinChannelSize();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getMaxChannelSize();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getMedianChannelSizeSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n  f = message.getNumZombieChans();\n  if (f !== 0) {\n    writer.writeUint64(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint32 graph_diameter = 1;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getGraphDiameter = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setGraphDiameter = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional double avg_out_degree = 2;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getAvgOutDegree = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setAvgOutDegree = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 max_out_degree = 3;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getMaxOutDegree = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setMaxOutDegree = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 num_nodes = 4;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getNumNodes = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setNumNodes = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 num_channels = 5;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getNumChannels = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setNumChannels = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 total_network_capacity = 6;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getTotalNetworkCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setTotalNetworkCapacity = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional double avg_channel_size = 7;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getAvgChannelSize = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setAvgChannelSize = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 min_channel_size = 8;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getMinChannelSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setMinChannelSize = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 max_channel_size = 9;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getMaxChannelSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setMaxChannelSize = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional int64 median_channel_size_sat = 10;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getMedianChannelSizeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setMedianChannelSizeSat = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional uint64 num_zombie_chans = 11;\n * @return {number}\n */\nproto.lnrpc.NetworkInfo.prototype.getNumZombieChans = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.NetworkInfo.prototype.setNumZombieChans = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.StopRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.StopRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.StopRequest.displayName = 'proto.lnrpc.StopRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.StopRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.StopRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.StopRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.StopRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.StopRequest}\n */\nproto.lnrpc.StopRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.StopRequest;\n  return proto.lnrpc.StopRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.StopRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.StopRequest}\n */\nproto.lnrpc.StopRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.StopRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.StopRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.StopRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.StopRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.StopResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.StopResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.StopResponse.displayName = 'proto.lnrpc.StopResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.StopResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.StopResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.StopResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.StopResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.StopResponse}\n */\nproto.lnrpc.StopResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.StopResponse;\n  return proto.lnrpc.StopResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.StopResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.StopResponse}\n */\nproto.lnrpc.StopResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.StopResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.StopResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.StopResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.StopResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GraphTopologySubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.GraphTopologySubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GraphTopologySubscription.displayName = 'proto.lnrpc.GraphTopologySubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GraphTopologySubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GraphTopologySubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GraphTopologySubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GraphTopologySubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GraphTopologySubscription}\n */\nproto.lnrpc.GraphTopologySubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GraphTopologySubscription;\n  return proto.lnrpc.GraphTopologySubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GraphTopologySubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GraphTopologySubscription}\n */\nproto.lnrpc.GraphTopologySubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GraphTopologySubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GraphTopologySubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GraphTopologySubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GraphTopologySubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.GraphTopologyUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.GraphTopologyUpdate.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.GraphTopologyUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.GraphTopologyUpdate.displayName = 'proto.lnrpc.GraphTopologyUpdate';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.GraphTopologyUpdate.repeatedFields_ = [1,2,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.GraphTopologyUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.GraphTopologyUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GraphTopologyUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodeUpdatesList: jspb.Message.toObjectList(msg.getNodeUpdatesList(),\n    proto.lnrpc.NodeUpdate.toObject, includeInstance),\n    channelUpdatesList: jspb.Message.toObjectList(msg.getChannelUpdatesList(),\n    proto.lnrpc.ChannelEdgeUpdate.toObject, includeInstance),\n    closedChansList: jspb.Message.toObjectList(msg.getClosedChansList(),\n    proto.lnrpc.ClosedChannelUpdate.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.GraphTopologyUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.GraphTopologyUpdate;\n  return proto.lnrpc.GraphTopologyUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.GraphTopologyUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.GraphTopologyUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.NodeUpdate;\n      reader.readMessage(value,proto.lnrpc.NodeUpdate.deserializeBinaryFromReader);\n      msg.addNodeUpdates(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelEdgeUpdate;\n      reader.readMessage(value,proto.lnrpc.ChannelEdgeUpdate.deserializeBinaryFromReader);\n      msg.addChannelUpdates(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ClosedChannelUpdate;\n      reader.readMessage(value,proto.lnrpc.ClosedChannelUpdate.deserializeBinaryFromReader);\n      msg.addClosedChans(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.GraphTopologyUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.GraphTopologyUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.GraphTopologyUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodeUpdatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.NodeUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getChannelUpdatesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelEdgeUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getClosedChansList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.lnrpc.ClosedChannelUpdate.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated NodeUpdate node_updates = 1;\n * @return {!Array.<!proto.lnrpc.NodeUpdate>}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.getNodeUpdatesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.NodeUpdate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.NodeUpdate, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.NodeUpdate>} value */\nproto.lnrpc.GraphTopologyUpdate.prototype.setNodeUpdatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.NodeUpdate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.NodeUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.addNodeUpdates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.NodeUpdate, opt_index);\n};\n\n\nproto.lnrpc.GraphTopologyUpdate.prototype.clearNodeUpdatesList = function() {\n  this.setNodeUpdatesList([]);\n};\n\n\n/**\n * repeated ChannelEdgeUpdate channel_updates = 2;\n * @return {!Array.<!proto.lnrpc.ChannelEdgeUpdate>}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.getChannelUpdatesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelEdgeUpdate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelEdgeUpdate, 2));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelEdgeUpdate>} value */\nproto.lnrpc.GraphTopologyUpdate.prototype.setChannelUpdatesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelEdgeUpdate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelEdgeUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.addChannelUpdates = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.lnrpc.ChannelEdgeUpdate, opt_index);\n};\n\n\nproto.lnrpc.GraphTopologyUpdate.prototype.clearChannelUpdatesList = function() {\n  this.setChannelUpdatesList([]);\n};\n\n\n/**\n * repeated ClosedChannelUpdate closed_chans = 3;\n * @return {!Array.<!proto.lnrpc.ClosedChannelUpdate>}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.getClosedChansList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ClosedChannelUpdate>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ClosedChannelUpdate, 3));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ClosedChannelUpdate>} value */\nproto.lnrpc.GraphTopologyUpdate.prototype.setClosedChansList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ClosedChannelUpdate=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ClosedChannelUpdate}\n */\nproto.lnrpc.GraphTopologyUpdate.prototype.addClosedChans = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.lnrpc.ClosedChannelUpdate, opt_index);\n};\n\n\nproto.lnrpc.GraphTopologyUpdate.prototype.clearClosedChansList = function() {\n  this.setClosedChansList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.NodeUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.NodeUpdate.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.NodeUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.NodeUpdate.displayName = 'proto.lnrpc.NodeUpdate';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.NodeUpdate.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.NodeUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.NodeUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.NodeUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addressesList: jspb.Message.getRepeatedField(msg, 1),\n    identityKey: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    globalFeatures: msg.getGlobalFeatures_asB64(),\n    alias: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    color: jspb.Message.getFieldWithDefault(msg, 5, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.NodeUpdate}\n */\nproto.lnrpc.NodeUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.NodeUpdate;\n  return proto.lnrpc.NodeUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.NodeUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.NodeUpdate}\n */\nproto.lnrpc.NodeUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addAddresses(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIdentityKey(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setGlobalFeatures(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAlias(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setColor(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.NodeUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.NodeUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.NodeUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddressesList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n  f = message.getIdentityKey();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getGlobalFeatures_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getAlias();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getColor();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string addresses = 1;\n * @return {!Array.<string>}\n */\nproto.lnrpc.NodeUpdate.prototype.getAddressesList = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/** @param {!Array.<string>} value */\nproto.lnrpc.NodeUpdate.prototype.setAddressesList = function(value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!string} value\n * @param {number=} opt_index\n */\nproto.lnrpc.NodeUpdate.prototype.addAddresses = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\nproto.lnrpc.NodeUpdate.prototype.clearAddressesList = function() {\n  this.setAddressesList([]);\n};\n\n\n/**\n * optional string identity_key = 2;\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getIdentityKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeUpdate.prototype.setIdentityKey = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bytes global_features = 3;\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getGlobalFeatures = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes global_features = 3;\n * This is a type-conversion wrapper around `getGlobalFeatures()`\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getGlobalFeatures_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getGlobalFeatures()));\n};\n\n\n/**\n * optional bytes global_features = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getGlobalFeatures()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.NodeUpdate.prototype.getGlobalFeatures_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getGlobalFeatures()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.NodeUpdate.prototype.setGlobalFeatures = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional string alias = 4;\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getAlias = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeUpdate.prototype.setAlias = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional string color = 5;\n * @return {string}\n */\nproto.lnrpc.NodeUpdate.prototype.getColor = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.NodeUpdate.prototype.setColor = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelEdgeUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelEdgeUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelEdgeUpdate.displayName = 'proto.lnrpc.ChannelEdgeUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelEdgeUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelEdgeUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEdgeUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    capacity: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    routingPolicy: (f = msg.getRoutingPolicy()) && proto.lnrpc.RoutingPolicy.toObject(includeInstance, f),\n    advertisingNode: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    connectingNode: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelEdgeUpdate}\n */\nproto.lnrpc.ChannelEdgeUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelEdgeUpdate;\n  return proto.lnrpc.ChannelEdgeUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelEdgeUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelEdgeUpdate}\n */\nproto.lnrpc.ChannelEdgeUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.RoutingPolicy;\n      reader.readMessage(value,proto.lnrpc.RoutingPolicy.deserializeBinaryFromReader);\n      msg.setRoutingPolicy(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAdvertisingNode(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setConnectingNode(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelEdgeUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelEdgeUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelEdgeUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getRoutingPolicy();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.RoutingPolicy.serializeBinaryToWriter\n    );\n  }\n  f = message.getAdvertisingNode();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getConnectingNode();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional ChannelPoint chan_point = 2;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 2));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.ChannelEdgeUpdate.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 capacity = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional RoutingPolicy routing_policy = 4;\n * @return {?proto.lnrpc.RoutingPolicy}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getRoutingPolicy = function() {\n  return /** @type{?proto.lnrpc.RoutingPolicy} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.RoutingPolicy, 4));\n};\n\n\n/** @param {?proto.lnrpc.RoutingPolicy|undefined} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setRoutingPolicy = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.lnrpc.ChannelEdgeUpdate.prototype.clearRoutingPolicy = function() {\n  this.setRoutingPolicy(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.hasRoutingPolicy = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional string advertising_node = 5;\n * @return {string}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getAdvertisingNode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setAdvertisingNode = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string connecting_node = 6;\n * @return {string}\n */\nproto.lnrpc.ChannelEdgeUpdate.prototype.getConnectingNode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelEdgeUpdate.prototype.setConnectingNode = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ClosedChannelUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ClosedChannelUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ClosedChannelUpdate.displayName = 'proto.lnrpc.ClosedChannelUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ClosedChannelUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ClosedChannelUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    capacity: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    closedHeight: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ClosedChannelUpdate}\n */\nproto.lnrpc.ClosedChannelUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ClosedChannelUpdate;\n  return proto.lnrpc.ClosedChannelUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ClosedChannelUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ClosedChannelUpdate}\n */\nproto.lnrpc.ClosedChannelUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCapacity(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setClosedHeight(value);\n      break;\n    case 4:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ClosedChannelUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ClosedChannelUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ClosedChannelUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getCapacity();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getClosedHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ClosedChannelUpdate.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 capacity = 2;\n * @return {number}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.getCapacity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ClosedChannelUpdate.prototype.setCapacity = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 closed_height = 3;\n * @return {number}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.getClosedHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ClosedChannelUpdate.prototype.setClosedHeight = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional ChannelPoint chan_point = 4;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 4));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ClosedChannelUpdate.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.lnrpc.ClosedChannelUpdate.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ClosedChannelUpdate.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.HopHint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.HopHint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.HopHint.displayName = 'proto.lnrpc.HopHint';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.HopHint.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.HopHint.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.HopHint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HopHint.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodeId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    chanId: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\n    feeBaseMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    feeProportionalMillionths: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    cltvExpiryDelta: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.HopHint}\n */\nproto.lnrpc.HopHint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.HopHint;\n  return proto.lnrpc.HopHint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.HopHint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.HopHint}\n */\nproto.lnrpc.HopHint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNodeId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFeeBaseMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFeeProportionalMillionths(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCltvExpiryDelta(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.HopHint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.HopHint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.HopHint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HopHint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodeId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      2,\n      f\n    );\n  }\n  f = message.getFeeBaseMsat();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getFeeProportionalMillionths();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getCltvExpiryDelta();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string node_id = 1;\n * @return {string}\n */\nproto.lnrpc.HopHint.prototype.getNodeId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.HopHint.prototype.setNodeId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 chan_id = 2;\n * @return {string}\n */\nproto.lnrpc.HopHint.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.HopHint.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 fee_base_msat = 3;\n * @return {number}\n */\nproto.lnrpc.HopHint.prototype.getFeeBaseMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HopHint.prototype.setFeeBaseMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 fee_proportional_millionths = 4;\n * @return {number}\n */\nproto.lnrpc.HopHint.prototype.getFeeProportionalMillionths = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HopHint.prototype.setFeeProportionalMillionths = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 cltv_expiry_delta = 5;\n * @return {number}\n */\nproto.lnrpc.HopHint.prototype.getCltvExpiryDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HopHint.prototype.setCltvExpiryDelta = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RouteHint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.RouteHint.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.RouteHint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RouteHint.displayName = 'proto.lnrpc.RouteHint';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.RouteHint.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RouteHint.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RouteHint.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RouteHint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RouteHint.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hopHintsList: jspb.Message.toObjectList(msg.getHopHintsList(),\n    proto.lnrpc.HopHint.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.RouteHint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RouteHint;\n  return proto.lnrpc.RouteHint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RouteHint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.RouteHint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.HopHint;\n      reader.readMessage(value,proto.lnrpc.HopHint.deserializeBinaryFromReader);\n      msg.addHopHints(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RouteHint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RouteHint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RouteHint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RouteHint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHopHintsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.HopHint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated HopHint hop_hints = 1;\n * @return {!Array.<!proto.lnrpc.HopHint>}\n */\nproto.lnrpc.RouteHint.prototype.getHopHintsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.HopHint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.HopHint, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.HopHint>} value */\nproto.lnrpc.RouteHint.prototype.setHopHintsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.HopHint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.HopHint}\n */\nproto.lnrpc.RouteHint.prototype.addHopHints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.HopHint, opt_index);\n};\n\n\nproto.lnrpc.RouteHint.prototype.clearHopHintsList = function() {\n  this.setHopHintsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Invoice = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Invoice.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Invoice, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Invoice.displayName = 'proto.lnrpc.Invoice';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Invoice.repeatedFields_ = [14,22];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Invoice.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Invoice.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Invoice} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Invoice.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    memo: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    rPreimage: msg.getRPreimage_asB64(),\n    rHash: msg.getRHash_asB64(),\n    value: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    valueMsat: jspb.Message.getFieldWithDefault(msg, 23, 0),\n    settled: jspb.Message.getFieldWithDefault(msg, 6, false),\n    creationDate: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    settleDate: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    paymentRequest: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    descriptionHash: msg.getDescriptionHash_asB64(),\n    expiry: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    fallbackAddr: jspb.Message.getFieldWithDefault(msg, 12, \"\"),\n    cltvExpiry: jspb.Message.getFieldWithDefault(msg, 13, 0),\n    routeHintsList: jspb.Message.toObjectList(msg.getRouteHintsList(),\n    proto.lnrpc.RouteHint.toObject, includeInstance),\n    pb_private: jspb.Message.getFieldWithDefault(msg, 15, false),\n    addIndex: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    settleIndex: jspb.Message.getFieldWithDefault(msg, 17, 0),\n    amtPaid: jspb.Message.getFieldWithDefault(msg, 18, 0),\n    amtPaidSat: jspb.Message.getFieldWithDefault(msg, 19, 0),\n    amtPaidMsat: jspb.Message.getFieldWithDefault(msg, 20, 0),\n    state: jspb.Message.getFieldWithDefault(msg, 21, 0),\n    htlcsList: jspb.Message.toObjectList(msg.getHtlcsList(),\n    proto.lnrpc.InvoiceHTLC.toObject, includeInstance),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : [],\n    isKeysend: jspb.Message.getFieldWithDefault(msg, 25, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Invoice}\n */\nproto.lnrpc.Invoice.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Invoice;\n  return proto.lnrpc.Invoice.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Invoice} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Invoice}\n */\nproto.lnrpc.Invoice.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMemo(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRPreimage(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRHash(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValue(value);\n      break;\n    case 23:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValueMsat(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSettled(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreationDate(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSettleDate(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentRequest(value);\n      break;\n    case 10:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDescriptionHash(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpiry(value);\n      break;\n    case 12:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFallbackAddr(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setCltvExpiry(value);\n      break;\n    case 14:\n      var value = new proto.lnrpc.RouteHint;\n      reader.readMessage(value,proto.lnrpc.RouteHint.deserializeBinaryFromReader);\n      msg.addRouteHints(value);\n      break;\n    case 15:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPrivate(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAddIndex(value);\n      break;\n    case 17:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSettleIndex(value);\n      break;\n    case 18:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtPaid(value);\n      break;\n    case 19:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtPaidSat(value);\n      break;\n    case 20:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmtPaidMsat(value);\n      break;\n    case 21:\n      var value = /** @type {!proto.lnrpc.Invoice.InvoiceState} */ (reader.readEnum());\n      msg.setState(value);\n      break;\n    case 22:\n      var value = new proto.lnrpc.InvoiceHTLC;\n      reader.readMessage(value,proto.lnrpc.InvoiceHTLC.deserializeBinaryFromReader);\n      msg.addHtlcs(value);\n      break;\n    case 24:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    case 25:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsKeysend(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Invoice.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Invoice.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Invoice} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Invoice.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMemo();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRPreimage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getRHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getValueMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      23,\n      f\n    );\n  }\n  f = message.getSettled();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n  f = message.getCreationDate();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getSettleDate();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getPaymentRequest();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getDescriptionHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      10,\n      f\n    );\n  }\n  f = message.getExpiry();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getFallbackAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      12,\n      f\n    );\n  }\n  f = message.getCltvExpiry();\n  if (f !== 0) {\n    writer.writeUint64(\n      13,\n      f\n    );\n  }\n  f = message.getRouteHintsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      14,\n      f,\n      proto.lnrpc.RouteHint.serializeBinaryToWriter\n    );\n  }\n  f = message.getPrivate();\n  if (f) {\n    writer.writeBool(\n      15,\n      f\n    );\n  }\n  f = message.getAddIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      16,\n      f\n    );\n  }\n  f = message.getSettleIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      17,\n      f\n    );\n  }\n  f = message.getAmtPaid();\n  if (f !== 0) {\n    writer.writeInt64(\n      18,\n      f\n    );\n  }\n  f = message.getAmtPaidSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      19,\n      f\n    );\n  }\n  f = message.getAmtPaidMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      20,\n      f\n    );\n  }\n  f = message.getState();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      21,\n      f\n    );\n  }\n  f = message.getHtlcsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      22,\n      f,\n      proto.lnrpc.InvoiceHTLC.serializeBinaryToWriter\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(24, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n  f = message.getIsKeysend();\n  if (f) {\n    writer.writeBool(\n      25,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Invoice.InvoiceState = {\n  OPEN: 0,\n  SETTLED: 1,\n  CANCELED: 2,\n  ACCEPTED: 3\n};\n\n/**\n * optional string memo = 1;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getMemo = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Invoice.prototype.setMemo = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes r_preimage = 3;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getRPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes r_preimage = 3;\n * This is a type-conversion wrapper around `getRPreimage()`\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getRPreimage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRPreimage()));\n};\n\n\n/**\n * optional bytes r_preimage = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRPreimage()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.Invoice.prototype.getRPreimage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRPreimage()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.Invoice.prototype.setRPreimage = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bytes r_hash = 4;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getRHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes r_hash = 4;\n * This is a type-conversion wrapper around `getRHash()`\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getRHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRHash()));\n};\n\n\n/**\n * optional bytes r_hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.Invoice.prototype.getRHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.Invoice.prototype.setRHash = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 value = 5;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setValue = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 value_msat = 23;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getValueMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setValueMsat = function(value) {\n  jspb.Message.setField(this, 23, value);\n};\n\n\n/**\n * optional bool settled = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Invoice.prototype.getSettled = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Invoice.prototype.setSettled = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 creation_date = 7;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getCreationDate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setCreationDate = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 settle_date = 8;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getSettleDate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setSettleDate = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string payment_request = 9;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getPaymentRequest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Invoice.prototype.setPaymentRequest = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional bytes description_hash = 10;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getDescriptionHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * optional bytes description_hash = 10;\n * This is a type-conversion wrapper around `getDescriptionHash()`\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getDescriptionHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDescriptionHash()));\n};\n\n\n/**\n * optional bytes description_hash = 10;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDescriptionHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.Invoice.prototype.getDescriptionHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDescriptionHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.Invoice.prototype.setDescriptionHash = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional int64 expiry = 11;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setExpiry = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional string fallback_addr = 12;\n * @return {string}\n */\nproto.lnrpc.Invoice.prototype.getFallbackAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Invoice.prototype.setFallbackAddr = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional uint64 cltv_expiry = 13;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getCltvExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setCltvExpiry = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * repeated RouteHint route_hints = 14;\n * @return {!Array.<!proto.lnrpc.RouteHint>}\n */\nproto.lnrpc.Invoice.prototype.getRouteHintsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.RouteHint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.RouteHint, 14));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.RouteHint>} value */\nproto.lnrpc.Invoice.prototype.setRouteHintsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 14, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.RouteHint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.Invoice.prototype.addRouteHints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.lnrpc.RouteHint, opt_index);\n};\n\n\nproto.lnrpc.Invoice.prototype.clearRouteHintsList = function() {\n  this.setRouteHintsList([]);\n};\n\n\n/**\n * optional bool private = 15;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Invoice.prototype.getPrivate = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Invoice.prototype.setPrivate = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * optional uint64 add_index = 16;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getAddIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setAddIndex = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n/**\n * optional uint64 settle_index = 17;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getSettleIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setSettleIndex = function(value) {\n  jspb.Message.setField(this, 17, value);\n};\n\n\n/**\n * optional int64 amt_paid = 18;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getAmtPaid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setAmtPaid = function(value) {\n  jspb.Message.setField(this, 18, value);\n};\n\n\n/**\n * optional int64 amt_paid_sat = 19;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getAmtPaidSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setAmtPaidSat = function(value) {\n  jspb.Message.setField(this, 19, value);\n};\n\n\n/**\n * optional int64 amt_paid_msat = 20;\n * @return {number}\n */\nproto.lnrpc.Invoice.prototype.getAmtPaidMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Invoice.prototype.setAmtPaidMsat = function(value) {\n  jspb.Message.setField(this, 20, value);\n};\n\n\n/**\n * optional InvoiceState state = 21;\n * @return {!proto.lnrpc.Invoice.InvoiceState}\n */\nproto.lnrpc.Invoice.prototype.getState = function() {\n  return /** @type {!proto.lnrpc.Invoice.InvoiceState} */ (jspb.Message.getFieldWithDefault(this, 21, 0));\n};\n\n\n/** @param {!proto.lnrpc.Invoice.InvoiceState} value */\nproto.lnrpc.Invoice.prototype.setState = function(value) {\n  jspb.Message.setField(this, 21, value);\n};\n\n\n/**\n * repeated InvoiceHTLC htlcs = 22;\n * @return {!Array.<!proto.lnrpc.InvoiceHTLC>}\n */\nproto.lnrpc.Invoice.prototype.getHtlcsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.InvoiceHTLC>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.InvoiceHTLC, 22));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.InvoiceHTLC>} value */\nproto.lnrpc.Invoice.prototype.setHtlcsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 22, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.InvoiceHTLC=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.InvoiceHTLC}\n */\nproto.lnrpc.Invoice.prototype.addHtlcs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.lnrpc.InvoiceHTLC, opt_index);\n};\n\n\nproto.lnrpc.Invoice.prototype.clearHtlcsList = function() {\n  this.setHtlcsList([]);\n};\n\n\n/**\n * map<uint32, Feature> features = 24;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.Invoice.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 24, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.Invoice.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n/**\n * optional bool is_keysend = 25;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Invoice.prototype.getIsKeysend = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 25, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Invoice.prototype.setIsKeysend = function(value) {\n  jspb.Message.setField(this, 25, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.InvoiceHTLC = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.InvoiceHTLC, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.InvoiceHTLC.displayName = 'proto.lnrpc.InvoiceHTLC';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.InvoiceHTLC.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.InvoiceHTLC.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.InvoiceHTLC} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.InvoiceHTLC.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 1, \"0\"),\n    htlcIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    amtMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    acceptHeight: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    acceptTime: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    resolveTime: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    expiryHeight: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    state: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    customRecordsMap: (f = msg.getCustomRecordsMap()) ? f.toObject(includeInstance, undefined) : [],\n    mppTotalAmtMsat: jspb.Message.getFieldWithDefault(msg, 10, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.InvoiceHTLC}\n */\nproto.lnrpc.InvoiceHTLC.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.InvoiceHTLC;\n  return proto.lnrpc.InvoiceHTLC.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.InvoiceHTLC} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.InvoiceHTLC}\n */\nproto.lnrpc.InvoiceHTLC.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHtlcIndex(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setAcceptHeight(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAcceptTime(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setResolveTime(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setExpiryHeight(value);\n      break;\n    case 8:\n      var value = /** @type {!proto.lnrpc.InvoiceHTLCState} */ (reader.readEnum());\n      msg.setState(value);\n      break;\n    case 9:\n      var value = msg.getCustomRecordsMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readBytes);\n         });\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMppTotalAmtMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.InvoiceHTLC.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.InvoiceHTLC.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.InvoiceHTLC} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.InvoiceHTLC.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      1,\n      f\n    );\n  }\n  f = message.getHtlcIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getAcceptHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      4,\n      f\n    );\n  }\n  f = message.getAcceptTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getResolveTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getExpiryHeight();\n  if (f !== 0) {\n    writer.writeInt32(\n      7,\n      f\n    );\n  }\n  f = message.getState();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      8,\n      f\n    );\n  }\n  f = message.getCustomRecordsMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(9, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeBytes);\n  }\n  f = message.getMppTotalAmtMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 1;\n * @return {string}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.InvoiceHTLC.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 htlc_index = 2;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getHtlcIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setHtlcIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 amt_msat = 3;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setAmtMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int32 accept_height = 4;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getAcceptHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setAcceptHeight = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 accept_time = 5;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getAcceptTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setAcceptTime = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional int64 resolve_time = 6;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getResolveTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setResolveTime = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int32 expiry_height = 7;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getExpiryHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setExpiryHeight = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional InvoiceHTLCState state = 8;\n * @return {!proto.lnrpc.InvoiceHTLCState}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getState = function() {\n  return /** @type {!proto.lnrpc.InvoiceHTLCState} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {!proto.lnrpc.InvoiceHTLCState} value */\nproto.lnrpc.InvoiceHTLC.prototype.setState = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * map<uint64, bytes> custom_records = 9;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!(string|Uint8Array)>}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getCustomRecordsMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!(string|Uint8Array)>} */ (\n      jspb.Message.getMapField(this, 9, opt_noLazyCreate,\n      null));\n};\n\n\nproto.lnrpc.InvoiceHTLC.prototype.clearCustomRecordsMap = function() {\n  this.getCustomRecordsMap().clear();\n};\n\n\n/**\n * optional uint64 mpp_total_amt_msat = 10;\n * @return {number}\n */\nproto.lnrpc.InvoiceHTLC.prototype.getMppTotalAmtMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceHTLC.prototype.setMppTotalAmtMsat = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.AddInvoiceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.AddInvoiceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.AddInvoiceResponse.displayName = 'proto.lnrpc.AddInvoiceResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.AddInvoiceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.AddInvoiceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AddInvoiceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rHash: msg.getRHash_asB64(),\n    paymentRequest: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    addIndex: jspb.Message.getFieldWithDefault(msg, 16, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.AddInvoiceResponse}\n */\nproto.lnrpc.AddInvoiceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.AddInvoiceResponse;\n  return proto.lnrpc.AddInvoiceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.AddInvoiceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.AddInvoiceResponse}\n */\nproto.lnrpc.AddInvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRHash(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentRequest(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAddIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.AddInvoiceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.AddInvoiceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AddInvoiceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPaymentRequest();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getAddIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      16,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes r_hash = 1;\n * @return {string}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getRHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes r_hash = 1;\n * This is a type-conversion wrapper around `getRHash()`\n * @return {string}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getRHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRHash()));\n};\n\n\n/**\n * optional bytes r_hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getRHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.AddInvoiceResponse.prototype.setRHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string payment_request = 2;\n * @return {string}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getPaymentRequest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.AddInvoiceResponse.prototype.setPaymentRequest = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 add_index = 16;\n * @return {number}\n */\nproto.lnrpc.AddInvoiceResponse.prototype.getAddIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.AddInvoiceResponse.prototype.setAddIndex = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PaymentHash = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PaymentHash, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PaymentHash.displayName = 'proto.lnrpc.PaymentHash';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PaymentHash.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PaymentHash.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PaymentHash} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PaymentHash.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rHashStr: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    rHash: msg.getRHash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PaymentHash}\n */\nproto.lnrpc.PaymentHash.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PaymentHash;\n  return proto.lnrpc.PaymentHash.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PaymentHash} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PaymentHash}\n */\nproto.lnrpc.PaymentHash.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRHashStr(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PaymentHash.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PaymentHash.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PaymentHash} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PaymentHash.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRHashStr();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string r_hash_str = 1;\n * @return {string}\n */\nproto.lnrpc.PaymentHash.prototype.getRHashStr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PaymentHash.prototype.setRHashStr = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes r_hash = 2;\n * @return {string}\n */\nproto.lnrpc.PaymentHash.prototype.getRHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes r_hash = 2;\n * This is a type-conversion wrapper around `getRHash()`\n * @return {string}\n */\nproto.lnrpc.PaymentHash.prototype.getRHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRHash()));\n};\n\n\n/**\n * optional bytes r_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PaymentHash.prototype.getRHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PaymentHash.prototype.setRHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListInvoiceRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListInvoiceRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListInvoiceRequest.displayName = 'proto.lnrpc.ListInvoiceRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListInvoiceRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListInvoiceRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListInvoiceRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pendingOnly: jspb.Message.getFieldWithDefault(msg, 1, false),\n    indexOffset: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    numMaxInvoices: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    reversed: jspb.Message.getFieldWithDefault(msg, 6, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListInvoiceRequest}\n */\nproto.lnrpc.ListInvoiceRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListInvoiceRequest;\n  return proto.lnrpc.ListInvoiceRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListInvoiceRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListInvoiceRequest}\n */\nproto.lnrpc.ListInvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setPendingOnly(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setIndexOffset(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setNumMaxInvoices(value);\n      break;\n    case 6:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setReversed(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListInvoiceRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListInvoiceRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListInvoiceRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPendingOnly();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getNumMaxInvoices();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getReversed();\n  if (f) {\n    writer.writeBool(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool pending_only = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.getPendingOnly = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListInvoiceRequest.prototype.setPendingOnly = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 index_offset = 4;\n * @return {number}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.getIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListInvoiceRequest.prototype.setIndexOffset = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 num_max_invoices = 5;\n * @return {number}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.getNumMaxInvoices = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListInvoiceRequest.prototype.setNumMaxInvoices = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional bool reversed = 6;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListInvoiceRequest.prototype.getReversed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListInvoiceRequest.prototype.setReversed = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListInvoiceResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListInvoiceResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListInvoiceResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListInvoiceResponse.displayName = 'proto.lnrpc.ListInvoiceResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListInvoiceResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListInvoiceResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListInvoiceResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListInvoiceResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    invoicesList: jspb.Message.toObjectList(msg.getInvoicesList(),\n    proto.lnrpc.Invoice.toObject, includeInstance),\n    lastIndexOffset: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    firstIndexOffset: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListInvoiceResponse}\n */\nproto.lnrpc.ListInvoiceResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListInvoiceResponse;\n  return proto.lnrpc.ListInvoiceResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListInvoiceResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListInvoiceResponse}\n */\nproto.lnrpc.ListInvoiceResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Invoice;\n      reader.readMessage(value,proto.lnrpc.Invoice.deserializeBinaryFromReader);\n      msg.addInvoices(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastIndexOffset(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFirstIndexOffset(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListInvoiceResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListInvoiceResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListInvoiceResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInvoicesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Invoice.serializeBinaryToWriter\n    );\n  }\n  f = message.getLastIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getFirstIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated Invoice invoices = 1;\n * @return {!Array.<!proto.lnrpc.Invoice>}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.getInvoicesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Invoice>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Invoice, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Invoice>} value */\nproto.lnrpc.ListInvoiceResponse.prototype.setInvoicesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Invoice=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Invoice}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.addInvoices = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Invoice, opt_index);\n};\n\n\nproto.lnrpc.ListInvoiceResponse.prototype.clearInvoicesList = function() {\n  this.setInvoicesList([]);\n};\n\n\n/**\n * optional uint64 last_index_offset = 2;\n * @return {number}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.getLastIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListInvoiceResponse.prototype.setLastIndexOffset = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 first_index_offset = 3;\n * @return {number}\n */\nproto.lnrpc.ListInvoiceResponse.prototype.getFirstIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListInvoiceResponse.prototype.setFirstIndexOffset = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.InvoiceSubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.InvoiceSubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.InvoiceSubscription.displayName = 'proto.lnrpc.InvoiceSubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.InvoiceSubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.InvoiceSubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.InvoiceSubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.InvoiceSubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    addIndex: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    settleIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.InvoiceSubscription}\n */\nproto.lnrpc.InvoiceSubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.InvoiceSubscription;\n  return proto.lnrpc.InvoiceSubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.InvoiceSubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.InvoiceSubscription}\n */\nproto.lnrpc.InvoiceSubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAddIndex(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSettleIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.InvoiceSubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.InvoiceSubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.InvoiceSubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.InvoiceSubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getSettleIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 add_index = 1;\n * @return {number}\n */\nproto.lnrpc.InvoiceSubscription.prototype.getAddIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceSubscription.prototype.setAddIndex = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 settle_index = 2;\n * @return {number}\n */\nproto.lnrpc.InvoiceSubscription.prototype.getSettleIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.InvoiceSubscription.prototype.setSettleIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Payment = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.Payment.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.Payment, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Payment.displayName = 'proto.lnrpc.Payment';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.Payment.repeatedFields_ = [14];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Payment.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Payment.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Payment} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Payment.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    value: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    creationDate: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    fee: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    paymentPreimage: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    valueSat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    valueMsat: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    paymentRequest: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    status: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    feeSat: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    feeMsat: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    creationTimeNs: jspb.Message.getFieldWithDefault(msg, 13, 0),\n    htlcsList: jspb.Message.toObjectList(msg.getHtlcsList(),\n    proto.lnrpc.HTLCAttempt.toObject, includeInstance),\n    paymentIndex: jspb.Message.getFieldWithDefault(msg, 15, 0),\n    failureReason: jspb.Message.getFieldWithDefault(msg, 16, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Payment}\n */\nproto.lnrpc.Payment.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Payment;\n  return proto.lnrpc.Payment.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Payment} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Payment}\n */\nproto.lnrpc.Payment.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValue(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreationDate(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFee(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentPreimage(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValueSat(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValueMsat(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentRequest(value);\n      break;\n    case 10:\n      var value = /** @type {!proto.lnrpc.Payment.PaymentStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeSat(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeeMsat(value);\n      break;\n    case 13:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreationTimeNs(value);\n      break;\n    case 14:\n      var value = new proto.lnrpc.HTLCAttempt;\n      reader.readMessage(value,proto.lnrpc.HTLCAttempt.deserializeBinaryFromReader);\n      msg.addHtlcs(value);\n      break;\n    case 15:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPaymentIndex(value);\n      break;\n    case 16:\n      var value = /** @type {!proto.lnrpc.PaymentFailureReason} */ (reader.readEnum());\n      msg.setFailureReason(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Payment.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Payment.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Payment} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Payment.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getCreationDate();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getPaymentPreimage();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getValueSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getValueMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getPaymentRequest();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getFeeSat();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getCreationTimeNs();\n  if (f !== 0) {\n    writer.writeInt64(\n      13,\n      f\n    );\n  }\n  f = message.getHtlcsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      14,\n      f,\n      proto.lnrpc.HTLCAttempt.serializeBinaryToWriter\n    );\n  }\n  f = message.getPaymentIndex();\n  if (f !== 0) {\n    writer.writeUint64(\n      15,\n      f\n    );\n  }\n  f = message.getFailureReason();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      16,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Payment.PaymentStatus = {\n  UNKNOWN: 0,\n  IN_FLIGHT: 1,\n  SUCCEEDED: 2,\n  FAILED: 3\n};\n\n/**\n * optional string payment_hash = 1;\n * @return {string}\n */\nproto.lnrpc.Payment.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Payment.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 value = 2;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setValue = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 creation_date = 3;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getCreationDate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setCreationDate = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 fee = 5;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setFee = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string payment_preimage = 6;\n * @return {string}\n */\nproto.lnrpc.Payment.prototype.getPaymentPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Payment.prototype.setPaymentPreimage = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional int64 value_sat = 7;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getValueSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setValueSat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional int64 value_msat = 8;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getValueMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setValueMsat = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional string payment_request = 9;\n * @return {string}\n */\nproto.lnrpc.Payment.prototype.getPaymentRequest = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Payment.prototype.setPaymentRequest = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional PaymentStatus status = 10;\n * @return {!proto.lnrpc.Payment.PaymentStatus}\n */\nproto.lnrpc.Payment.prototype.getStatus = function() {\n  return /** @type {!proto.lnrpc.Payment.PaymentStatus} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {!proto.lnrpc.Payment.PaymentStatus} value */\nproto.lnrpc.Payment.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional int64 fee_sat = 11;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getFeeSat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setFeeSat = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional int64 fee_msat = 12;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setFeeMsat = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * optional int64 creation_time_ns = 13;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getCreationTimeNs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setCreationTimeNs = function(value) {\n  jspb.Message.setField(this, 13, value);\n};\n\n\n/**\n * repeated HTLCAttempt htlcs = 14;\n * @return {!Array.<!proto.lnrpc.HTLCAttempt>}\n */\nproto.lnrpc.Payment.prototype.getHtlcsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.HTLCAttempt>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.HTLCAttempt, 14));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.HTLCAttempt>} value */\nproto.lnrpc.Payment.prototype.setHtlcsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 14, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.HTLCAttempt=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.HTLCAttempt}\n */\nproto.lnrpc.Payment.prototype.addHtlcs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.lnrpc.HTLCAttempt, opt_index);\n};\n\n\nproto.lnrpc.Payment.prototype.clearHtlcsList = function() {\n  this.setHtlcsList([]);\n};\n\n\n/**\n * optional uint64 payment_index = 15;\n * @return {number}\n */\nproto.lnrpc.Payment.prototype.getPaymentIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Payment.prototype.setPaymentIndex = function(value) {\n  jspb.Message.setField(this, 15, value);\n};\n\n\n/**\n * optional PaymentFailureReason failure_reason = 16;\n * @return {!proto.lnrpc.PaymentFailureReason}\n */\nproto.lnrpc.Payment.prototype.getFailureReason = function() {\n  return /** @type {!proto.lnrpc.PaymentFailureReason} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {!proto.lnrpc.PaymentFailureReason} value */\nproto.lnrpc.Payment.prototype.setFailureReason = function(value) {\n  jspb.Message.setField(this, 16, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.HTLCAttempt = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.HTLCAttempt, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.HTLCAttempt.displayName = 'proto.lnrpc.HTLCAttempt';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.HTLCAttempt.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.HTLCAttempt.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.HTLCAttempt} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HTLCAttempt.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    status: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    route: (f = msg.getRoute()) && proto.lnrpc.Route.toObject(includeInstance, f),\n    attemptTimeNs: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    resolveTimeNs: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    failure: (f = msg.getFailure()) && proto.lnrpc.Failure.toObject(includeInstance, f),\n    preimage: msg.getPreimage_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.HTLCAttempt}\n */\nproto.lnrpc.HTLCAttempt.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.HTLCAttempt;\n  return proto.lnrpc.HTLCAttempt.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.HTLCAttempt} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.HTLCAttempt}\n */\nproto.lnrpc.HTLCAttempt.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lnrpc.HTLCAttempt.HTLCStatus} */ (reader.readEnum());\n      msg.setStatus(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.Route;\n      reader.readMessage(value,proto.lnrpc.Route.deserializeBinaryFromReader);\n      msg.setRoute(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAttemptTimeNs(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setResolveTimeNs(value);\n      break;\n    case 5:\n      var value = new proto.lnrpc.Failure;\n      reader.readMessage(value,proto.lnrpc.Failure.deserializeBinaryFromReader);\n      msg.setFailure(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPreimage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.HTLCAttempt.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.HTLCAttempt.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.HTLCAttempt} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.HTLCAttempt.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getRoute();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.Route.serializeBinaryToWriter\n    );\n  }\n  f = message.getAttemptTimeNs();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getResolveTimeNs();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getFailure();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.lnrpc.Failure.serializeBinaryToWriter\n    );\n  }\n  f = message.getPreimage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.HTLCAttempt.HTLCStatus = {\n  IN_FLIGHT: 0,\n  SUCCEEDED: 1,\n  FAILED: 2\n};\n\n/**\n * optional HTLCStatus status = 1;\n * @return {!proto.lnrpc.HTLCAttempt.HTLCStatus}\n */\nproto.lnrpc.HTLCAttempt.prototype.getStatus = function() {\n  return /** @type {!proto.lnrpc.HTLCAttempt.HTLCStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.HTLCAttempt.HTLCStatus} value */\nproto.lnrpc.HTLCAttempt.prototype.setStatus = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional Route route = 2;\n * @return {?proto.lnrpc.Route}\n */\nproto.lnrpc.HTLCAttempt.prototype.getRoute = function() {\n  return /** @type{?proto.lnrpc.Route} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Route, 2));\n};\n\n\n/** @param {?proto.lnrpc.Route|undefined} value */\nproto.lnrpc.HTLCAttempt.prototype.setRoute = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.HTLCAttempt.prototype.clearRoute = function() {\n  this.setRoute(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.HTLCAttempt.prototype.hasRoute = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 attempt_time_ns = 3;\n * @return {number}\n */\nproto.lnrpc.HTLCAttempt.prototype.getAttemptTimeNs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLCAttempt.prototype.setAttemptTimeNs = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 resolve_time_ns = 4;\n * @return {number}\n */\nproto.lnrpc.HTLCAttempt.prototype.getResolveTimeNs = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.HTLCAttempt.prototype.setResolveTimeNs = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional Failure failure = 5;\n * @return {?proto.lnrpc.Failure}\n */\nproto.lnrpc.HTLCAttempt.prototype.getFailure = function() {\n  return /** @type{?proto.lnrpc.Failure} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.Failure, 5));\n};\n\n\n/** @param {?proto.lnrpc.Failure|undefined} value */\nproto.lnrpc.HTLCAttempt.prototype.setFailure = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.lnrpc.HTLCAttempt.prototype.clearFailure = function() {\n  this.setFailure(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.HTLCAttempt.prototype.hasFailure = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional bytes preimage = 6;\n * @return {string}\n */\nproto.lnrpc.HTLCAttempt.prototype.getPreimage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes preimage = 6;\n * This is a type-conversion wrapper around `getPreimage()`\n * @return {string}\n */\nproto.lnrpc.HTLCAttempt.prototype.getPreimage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPreimage()));\n};\n\n\n/**\n * optional bytes preimage = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPreimage()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.HTLCAttempt.prototype.getPreimage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPreimage()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.HTLCAttempt.prototype.setPreimage = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ListPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListPaymentsRequest.displayName = 'proto.lnrpc.ListPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    includeIncomplete: jspb.Message.getFieldWithDefault(msg, 1, false),\n    indexOffset: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    maxPayments: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    reversed: jspb.Message.getFieldWithDefault(msg, 4, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListPaymentsRequest}\n */\nproto.lnrpc.ListPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListPaymentsRequest;\n  return proto.lnrpc.ListPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListPaymentsRequest}\n */\nproto.lnrpc.ListPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeIncomplete(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setIndexOffset(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxPayments(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setReversed(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIncludeIncomplete();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getMaxPayments();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getReversed();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool include_incomplete = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.getIncludeIncomplete = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListPaymentsRequest.prototype.setIncludeIncomplete = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 index_offset = 2;\n * @return {number}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.getIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListPaymentsRequest.prototype.setIndexOffset = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 max_payments = 3;\n * @return {number}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.getMaxPayments = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListPaymentsRequest.prototype.setMaxPayments = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool reversed = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.ListPaymentsRequest.prototype.getReversed = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.ListPaymentsRequest.prototype.setReversed = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ListPaymentsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ListPaymentsResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ListPaymentsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ListPaymentsResponse.displayName = 'proto.lnrpc.ListPaymentsResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ListPaymentsResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ListPaymentsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ListPaymentsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPaymentsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    paymentsList: jspb.Message.toObjectList(msg.getPaymentsList(),\n    proto.lnrpc.Payment.toObject, includeInstance),\n    firstIndexOffset: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    lastIndexOffset: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ListPaymentsResponse}\n */\nproto.lnrpc.ListPaymentsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ListPaymentsResponse;\n  return proto.lnrpc.ListPaymentsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ListPaymentsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ListPaymentsResponse}\n */\nproto.lnrpc.ListPaymentsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.Payment;\n      reader.readMessage(value,proto.lnrpc.Payment.deserializeBinaryFromReader);\n      msg.addPayments(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFirstIndexOffset(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLastIndexOffset(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ListPaymentsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ListPaymentsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ListPaymentsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPaymentsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.Payment.serializeBinaryToWriter\n    );\n  }\n  f = message.getFirstIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getLastIndexOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated Payment payments = 1;\n * @return {!Array.<!proto.lnrpc.Payment>}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.getPaymentsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.Payment>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.Payment, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.Payment>} value */\nproto.lnrpc.ListPaymentsResponse.prototype.setPaymentsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.Payment=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.Payment}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.addPayments = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.Payment, opt_index);\n};\n\n\nproto.lnrpc.ListPaymentsResponse.prototype.clearPaymentsList = function() {\n  this.setPaymentsList([]);\n};\n\n\n/**\n * optional uint64 first_index_offset = 2;\n * @return {number}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.getFirstIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListPaymentsResponse.prototype.setFirstIndexOffset = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 last_index_offset = 3;\n * @return {number}\n */\nproto.lnrpc.ListPaymentsResponse.prototype.getLastIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ListPaymentsResponse.prototype.setLastIndexOffset = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DeleteAllPaymentsRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DeleteAllPaymentsRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DeleteAllPaymentsRequest.displayName = 'proto.lnrpc.DeleteAllPaymentsRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DeleteAllPaymentsRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DeleteAllPaymentsRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DeleteAllPaymentsRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteAllPaymentsRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DeleteAllPaymentsRequest}\n */\nproto.lnrpc.DeleteAllPaymentsRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DeleteAllPaymentsRequest;\n  return proto.lnrpc.DeleteAllPaymentsRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DeleteAllPaymentsRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DeleteAllPaymentsRequest}\n */\nproto.lnrpc.DeleteAllPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DeleteAllPaymentsRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DeleteAllPaymentsRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DeleteAllPaymentsRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteAllPaymentsRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DeleteAllPaymentsResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DeleteAllPaymentsResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DeleteAllPaymentsResponse.displayName = 'proto.lnrpc.DeleteAllPaymentsResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DeleteAllPaymentsResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DeleteAllPaymentsResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DeleteAllPaymentsResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteAllPaymentsResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DeleteAllPaymentsResponse}\n */\nproto.lnrpc.DeleteAllPaymentsResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DeleteAllPaymentsResponse;\n  return proto.lnrpc.DeleteAllPaymentsResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DeleteAllPaymentsResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DeleteAllPaymentsResponse}\n */\nproto.lnrpc.DeleteAllPaymentsResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DeleteAllPaymentsResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DeleteAllPaymentsResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DeleteAllPaymentsResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DeleteAllPaymentsResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.AbandonChannelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.AbandonChannelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.AbandonChannelRequest.displayName = 'proto.lnrpc.AbandonChannelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.AbandonChannelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.AbandonChannelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.AbandonChannelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AbandonChannelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelPoint: (f = msg.getChannelPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.AbandonChannelRequest}\n */\nproto.lnrpc.AbandonChannelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.AbandonChannelRequest;\n  return proto.lnrpc.AbandonChannelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.AbandonChannelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.AbandonChannelRequest}\n */\nproto.lnrpc.AbandonChannelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChannelPoint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.AbandonChannelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.AbandonChannelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.AbandonChannelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AbandonChannelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint channel_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.AbandonChannelRequest.prototype.getChannelPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.AbandonChannelRequest.prototype.setChannelPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.AbandonChannelRequest.prototype.clearChannelPoint = function() {\n  this.setChannelPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.AbandonChannelRequest.prototype.hasChannelPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.AbandonChannelResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.AbandonChannelResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.AbandonChannelResponse.displayName = 'proto.lnrpc.AbandonChannelResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.AbandonChannelResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.AbandonChannelResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.AbandonChannelResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AbandonChannelResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.AbandonChannelResponse}\n */\nproto.lnrpc.AbandonChannelResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.AbandonChannelResponse;\n  return proto.lnrpc.AbandonChannelResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.AbandonChannelResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.AbandonChannelResponse}\n */\nproto.lnrpc.AbandonChannelResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.AbandonChannelResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.AbandonChannelResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.AbandonChannelResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.AbandonChannelResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DebugLevelRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DebugLevelRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DebugLevelRequest.displayName = 'proto.lnrpc.DebugLevelRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DebugLevelRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DebugLevelRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DebugLevelRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DebugLevelRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    show: jspb.Message.getFieldWithDefault(msg, 1, false),\n    levelSpec: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DebugLevelRequest}\n */\nproto.lnrpc.DebugLevelRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DebugLevelRequest;\n  return proto.lnrpc.DebugLevelRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DebugLevelRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DebugLevelRequest}\n */\nproto.lnrpc.DebugLevelRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setShow(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLevelSpec(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DebugLevelRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DebugLevelRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DebugLevelRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DebugLevelRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getShow();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getLevelSpec();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool show = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.DebugLevelRequest.prototype.getShow = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.DebugLevelRequest.prototype.setShow = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string level_spec = 2;\n * @return {string}\n */\nproto.lnrpc.DebugLevelRequest.prototype.getLevelSpec = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.DebugLevelRequest.prototype.setLevelSpec = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.DebugLevelResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.DebugLevelResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.DebugLevelResponse.displayName = 'proto.lnrpc.DebugLevelResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.DebugLevelResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.DebugLevelResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.DebugLevelResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DebugLevelResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    subSystems: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.DebugLevelResponse}\n */\nproto.lnrpc.DebugLevelResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.DebugLevelResponse;\n  return proto.lnrpc.DebugLevelResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.DebugLevelResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.DebugLevelResponse}\n */\nproto.lnrpc.DebugLevelResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSubSystems(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.DebugLevelResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.DebugLevelResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.DebugLevelResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.DebugLevelResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSubSystems();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string sub_systems = 1;\n * @return {string}\n */\nproto.lnrpc.DebugLevelResponse.prototype.getSubSystems = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.DebugLevelResponse.prototype.setSubSystems = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PayReqString = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PayReqString, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PayReqString.displayName = 'proto.lnrpc.PayReqString';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PayReqString.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PayReqString.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PayReqString} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PayReqString.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    payReq: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PayReqString}\n */\nproto.lnrpc.PayReqString.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PayReqString;\n  return proto.lnrpc.PayReqString.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PayReqString} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PayReqString}\n */\nproto.lnrpc.PayReqString.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPayReq(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PayReqString.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PayReqString.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PayReqString} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PayReqString.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPayReq();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string pay_req = 1;\n * @return {string}\n */\nproto.lnrpc.PayReqString.prototype.getPayReq = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReqString.prototype.setPayReq = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PayReq = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.PayReq.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.PayReq, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PayReq.displayName = 'proto.lnrpc.PayReq';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.PayReq.repeatedFields_ = [10];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PayReq.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PayReq.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PayReq} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PayReq.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    destination: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    paymentHash: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    numSatoshis: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    expiry: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    description: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    descriptionHash: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    fallbackAddr: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    cltvExpiry: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    routeHintsList: jspb.Message.toObjectList(msg.getRouteHintsList(),\n    proto.lnrpc.RouteHint.toObject, includeInstance),\n    paymentAddr: msg.getPaymentAddr_asB64(),\n    numMsat: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.lnrpc.Feature.toObject) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PayReq}\n */\nproto.lnrpc.PayReq.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PayReq;\n  return proto.lnrpc.PayReq.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PayReq} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PayReq}\n */\nproto.lnrpc.PayReq.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDestination(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPaymentHash(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumSatoshis(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpiry(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescriptionHash(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFallbackAddr(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCltvExpiry(value);\n      break;\n    case 10:\n      var value = new proto.lnrpc.RouteHint;\n      reader.readMessage(value,proto.lnrpc.RouteHint.deserializeBinaryFromReader);\n      msg.addRouteHints(value);\n      break;\n    case 11:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPaymentAddr(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumMsat(value);\n      break;\n    case 13:\n      var value = msg.getFeaturesMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readMessage, proto.lnrpc.Feature.deserializeBinaryFromReader);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PayReq.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PayReq.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PayReq} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PayReq.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDestination();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPaymentHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getNumSatoshis();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getExpiry();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getDescriptionHash();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getFallbackAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getCltvExpiry();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getRouteHintsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      10,\n      f,\n      proto.lnrpc.RouteHint.serializeBinaryToWriter\n    );\n  }\n  f = message.getPaymentAddr_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      11,\n      f\n    );\n  }\n  f = message.getNumMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getFeaturesMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeMessage, proto.lnrpc.Feature.serializeBinaryToWriter);\n  }\n};\n\n\n/**\n * optional string destination = 1;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getDestination = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setDestination = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string payment_hash = 2;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getPaymentHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setPaymentHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 num_satoshis = 3;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getNumSatoshis = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setNumSatoshis = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional int64 timestamp = 4;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setTimestamp = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional int64 expiry = 5;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setExpiry = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string description = 6;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setDescription = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional string description_hash = 7;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getDescriptionHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setDescriptionHash = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional string fallback_addr = 8;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getFallbackAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.PayReq.prototype.setFallbackAddr = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional int64 cltv_expiry = 9;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getCltvExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setCltvExpiry = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * repeated RouteHint route_hints = 10;\n * @return {!Array.<!proto.lnrpc.RouteHint>}\n */\nproto.lnrpc.PayReq.prototype.getRouteHintsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.RouteHint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.RouteHint, 10));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.RouteHint>} value */\nproto.lnrpc.PayReq.prototype.setRouteHintsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 10, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.RouteHint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.RouteHint}\n */\nproto.lnrpc.PayReq.prototype.addRouteHints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.lnrpc.RouteHint, opt_index);\n};\n\n\nproto.lnrpc.PayReq.prototype.clearRouteHintsList = function() {\n  this.setRouteHintsList([]);\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getPaymentAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {string}\n */\nproto.lnrpc.PayReq.prototype.getPaymentAddr_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPaymentAddr()));\n};\n\n\n/**\n * optional bytes payment_addr = 11;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPaymentAddr()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.PayReq.prototype.getPaymentAddr_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPaymentAddr()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.PayReq.prototype.setPaymentAddr = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional int64 num_msat = 12;\n * @return {number}\n */\nproto.lnrpc.PayReq.prototype.getNumMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PayReq.prototype.setNumMsat = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * map<uint32, Feature> features = 13;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<number,!proto.lnrpc.Feature>}\n */\nproto.lnrpc.PayReq.prototype.getFeaturesMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<number,!proto.lnrpc.Feature>} */ (\n      jspb.Message.getMapField(this, 13, opt_noLazyCreate,\n      proto.lnrpc.Feature));\n};\n\n\nproto.lnrpc.PayReq.prototype.clearFeaturesMap = function() {\n  this.getFeaturesMap().clear();\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Feature = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Feature, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Feature.displayName = 'proto.lnrpc.Feature';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Feature.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Feature.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Feature} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Feature.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    isRequired: jspb.Message.getFieldWithDefault(msg, 3, false),\n    isKnown: jspb.Message.getFieldWithDefault(msg, 4, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Feature}\n */\nproto.lnrpc.Feature.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Feature;\n  return proto.lnrpc.Feature.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Feature} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Feature}\n */\nproto.lnrpc.Feature.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsRequired(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsKnown(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Feature.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Feature.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Feature} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Feature.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getIsRequired();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getIsKnown();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.lnrpc.Feature.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.Feature.prototype.setName = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional bool is_required = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Feature.prototype.getIsRequired = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Feature.prototype.setIsRequired = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional bool is_known = 4;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.Feature.prototype.getIsKnown = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.Feature.prototype.setIsKnown = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FeeReportRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.FeeReportRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FeeReportRequest.displayName = 'proto.lnrpc.FeeReportRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FeeReportRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FeeReportRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FeeReportRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeReportRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FeeReportRequest}\n */\nproto.lnrpc.FeeReportRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FeeReportRequest;\n  return proto.lnrpc.FeeReportRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FeeReportRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FeeReportRequest}\n */\nproto.lnrpc.FeeReportRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FeeReportRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FeeReportRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FeeReportRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeReportRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelFeeReport = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelFeeReport, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelFeeReport.displayName = 'proto.lnrpc.ChannelFeeReport';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelFeeReport.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelFeeReport.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelFeeReport} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelFeeReport.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanId: jspb.Message.getFieldWithDefault(msg, 5, \"0\"),\n    channelPoint: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    baseFeeMsat: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    feePerMil: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    feeRate: +jspb.Message.getFieldWithDefault(msg, 4, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelFeeReport}\n */\nproto.lnrpc.ChannelFeeReport.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelFeeReport;\n  return proto.lnrpc.ChannelFeeReport.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelFeeReport} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelFeeReport}\n */\nproto.lnrpc.ChannelFeeReport.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 5:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelPoint(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBaseFeeMsat(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFeePerMil(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFeeRate(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelFeeReport.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelFeeReport.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelFeeReport} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelFeeReport.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      5,\n      f\n    );\n  }\n  f = message.getChannelPoint();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getBaseFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getFeePerMil();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFeeRate();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 chan_id = 5;\n * @return {string}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelFeeReport.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional string channel_point = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getChannelPoint = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelFeeReport.prototype.setChannelPoint = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional int64 base_fee_msat = 2;\n * @return {number}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getBaseFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelFeeReport.prototype.setBaseFeeMsat = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional int64 fee_per_mil = 3;\n * @return {number}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getFeePerMil = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelFeeReport.prototype.setFeePerMil = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional double fee_rate = 4;\n * @return {number}\n */\nproto.lnrpc.ChannelFeeReport.prototype.getFeeRate = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelFeeReport.prototype.setFeeRate = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.FeeReportResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.FeeReportResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.FeeReportResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.FeeReportResponse.displayName = 'proto.lnrpc.FeeReportResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.FeeReportResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.FeeReportResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.FeeReportResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.FeeReportResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeReportResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    channelFeesList: jspb.Message.toObjectList(msg.getChannelFeesList(),\n    proto.lnrpc.ChannelFeeReport.toObject, includeInstance),\n    dayFeeSum: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    weekFeeSum: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    monthFeeSum: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.FeeReportResponse}\n */\nproto.lnrpc.FeeReportResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.FeeReportResponse;\n  return proto.lnrpc.FeeReportResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.FeeReportResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.FeeReportResponse}\n */\nproto.lnrpc.FeeReportResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelFeeReport;\n      reader.readMessage(value,proto.lnrpc.ChannelFeeReport.deserializeBinaryFromReader);\n      msg.addChannelFees(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDayFeeSum(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setWeekFeeSum(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMonthFeeSum(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.FeeReportResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.FeeReportResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.FeeReportResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.FeeReportResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChannelFeesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelFeeReport.serializeBinaryToWriter\n    );\n  }\n  f = message.getDayFeeSum();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getWeekFeeSum();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getMonthFeeSum();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated ChannelFeeReport channel_fees = 1;\n * @return {!Array.<!proto.lnrpc.ChannelFeeReport>}\n */\nproto.lnrpc.FeeReportResponse.prototype.getChannelFeesList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelFeeReport>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelFeeReport, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelFeeReport>} value */\nproto.lnrpc.FeeReportResponse.prototype.setChannelFeesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelFeeReport=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelFeeReport}\n */\nproto.lnrpc.FeeReportResponse.prototype.addChannelFees = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ChannelFeeReport, opt_index);\n};\n\n\nproto.lnrpc.FeeReportResponse.prototype.clearChannelFeesList = function() {\n  this.setChannelFeesList([]);\n};\n\n\n/**\n * optional uint64 day_fee_sum = 2;\n * @return {number}\n */\nproto.lnrpc.FeeReportResponse.prototype.getDayFeeSum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeReportResponse.prototype.setDayFeeSum = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 week_fee_sum = 3;\n * @return {number}\n */\nproto.lnrpc.FeeReportResponse.prototype.getWeekFeeSum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeReportResponse.prototype.setWeekFeeSum = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint64 month_fee_sum = 4;\n * @return {number}\n */\nproto.lnrpc.FeeReportResponse.prototype.getMonthFeeSum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.FeeReportResponse.prototype.setMonthFeeSum = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PolicyUpdateRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.PolicyUpdateRequest.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.PolicyUpdateRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PolicyUpdateRequest.displayName = 'proto.lnrpc.PolicyUpdateRequest';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.PolicyUpdateRequest.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.PolicyUpdateRequest.ScopeCase = {\n  SCOPE_NOT_SET: 0,\n  GLOBAL: 1,\n  CHAN_POINT: 2\n};\n\n/**\n * @return {proto.lnrpc.PolicyUpdateRequest.ScopeCase}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getScopeCase = function() {\n  return /** @type {proto.lnrpc.PolicyUpdateRequest.ScopeCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.PolicyUpdateRequest.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PolicyUpdateRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PolicyUpdateRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PolicyUpdateRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    global: jspb.Message.getFieldWithDefault(msg, 1, false),\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    baseFeeMsat: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    feeRate: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),\n    timeLockDelta: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    maxHtlcMsat: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    minHtlcMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    minHtlcMsatSpecified: jspb.Message.getFieldWithDefault(msg, 8, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PolicyUpdateRequest}\n */\nproto.lnrpc.PolicyUpdateRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PolicyUpdateRequest;\n  return proto.lnrpc.PolicyUpdateRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PolicyUpdateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PolicyUpdateRequest}\n */\nproto.lnrpc.PolicyUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setGlobal(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBaseFeeMsat(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setFeeRate(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTimeLockDelta(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxHtlcMsat(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMinHtlcMsat(value);\n      break;\n    case 8:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setMinHtlcMsatSpecified(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PolicyUpdateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PolicyUpdateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PolicyUpdateRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));\n  if (f != null) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getBaseFeeMsat();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getFeeRate();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      4,\n      f\n    );\n  }\n  f = message.getTimeLockDelta();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getMaxHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getMinHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getMinHtlcMsatSpecified();\n  if (f) {\n    writer.writeBool(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool global = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getGlobal = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setGlobal = function(value) {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.PolicyUpdateRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.PolicyUpdateRequest.prototype.clearGlobal = function() {\n  jspb.Message.setOneofField(this, 1, proto.lnrpc.PolicyUpdateRequest.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.hasGlobal = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional ChannelPoint chan_point = 2;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 2));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setChanPoint = function(value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.lnrpc.PolicyUpdateRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.PolicyUpdateRequest.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 base_fee_msat = 3;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getBaseFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setBaseFeeMsat = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional double fee_rate = 4;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getFeeRate = function() {\n  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setFeeRate = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 time_lock_delta = 5;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getTimeLockDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setTimeLockDelta = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 max_htlc_msat = 6;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getMaxHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setMaxHtlcMsat = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 min_htlc_msat = 7;\n * @return {number}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getMinHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setMinHtlcMsat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional bool min_htlc_msat_specified = 8;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.lnrpc.PolicyUpdateRequest.prototype.getMinHtlcMsatSpecified = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));\n};\n\n\n/** @param {boolean} value */\nproto.lnrpc.PolicyUpdateRequest.prototype.setMinHtlcMsatSpecified = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.PolicyUpdateResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.PolicyUpdateResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.PolicyUpdateResponse.displayName = 'proto.lnrpc.PolicyUpdateResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.PolicyUpdateResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.PolicyUpdateResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.PolicyUpdateResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PolicyUpdateResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.PolicyUpdateResponse}\n */\nproto.lnrpc.PolicyUpdateResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.PolicyUpdateResponse;\n  return proto.lnrpc.PolicyUpdateResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.PolicyUpdateResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.PolicyUpdateResponse}\n */\nproto.lnrpc.PolicyUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.PolicyUpdateResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.PolicyUpdateResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.PolicyUpdateResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.PolicyUpdateResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ForwardingHistoryRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ForwardingHistoryRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ForwardingHistoryRequest.displayName = 'proto.lnrpc.ForwardingHistoryRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ForwardingHistoryRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ForwardingHistoryRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingHistoryRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    startTime: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    endTime: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    indexOffset: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    numMaxEvents: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ForwardingHistoryRequest}\n */\nproto.lnrpc.ForwardingHistoryRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ForwardingHistoryRequest;\n  return proto.lnrpc.ForwardingHistoryRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ForwardingHistoryRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ForwardingHistoryRequest}\n */\nproto.lnrpc.ForwardingHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setStartTime(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setEndTime(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setIndexOffset(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setNumMaxEvents(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ForwardingHistoryRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ForwardingHistoryRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingHistoryRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStartTime();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getEndTime();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getIndexOffset();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n  f = message.getNumMaxEvents();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 start_time = 1;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.getStartTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryRequest.prototype.setStartTime = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 end_time = 2;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.getEndTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryRequest.prototype.setEndTime = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint32 index_offset = 3;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.getIndexOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryRequest.prototype.setIndexOffset = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 num_max_events = 4;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryRequest.prototype.getNumMaxEvents = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryRequest.prototype.setNumMaxEvents = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ForwardingEvent = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ForwardingEvent, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ForwardingEvent.displayName = 'proto.lnrpc.ForwardingEvent';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ForwardingEvent.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ForwardingEvent.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ForwardingEvent} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingEvent.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    chanIdIn: jspb.Message.getFieldWithDefault(msg, 2, \"0\"),\n    chanIdOut: jspb.Message.getFieldWithDefault(msg, 4, \"0\"),\n    amtIn: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    amtOut: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    fee: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    feeMsat: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    amtInMsat: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    amtOutMsat: jspb.Message.getFieldWithDefault(msg, 10, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ForwardingEvent}\n */\nproto.lnrpc.ForwardingEvent.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ForwardingEvent;\n  return proto.lnrpc.ForwardingEvent.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ForwardingEvent} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ForwardingEvent}\n */\nproto.lnrpc.ForwardingEvent.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setTimestamp(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanIdIn(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanIdOut(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtIn(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtOut(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFee(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setFeeMsat(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtInMsat(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAmtOutMsat(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ForwardingEvent.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ForwardingEvent.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ForwardingEvent} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingEvent.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getChanIdIn();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      2,\n      f\n    );\n  }\n  f = message.getChanIdOut();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      4,\n      f\n    );\n  }\n  f = message.getAmtIn();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getAmtOut();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getFee();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getFeeMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n  f = message.getAmtInMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      9,\n      f\n    );\n  }\n  f = message.getAmtOutMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 timestamp = 1;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setTimestamp = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional uint64 chan_id_in = 2;\n * @return {string}\n */\nproto.lnrpc.ForwardingEvent.prototype.getChanIdIn = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ForwardingEvent.prototype.setChanIdIn = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 chan_id_out = 4;\n * @return {string}\n */\nproto.lnrpc.ForwardingEvent.prototype.getChanIdOut = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ForwardingEvent.prototype.setChanIdOut = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint64 amt_in = 5;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getAmtIn = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setAmtIn = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint64 amt_out = 6;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getAmtOut = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setAmtOut = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 fee = 7;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setFee = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional uint64 fee_msat = 8;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getFeeMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setFeeMsat = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional uint64 amt_in_msat = 9;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getAmtInMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setAmtInMsat = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional uint64 amt_out_msat = 10;\n * @return {number}\n */\nproto.lnrpc.ForwardingEvent.prototype.getAmtOutMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingEvent.prototype.setAmtOutMsat = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ForwardingHistoryResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ForwardingHistoryResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ForwardingHistoryResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ForwardingHistoryResponse.displayName = 'proto.lnrpc.ForwardingHistoryResponse';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ForwardingHistoryResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ForwardingHistoryResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ForwardingHistoryResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingHistoryResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    forwardingEventsList: jspb.Message.toObjectList(msg.getForwardingEventsList(),\n    proto.lnrpc.ForwardingEvent.toObject, includeInstance),\n    lastOffsetIndex: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ForwardingHistoryResponse}\n */\nproto.lnrpc.ForwardingHistoryResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ForwardingHistoryResponse;\n  return proto.lnrpc.ForwardingHistoryResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ForwardingHistoryResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ForwardingHistoryResponse}\n */\nproto.lnrpc.ForwardingHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ForwardingEvent;\n      reader.readMessage(value,proto.lnrpc.ForwardingEvent.deserializeBinaryFromReader);\n      msg.addForwardingEvents(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setLastOffsetIndex(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ForwardingHistoryResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ForwardingHistoryResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ForwardingHistoryResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getForwardingEventsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ForwardingEvent.serializeBinaryToWriter\n    );\n  }\n  f = message.getLastOffsetIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated ForwardingEvent forwarding_events = 1;\n * @return {!Array.<!proto.lnrpc.ForwardingEvent>}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.getForwardingEventsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ForwardingEvent>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ForwardingEvent, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ForwardingEvent>} value */\nproto.lnrpc.ForwardingHistoryResponse.prototype.setForwardingEventsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ForwardingEvent=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ForwardingEvent}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.addForwardingEvents = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ForwardingEvent, opt_index);\n};\n\n\nproto.lnrpc.ForwardingHistoryResponse.prototype.clearForwardingEventsList = function() {\n  this.setForwardingEventsList([]);\n};\n\n\n/**\n * optional uint32 last_offset_index = 2;\n * @return {number}\n */\nproto.lnrpc.ForwardingHistoryResponse.prototype.getLastOffsetIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ForwardingHistoryResponse.prototype.setLastOffsetIndex = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ExportChannelBackupRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ExportChannelBackupRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ExportChannelBackupRequest.displayName = 'proto.lnrpc.ExportChannelBackupRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ExportChannelBackupRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ExportChannelBackupRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ExportChannelBackupRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ExportChannelBackupRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ExportChannelBackupRequest}\n */\nproto.lnrpc.ExportChannelBackupRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ExportChannelBackupRequest;\n  return proto.lnrpc.ExportChannelBackupRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ExportChannelBackupRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ExportChannelBackupRequest}\n */\nproto.lnrpc.ExportChannelBackupRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ExportChannelBackupRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ExportChannelBackupRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ExportChannelBackupRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ExportChannelBackupRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint chan_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ExportChannelBackupRequest.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ExportChannelBackupRequest.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ExportChannelBackupRequest.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ExportChannelBackupRequest.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBackup = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBackup, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBackup.displayName = 'proto.lnrpc.ChannelBackup';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBackup.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBackup.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBackup} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackup.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPoint: (f = msg.getChanPoint()) && proto.lnrpc.ChannelPoint.toObject(includeInstance, f),\n    chanBackup: msg.getChanBackup_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBackup}\n */\nproto.lnrpc.ChannelBackup.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBackup;\n  return proto.lnrpc.ChannelBackup.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBackup} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBackup}\n */\nproto.lnrpc.ChannelBackup.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.setChanPoint(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChanBackup(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBackup.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBackup.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBackup} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackup.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPoint();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getChanBackup_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ChannelPoint chan_point = 1;\n * @return {?proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.ChannelBackup.prototype.getChanPoint = function() {\n  return /** @type{?proto.lnrpc.ChannelPoint} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelPoint|undefined} value */\nproto.lnrpc.ChannelBackup.prototype.setChanPoint = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ChannelBackup.prototype.clearChanPoint = function() {\n  this.setChanPoint(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChannelBackup.prototype.hasChanPoint = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes chan_backup = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelBackup.prototype.getChanBackup = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes chan_backup = 2;\n * This is a type-conversion wrapper around `getChanBackup()`\n * @return {string}\n */\nproto.lnrpc.ChannelBackup.prototype.getChanBackup_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChanBackup()));\n};\n\n\n/**\n * optional bytes chan_backup = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChanBackup()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBackup.prototype.getChanBackup_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChanBackup()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelBackup.prototype.setChanBackup = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.MultiChanBackup = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.MultiChanBackup.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.MultiChanBackup, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.MultiChanBackup.displayName = 'proto.lnrpc.MultiChanBackup';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.MultiChanBackup.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.MultiChanBackup.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.MultiChanBackup.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.MultiChanBackup} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MultiChanBackup.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanPointsList: jspb.Message.toObjectList(msg.getChanPointsList(),\n    proto.lnrpc.ChannelPoint.toObject, includeInstance),\n    multiChanBackup: msg.getMultiChanBackup_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.MultiChanBackup}\n */\nproto.lnrpc.MultiChanBackup.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.MultiChanBackup;\n  return proto.lnrpc.MultiChanBackup.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.MultiChanBackup} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.MultiChanBackup}\n */\nproto.lnrpc.MultiChanBackup.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelPoint;\n      reader.readMessage(value,proto.lnrpc.ChannelPoint.deserializeBinaryFromReader);\n      msg.addChanPoints(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMultiChanBackup(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.MultiChanBackup.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.MultiChanBackup.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.MultiChanBackup} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MultiChanBackup.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanPointsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelPoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getMultiChanBackup_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated ChannelPoint chan_points = 1;\n * @return {!Array.<!proto.lnrpc.ChannelPoint>}\n */\nproto.lnrpc.MultiChanBackup.prototype.getChanPointsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelPoint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelPoint, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelPoint>} value */\nproto.lnrpc.MultiChanBackup.prototype.setChanPointsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelPoint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelPoint}\n */\nproto.lnrpc.MultiChanBackup.prototype.addChanPoints = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ChannelPoint, opt_index);\n};\n\n\nproto.lnrpc.MultiChanBackup.prototype.clearChanPointsList = function() {\n  this.setChanPointsList([]);\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * @return {string}\n */\nproto.lnrpc.MultiChanBackup.prototype.getMultiChanBackup = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * This is a type-conversion wrapper around `getMultiChanBackup()`\n * @return {string}\n */\nproto.lnrpc.MultiChanBackup.prototype.getMultiChanBackup_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMultiChanBackup()));\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMultiChanBackup()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.MultiChanBackup.prototype.getMultiChanBackup_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMultiChanBackup()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.MultiChanBackup.prototype.setMultiChanBackup = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChanBackupExportRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChanBackupExportRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChanBackupExportRequest.displayName = 'proto.lnrpc.ChanBackupExportRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChanBackupExportRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChanBackupExportRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChanBackupExportRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanBackupExportRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChanBackupExportRequest}\n */\nproto.lnrpc.ChanBackupExportRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChanBackupExportRequest;\n  return proto.lnrpc.ChanBackupExportRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChanBackupExportRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChanBackupExportRequest}\n */\nproto.lnrpc.ChanBackupExportRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanBackupExportRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChanBackupExportRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChanBackupExportRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanBackupExportRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChanBackupSnapshot = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChanBackupSnapshot, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChanBackupSnapshot.displayName = 'proto.lnrpc.ChanBackupSnapshot';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChanBackupSnapshot.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChanBackupSnapshot} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanBackupSnapshot.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    singleChanBackups: (f = msg.getSingleChanBackups()) && proto.lnrpc.ChannelBackups.toObject(includeInstance, f),\n    multiChanBackup: (f = msg.getMultiChanBackup()) && proto.lnrpc.MultiChanBackup.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChanBackupSnapshot}\n */\nproto.lnrpc.ChanBackupSnapshot.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChanBackupSnapshot;\n  return proto.lnrpc.ChanBackupSnapshot.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChanBackupSnapshot} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChanBackupSnapshot}\n */\nproto.lnrpc.ChanBackupSnapshot.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelBackups;\n      reader.readMessage(value,proto.lnrpc.ChannelBackups.deserializeBinaryFromReader);\n      msg.setSingleChanBackups(value);\n      break;\n    case 2:\n      var value = new proto.lnrpc.MultiChanBackup;\n      reader.readMessage(value,proto.lnrpc.MultiChanBackup.deserializeBinaryFromReader);\n      msg.setMultiChanBackup(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChanBackupSnapshot.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChanBackupSnapshot} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChanBackupSnapshot.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSingleChanBackups();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelBackups.serializeBinaryToWriter\n    );\n  }\n  f = message.getMultiChanBackup();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.lnrpc.MultiChanBackup.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ChannelBackups single_chan_backups = 1;\n * @return {?proto.lnrpc.ChannelBackups}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.getSingleChanBackups = function() {\n  return /** @type{?proto.lnrpc.ChannelBackups} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelBackups, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelBackups|undefined} value */\nproto.lnrpc.ChanBackupSnapshot.prototype.setSingleChanBackups = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.lnrpc.ChanBackupSnapshot.prototype.clearSingleChanBackups = function() {\n  this.setSingleChanBackups(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.hasSingleChanBackups = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional MultiChanBackup multi_chan_backup = 2;\n * @return {?proto.lnrpc.MultiChanBackup}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.getMultiChanBackup = function() {\n  return /** @type{?proto.lnrpc.MultiChanBackup} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.MultiChanBackup, 2));\n};\n\n\n/** @param {?proto.lnrpc.MultiChanBackup|undefined} value */\nproto.lnrpc.ChanBackupSnapshot.prototype.setMultiChanBackup = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.lnrpc.ChanBackupSnapshot.prototype.clearMultiChanBackup = function() {\n  this.setMultiChanBackup(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.ChanBackupSnapshot.prototype.hasMultiChanBackup = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBackups = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.ChannelBackups.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBackups, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBackups.displayName = 'proto.lnrpc.ChannelBackups';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.ChannelBackups.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBackups.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBackups.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBackups} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackups.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanBackupsList: jspb.Message.toObjectList(msg.getChanBackupsList(),\n    proto.lnrpc.ChannelBackup.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBackups}\n */\nproto.lnrpc.ChannelBackups.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBackups;\n  return proto.lnrpc.ChannelBackups.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBackups} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBackups}\n */\nproto.lnrpc.ChannelBackups.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelBackup;\n      reader.readMessage(value,proto.lnrpc.ChannelBackup.deserializeBinaryFromReader);\n      msg.addChanBackups(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBackups.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBackups.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBackups} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackups.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanBackupsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelBackup.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated ChannelBackup chan_backups = 1;\n * @return {!Array.<!proto.lnrpc.ChannelBackup>}\n */\nproto.lnrpc.ChannelBackups.prototype.getChanBackupsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.ChannelBackup>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.ChannelBackup, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.ChannelBackup>} value */\nproto.lnrpc.ChannelBackups.prototype.setChanBackupsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.ChannelBackup=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.ChannelBackup}\n */\nproto.lnrpc.ChannelBackups.prototype.addChanBackups = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.ChannelBackup, opt_index);\n};\n\n\nproto.lnrpc.ChannelBackups.prototype.clearChanBackupsList = function() {\n  this.setChanBackupsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RestoreChanBackupRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_);\n};\ngoog.inherits(proto.lnrpc.RestoreChanBackupRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RestoreChanBackupRequest.displayName = 'proto.lnrpc.RestoreChanBackupRequest';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.lnrpc.RestoreChanBackupRequest.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.lnrpc.RestoreChanBackupRequest.BackupCase = {\n  BACKUP_NOT_SET: 0,\n  CHAN_BACKUPS: 1,\n  MULTI_CHAN_BACKUP: 2\n};\n\n/**\n * @return {proto.lnrpc.RestoreChanBackupRequest.BackupCase}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getBackupCase = function() {\n  return /** @type {proto.lnrpc.RestoreChanBackupRequest.BackupCase} */(jspb.Message.computeOneofCase(this, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RestoreChanBackupRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RestoreChanBackupRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RestoreChanBackupRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chanBackups: (f = msg.getChanBackups()) && proto.lnrpc.ChannelBackups.toObject(includeInstance, f),\n    multiChanBackup: msg.getMultiChanBackup_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RestoreChanBackupRequest}\n */\nproto.lnrpc.RestoreChanBackupRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RestoreChanBackupRequest;\n  return proto.lnrpc.RestoreChanBackupRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RestoreChanBackupRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RestoreChanBackupRequest}\n */\nproto.lnrpc.RestoreChanBackupRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.ChannelBackups;\n      reader.readMessage(value,proto.lnrpc.ChannelBackups.deserializeBinaryFromReader);\n      msg.setChanBackups(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMultiChanBackup(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RestoreChanBackupRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RestoreChanBackupRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RestoreChanBackupRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChanBackups();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.lnrpc.ChannelBackups.serializeBinaryToWriter\n    );\n  }\n  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));\n  if (f != null) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ChannelBackups chan_backups = 1;\n * @return {?proto.lnrpc.ChannelBackups}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getChanBackups = function() {\n  return /** @type{?proto.lnrpc.ChannelBackups} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelBackups, 1));\n};\n\n\n/** @param {?proto.lnrpc.ChannelBackups|undefined} value */\nproto.lnrpc.RestoreChanBackupRequest.prototype.setChanBackups = function(value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.RestoreChanBackupRequest.prototype.clearChanBackups = function() {\n  this.setChanBackups(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.hasChanBackups = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * @return {string}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getMultiChanBackup = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * This is a type-conversion wrapper around `getMultiChanBackup()`\n * @return {string}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getMultiChanBackup_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMultiChanBackup()));\n};\n\n\n/**\n * optional bytes multi_chan_backup = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMultiChanBackup()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.getMultiChanBackup_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMultiChanBackup()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.RestoreChanBackupRequest.prototype.setMultiChanBackup = function(value) {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_[0], value);\n};\n\n\nproto.lnrpc.RestoreChanBackupRequest.prototype.clearMultiChanBackup = function() {\n  jspb.Message.setOneofField(this, 2, proto.lnrpc.RestoreChanBackupRequest.oneofGroups_[0], undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.RestoreChanBackupRequest.prototype.hasMultiChanBackup = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.RestoreBackupResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.RestoreBackupResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.RestoreBackupResponse.displayName = 'proto.lnrpc.RestoreBackupResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.RestoreBackupResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.RestoreBackupResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.RestoreBackupResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RestoreBackupResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.RestoreBackupResponse}\n */\nproto.lnrpc.RestoreBackupResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.RestoreBackupResponse;\n  return proto.lnrpc.RestoreBackupResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.RestoreBackupResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.RestoreBackupResponse}\n */\nproto.lnrpc.RestoreBackupResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.RestoreBackupResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.RestoreBackupResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.RestoreBackupResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.RestoreBackupResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelBackupSubscription = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelBackupSubscription, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelBackupSubscription.displayName = 'proto.lnrpc.ChannelBackupSubscription';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelBackupSubscription.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelBackupSubscription.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelBackupSubscription} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackupSubscription.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelBackupSubscription}\n */\nproto.lnrpc.ChannelBackupSubscription.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelBackupSubscription;\n  return proto.lnrpc.ChannelBackupSubscription.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelBackupSubscription} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelBackupSubscription}\n */\nproto.lnrpc.ChannelBackupSubscription.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelBackupSubscription.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelBackupSubscription.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelBackupSubscription} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelBackupSubscription.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.VerifyChanBackupResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.VerifyChanBackupResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.VerifyChanBackupResponse.displayName = 'proto.lnrpc.VerifyChanBackupResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.VerifyChanBackupResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.VerifyChanBackupResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.VerifyChanBackupResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyChanBackupResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.VerifyChanBackupResponse}\n */\nproto.lnrpc.VerifyChanBackupResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.VerifyChanBackupResponse;\n  return proto.lnrpc.VerifyChanBackupResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.VerifyChanBackupResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.VerifyChanBackupResponse}\n */\nproto.lnrpc.VerifyChanBackupResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.VerifyChanBackupResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.VerifyChanBackupResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.VerifyChanBackupResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.VerifyChanBackupResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.MacaroonPermission = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.MacaroonPermission, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.MacaroonPermission.displayName = 'proto.lnrpc.MacaroonPermission';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.MacaroonPermission.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.MacaroonPermission.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.MacaroonPermission} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MacaroonPermission.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    entity: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    action: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.MacaroonPermission}\n */\nproto.lnrpc.MacaroonPermission.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.MacaroonPermission;\n  return proto.lnrpc.MacaroonPermission.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.MacaroonPermission} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.MacaroonPermission}\n */\nproto.lnrpc.MacaroonPermission.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEntity(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAction(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.MacaroonPermission.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.MacaroonPermission.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.MacaroonPermission} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.MacaroonPermission.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEntity();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAction();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string entity = 1;\n * @return {string}\n */\nproto.lnrpc.MacaroonPermission.prototype.getEntity = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.MacaroonPermission.prototype.setEntity = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional string action = 2;\n * @return {string}\n */\nproto.lnrpc.MacaroonPermission.prototype.getAction = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.MacaroonPermission.prototype.setAction = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.BakeMacaroonRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.lnrpc.BakeMacaroonRequest.repeatedFields_, null);\n};\ngoog.inherits(proto.lnrpc.BakeMacaroonRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.BakeMacaroonRequest.displayName = 'proto.lnrpc.BakeMacaroonRequest';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.lnrpc.BakeMacaroonRequest.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.BakeMacaroonRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.BakeMacaroonRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.BakeMacaroonRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BakeMacaroonRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    permissionsList: jspb.Message.toObjectList(msg.getPermissionsList(),\n    proto.lnrpc.MacaroonPermission.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.BakeMacaroonRequest}\n */\nproto.lnrpc.BakeMacaroonRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.BakeMacaroonRequest;\n  return proto.lnrpc.BakeMacaroonRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.BakeMacaroonRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.BakeMacaroonRequest}\n */\nproto.lnrpc.BakeMacaroonRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.lnrpc.MacaroonPermission;\n      reader.readMessage(value,proto.lnrpc.MacaroonPermission.deserializeBinaryFromReader);\n      msg.addPermissions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.BakeMacaroonRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.BakeMacaroonRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.BakeMacaroonRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BakeMacaroonRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPermissionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.lnrpc.MacaroonPermission.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated MacaroonPermission permissions = 1;\n * @return {!Array.<!proto.lnrpc.MacaroonPermission>}\n */\nproto.lnrpc.BakeMacaroonRequest.prototype.getPermissionsList = function() {\n  return /** @type{!Array.<!proto.lnrpc.MacaroonPermission>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.lnrpc.MacaroonPermission, 1));\n};\n\n\n/** @param {!Array.<!proto.lnrpc.MacaroonPermission>} value */\nproto.lnrpc.BakeMacaroonRequest.prototype.setPermissionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.lnrpc.MacaroonPermission=} opt_value\n * @param {number=} opt_index\n * @return {!proto.lnrpc.MacaroonPermission}\n */\nproto.lnrpc.BakeMacaroonRequest.prototype.addPermissions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.lnrpc.MacaroonPermission, opt_index);\n};\n\n\nproto.lnrpc.BakeMacaroonRequest.prototype.clearPermissionsList = function() {\n  this.setPermissionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.BakeMacaroonResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.BakeMacaroonResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.BakeMacaroonResponse.displayName = 'proto.lnrpc.BakeMacaroonResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.BakeMacaroonResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.BakeMacaroonResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.BakeMacaroonResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BakeMacaroonResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    macaroon: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.BakeMacaroonResponse}\n */\nproto.lnrpc.BakeMacaroonResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.BakeMacaroonResponse;\n  return proto.lnrpc.BakeMacaroonResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.BakeMacaroonResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.BakeMacaroonResponse}\n */\nproto.lnrpc.BakeMacaroonResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMacaroon(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.BakeMacaroonResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.BakeMacaroonResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.BakeMacaroonResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.BakeMacaroonResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMacaroon();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string macaroon = 1;\n * @return {string}\n */\nproto.lnrpc.BakeMacaroonResponse.prototype.getMacaroon = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.BakeMacaroonResponse.prototype.setMacaroon = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.Failure = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.Failure, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.Failure.displayName = 'proto.lnrpc.Failure';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.Failure.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.Failure.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.Failure} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Failure.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    code: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    channelUpdate: (f = msg.getChannelUpdate()) && proto.lnrpc.ChannelUpdate.toObject(includeInstance, f),\n    htlcMsat: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    onionSha256: msg.getOnionSha256_asB64(),\n    cltvExpiry: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    flags: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    failureSourceIndex: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    height: jspb.Message.getFieldWithDefault(msg, 9, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.Failure}\n */\nproto.lnrpc.Failure.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.Failure;\n  return proto.lnrpc.Failure.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.Failure} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.Failure}\n */\nproto.lnrpc.Failure.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.lnrpc.Failure.FailureCode} */ (reader.readEnum());\n      msg.setCode(value);\n      break;\n    case 3:\n      var value = new proto.lnrpc.ChannelUpdate;\n      reader.readMessage(value,proto.lnrpc.ChannelUpdate.deserializeBinaryFromReader);\n      msg.setChannelUpdate(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHtlcMsat(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOnionSha256(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setCltvExpiry(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFlags(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFailureSourceIndex(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setHeight(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.Failure.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.Failure.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.Failure} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.Failure.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getCode();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getChannelUpdate();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.lnrpc.ChannelUpdate.serializeBinaryToWriter\n    );\n  }\n  f = message.getHtlcMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getOnionSha256_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getCltvExpiry();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n  f = message.getFlags();\n  if (f !== 0) {\n    writer.writeUint32(\n      7,\n      f\n    );\n  }\n  f = message.getFailureSourceIndex();\n  if (f !== 0) {\n    writer.writeUint32(\n      8,\n      f\n    );\n  }\n  f = message.getHeight();\n  if (f !== 0) {\n    writer.writeUint32(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Failure.FailureCode = {\n  RESERVED: 0,\n  INCORRECT_OR_UNKNOWN_PAYMENT_DETAILS: 1,\n  INCORRECT_PAYMENT_AMOUNT: 2,\n  FINAL_INCORRECT_CLTV_EXPIRY: 3,\n  FINAL_INCORRECT_HTLC_AMOUNT: 4,\n  FINAL_EXPIRY_TOO_SOON: 5,\n  INVALID_REALM: 6,\n  EXPIRY_TOO_SOON: 7,\n  INVALID_ONION_VERSION: 8,\n  INVALID_ONION_HMAC: 9,\n  INVALID_ONION_KEY: 10,\n  AMOUNT_BELOW_MINIMUM: 11,\n  FEE_INSUFFICIENT: 12,\n  INCORRECT_CLTV_EXPIRY: 13,\n  CHANNEL_DISABLED: 14,\n  TEMPORARY_CHANNEL_FAILURE: 15,\n  REQUIRED_NODE_FEATURE_MISSING: 16,\n  REQUIRED_CHANNEL_FEATURE_MISSING: 17,\n  UNKNOWN_NEXT_PEER: 18,\n  TEMPORARY_NODE_FAILURE: 19,\n  PERMANENT_NODE_FAILURE: 20,\n  PERMANENT_CHANNEL_FAILURE: 21,\n  EXPIRY_TOO_FAR: 22,\n  MPP_TIMEOUT: 23,\n  INTERNAL_FAILURE: 997,\n  UNKNOWN_FAILURE: 998,\n  UNREADABLE_FAILURE: 999\n};\n\n/**\n * optional FailureCode code = 1;\n * @return {!proto.lnrpc.Failure.FailureCode}\n */\nproto.lnrpc.Failure.prototype.getCode = function() {\n  return /** @type {!proto.lnrpc.Failure.FailureCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.lnrpc.Failure.FailureCode} value */\nproto.lnrpc.Failure.prototype.setCode = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional ChannelUpdate channel_update = 3;\n * @return {?proto.lnrpc.ChannelUpdate}\n */\nproto.lnrpc.Failure.prototype.getChannelUpdate = function() {\n  return /** @type{?proto.lnrpc.ChannelUpdate} */ (\n    jspb.Message.getWrapperField(this, proto.lnrpc.ChannelUpdate, 3));\n};\n\n\n/** @param {?proto.lnrpc.ChannelUpdate|undefined} value */\nproto.lnrpc.Failure.prototype.setChannelUpdate = function(value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n\n\nproto.lnrpc.Failure.prototype.clearChannelUpdate = function() {\n  this.setChannelUpdate(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.lnrpc.Failure.prototype.hasChannelUpdate = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n/**\n * optional uint64 htlc_msat = 4;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getHtlcMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setHtlcMsat = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional bytes onion_sha_256 = 5;\n * @return {string}\n */\nproto.lnrpc.Failure.prototype.getOnionSha256 = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes onion_sha_256 = 5;\n * This is a type-conversion wrapper around `getOnionSha256()`\n * @return {string}\n */\nproto.lnrpc.Failure.prototype.getOnionSha256_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOnionSha256()));\n};\n\n\n/**\n * optional bytes onion_sha_256 = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOnionSha256()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.Failure.prototype.getOnionSha256_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOnionSha256()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.Failure.prototype.setOnionSha256 = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 cltv_expiry = 6;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getCltvExpiry = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setCltvExpiry = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint32 flags = 7;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getFlags = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setFlags = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional uint32 failure_source_index = 8;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getFailureSourceIndex = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setFailureSourceIndex = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional uint32 height = 9;\n * @return {number}\n */\nproto.lnrpc.Failure.prototype.getHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.Failure.prototype.setHeight = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.lnrpc.ChannelUpdate = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.lnrpc.ChannelUpdate, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.lnrpc.ChannelUpdate.displayName = 'proto.lnrpc.ChannelUpdate';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.lnrpc.ChannelUpdate.prototype.toObject = function(opt_includeInstance) {\n  return proto.lnrpc.ChannelUpdate.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.lnrpc.ChannelUpdate} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelUpdate.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    signature: msg.getSignature_asB64(),\n    chainHash: msg.getChainHash_asB64(),\n    chanId: jspb.Message.getFieldWithDefault(msg, 3, \"0\"),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    messageFlags: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    channelFlags: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    timeLockDelta: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    htlcMinimumMsat: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    baseFee: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    feeRate: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    htlcMaximumMsat: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    extraOpaqueData: msg.getExtraOpaqueData_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.lnrpc.ChannelUpdate}\n */\nproto.lnrpc.ChannelUpdate.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.lnrpc.ChannelUpdate;\n  return proto.lnrpc.ChannelUpdate.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.lnrpc.ChannelUpdate} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.lnrpc.ChannelUpdate}\n */\nproto.lnrpc.ChannelUpdate.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChainHash(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readUint64String());\n      msg.setChanId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTimestamp(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setMessageFlags(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setChannelFlags(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setTimeLockDelta(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHtlcMinimumMsat(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setBaseFee(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setFeeRate(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setHtlcMaximumMsat(value);\n      break;\n    case 12:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setExtraOpaqueData(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelUpdate.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.lnrpc.ChannelUpdate.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.lnrpc.ChannelUpdate} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.lnrpc.ChannelUpdate.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getChainHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getChanId();\n  if (parseInt(f, 10) !== 0) {\n    writer.writeUint64String(\n      3,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeUint32(\n      4,\n      f\n    );\n  }\n  f = message.getMessageFlags();\n  if (f !== 0) {\n    writer.writeUint32(\n      10,\n      f\n    );\n  }\n  f = message.getChannelFlags();\n  if (f !== 0) {\n    writer.writeUint32(\n      5,\n      f\n    );\n  }\n  f = message.getTimeLockDelta();\n  if (f !== 0) {\n    writer.writeUint32(\n      6,\n      f\n    );\n  }\n  f = message.getHtlcMinimumMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getBaseFee();\n  if (f !== 0) {\n    writer.writeUint32(\n      8,\n      f\n    );\n  }\n  f = message.getFeeRate();\n  if (f !== 0) {\n    writer.writeUint32(\n      9,\n      f\n    );\n  }\n  f = message.getHtlcMaximumMsat();\n  if (f !== 0) {\n    writer.writeUint64(\n      11,\n      f\n    );\n  }\n  f = message.getExtraOpaqueData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      12,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes signature = 1;\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes signature = 1;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelUpdate.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelUpdate.prototype.setSignature = function(value) {\n  jspb.Message.setField(this, 1, value);\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChainHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * This is a type-conversion wrapper around `getChainHash()`\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChainHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChainHash()));\n};\n\n\n/**\n * optional bytes chain_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChainHash()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChainHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChainHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelUpdate.prototype.setChainHash = function(value) {\n  jspb.Message.setField(this, 2, value);\n};\n\n\n/**\n * optional uint64 chan_id = 3;\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChanId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"0\"));\n};\n\n\n/** @param {string} value */\nproto.lnrpc.ChannelUpdate.prototype.setChanId = function(value) {\n  jspb.Message.setField(this, 3, value);\n};\n\n\n/**\n * optional uint32 timestamp = 4;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setTimestamp = function(value) {\n  jspb.Message.setField(this, 4, value);\n};\n\n\n/**\n * optional uint32 message_flags = 10;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getMessageFlags = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setMessageFlags = function(value) {\n  jspb.Message.setField(this, 10, value);\n};\n\n\n/**\n * optional uint32 channel_flags = 5;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getChannelFlags = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setChannelFlags = function(value) {\n  jspb.Message.setField(this, 5, value);\n};\n\n\n/**\n * optional uint32 time_lock_delta = 6;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getTimeLockDelta = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setTimeLockDelta = function(value) {\n  jspb.Message.setField(this, 6, value);\n};\n\n\n/**\n * optional uint64 htlc_minimum_msat = 7;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getHtlcMinimumMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setHtlcMinimumMsat = function(value) {\n  jspb.Message.setField(this, 7, value);\n};\n\n\n/**\n * optional uint32 base_fee = 8;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getBaseFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setBaseFee = function(value) {\n  jspb.Message.setField(this, 8, value);\n};\n\n\n/**\n * optional uint32 fee_rate = 9;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getFeeRate = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setFeeRate = function(value) {\n  jspb.Message.setField(this, 9, value);\n};\n\n\n/**\n * optional uint64 htlc_maximum_msat = 11;\n * @return {number}\n */\nproto.lnrpc.ChannelUpdate.prototype.getHtlcMaximumMsat = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.lnrpc.ChannelUpdate.prototype.setHtlcMaximumMsat = function(value) {\n  jspb.Message.setField(this, 11, value);\n};\n\n\n/**\n * optional bytes extra_opaque_data = 12;\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getExtraOpaqueData = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * optional bytes extra_opaque_data = 12;\n * This is a type-conversion wrapper around `getExtraOpaqueData()`\n * @return {string}\n */\nproto.lnrpc.ChannelUpdate.prototype.getExtraOpaqueData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getExtraOpaqueData()));\n};\n\n\n/**\n * optional bytes extra_opaque_data = 12;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getExtraOpaqueData()`\n * @return {!Uint8Array}\n */\nproto.lnrpc.ChannelUpdate.prototype.getExtraOpaqueData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getExtraOpaqueData()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.lnrpc.ChannelUpdate.prototype.setExtraOpaqueData = function(value) {\n  jspb.Message.setField(this, 12, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.lnrpc.AddressType = {\n  WITNESS_PUBKEY_HASH: 0,\n  NESTED_PUBKEY_HASH: 1,\n  UNUSED_WITNESS_PUBKEY_HASH: 2,\n  UNUSED_NESTED_PUBKEY_HASH: 3\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.CommitmentType = {\n  LEGACY: 0,\n  STATIC_REMOTE_KEY: 1,\n  ANCHORS: 2,\n  UNKNOWN_COMMITMENT_TYPE: 999\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.Initiator = {\n  INITIATOR_UNKNOWN: 0,\n  INITIATOR_LOCAL: 1,\n  INITIATOR_REMOTE: 2,\n  INITIATOR_BOTH: 3\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ResolutionType = {\n  TYPE_UNKNOWN: 0,\n  ANCHOR: 1,\n  INCOMING_HTLC: 2,\n  OUTGOING_HTLC: 3,\n  COMMIT: 4\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.ResolutionOutcome = {\n  OUTCOME_UNKNOWN: 0,\n  CLAIMED: 1,\n  UNCLAIMED: 2,\n  ABANDONED: 3,\n  FIRST_STAGE: 4,\n  TIMEOUT: 5\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.NodeMetricType = {\n  UNKNOWN: 0,\n  BETWEENNESS_CENTRALITY: 1\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.InvoiceHTLCState = {\n  ACCEPTED: 0,\n  SETTLED: 1,\n  CANCELED: 2\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.PaymentFailureReason = {\n  FAILURE_REASON_NONE: 0,\n  FAILURE_REASON_TIMEOUT: 1,\n  FAILURE_REASON_NO_ROUTE: 2,\n  FAILURE_REASON_ERROR: 3,\n  FAILURE_REASON_INCORRECT_PAYMENT_DETAILS: 4,\n  FAILURE_REASON_INSUFFICIENT_BALANCE: 5\n};\n\n/**\n * @enum {number}\n */\nproto.lnrpc.FeatureBit = {\n  DATALOSS_PROTECT_REQ: 0,\n  DATALOSS_PROTECT_OPT: 1,\n  INITIAL_ROUING_SYNC: 3,\n  UPFRONT_SHUTDOWN_SCRIPT_REQ: 4,\n  UPFRONT_SHUTDOWN_SCRIPT_OPT: 5,\n  GOSSIP_QUERIES_REQ: 6,\n  GOSSIP_QUERIES_OPT: 7,\n  TLV_ONION_REQ: 8,\n  TLV_ONION_OPT: 9,\n  EXT_GOSSIP_QUERIES_REQ: 10,\n  EXT_GOSSIP_QUERIES_OPT: 11,\n  STATIC_REMOTE_KEY_REQ: 12,\n  STATIC_REMOTE_KEY_OPT: 13,\n  PAYMENT_ADDR_REQ: 14,\n  PAYMENT_ADDR_OPT: 15,\n  MPP_REQ: 16,\n  MPP_OPT: 17\n};\n\ngoog.object.extend(exports, proto.lnrpc);\n","module.exports = __webpack_public_path__ + \"static/media/google.695a3160.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.a0185b04.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.a0185b04.svg\";"],"sourceRoot":""}