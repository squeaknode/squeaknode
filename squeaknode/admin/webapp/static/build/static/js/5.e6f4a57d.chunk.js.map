{"version":3,"sources":["components/Profile/index.js"],"names":["withRouter","props","useState","activeTab","setActiveTab","moreMenu","setMoreMenu","editName","setName","privateKey","setPrivateKey","editModalOpen","setEditModalOpen","deleteModalOpen","setDeleteModalOpen","exportModalOpen","setExportModalOpen","spendingModalOpen","setSpendingModalOpen","createModalOpen","setCreateModalOpen","setSaved","tab","setTab","styleBody","setStyleBody","userParam","match","params","username","profileSqueaks","useSelector","selectProfileSqueaks","lastUserSqueak","selectLastProfileSqueak","profileSqueaksStatus","selectProfileSqueaksStatus","user","selectCurrentProfile","dispatch","useDispatch","useEffect","window","scrollTo","fetchProfile","reloadSqueaks","isInitialMount","useRef","current","document","getElementsByTagName","style","cssText","changeTab","toggleEditModal","param","type","getProfileName","setTimeout","toggleDeleteModal","toggleExportModal","toggleSpendingModal","toggleCreateModal","handleModalClick","e","stopPropagation","uploadAvatar","file","reader","FileReader","addEventListener","imageBase64Stripped","result","split","uploadAvatarAsBase64","readAsDataURL","imageBase64","setProfileImage","profileId","getProfileId","clearProfileSqueaks","fetchProfileSqueaks","profilePubkey","limit","lastSqueak","openMore","className","onClick","history","back","alt","src","getProfileImageSrcString","id","display","top","getElementById","getBoundingClientRect","left","height","handleMenuClick","getHasPrivateKey","setDownloadPubkeySqueaks","then","console","log","getFollowing","setUnfollowProfile","unfollowUser","setFollowProfile","followUser","key","map","t","getReplyTo","squeak","getSqueakHash","getAuthor","length","squeakLst","slice","getMoreSqueaks","setClearProfileImage","setRenameProfile","profileName","onChange","files","changeAvatar","title","opacity","defaultValue","target","value","name","values","setDeleteProfile","getProfilePrivateKey","unwrapResult","readOnly","setCreateContactProfile","pubkey"],"mappings":"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","file":"static/js/5.e6f4a57d.chunk.js","sourcesContent":["import React , { useEffect, useState, useContext, useRef} from 'react'\r\nimport './style.scss'\r\nimport { ICON_ARROWBACK, ICON_MARKDOWN, ICON_DATE, ICON_CLOSE, ICON_UPLOAD, ICON_NEWMSG, ICON_SETTINGS, ICON_DARK } from '../../Icons'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { getProfileImageSrcString } from '../../squeakimages/images';\r\nimport Loader from '../Loader'\r\nimport moment from 'moment'\r\nimport SqueakCard from '../SqueakCard'\r\nimport {API_URL} from '../../config'\r\n\r\nimport { unwrapResult } from '@reduxjs/toolkit'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n fetchProfile,\r\n setFollowProfile,\r\n setUnfollowProfile,\r\n selectCurrentProfile,\r\n setDeleteProfile,\r\n setRenameProfile,\r\n setCreateContactProfile,\r\n setProfileImage,\r\n setClearProfileImage,\r\n getProfilePrivateKey,\r\n} from '../../features/profiles/profilesSlice'\r\nimport {\r\n fetchProfileSqueaks,\r\n selectProfileSqueaks,\r\n selectLastProfileSqueak,\r\n selectProfileSqueaksStatus,\r\n clearProfileSqueaks,\r\n setDownloadPubkeySqueaks,\r\n} from '../../features/squeaks/squeaksSlice'\r\n\r\n\r\nconst Profile = (props) => {\r\n    const [activeTab, setActiveTab] = useState('Squeaks')\r\n    const [moreMenu, setMoreMenu] = useState(false)\r\n    const [editName, setName] = useState('')\r\n    const [privateKey, setPrivateKey] = useState('')\r\n    const [editModalOpen, setEditModalOpen] = useState(false)\r\n    const [deleteModalOpen, setDeleteModalOpen] = useState(false)\r\n    const [exportModalOpen, setExportModalOpen] = useState(false)\r\n    const [spendingModalOpen, setSpendingModalOpen] = useState(false)\r\n    const [createModalOpen, setCreateModalOpen] = useState(false)\r\n    const [saved, setSaved] = useState(false)\r\n    const [tab, setTab] = useState('Sats Spent')\r\n    const [styleBody, setStyleBody] = useState(false)\r\n    const userParam = props.match.params.username\r\n\r\n    const profileSqueaks = useSelector(selectProfileSqueaks);\r\n    const lastUserSqueak = useSelector(selectLastProfileSqueak);\r\n    const profileSqueaksStatus = useSelector(selectProfileSqueaksStatus);\r\n    // const privateKey = 'TODO';\r\n\r\n    const user = useSelector(selectCurrentProfile);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        dispatch(fetchProfile(props.match.params.username));\r\n        reloadSqueaks();\r\n        //preventing edit modal from apprearing after clicking a user on memOpen\r\n        setEditModalOpen(false)\r\n        setName('')\r\n    }, [props.match.params.username])\r\n\r\n    const isInitialMount = useRef(true);\r\n    useEffect(() => {\r\n        if (isInitialMount.current){ isInitialMount.current = false }\r\n        else {\r\n            document.getElementsByTagName(\"body\")[0].style.cssText = styleBody && \"overflow-y: hidden; margin-right: 17px\"\r\n        }\r\n      }, [styleBody])\r\n\r\n      useEffect( () => () => document.getElementsByTagName(\"body\")[0].style.cssText = \"\", [] )\r\n\r\n      const changeTab = (tab) => {\r\n        setActiveTab(tab)\r\n    }\r\n\r\n    const editProfile = () => {\r\n        let values = {\r\n            profileId: user.getProfileId(),\r\n            name: editName,\r\n        }\r\n        dispatch(setRenameProfile({\r\n          profileId: user.getProfileId(),\r\n          profileName: editName,\r\n        }));\r\n        // TODO: chain action to update profile squeaks with the new name.\r\n        setSaved(true)\r\n        toggleEditModal()\r\n    }\r\n\r\n    const deleteProfile = () => {\r\n        let values = {\r\n            profileId: user.getProfileId(),\r\n        }\r\n        console.log('Delete user here');\r\n        dispatch(setDeleteProfile(values));\r\n        toggleDeleteModal();\r\n    }\r\n\r\n\r\n    const exportPrivateKey = () => {\r\n        let values = {\r\n            profileId: user.getProfileId(),\r\n        }\r\n        dispatch(getProfilePrivateKey(values))\r\n        .then(unwrapResult)\r\n        .then((privateKey) =>{\r\n          console.log(privateKey);\r\n          setPrivateKey(privateKey);\r\n        });\r\n    }\r\n\r\n    const downloadUserSqueaks = () => {\r\n        dispatch(setDownloadPubkeySqueaks(props.match.params.username))\r\n        .then(() => {\r\n          console.log('Finished downloading pubkey squeaks.');\r\n        });\r\n    }\r\n\r\n\r\n    const createContactProfile = () => {\r\n        dispatch(setCreateContactProfile({\r\n          pubkey: userParam,\r\n          profileName: editName,\r\n        }))\r\n        .then(() => {\r\n          dispatch(fetchProfile(props.match.params.username));\r\n        });\r\n        toggleCreateModal();\r\n    }\r\n\r\n    const toggleEditModal = (param, type) => {\r\n        setStyleBody(!styleBody)\r\n        setSaved(false)\r\n        setName(user.getProfileName())\r\n        setTimeout(()=>{ setEditModalOpen(!editModalOpen) },20)\r\n    }\r\n\r\n    const toggleDeleteModal = () => {\r\n        setStyleBody(!styleBody)\r\n        setSaved(false)\r\n        setTimeout(()=>{ setDeleteModalOpen(!deleteModalOpen) },20)\r\n    }\r\n\r\n    const toggleExportModal = () => {\r\n        setStyleBody(!styleBody)\r\n        setSaved(false)\r\n        setTimeout(()=>{ setExportModalOpen(!exportModalOpen) },20)\r\n    }\r\n\r\n    const toggleSpendingModal = (param, type) => {\r\n        setStyleBody(!styleBody)\r\n        if(type){setTab(type)}\r\n        if(type){setTab(type)}\r\n        setTimeout(()=>{ setSpendingModalOpen(!spendingModalOpen) },20)\r\n    }\r\n\r\n    const toggleCreateModal = (param, type) => {\r\n        setStyleBody(!styleBody)\r\n        setSaved(false)\r\n        setTimeout(()=>{ setCreateModalOpen(!createModalOpen) },20)\r\n    }\r\n\r\n    const handleModalClick = (e) => {\r\n        e.stopPropagation()\r\n    }\r\n\r\n    const followUser = (e,id) => {\r\n        e.stopPropagation()\r\n        dispatch(setFollowProfile(id));\r\n    }\r\n\r\n    const unfollowUser = (e,id) => {\r\n        console.log(e);\r\n        e.stopPropagation()\r\n        dispatch(setUnfollowProfile(id));\r\n    }\r\n\r\n    const changeAvatar = () => {\r\n        let file = document.getElementById('avatar').files[0];\r\n        uploadAvatar(file);\r\n    }\r\n\r\n    const clearAvatar = () => {\r\n      dispatch(setClearProfileImage({\r\n        profileId: user.getProfileId(),\r\n      }));\r\n      setSaved(true)\r\n      toggleEditModal()\r\n    }\r\n\r\n    const uploadAvatar = (file) => {\r\n      if (file == null)\r\n        return;\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () => {\r\n        // convert image file to base64 string\r\n        // preview.src = reader.result;\r\n        const imageBase64Stripped = reader.result.split(',')[1];\r\n        uploadAvatarAsBase64(imageBase64Stripped);\r\n      }, false);\r\n      if (file) {\r\n        reader.readAsDataURL(file);\r\n      }\r\n    };\r\n\r\n    const uploadAvatarAsBase64 = (imageBase64) => {\r\n      dispatch(setProfileImage({\r\n        profileId: user.getProfileId(),\r\n        imageBase64: imageBase64,\r\n      }));\r\n      setSaved(true)\r\n      toggleEditModal()\r\n    };\r\n\r\n    const getLastSqueak = (squeakLst) => {\r\n      if (squeakLst == null) {\r\n        return null;\r\n      } if (squeakLst.length === 0) {\r\n        return null;\r\n      }\r\n      return squeakLst.slice(-1)[0];\r\n    };\r\n\r\n    const getMoreSqueaks = () => {\r\n        let lastSqueak = getLastSqueak(profileSqueaks);\r\n        dispatch(fetchProfileSqueaks({\r\n          profilePubkey: props.match.params.username,\r\n          limit: 10,\r\n          lastSqueak: lastUserSqueak,\r\n        }));\r\n    }\r\n\r\n    const reloadSqueaks = () => {\r\n        dispatch(clearProfileSqueaks());\r\n        dispatch(fetchProfileSqueaks({\r\n          profilePubkey: props.match.params.username,\r\n          limit: 10,\r\n          lastSqueak: null,\r\n        }));\r\n    }\r\n\r\n    const openMore = () => { setMoreMenu(!moreMenu) }\r\n\r\n    const handleMenuClick = (e) => { e.stopPropagation() }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n            <div className=\"profile-wrapper\">\r\n            <div className=\"profile-header-wrapper\">\r\n                <div className=\"profile-header-back\">\r\n                    <div onClick={()=>window.history.back()} className=\"header-back-wrapper\">\r\n                        <ICON_ARROWBACK/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile-header-content\">\r\n                    <div className=\"profile-header-name\">\r\n                            {userParam}\r\n                    </div>\r\n                    {/* <div className=\"profile-header-squeaks\">\r\n                            82 Squeaks\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n            <div className=\"profile-banner-wrapper\">\r\n                <img alt=\"\"/>\r\n            </div>\r\n            <div className=\"profile-details-wrapper\">\r\n                <div className=\"profile-options\">\r\n                    <div className=\"profile-image-wrapper\">\r\n                        <img src={user ? `${getProfileImageSrcString(user)}` : null} alt=\"\"/>\r\n                    </div>\r\n\r\n                    {user &&\r\n                      <div id=\"profileMoreMenu\" onClick={openMore} className=\"Nav-link\">\r\n                          <div className={\"Nav-item-hover\"}>\r\n                              <ICON_SETTINGS  />\r\n                          </div>\r\n                          <div onClick={()=>openMore()} style={{display: moreMenu ? 'block' : 'none'}} className=\"more-menu-background\">\r\n                          <div className=\"more-modal-wrapper\">\r\n                              {moreMenu ?\r\n                              <div style={{\r\n                                top: document.getElementById('profileMoreMenu') && `${document.getElementById('profileMoreMenu').getBoundingClientRect().top - 40}px`,\r\n                                left: document.getElementById('profileMoreMenu') && `${document.getElementById('profileMoreMenu').getBoundingClientRect().left}px`,\r\n                                height: '210px',\r\n                               }} onClick={(e)=>handleMenuClick(e)} className=\"more-menu-content\">\r\n                                      <div onClick={toggleDeleteModal} className=\"more-menu-item\">\r\n                                          <span>Delete Profile</span>\r\n                                      </div>\r\n                                      <div onClick={toggleEditModal} className=\"more-menu-item\">\r\n                                          <span>Edit Profile</span>\r\n                                      </div>\r\n                                      {user.getHasPrivateKey() &&\r\n                                        <div onClick={toggleExportModal} className=\"more-menu-item\">\r\n                                            <span>Export Private Key</span>\r\n                                        </div>\r\n                                      }\r\n                              </div> : null }\r\n                          </div>\r\n                          </div>\r\n                      </div>\r\n                    }\r\n\r\n                    <div onClick={(e)=>\r\n                        downloadUserSqueaks()\r\n                      }\r\n                       className={'profile-edit-button'}>\r\n                          <span><span>{'Download Squeaks'}</span></span>\r\n                    </div>\r\n\r\n                    {user &&\r\n                      <div onClick={(e)=>\r\n                        user.getFollowing() ?\r\n                        unfollowUser(e,user.getProfileId()) :\r\n                        followUser(e,user.getProfileId())\r\n                      }\r\n                       className={user.getFollowing() ? 'unfollow-switch profile-edit-button' : 'profile-edit-button'}>\r\n                          <span><span>{ user.getFollowing() ? 'Following' : 'Follow'}</span></span>\r\n                      </div>\r\n                    }\r\n\r\n                    {!user &&\r\n                      <div onClick={(e)=>toggleCreateModal('create')}\r\n                       className='profiles-create-button'>\r\n                          <span>Add Contact Profile</span>\r\n                      </div>\r\n                    }\r\n                </div>\r\n                <div className=\"profile-details-box\">\r\n                    <div className=\"profile-name\">{user ? user.getProfileName() : ''}</div>\r\n                    <div className=\"profile-username\">@{userParam}</div>\r\n                    <div className=\"profile-bio\">\r\n                        &nbsp;\r\n                    </div>\r\n                    <div className=\"profile-info-box\">\r\n                        &nbsp;\r\n                    </div>\r\n                </div>\r\n                <div className=\"profile-social-box\">\r\n                        {/* TODO: Implement sats spent */}\r\n                        <div onClick={()=>toggleSpendingModal('members','Sats Spent')}>\r\n                            <p className=\"follow-num\"> 0 </p>\r\n                            <p className=\"follow-text\"> sats spent </p>\r\n                        </div>\r\n                        {/* TODO: Implement sats eaned */}\r\n                        <div onClick={()=>toggleSpendingModal('members', 'Sats Earned')}>\r\n                            <p className=\"follow-num\"> 0 </p>\r\n                            <p className=\"follow-text\"> sats earned </p>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"profile-nav-menu\">\r\n                <div key={'squeaks'} onClick={()=>changeTab('Squeaks')} className={activeTab ==='Squeaks' ? `profile-nav-item activeTab` : `profile-nav-item`}>\r\n                    Squeaks\r\n                </div>\r\n                <div key={'replies'} onClick={()=>changeTab('Squeaks&Replies')} className={activeTab ==='Squeaks&Replies' ? `profile-nav-item activeTab` : `profile-nav-item`}>\r\n                    Squeaks & replies\r\n                </div>\r\n                <div key={'media'} onClick={()=>changeTab('Media')} className={activeTab ==='Media' ? `profile-nav-item activeTab` : `profile-nav-item`}>\r\n                    Media\r\n                </div>\r\n                <div key={'likes'} onClick={()=>changeTab('Likes')} className={activeTab ==='Likes' ? `profile-nav-item activeTab` : `profile-nav-item`}>\r\n                    Likes\r\n                </div>\r\n            </div>\r\n            {activeTab === 'Squeaks' ?\r\n            profileSqueaks.map(t=>{\r\n                if(!t.getReplyTo())\r\n                return <SqueakCard squeak={t} key={t.getSqueakHash()} id={t.getSqueakHash()} user={t.getAuthor()} />\r\n             }) : activeTab === 'Squeaks&Replies' ?\r\n            profileSqueaks.map(t=>{\r\n                return <SqueakCard squeak={t} key={t.getSqueakHash()} id={t.getSqueakHash()} user={t.getAuthor()} />\r\n             }) :\r\n            activeTab === 'Likes' ?\r\n            null: activeTab === 'Media' ?\r\n            null: null}\r\n            {/* TODO: fix get loading state by doing this: https://medium.com/stashaway-engineering/react-redux-tips-better-way-to-handle-loading-flags-in-your-reducers-afda42a804c6 */}\r\n            {profileSqueaks.length > 0 &&\r\n                <>\r\n                {profileSqueaksStatus == 'loading' ?\r\n                    <Loader /> :\r\n                    <div onClick={() => getMoreSqueaks()} className='squeak-btn-side squeak-btn-active'>\r\n                      Load more\r\n                </div>}\r\n                </>\r\n            }\r\n\r\n            </div>\r\n\r\n            {/* Modal for edit profile */}\r\n            <div onClick={()=>toggleEditModal()} style={{display: editModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n                <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <div className=\"modal-closeIcon\">\r\n                            <div onClick={()=>toggleEditModal()} className=\"modal-closeIcon-wrap\">\r\n                                <ICON_CLOSE />\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"modal-title\">'Edit Profile'</p>\r\n                        <div className=\"save-modal-wrapper\">\r\n                            <div onClick={clearAvatar} className=\"save-modal-btn\">\r\n                                Clear Image\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"save-modal-wrapper\">\r\n                            <div onClick={editProfile} className=\"save-modal-btn\">\r\n                                Save\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"modal-banner\">\r\n                        </div>\r\n                        <div className=\"modal-profile-pic\">\r\n                            <div className=\"modal-back-pic\">\r\n                                <img src={user ? `${getProfileImageSrcString(user)}` : null} alt=\"profile\" />\r\n                                <div>\r\n                                    <ICON_UPLOAD/>\r\n                                    <input onChange={()=>changeAvatar()} title=\" \" id=\"avatar\" style={{opacity:'0'}} type=\"file\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {user ?\r\n                          <form className=\"edit-form\">\r\n                              <div className=\"edit-input-wrap\">\r\n                                  <div className=\"edit-input-content\">\r\n                                      <label>Name</label>\r\n                                      <input defaultValue={user.getProfileName()} onChange={(e)=>setName(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                                  </div>\r\n                              </div>\r\n                          </form> :\r\n                          <form className=\"create-form\">\r\n                              <div className=\"create-input-wrap\">\r\n                                  <div className=\"create-input-content\">\r\n                                      <label>Name</label>\r\n                                      <input defaultValue={''} onChange={(e)=>setName(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                                  </div>\r\n                              </div>\r\n                          </form>\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {/* Modal for delete profile */}\r\n            <div onClick={()=>toggleDeleteModal()} style={{display: deleteModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n                <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <div className=\"modal-closeIcon\">\r\n                            <div onClick={()=>toggleDeleteModal()} className=\"modal-closeIcon-wrap\">\r\n                                <ICON_CLOSE />\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"modal-title\">'Delete Profile'</p>\r\n                        <div className=\"save-modal-wrapper\">\r\n                            <div onClick={deleteProfile} className=\"save-modal-btn\">\r\n                                Delete\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Modal for export profile */}\r\n            <div onClick={()=>toggleExportModal()} style={{display: exportModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n                <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <div className=\"modal-closeIcon\">\r\n                            <div onClick={()=>toggleExportModal()} className=\"modal-closeIcon-wrap\">\r\n                                <ICON_CLOSE />\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"modal-title\">'Export Private Key'</p>\r\n                        <div className=\"save-modal-wrapper\">\r\n                            <div onClick={exportPrivateKey} className=\"save-modal-btn\">\r\n                                Export\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"modal-body\">\r\n                        <form className=\"edit-form\">\r\n                            <div className=\"edit-input-wrap\">\r\n                                <div className=\"edit-input-content\">\r\n                                    <label>Private Key</label>\r\n                                    <input defaultValue={privateKey} readOnly type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {/* Modal for sats spent and earned */}\r\n            <div onClick={()=>toggleSpendingModal()} style={{display: spendingModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n                <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n                    <div className=\"modal-header no-b-border\">\r\n                        <div className=\"modal-closeIcon\">\r\n                            <div onClick={()=>toggleEditModal()} className=\"modal-closeIcon-wrap\">\r\n                                <ICON_CLOSE />\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"modal-title\">{null}</p>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                    <div className=\"explore-nav-menu\">\r\n                        <div onClick={()=>setTab('Sats Spent')} className={tab =='Sats Spent' ? `explore-nav-item activeTab` : `explore-nav-item`}>\r\n                            Sats Spent\r\n                        </div>\r\n                        <div onClick={()=>setTab('Sats Earned')} className={tab =='Sats Earned' ? `explore-nav-item activeTab` : `explore-nav-item`}>\r\n                            Sats Earned\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-scroll\">\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Modal for create signing profile */}\r\n            <div onClick={()=>toggleCreateModal()} style={{display: createModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n                <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <div className=\"modal-closeIcon\">\r\n                            <div onClick={()=>toggleCreateModal()} className=\"modal-closeIcon-wrap\">\r\n                                <ICON_CLOSE />\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"modal-title\">Add Contact Profile</p>\r\n\r\n                        <div className=\"save-modal-wrapper\">\r\n                            <div onClick={createContactProfile} className=\"save-modal-btn\">\r\n                                Submit\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"modal-body\">\r\n                        <form className=\"edit-form\">\r\n                            <div className=\"edit-input-wrap\">\r\n                                <div className=\"edit-input-content\">\r\n                                    <label>Profile Name</label>\r\n                                    <input defaultValue={''} onChange={(e)=>setName(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"edit-input-wrap\">\r\n                                <div className=\"edit-input-content\">\r\n                                    <label>Public Key</label>\r\n                                    <input defaultValue={userParam} readOnly type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Profile)\r\n"],"sourceRoot":""}