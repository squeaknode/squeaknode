{"version":3,"sources":["components/Peer/index.js"],"names":["withRouter","props","useContext","StoreContext","state","actions","useState","editName","setName","deleteModalOpen","setDeleteModalOpen","savePeerModalOpen","setSavePeerModalOpen","setSaved","styleBody","setStyleBody","peer","peerConnection","listTweets","list","resultUsers","useEffect","window","scrollTo","getPeer","network","match","params","host","port","getPeerConnection","isInitialMount","useRef","current","document","getElementsByTagName","style","cssText","toggleDeleteModal","setTimeout","toggleSavePeerModal","param","type","handleModalClick","e","stopPropagation","className","onClick","history","back","getPeerName","disconnectPeer","connectPeer","map","t","retweet","username","name","parent","key","_id","id","user","createdAt","description","images","replies","retweets","likes","display","values","peerId","getPeerId","deletePeer","savePeer","onChange","target","value"],"mappings":"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","file":"static/js/4.5809d366.chunk.js","sourcesContent":["import React , { useEffect, useState, useContext, useRef } from 'react'\r\nimport './style.scss'\r\nimport {  withRouter, Link } from 'react-router-dom'\r\nimport { StoreContext } from '../../store/store'\r\nimport Loader from '../Loader'\r\nimport TweetCard from '../TweetCard'\r\nimport {API_URL} from '../../config'\r\nimport axios from 'axios'\r\nimport {ICON_ARROWBACK, ICON_UPLOAD, ICON_CLOSE,ICON_SEARCH } from '../../Icons'\r\n\r\nconst Peer = (props) => {\r\n\r\nconst { state, actions } = useContext(StoreContext)\r\nconst [modalOpen, setModalOpen] = useState(false)\r\n\r\nconst [editName, setName] = useState('')\r\nconst [editDescription, setDescription] = useState('')\r\nconst [deleteModalOpen, setDeleteModalOpen] = useState(false)\r\nconst [savePeerModalOpen, setSavePeerModalOpen] = useState(false)\r\nconst [banner, setBanner] = useState('')\r\nconst [saved, setSaved] = useState(false)\r\nconst [tab, setTab] = useState('Members')\r\nconst [bannerLoading, setBannerLoading] = useState(false)\r\nconst [styleBody, setStyleBody] = useState(false)\r\nconst {peer, peerConnection, list, listTweets, resultUsers} = state\r\n\r\nuseEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    // actions.getList(props.match.params.id)\r\n    actions.getPeer({\r\n      network: props.match.params.network,\r\n      host: props.match.params.host,\r\n      port: props.match.params.port,\r\n    });\r\n    actions.getPeerConnection({\r\n      network: props.match.params.network,\r\n      host: props.match.params.host,\r\n      port: props.match.params.port,\r\n    });\r\n}, [])\r\n\r\nconst isInitialMount = useRef(true);\r\nuseEffect(() => {\r\n    if (isInitialMount.current){ isInitialMount.current = false }\r\n    else {\r\n        document.getElementsByTagName(\"body\")[0].style.cssText = styleBody && \"overflow-y: hidden; margin-right: 17px\"\r\n    }\r\n}, [styleBody])\r\n\r\nuseEffect( () => () => document.getElementsByTagName(\"body\")[0].style.cssText = \"\", [] )\r\n\r\n\r\nconst deleteList = () => {\r\n    actions.deleteList(props.match.params.id)\r\n    props.history.push('/lists')\r\n}\r\n\r\nconst goToUser = (id) => {\r\n    props.history.push(`/profile/${id}`)\r\n}\r\n\r\nconst connectPeer = (e) => {\r\n    actions.connectPeer({\r\n      host: props.match.params.host,\r\n      port: props.match.params.port,\r\n      network: props.match.params.network});\r\n}\r\n\r\nconst disconnectPeer = (e) => {\r\n  actions.disconnectPeer({\r\n    host: props.match.params.host,\r\n    port: props.match.params.port,\r\n    network: props.match.params.network});\r\n}\r\n\r\nconst deletePeer = () => {\r\n    let values = {\r\n        peerId: peer.getPeerId(),\r\n    }\r\n    actions.deletePeer(values);\r\n    toggleDeleteModal();\r\n}\r\n\r\nconst savePeer = () => {\r\n    actions.savePeer({\r\n      name: editName,\r\n      host: props.match.params.host,\r\n      port: props.match.params.port,\r\n      network: props.match.params.network});\r\n    toggleSavePeerModal();\r\n}\r\n\r\nconst toggleDeleteModal = () => {\r\n    setStyleBody(!styleBody)\r\n    setSaved(false)\r\n    setTimeout(()=>{ setDeleteModalOpen(!deleteModalOpen) },20)\r\n}\r\n\r\nconst toggleSavePeerModal = (param, type) => {\r\n    setStyleBody(!styleBody)\r\n    setTimeout(()=>{ setSavePeerModalOpen(!savePeerModalOpen) },20)\r\n}\r\n\r\nconst handleModalClick = (e) => {\r\n    e.stopPropagation()\r\n}\r\n\r\n\r\nreturn(\r\n    <div>\r\n\r\n      <div className=\"bookmarks-wrapper\">\r\n        <div className=\"bookmarks-header-wrapper\">\r\n            <div className=\"profile-header-back\">\r\n                <div onClick={()=>window.history.back()} className=\"header-back-wrapper\">\r\n                    <ICON_ARROWBACK/>\r\n                </div>\r\n            </div>\r\n            <div className=\"bookmarks-header-content\">\r\n                <div className=\"bookmarks-header-name\">\r\n                    {peer && peer.getPeerName()}\r\n                </div>\r\n                <div className=\"bookmarks-header-tweets\">\r\n                    {props.match.params.host}:{props.match.params.port}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"listp-details-wrap\">\r\n            <div className=\"bookmarks-header-name\">{peer && peer.getPeerName()}</div>\r\n            {peer &&\r\n              <div onClick={(e)=>toggleDeleteModal()}\r\n               className='peer-connect-button'>\r\n                  <span>Delete</span>\r\n              </div>\r\n            }\r\n            {!peer &&\r\n              <div onClick={(e)=>toggleSavePeerModal('edit')}\r\n               className='profiles-create-button'>\r\n                  <span>Add Saved Peer</span>\r\n              </div>\r\n            }\r\n\r\n\r\n            <div className=\"list-owner-wrap\">\r\n                <div>{props.match.params.host}:{props.match.params.port}</div>\r\n            </div>\r\n            <div onClick={(e)=>\r\n                 peerConnection ?\r\n                 disconnectPeer(e) :\r\n                 connectPeer(e)\r\n              }\r\n                className={peerConnection ? 'disconnect peer-connect-button' : 'peer-connect-button'}>\r\n                   <span><span>{ peerConnection ? 'Connected' : 'Connect'}</span></span>\r\n            </div>\r\n        </div>\r\n        {listTweets && listTweets.map(t=>{\r\n            return <TweetCard retweet={t.retweet} username={t.username} name={t.name} parent={t.parent} key={t._id} id={t._id} user={t.user} createdAt={t.createdAt} description={t.description} images={t.images} replies={t.replies} retweets={t.retweets} likes={t.likes}  />\r\n        })}\r\n    </div>\r\n\r\n    {/* Modal for delete profile */}\r\n    <div onClick={()=>toggleDeleteModal()} style={{display: deleteModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n        <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <div className=\"modal-closeIcon\">\r\n                    <div onClick={()=>toggleDeleteModal()} className=\"modal-closeIcon-wrap\">\r\n                        <ICON_CLOSE />\r\n                    </div>\r\n                </div>\r\n                <p className=\"modal-title\">'Delete Peer'</p>\r\n                <div className=\"save-modal-wrapper\">\r\n                    <div onClick={deletePeer} className=\"save-modal-btn\">\r\n                        Delete\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    {/* Modal for create save peer */}\r\n    <div onClick={()=>toggleSavePeerModal()} style={{display: savePeerModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n        <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <div className=\"modal-closeIcon\">\r\n                    <div onClick={()=>toggleSavePeerModal()} className=\"modal-closeIcon-wrap\">\r\n                        <ICON_CLOSE />\r\n                    </div>\r\n                </div>\r\n                <p className=\"modal-title\">Save Peer</p>\r\n\r\n                <div className=\"save-modal-wrapper\">\r\n                    <div onClick={savePeer} className=\"save-modal-btn\">\r\n                        Submit\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <form className=\"edit-form\">\r\n                <div className=\"edit-input-wrap\">\r\n                    <div className=\"edit-input-content\">\r\n                        <label>Name</label>\r\n                        <input onChange={(e)=>setName(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Peer)\r\n"],"sourceRoot":""}