{"version":3,"sources":["components/Peer/index.js"],"names":["withRouter","props","useState","editName","setName","deleteModalOpen","setDeleteModalOpen","savePeerModalOpen","setSavePeerModalOpen","setSaved","styleBody","setStyleBody","peer","useSelector","selectCurrentPeer","peerConnection","selectConnectedPeers","state","selectPeerConnectionByAddress","network","match","params","host","port","dispatch","useDispatch","useEffect","window","scrollTo","fetchPeer","fetchConnectedPeers","isInitialMount","useRef","current","document","getElementsByTagName","style","cssText","toggleDeleteModal","setTimeout","toggleSavePeerModal","param","type","handleModalClick","e","stopPropagation","className","onClick","history","back","getPeerName","setDisconnectPeer","setConnectPeer","getAutoconnect","id","values","peerId","getPeerId","setPeerAutoconnectDisabled","setIsNotAutoconnect","console","log","setPeerAutoconnectEnabled","setIsAutoconnect","moment","getConnectTimeS","fromNow","getNumberBytesReceived","getNumberMessagesReceived","getLastMessageReceivedTimeS","getNumberBytesSent","getNumberMessagesSent","display","setDeletePeer","strippedHost","replace","setSavePeer","name","onChange","target","value"],"mappings":"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","file":"static/js/4.5466ca1a.chunk.js","sourcesContent":["import React , { useEffect, useState, useContext, useRef } from 'react'\r\nimport './style.scss'\r\nimport moment from 'moment'\r\nimport {  withRouter, Link } from 'react-router-dom'\r\nimport Loader from '../Loader'\r\nimport SqueakCard from '../SqueakCard'\r\nimport {API_URL} from '../../config'\r\nimport axios from 'axios'\r\nimport {ICON_ARROWBACK, ICON_UPLOAD, ICON_CLOSE,ICON_SEARCH } from '../../Icons'\r\n\r\nimport { unwrapResult } from '@reduxjs/toolkit'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  fetchPeer,\r\n  fetchConnectedPeers,\r\n  selectCurrentPeer,\r\n  selectCurrentPeerStatus,\r\n  selectConnectedPeers,\r\n  selectPeerConnectionByAddress,\r\n  setConnectPeer,\r\n  setDisconnectPeer,\r\n  setSavePeer,\r\n  setDeletePeer,\r\n  setPeerAutoconnectEnabled,\r\n  setPeerAutoconnectDisabled,\r\n} from '../../features/peers/peersSlice'\r\n\r\n\r\nconst Peer = (props) => {\r\n\r\nconst [modalOpen, setModalOpen] = useState(false)\r\n\r\nconst [editName, setName] = useState('')\r\nconst [editDescription, setDescription] = useState('')\r\nconst [deleteModalOpen, setDeleteModalOpen] = useState(false)\r\nconst [savePeerModalOpen, setSavePeerModalOpen] = useState(false)\r\nconst [banner, setBanner] = useState('')\r\nconst [saved, setSaved] = useState(false)\r\nconst [tab, setTab] = useState('Members')\r\nconst [bannerLoading, setBannerLoading] = useState(false)\r\nconst [styleBody, setStyleBody] = useState(false)\r\n\r\nconst peer = useSelector(selectCurrentPeer);\r\nconst connectedPeers = useSelector(selectConnectedPeers);\r\nconst peerConnection = useSelector(state => selectPeerConnectionByAddress(state, {\r\n  network: props.match.params.network,\r\n  host: props.match.params.host,\r\n  port: props.match.params.port,\r\n}));\r\nconst dispatch = useDispatch();\r\n\r\n\r\nuseEffect(() => {\r\n    window.scrollTo(0, 0)\r\n    dispatch(fetchPeer({\r\n      network: props.match.params.network,\r\n      host: props.match.params.host,\r\n      port: props.match.params.port,\r\n    }));\r\n    dispatch(fetchConnectedPeers());\r\n}, [])\r\n\r\nconst isInitialMount = useRef(true);\r\nuseEffect(() => {\r\n    if (isInitialMount.current){ isInitialMount.current = false }\r\n    else {\r\n        document.getElementsByTagName(\"body\")[0].style.cssText = styleBody && \"overflow-y: hidden; margin-right: 17px\"\r\n    }\r\n}, [styleBody])\r\n\r\nuseEffect( () => () => document.getElementsByTagName(\"body\")[0].style.cssText = \"\", [] )\r\n\r\n\r\nconst connectPeer = (e) => {\r\n    dispatch(setConnectPeer({\r\n        host: props.match.params.host,\r\n        port: props.match.params.port,\r\n        network: props.match.params.network,\r\n    }));\r\n}\r\n\r\nconst disconnectPeer = (e) => {\r\n  dispatch(setDisconnectPeer({\r\n      host: props.match.params.host,\r\n      port: props.match.params.port,\r\n      network: props.match.params.network,\r\n  }));\r\n}\r\n\r\nconst deletePeer = () => {\r\n    let values = {\r\n        peerId: peer.getPeerId(),\r\n    }\r\n    dispatch(setDeletePeer(values));\r\n    toggleDeleteModal();\r\n}\r\n\r\nfunction removeHttp(url) {\r\n  return url.replace(/^https?:\\/\\//, '');\r\n}\r\n\r\nconst savePeer = () => {\r\n    const strippedHost = removeHttp(props.match.params.host);\r\n    dispatch(setSavePeer({\r\n        name: editName,\r\n        host: strippedHost,\r\n        port: props.match.params.port,\r\n        network: props.match.params.network,\r\n    }));\r\n    toggleSavePeerModal();\r\n}\r\n\r\nconst setIsAutoconnect = (e,id) => {\r\n    e.stopPropagation()\r\n    console.log(id);\r\n    console.log(peer.getPeerId());\r\n    let values = {\r\n        peerId: peer.getPeerId(),\r\n    }\r\n\r\n    dispatch(setPeerAutoconnectEnabled(values));\r\n}\r\n\r\nconst setIsNotAutoconnect = (e,id) => {\r\n    e.stopPropagation()\r\n    let values = {\r\n        peerId: peer.getPeerId(),\r\n    }\r\n    dispatch(setPeerAutoconnectDisabled(values));\r\n}\r\n\r\nconst toggleDeleteModal = () => {\r\n    setStyleBody(!styleBody)\r\n    setSaved(false)\r\n    setTimeout(()=>{ setDeleteModalOpen(!deleteModalOpen) },20)\r\n}\r\n\r\nconst toggleSavePeerModal = (param, type) => {\r\n    setStyleBody(!styleBody)\r\n    setTimeout(()=>{ setSavePeerModalOpen(!savePeerModalOpen) },20)\r\n}\r\n\r\nconst handleModalClick = (e) => {\r\n    e.stopPropagation()\r\n}\r\n\r\n\r\nreturn(\r\n    <div>\r\n\r\n      <div className=\"bookmarks-wrapper\">\r\n        <div className=\"bookmarks-header-wrapper\">\r\n            <div className=\"profile-header-back\">\r\n                <div onClick={()=>window.history.back()} className=\"header-back-wrapper\">\r\n                    <ICON_ARROWBACK/>\r\n                </div>\r\n            </div>\r\n            <div className=\"bookmarks-header-content\">\r\n                <div className=\"bookmarks-header-name\">\r\n                    {peer && peer.getPeerName()}\r\n                </div>\r\n                <div className=\"bookmarks-header-squeaks\">\r\n                    {props.match.params.host}:{props.match.params.port}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"listp-details-wrap\">\r\n            <div className=\"bookmarks-header-name\">{peer && peer.getPeerName()}</div>\r\n            <div className=\"list-owner-wrap\">\r\n                <div>{props.match.params.host}:{props.match.params.port}</div>\r\n            </div>\r\n\r\n            <div className=\"profile-options\">\r\n            {peer &&\r\n              <div onClick={(e)=>toggleDeleteModal()}\r\n               className='peer-connect-button'>\r\n                  <span>Delete</span>\r\n              </div>\r\n            }\r\n            {!peer &&\r\n              <div onClick={(e)=>toggleSavePeerModal('edit')}\r\n               className='profiles-create-button'>\r\n                  <span>Add Saved Peer</span>\r\n              </div>\r\n            }\r\n            </div>\r\n\r\n\r\n            <div className=\"profile-options\">\r\n            <div onClick={(e)=>\r\n                 peerConnection ?\r\n                 disconnectPeer(e) :\r\n                 connectPeer(e)\r\n              }\r\n                className={peerConnection ? 'disconnect peer-connect-button' : 'peer-connect-button'}>\r\n                   <span><span>{ peerConnection ? 'Connected' : 'Connect'}</span></span>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"profile-options\">\r\n            {peer &&\r\n              <div onClick={(e)=>\r\n                peer.getAutoconnect() ?\r\n                setIsNotAutoconnect(e,peer.getPeerId()) :\r\n                setIsAutoconnect(e,peer.getPeerId())\r\n              }\r\n               className={peer.getAutoconnect() ? 'remove-autoconnect peer-connect-button' : 'peer-connect-button'}>\r\n                  <span><span>{ peer.getAutoconnect() ? 'Autoconnecting' : 'Not Autoconnecting'}</span></span>\r\n              </div>\r\n            }\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"feed-wrapper\">\r\n            {peerConnection &&\r\n              <div className=\"feed-trending-card\">\r\n                  <div className=\"feed-card-trend\">\r\n                      <div>Connection Time</div>\r\n                      <div>{moment(peerConnection.getConnectTimeS() * 1000).fromNow(true)}</div>\r\n                  </div>\r\n                  <div className=\"feed-card-trend\">\r\n                      <div>Bytes received</div>\r\n                      <div>{peerConnection.getNumberBytesReceived()}</div>\r\n                  </div>\r\n                  <div className=\"feed-card-trend\">\r\n                      <div>Messages received</div>\r\n                      <div>{peerConnection.getNumberMessagesReceived()}</div>\r\n                  </div>\r\n                  <div className=\"feed-card-trend\">\r\n                      <div>Last Message Received Time</div>\r\n                      <div>{moment(peerConnection.getLastMessageReceivedTimeS() * 1000).fromNow(true)}</div>\r\n                  </div>\r\n                  <div className=\"feed-card-trend\">\r\n                      <div>Bytes sent</div>\r\n                      <div>{peerConnection.getNumberBytesSent()}</div>\r\n                  </div>\r\n                  <div className=\"feed-card-trend\">\r\n                      <div>Messages sent</div>\r\n                      <div>{peerConnection.getNumberMessagesSent()}</div>\r\n                  </div>\r\n              </div>\r\n            }\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n    {/* Modal for delete profile */}\r\n    <div onClick={()=>toggleDeleteModal()} style={{display: deleteModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n        <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <div className=\"modal-closeIcon\">\r\n                    <div onClick={()=>toggleDeleteModal()} className=\"modal-closeIcon-wrap\">\r\n                        <ICON_CLOSE />\r\n                    </div>\r\n                </div>\r\n                <p className=\"modal-title\">'Delete Peer'</p>\r\n                <div className=\"save-modal-wrapper\">\r\n                    <div onClick={deletePeer} className=\"save-modal-btn\">\r\n                        Delete\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    {/* Modal for create save peer */}\r\n    <div onClick={()=>toggleSavePeerModal()} style={{display: savePeerModalOpen ? 'block' : 'none'}} className=\"modal-edit\">\r\n        <div onClick={(e)=>handleModalClick(e)} className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <div className=\"modal-closeIcon\">\r\n                    <div onClick={()=>toggleSavePeerModal()} className=\"modal-closeIcon-wrap\">\r\n                        <ICON_CLOSE />\r\n                    </div>\r\n                </div>\r\n                <p className=\"modal-title\">Save Peer</p>\r\n\r\n                <div className=\"save-modal-wrapper\">\r\n                    <div onClick={savePeer} className=\"save-modal-btn\">\r\n                        Submit\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <form className=\"edit-form\">\r\n                <div className=\"edit-input-wrap\">\r\n                    <div className=\"edit-input-content\">\r\n                        <label>Name</label>\r\n                        <input onChange={(e)=>setName(e.target.value)} type=\"text\" name=\"name\" className=\"edit-input\"/>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Peer)\r\n"],"sourceRoot":""}