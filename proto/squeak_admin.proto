syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.github.yzernik.squeaknode";
option java_outer_classname = "SqueakAdminProto";
option objc_class_prefix = "SQK";

package squeaknode;

import "proto/lnd.proto";

// Interface exported by the server.
service SqueakAdmin {

  /** sqkadmin: `lndgetinfo`
  */
  rpc LndGetInfo (lnrpc.GetInfoRequest) returns (lnrpc.GetInfoResponse) {}

  /** sqkadmin: `lndwalletbalance`
  */
  rpc LndWalletBalance (lnrpc.WalletBalanceRequest) returns (lnrpc.WalletBalanceResponse) {}

  /** sqkadmin: `lndnewaddress`
  */
  rpc LndNewAddress (lnrpc.NewAddressRequest) returns (lnrpc.NewAddressResponse) {}

  /** sqkadmin: `lndlistchannels`
  */
  rpc LndListChannels (lnrpc.ListChannelsRequest) returns (lnrpc.ListChannelsResponse) {}

  /** sqkadmin: `lndpendingchannels`
  */
  rpc LndPendingChannels (lnrpc.PendingChannelsRequest) returns (lnrpc.PendingChannelsResponse) {}

  /** sqkadmin: `lndgettransactions`
  */
  rpc LndGetTransactions (lnrpc.GetTransactionsRequest) returns (lnrpc.TransactionDetails) {}

  /** sqkadmin: `lndlistpeers`
  */
  rpc LndListPeers (lnrpc.ListPeersRequest) returns (lnrpc.ListPeersResponse) {}

  /** sqkadmin: `lndconnectpeer`
  */
  rpc LndConnectPeer (lnrpc.ConnectPeerRequest) returns (lnrpc.ConnectPeerResponse) {}

  /** sqkadmin: `lnddisconnectpeer`
  */
  rpc LndDisconnectPeer (lnrpc.DisconnectPeerRequest) returns (lnrpc.DisconnectPeerResponse) {}

  /** sqkadmin: `lndopenchannelsync`
  */
  rpc LndOpenChannelSync (lnrpc.OpenChannelRequest) returns (lnrpc.ChannelPoint) {}

  /** sqkadmin: `lndclosechannel`
  */
  rpc LndCloseChannel (lnrpc.CloseChannelRequest) returns (stream lnrpc.CloseStatusUpdate) {}

  /** sqkadmin: `lndsubscribechannelevents`
  */
  rpc LndSubscribeChannelEvents (lnrpc.ChannelEventSubscription) returns (stream lnrpc.ChannelEventUpdate) {}

  /** sqkadmin: `lndsendcoins`
  */
  rpc LndSendCoins (lnrpc.SendCoinsRequest) returns (lnrpc.SendCoinsResponse) {}

  /** sqkadmin: `createsigningprofile`
  */
  rpc CreateSigningProfile (CreateSigningProfileRequest) returns (CreateSigningProfileReply) {}

  /** sqkadmin: `createcontactprofile`
  */
  rpc CreateContactProfile (CreateContactProfileRequest) returns (CreateContactProfileReply) {}

  /** sqkadmin: `importsigningprofile`
  */
  rpc ImportSigningProfile (ImportSigningProfileRequest) returns (ImportSigningProfileReply) {}

  /** sqkadmin: `getsigningprofiles`
  */
  rpc GetSigningProfiles (GetSigningProfilesRequest) returns (GetSigningProfilesReply) {}

  /** sqkadmin: `getcontactprofiles`
  */
  rpc GetContactProfiles (GetContactProfilesRequest) returns (GetContactProfilesReply) {}

  /** sqkadmin: `getsqueakprofile`
  */
  rpc GetSqueakProfile (GetSqueakProfileRequest) returns (GetSqueakProfileReply) {}

  /** sqkadmin: `getsqueakprofilebyaddress`
  */
  rpc GetSqueakProfileByAddress (GetSqueakProfileByAddressRequest) returns (GetSqueakProfileByAddressReply) {}

  /** sqkadmin: `getsqueakprofilebyname`
  */
  rpc GetSqueakProfileByName (GetSqueakProfileByNameRequest) returns (GetSqueakProfileByNameReply) {}

  /** sqkadmin: `setsqueakprofilefollowing`
  */
  rpc SetSqueakProfileFollowing (SetSqueakProfileFollowingRequest) returns (SetSqueakProfileFollowingReply) {}

  /** sqkadmin: `setsqueakprofilesharing`
  */
  rpc SetSqueakProfileSharing (SetSqueakProfileSharingRequest) returns (SetSqueakProfileSharingReply) {}

  /** sqkadmin: `renamesqueakprofile`
  */
  rpc RenameSqueakProfile (RenameSqueakProfileRequest) returns (RenameSqueakProfileReply) {}

  /** sqkadmin: `getsqueakprofileprivatekey`
  */
  rpc GetSqueakProfilePrivateKey (GetSqueakProfilePrivateKeyRequest) returns (GetSqueakProfilePrivateKeyReply) {}

  /** sqkadmin: `deletesqueakprofile`
  */
  rpc DeleteSqueakProfile (DeleteSqueakProfileRequest) returns (DeleteSqueakProfileReply) {}

  /** sqkadmin: `setsqueakprofileimage`
  */
  rpc SetSqueakProfileImage (SetSqueakProfileImageRequest) returns (SetSqueakProfileImageReply) {}

  /** sqkadmin: `clearsqueakprofileimage`
  */
  rpc ClearSqueakProfileImage (ClearSqueakProfileImageRequest) returns (ClearSqueakProfileImageReply) {}

  /** sqkadmin: `makesqueak`
  */
  rpc MakeSqueak (MakeSqueakRequest) returns (MakeSqueakReply) {}

  /** sqkadmin: `getsqueakdisplay`
  */
  rpc GetSqueakDisplay (GetSqueakDisplayRequest) returns (GetSqueakDisplayReply) {}

  /** sqkadmin: `gettimelinesqueakdisplays`
  */
  rpc GetTimelineSqueakDisplays (GetTimelineSqueakDisplaysRequest) returns (GetTimelineSqueakDisplaysReply) {}

  /** sqkadmin: `getaddresssqueakdisplays`
  */
  rpc GetAddressSqueakDisplays (GetAddressSqueakDisplaysRequest) returns (GetAddressSqueakDisplaysReply) {}

  /** sqkadmin: `getancestorsqueakdisplays`
  */
  rpc GetAncestorSqueakDisplays (GetAncestorSqueakDisplaysRequest) returns (GetAncestorSqueakDisplaysReply) {}

  /** sqkadmin: `getreplysqueakdisplays`
  */
  rpc GetReplySqueakDisplays (GetReplySqueakDisplaysRequest) returns (GetReplySqueakDisplaysReply) {}

  /** sqkadmin: `deletesqueak`
  */
  rpc DeleteSqueak (DeleteSqueakRequest) returns (DeleteSqueakReply) {}

  /** sqkadmin: `addpeer`
  */
  rpc CreatePeer (CreatePeerRequest) returns (CreatePeerReply) {}

  /** sqkadmin: `getpeer`
  */
  rpc GetPeer (GetPeerRequest) returns (GetPeerReply) {}

  /** sqkadmin: `getpeers`
  */
  rpc GetPeers (GetPeersRequest) returns (GetPeersReply) {}

  /** sqkadmin: `setpeerdownloading`
  */
  rpc SetPeerDownloading (SetPeerDownloadingRequest) returns (SetPeerDownloadingReply) {}

  /** sqkadmin: `setpeerdownloading`
  */
  rpc SetPeerUploading (SetPeerUploadingRequest) returns (SetPeerUploadingReply) {}

  /** sqkadmin: `renamepeer`
  */
  rpc RenamePeer (RenamePeerRequest) returns (RenamePeerReply) {}

  /** sqkadmin: `deletepeer`
  */
  rpc DeletePeer (DeletePeerRequest) returns (DeletePeerReply) {}

  /** sqkadmin: `getbuyoffers`
  */
  rpc GetBuyOffers (GetBuyOffersRequest) returns (GetBuyOffersReply) {}

  /** sqkadmin: `getbuyoffer`
  */
  rpc GetBuyOffer (GetBuyOfferRequest) returns (GetBuyOfferReply) {}

  /** sqkadmin: `syncsqueaks`
  */
  rpc SyncSqueaks (SyncSqueaksRequest) returns (SyncSqueaksReply) {}

  /** sqkadmin: `syncsqueak`
  */
  rpc SyncSqueak (SyncSqueakRequest) returns (SyncSqueakReply) {}

  /** sqkadmin: `payoffer`
  */
  rpc PayOffer (PayOfferRequest) returns (PayOfferReply) {}

  /** sqkadmin: `getsentpayments`
  */
  rpc GetSentPayments (GetSentPaymentsRequest) returns (GetSentPaymentsReply) {}

  /** sqkadmin: `getsentpayment`
  */
  rpc GetSentPayment (GetSentPaymentRequest) returns (GetSentPaymentReply) {}

  /** sqkadmin: `getsqueakdetails`
  */
  rpc GetSqueakDetails (GetSqueakDetailsRequest) returns (GetSqueakDetailsReply) {}

  /** sqkadmin: `getsentoffers`
  */
  rpc GetSentOffers (GetSentOffersRequest) returns (GetSentOffersReply) {}

  /** sqkadmin: `getreceivedpayments`
  */
  rpc GetReceivedPayments (GetReceivedPaymentsRequest) returns (GetReceivedPaymentsReply) {}

  /** sqkadmin: `subscribereceivedpayments`
  */
  rpc SubscribeReceivedPayments (SubscribeReceivedPaymentsRequest) returns (stream ReceivedPayment) {}

  /** sqkadmin: `getnetwork`
  */
  rpc GetNetwork (GetNetworkRequest) returns (GetNetworkReply) {}

  /** sqkadmin: `getpaymentsummary`
  */
  rpc GetPaymentSummary (GetPaymentSummaryRequest) returns (GetPaymentSummaryReply) {}

  /** sqkadmin: `reprocessreceivedpayments`
  */
  rpc ReprocessReceivedPayments (ReprocessReceivedPaymentsRequest) returns (ReprocessReceivedPaymentsReply) {}

  /** sqkadmin: `likesqueak`
  */
  rpc LikeSqueak (LikeSqueakRequest) returns (LikeSqueakReply) {}

  /** sqkadmin: `unlikesqueak`
  */
  rpc UnlikeSqueak (UnlikeSqueakRequest) returns (UnlikeSqueakReply) {}

  /** sqkadmin: `getlikedsqueakdisplays`
  */
  rpc GetLikedSqueakDisplays (GetLikedSqueakDisplaysRequest) returns (GetLikedSqueakDisplaysReply) {}

  /** sqkadmin: `connectpeer`
  */
  rpc ConnectPeer (ConnectPeerRequest) returns (ConnectPeerReply) {}

  /** sqkadmin: `getconnectedpeers`
  */
  rpc GetConnectedPeers (GetConnectedPeersRequest) returns (GetConnectedPeersReply) {}

  /** sqkadmin: `disconnectpeer`
  */
  rpc DisconnectPeer (DisconnectPeerRequest) returns (DisconnectPeerReply) {}

}

message CreateSigningProfileRequest {
    /// The name of the new signing profile
    string profile_name = 1;
}

message CreateSigningProfileReply {
    /// The profile id
    int32 profile_id = 1;
}

message ImportSigningProfileRequest {
    /// The name of the signing profile
    string profile_name = 1;

    /// The private key of the signing profile
    string private_key = 2;
}

message ImportSigningProfileReply {
    /// The profile id
    int32 profile_id = 1;
}

message CreateContactProfileRequest {
    /// The name of the new signing profile
    string profile_name = 1;

    /// The address
    string address = 2;
}

message CreateContactProfileReply {
    /// The profile id
    int32 profile_id = 1;
}

message GetSigningProfilesRequest {
}

message GetSigningProfilesReply {
    /// The squeak profiles
    repeated SqueakProfile squeak_profiles = 1;
}

message GetContactProfilesRequest {
}

message GetContactProfilesReply {
    /// The squeak profiles
    repeated SqueakProfile squeak_profiles = 1;
}

message GetSqueakProfileRequest {
    /// The profile id
    int32 profile_id = 1;
}

message GetSqueakProfileReply {
    /// The squeak profile
    SqueakProfile squeak_profile = 1;
}

message GetSqueakProfileByAddressRequest {
    /// The address
    string address = 1;
}

message GetSqueakProfileByAddressReply {
    /// The squeak profile
    SqueakProfile squeak_profile = 1;
}

message GetSqueakProfileByNameRequest {
    /// The name
    string name = 1;
}

message GetSqueakProfileByNameReply {
    /// The squeak profile
    SqueakProfile squeak_profile = 1;
}

message SetSqueakProfileFollowingRequest {
    /// The profile id
    int32 profile_id = 1;

    /// Following
    bool following = 2;
}

message SetSqueakProfileFollowingReply {
}

message SetSqueakProfileSharingRequest {
    /// The profile id
    int32 profile_id = 1;

    /// Sharing
    bool sharing = 2;
}

message SetSqueakProfileSharingReply {
}

message RenameSqueakProfileRequest {
    /// The profile id
    int32 profile_id = 1;

    /// The new profile name
    string profile_name = 2;
}

message RenameSqueakProfileReply {
}

message GetSqueakProfilePrivateKeyRequest {
    /// The profile id
    int32 profile_id = 1;
}

message GetSqueakProfilePrivateKeyReply {
    /// The private key
    string private_key = 1;
}

message DeleteSqueakProfileRequest {
    /// The profile id
    int32 profile_id = 1;
}

message DeleteSqueakProfileReply {
}

message SetSqueakProfileImageRequest {
    /// The profile id
    int32 profile_id = 1;

    /// The profile image
    string profile_image = 2;
}

message SetSqueakProfileImageReply {
}

message ClearSqueakProfileImageRequest {
    /// The profile id
    int32 profile_id = 1;
}

message ClearSqueakProfileImageReply {
}

message SqueakProfile {
    /// The profile id
    int32 profile_id = 1;

    /// The profile name
    string profile_name = 2;

    /// Has private key
    bool has_private_key = 3;

    /// The address
    string address = 4;

    /// Sharing
    bool sharing = 5;

    /// Following
    bool following = 6;

    /// The profile image
    string profile_image = 7;

    /// Has custom profile image
    bool has_custom_profile_image = 8;
}

message MakeSqueakRequest {
    /// The profile id
    int32 profile_id = 1;

    /// The content
    string content = 2;

    /// The replyto hash
    string replyto = 3;
}

message MakeSqueakReply {
    /// Hash of the created squeak.
    string squeak_hash = 1;
}

message GetSqueakDisplayRequest {
    /// Hash of the squeak.
    string squeak_hash = 1;
}

message GetSqueakDisplayReply {
    /// The squeak display entry
    SqueakDisplayEntry squeak_display_entry = 1;
}

message SqueakDisplayEntry {
    /// The squeak hash.
    string squeak_hash = 1;

    /// Is unlocked
    bool is_unlocked = 2;

    /// The decrypted content
    string content_str = 3;

    /// Is reply
    bool is_reply = 4;

    /// Reply to hash
    string reply_to = 5;

    /// Block height
    int32 block_height = 6;

    /// Block hash
    string block_hash = 7;

    /// Block time
    int64 block_time = 8;

    /// The author name
    string author_address = 9;

    /// Is author address known
    bool is_author_known = 10;

    /// The author name
    SqueakProfile author = 11;

    /// Liked time
    int64 liked_time_s = 12;
}

message GetTimelineSqueakDisplaysRequest {
}

message GetTimelineSqueakDisplaysReply {
    /// Multiple squeak display entries
    repeated SqueakDisplayEntry squeak_display_entries = 1;
}

message GetAddressSqueakDisplaysRequest {
    /// The address
    string address = 1;
}

message GetAddressSqueakDisplaysReply {
    /// Multiple squeak display entries
    repeated SqueakDisplayEntry squeak_display_entries = 1;
}

message GetAncestorSqueakDisplaysRequest {
    /// Hash of the squeak.
    string squeak_hash = 1;
}

message GetAncestorSqueakDisplaysReply {
    /// Multiple squeak display entries
    repeated SqueakDisplayEntry squeak_display_entries = 1;
}

message GetReplySqueakDisplaysRequest {
    /// Hash of the squeak.
    string squeak_hash = 1;
}

message GetReplySqueakDisplaysReply {
    /// Multiple squeak display entries
    repeated SqueakDisplayEntry squeak_display_entries = 1;
}

message DeleteSqueakRequest {
    /// Hash of the created squeak.
    string squeak_hash = 1;
}

message DeleteSqueakReply {
}

message CreatePeerRequest {
    /// Name of the peer
    string peer_name = 1;

    /// Host
    string host = 2;

    /// Port
    int32 port = 3;
}

message CreatePeerReply {
    /// The peer id
    int32 peer_id = 1;
}

message GetPeerRequest {
    /// The peer id
    int32 peer_id = 1;
}

message GetPeerReply {
    /// The peer
    SqueakPeer squeak_peer = 1;
}

message GetPeersRequest {
}

message GetPeersReply {
    /// The peers
    repeated SqueakPeer squeak_peers = 1;
}

message SqueakPeer {
    /// The peer id
    int32 peer_id = 1;

    /// The peer name
    string peer_name = 2;

    /// Host
    string host = 3;

    /// Port
    int32 port = 4;

    /// Uploading
    bool uploading = 5;

    /// Downloading
    bool downloading = 6;
}

message SetPeerDownloadingRequest {
    /// The peer id
    int32 peer_id = 1;

    /// Downloading
    bool downloading = 2;
}

message SetPeerDownloadingReply {
}

message SetPeerUploadingRequest {
    /// The peer id
    int32 peer_id = 1;

    /// Uploading
    bool uploading = 2;
}

message SetPeerUploadingReply {
}

message RenamePeerRequest {
    /// The peer id
    int32 peer_id = 1;

    /// Name of the peer
    string peer_name = 2;
}

message RenamePeerReply {
}

message DeletePeerRequest {
    /// The peer id
    int32 peer_id = 1;
}

message DeletePeerReply {
}

message LoadBuyOffersRequest {
    /// Hash of the created squeak.
    string squeak_hash = 1;
}

message LoadBuyOffersReply {
}

message GetBuyOffersRequest {
    /// Hash of the created squeak.
    string squeak_hash = 1;
}

message GetBuyOffersReply {
    /// The offers
    repeated OfferDisplayEntry offers = 1;
}

message GetBuyOfferRequest {
    /// Offer id
    int32 offer_id = 1;
}

message GetBuyOfferReply {
    /// The offer
    OfferDisplayEntry offer = 1;
}

message OfferDisplayEntry {
    /// The offer id
    int32 offer_id = 1;

    /// The squeak hash.
    string squeak_hash = 2;

    /// The price in msats
    int64 price_msat = 3;

    /// The seller node pubkey
    string node_pubkey = 4;

    /// The host of the seller lightning node
    string node_host = 5;

    /// The port of the seller lightning node
    int32 node_port = 6;

    /// Has peer
    bool has_peer = 7;

    /// The peer
    SqueakPeer peer = 8;

    /// The invoice timestamp
    int32 invoice_timestamp = 9;

    /// The invoice expiry
    int32 invoice_expiry = 10;
}

message SyncSqueaksRequest {
}

message SyncSqueaksReply {
}

message PayOfferRequest {
    /// Offer id
    int32 offer_id = 1;
}

message PayOfferReply {
    /// Sent payment id
    int32 sent_payment_id = 1;
}

message GetSentPaymentsRequest {
}

message GetSentPaymentsReply {
    /// The sent payments
    repeated SentPayment sent_payments = 1;
}

message GetSentPaymentRequest {
    /// Sent payment id
    int32 sent_payment_id = 1;
}

message GetSentPaymentReply {
    /// The sent payment
    SentPayment sent_payment = 1;
}

message SentPayment {
    /// The sent payment id
    int32 sent_payment_id = 1;

    /// Has peer
    bool has_peer = 2;

    /// The peer id
    SqueakPeer peer = 3;

    /// The squeak hash
    string squeak_hash = 4;

    /// The payment hash
    string payment_hash = 5;

    /// The price_msat
    int64 price_msat = 6;

    /// The seller node pubkey
    string node_pubkey = 7;

    /// Does the payment unlock a valid key
    bool valid = 8;

    /// Time of payment
    int64 time_s = 9;
}

message SyncSqueakRequest {
    /// The squeak hash.
    string squeak_hash = 1;
}

message SyncSqueakReply {
}

message GetSqueakDetailsRequest {
    /// Hash of the squeak.
    string squeak_hash = 1;
}

message GetSqueakDetailsReply {
    /// The squeak detail entry
    SqueakDetailEntry squeak_detail_entry = 1;
}

message SqueakDetailEntry {
    /// The seriallized squeak in hex encoding
    string serialized_squeak_hex = 1;
}

message GetSentOffersRequest {
}

message GetSentOffersReply {
    /// The received payments
    repeated SentOffer sent_offers = 1;
}

message SentOffer {
    /// The received payment id
    int32 sent_offer_id = 1;

    /// The squeak hash
    string squeak_hash = 2;

    /// The payment hash
    string payment_hash = 3;

    /// The price_msat
    int64 price_msat = 4;
}

message GetReceivedPaymentsRequest {
}

message GetReceivedPaymentsReply {
    /// The received payments
    repeated ReceivedPayment received_payments = 1;
}

message ReceivedPayment {
    /// The received payment id
    int32 received_payment_id = 1;

    /// The squeak hash
    string squeak_hash = 2;

    /// The payment hash
    string payment_hash = 3;

    /// The price_msat
    int64 price_msat = 4;

    /// Time of payment
    int64 time_s = 5;

    /// The host of the buyer client
    string client_host = 6;

    /// The port of the buyer client
    int32 client_port = 7;
}

message SubscribeReceivedPaymentsRequest {
    /// Payment index to start consuming from
    int64 payment_index = 1;
}

message GetNetworkRequest {
}

message GetNetworkReply {
    /// The network
    string network = 1;
}

message GetPaymentSummaryRequest {
}

message GetPaymentSummaryReply {
    // Payment summary of the node
    PaymentSummary payment_summary = 1;
}

message PaymentSummary {
    // Number of received payments
    int32 num_received_payments = 1;

    // Number of sent payments
    int32 num_sent_payments = 2;

    /// Amount earned in msats
    int64 amount_earned_msat = 3;

    /// Amount spent in msats
    int64 amount_spent_msat = 4;
}

message ReprocessReceivedPaymentsRequest {
}

message ReprocessReceivedPaymentsReply {
}

message LikeSqueakRequest {
    /// Hash of the squeak.
    string squeak_hash = 1;
}

message LikeSqueakReply {
}

message UnlikeSqueakRequest {
    /// Hash of the squeak.
    string squeak_hash = 1;
}

message UnlikeSqueakReply {
}

message GetLikedSqueakDisplaysRequest {
}

message GetLikedSqueakDisplaysReply {
    /// Multiple squeak display entries
    repeated SqueakDisplayEntry squeak_display_entries = 1;
}

message ConnectPeerRequest {
    /// The peer id
    int32 peer_id = 1;
}

message ConnectPeerReply {
}

message ConnectedPeer {
    /// The peer id
    int32 peer_id = 1;

    /// The peer name
    string peer_name = 2;

    /// Host
    string host = 3;

    /// Port
    int32 port = 4;

    /// Connection time
    int64 connect_time_s = 5;
}

message GetConnectedPeersRequest {
}

message GetConnectedPeersReply {
    repeated ConnectedPeer connected_peers = 1;
}

message DisconnectPeerRequest {
    /// The peer id
    int32 peer_id = 1;
}

message DisconnectPeerReply {
}
